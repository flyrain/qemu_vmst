
/lib/modules/2.6.32.8/kernel/drivers/md/dm-mod.ko:     file format elf32-i386


Disassembly of section .text:

00000000 <dm_uevent_exit>:
       0:	a1 00 00 00 00       	mov    0x0,%eax
			1: R_386_32	.bss
       5:	e9 fc ff ff ff       	jmp    6 <dm_uevent_exit+0x6>
			6: R_386_PC32	kmem_cache_destroy

0000000a <dm_uevent_init>:
       a:	6a 00                	push   $0x0
       c:	b9 04 00 00 00       	mov    $0x4,%ecx
      11:	ba 9c 09 00 00       	mov    $0x99c,%edx
      16:	b8 00 00 00 00       	mov    $0x0,%eax
			17: R_386_32	.rodata.str1.1
      1b:	6a 00                	push   $0x0
      1d:	e8 fc ff ff ff       	call   1e <dm_uevent_init+0x14>
			1e: R_386_PC32	kmem_cache_create
      22:	59                   	pop    %ecx
      23:	89 c2                	mov    %eax,%edx
      25:	85 d2                	test   %edx,%edx
      27:	a3 00 00 00 00       	mov    %eax,0x0
			28: R_386_32	.bss
      2c:	58                   	pop    %eax
      2d:	b8 f4 ff ff ff       	mov    $0xfffffff4,%eax
      32:	74 0d                	je     41 <dm_uevent_init+0x37>
      34:	68 0a 00 00 00       	push   $0xa
			35: R_386_32	.rodata.str1.1
      39:	e8 fc ff ff ff       	call   3a <dm_uevent_init+0x30>
			3a: R_386_PC32	printk
      3e:	31 c0                	xor    %eax,%eax
      40:	5a                   	pop    %edx
      41:	c3                   	ret    

00000042 <dm_path_uevent>:
      42:	55                   	push   %ebp
      43:	57                   	push   %edi
      44:	56                   	push   %esi
      45:	89 d6                	mov    %edx,%esi
      47:	53                   	push   %ebx
      48:	89 c3                	mov    %eax,%ebx
      4a:	83 ec 10             	sub    $0x10,%esp
      4d:	8b 44 24 24          	mov    0x24(%esp),%eax
      51:	89 4c 24 08          	mov    %ecx,0x8(%esp)
      55:	89 44 24 0c          	mov    %eax,0xc(%esp)
      59:	8b 02                	mov    (%edx),%eax
      5b:	e8 fc ff ff ff       	call   5c <dm_path_uevent+0x1a>
			5c: R_386_PC32	dm_table_get_md
      60:	83 fb 01             	cmp    $0x1,%ebx
      63:	89 c7                	mov    %eax,%edi
      65:	76 18                	jbe    7f <dm_path_uevent+0x3d>
      67:	53                   	push   %ebx
      68:	68 18 00 00 00       	push   $0x18
			69: R_386_32	.rodata
      6d:	68 33 00 00 00       	push   $0x33
			6e: R_386_32	.rodata.str1.1
      72:	e8 fc ff ff ff       	call   73 <dm_path_uevent+0x31>
			73: R_386_PC32	printk
      77:	83 c4 0c             	add    $0xc,%esp
      7a:	e9 36 01 00 00       	jmp    1b5 <dm_path_uevent+0x173>
      7f:	6b db 0c             	imul   $0xc,%ebx,%ebx
      82:	ba 20 80 00 00       	mov    $0x8020,%edx
      87:	8b 83 08 00 00 00    	mov    0x8(%ebx),%eax
			89: R_386_32	.rodata
      8d:	8b 9b 04 00 00 00    	mov    0x4(%ebx),%ebx
			8f: R_386_32	.rodata
      93:	89 44 24 04          	mov    %eax,0x4(%esp)
      97:	a1 00 00 00 00       	mov    0x0,%eax
			98: R_386_32	.bss
      9c:	e8 fc ff ff ff       	call   9d <dm_path_uevent+0x5b>
			9d: R_386_PC32	kmem_cache_alloc
      a1:	85 c0                	test   %eax,%eax
      a3:	89 c5                	mov    %eax,%ebp
      a5:	74 38                	je     df <dm_path_uevent+0x9d>
      a7:	8d 80 90 08 00 00    	lea    0x890(%eax),%eax
      ad:	89 04 24             	mov    %eax,(%esp)
      b0:	89 5d 04             	mov    %ebx,0x4(%ebp)
      b3:	8d 5d 08             	lea    0x8(%ebp),%ebx
      b6:	89 85 90 08 00 00    	mov    %eax,0x890(%ebp)
      bc:	89 85 94 08 00 00    	mov    %eax,0x894(%ebp)
      c2:	89 7d 00             	mov    %edi,0x0(%ebp)
      c5:	8b 46 04             	mov    0x4(%esi),%eax
      c8:	ff 70 08             	pushl  0x8(%eax)
      cb:	68 68 00 00 00       	push   $0x68
			cc: R_386_32	.rodata.str1.1
      d0:	53                   	push   %ebx
      d1:	e8 fc ff ff ff       	call   d2 <dm_path_uevent+0x90>
			d2: R_386_PC32	add_uevent_var
      d6:	83 c4 0c             	add    $0xc,%esp
      d9:	85 c0                	test   %eax,%eax
      db:	74 27                	je     104 <dm_path_uevent+0xc2>
      dd:	eb 16                	jmp    f5 <dm_path_uevent+0xb3>
      df:	68 28 00 00 00       	push   $0x28
			e0: R_386_32	.rodata
      e4:	68 75 00 00 00       	push   $0x75
			e5: R_386_32	.rodata.str1.1
      e9:	e8 fc ff ff ff       	call   ea <dm_path_uevent+0xa8>
			ea: R_386_PC32	printk
      ee:	5b                   	pop    %ebx
      ef:	5e                   	pop    %esi
      f0:	e9 c0 00 00 00       	jmp    1b5 <dm_path_uevent+0x173>
      f5:	68 28 00 00 00       	push   $0x28
			f6: R_386_32	.rodata
      fa:	68 ad 00 00 00       	push   $0xad
			fb: R_386_32	.rodata.str1.1
      ff:	e9 8a 00 00 00       	jmp    18e <dm_path_uevent+0x14c>
     104:	ff 74 24 04          	pushl  0x4(%esp)
     108:	68 f2 00 00 00       	push   $0xf2
			109: R_386_32	.rodata.str1.1
     10d:	53                   	push   %ebx
     10e:	e8 fc ff ff ff       	call   10f <dm_path_uevent+0xcd>
			10f: R_386_PC32	add_uevent_var
     113:	83 c4 0c             	add    $0xc,%esp
     116:	85 c0                	test   %eax,%eax
     118:	74 0c                	je     126 <dm_path_uevent+0xe4>
     11a:	68 28 00 00 00       	push   $0x28
			11b: R_386_32	.rodata
     11f:	68 ff 00 00 00       	push   $0xff
			120: R_386_32	.rodata.str1.1
     124:	eb 68                	jmp    18e <dm_path_uevent+0x14c>
     126:	89 f8                	mov    %edi,%eax
     128:	e8 fc ff ff ff       	call   129 <dm_path_uevent+0xe7>
			129: R_386_PC32	dm_next_uevent_seq
     12d:	50                   	push   %eax
     12e:	68 44 01 00 00       	push   $0x144
			12f: R_386_32	.rodata.str1.1
     133:	53                   	push   %ebx
     134:	e8 fc ff ff ff       	call   135 <dm_path_uevent+0xf3>
			135: R_386_PC32	add_uevent_var
     139:	83 c4 0c             	add    $0xc,%esp
     13c:	85 c0                	test   %eax,%eax
     13e:	74 0c                	je     14c <dm_path_uevent+0x10a>
     140:	68 28 00 00 00       	push   $0x28
			141: R_386_32	.rodata
     145:	68 51 01 00 00       	push   $0x151
			146: R_386_32	.rodata.str1.1
     14a:	eb 42                	jmp    18e <dm_path_uevent+0x14c>
     14c:	ff 74 24 08          	pushl  0x8(%esp)
     150:	68 96 01 00 00       	push   $0x196
			151: R_386_32	.rodata.str1.1
     155:	53                   	push   %ebx
     156:	e8 fc ff ff ff       	call   157 <dm_path_uevent+0x115>
			157: R_386_PC32	add_uevent_var
     15b:	83 c4 0c             	add    $0xc,%esp
     15e:	85 c0                	test   %eax,%eax
     160:	74 0c                	je     16e <dm_path_uevent+0x12c>
     162:	68 28 00 00 00       	push   $0x28
			163: R_386_32	.rodata
     167:	68 a1 01 00 00       	push   $0x1a1
			168: R_386_32	.rodata.str1.1
     16c:	eb 20                	jmp    18e <dm_path_uevent+0x14c>
     16e:	ff 74 24 0c          	pushl  0xc(%esp)
     172:	68 e4 01 00 00       	push   $0x1e4
			173: R_386_32	.rodata.str1.1
     177:	53                   	push   %ebx
     178:	e8 fc ff ff ff       	call   179 <dm_path_uevent+0x137>
			179: R_386_PC32	add_uevent_var
     17d:	83 c4 0c             	add    $0xc,%esp
     180:	85 c0                	test   %eax,%eax
     182:	74 1f                	je     1a3 <dm_path_uevent+0x161>
     184:	68 28 00 00 00       	push   $0x28
			185: R_386_32	.rodata
     189:	68 f9 01 00 00       	push   $0x1f9
			18a: R_386_32	.rodata.str1.1
     18e:	e8 fc ff ff ff       	call   18f <dm_path_uevent+0x14d>
			18f: R_386_PC32	printk
     193:	a1 00 00 00 00       	mov    0x0,%eax
			194: R_386_32	.bss
     198:	5a                   	pop    %edx
     199:	89 ea                	mov    %ebp,%edx
     19b:	59                   	pop    %ecx
     19c:	e8 fc ff ff ff       	call   19d <dm_path_uevent+0x15b>
			19d: R_386_PC32	kmem_cache_free
     1a1:	eb 12                	jmp    1b5 <dm_path_uevent+0x173>
     1a3:	81 fd 00 f0 ff ff    	cmp    $0xfffff000,%ebp
     1a9:	77 0a                	ja     1b5 <dm_path_uevent+0x173>
     1ab:	8b 14 24             	mov    (%esp),%edx
     1ae:	89 f8                	mov    %edi,%eax
     1b0:	e8 fc ff ff ff       	call   1b1 <dm_path_uevent+0x16f>
			1b1: R_386_PC32	dm_uevent_add
     1b5:	83 c4 10             	add    $0x10,%esp
     1b8:	89 f8                	mov    %edi,%eax
     1ba:	5b                   	pop    %ebx
     1bb:	5e                   	pop    %esi
     1bc:	5f                   	pop    %edi
     1bd:	5d                   	pop    %ebp
     1be:	e9 fc ff ff ff       	jmp    1bf <dm_path_uevent+0x17d>
			1bf: R_386_PC32	dm_put

000001c3 <dm_send_uevents>:
     1c3:	55                   	push   %ebp
     1c4:	57                   	push   %edi
     1c5:	56                   	push   %esi
     1c6:	89 c6                	mov    %eax,%esi
     1c8:	53                   	push   %ebx
     1c9:	83 ec 0c             	sub    $0xc,%esp
     1cc:	89 54 24 08          	mov    %edx,0x8(%esp)
     1d0:	8b 18                	mov    (%eax),%ebx
     1d2:	81 eb 90 08 00 00    	sub    $0x890,%ebx
     1d8:	8b bb 90 08 00 00    	mov    0x890(%ebx),%edi
     1de:	81 ef 90 08 00 00    	sub    $0x890,%edi
     1e4:	e9 d5 00 00 00       	jmp    2be <dm_send_uevents+0xfb>
     1e9:	8b 8b 90 08 00 00    	mov    0x890(%ebx),%ecx
     1ef:	8d ab 98 08 00 00    	lea    0x898(%ebx),%ebp
     1f5:	8b 93 94 08 00 00    	mov    0x894(%ebx),%edx
     1fb:	89 51 04             	mov    %edx,0x4(%ecx)
     1fe:	89 0a                	mov    %ecx,(%edx)
     200:	89 ea                	mov    %ebp,%edx
     202:	89 83 90 08 00 00    	mov    %eax,0x890(%ebx)
     208:	89 83 94 08 00 00    	mov    %eax,0x894(%ebx)
     20e:	8d 83 18 09 00 00    	lea    0x918(%ebx),%eax
     214:	89 44 24 04          	mov    %eax,0x4(%esp)
     218:	89 c1                	mov    %eax,%ecx
     21a:	8b 03                	mov    (%ebx),%eax
     21c:	e8 fc ff ff ff       	call   21d <dm_send_uevents+0x5a>
			21d: R_386_PC32	dm_copy_name_and_uuid
     221:	85 c0                	test   %eax,%eax
     223:	74 0c                	je     231 <dm_send_uevents+0x6e>
     225:	68 40 00 00 00       	push   $0x40
			226: R_386_32	.rodata
     22a:	68 46 02 00 00       	push   $0x246
			22b: R_386_32	.rodata.str1.1
     22f:	eb 6c                	jmp    29d <dm_send_uevents+0xda>
     231:	55                   	push   %ebp
     232:	8d 4b 08             	lea    0x8(%ebx),%ecx
     235:	68 8d 02 00 00       	push   $0x28d
			236: R_386_32	.rodata.str1.1
     23a:	51                   	push   %ecx
     23b:	89 4c 24 0c          	mov    %ecx,0xc(%esp)
     23f:	e8 fc ff ff ff       	call   240 <dm_send_uevents+0x7d>
			240: R_386_PC32	add_uevent_var
     244:	83 c4 0c             	add    $0xc,%esp
     247:	85 c0                	test   %eax,%eax
     249:	8b 0c 24             	mov    (%esp),%ecx
     24c:	74 0c                	je     25a <dm_send_uevents+0x97>
     24e:	68 40 00 00 00       	push   $0x40
			24f: R_386_32	.rodata
     253:	68 98 02 00 00       	push   $0x298
			254: R_386_32	.rodata.str1.1
     258:	eb 43                	jmp    29d <dm_send_uevents+0xda>
     25a:	ff 74 24 04          	pushl  0x4(%esp)
     25e:	68 db 02 00 00       	push   $0x2db
			25f: R_386_32	.rodata.str1.1
     263:	51                   	push   %ecx
     264:	89 4c 24 0c          	mov    %ecx,0xc(%esp)
     268:	e8 fc ff ff ff       	call   269 <dm_send_uevents+0xa6>
			269: R_386_PC32	add_uevent_var
     26d:	83 c4 0c             	add    $0xc,%esp
     270:	85 c0                	test   %eax,%eax
     272:	8b 0c 24             	mov    (%esp),%ecx
     275:	74 0c                	je     283 <dm_send_uevents+0xc0>
     277:	68 40 00 00 00       	push   $0x40
			278: R_386_32	.rodata
     27c:	68 e6 02 00 00       	push   $0x2e6
			27d: R_386_32	.rodata.str1.1
     281:	eb 1a                	jmp    29d <dm_send_uevents+0xda>
     283:	8b 53 04             	mov    0x4(%ebx),%edx
     286:	8b 44 24 08          	mov    0x8(%esp),%eax
     28a:	e8 fc ff ff ff       	call   28b <dm_send_uevents+0xc8>
			28b: R_386_PC32	kobject_uevent_env
     28f:	85 c0                	test   %eax,%eax
     291:	74 11                	je     2a4 <dm_send_uevents+0xe1>
     293:	68 40 00 00 00       	push   $0x40
			294: R_386_32	.rodata
     298:	68 29 03 00 00       	push   $0x329
			299: R_386_32	.rodata.str1.1
     29d:	e8 fc ff ff ff       	call   29e <dm_send_uevents+0xdb>
			29e: R_386_PC32	printk
     2a2:	5d                   	pop    %ebp
     2a3:	58                   	pop    %eax
     2a4:	a1 00 00 00 00       	mov    0x0,%eax
			2a5: R_386_32	.bss
     2a9:	89 da                	mov    %ebx,%edx
     2ab:	89 fb                	mov    %edi,%ebx
     2ad:	e8 fc ff ff ff       	call   2ae <dm_send_uevents+0xeb>
			2ae: R_386_PC32	kmem_cache_free
     2b2:	8b 87 90 08 00 00    	mov    0x890(%edi),%eax
     2b8:	8d b8 70 f7 ff ff    	lea    -0x890(%eax),%edi
     2be:	8d 83 90 08 00 00    	lea    0x890(%ebx),%eax
     2c4:	39 f0                	cmp    %esi,%eax
     2c6:	0f 85 1d ff ff ff    	jne    1e9 <dm_send_uevents+0x26>
     2cc:	83 c4 0c             	add    $0xc,%esp
     2cf:	5b                   	pop    %ebx
     2d0:	5e                   	pop    %esi
     2d1:	5f                   	pop    %edi
     2d2:	5d                   	pop    %ebp
     2d3:	c3                   	ret    

000002d4 <dm_get_mapinfo>:
     2d4:	85 c0                	test   %eax,%eax
     2d6:	74 0b                	je     2e3 <dm_get_mapinfo+0xf>
     2d8:	8b 40 40             	mov    0x40(%eax),%eax
     2db:	85 c0                	test   %eax,%eax
     2dd:	74 04                	je     2e3 <dm_get_mapinfo+0xf>
     2df:	83 c0 08             	add    $0x8,%eax
     2e2:	c3                   	ret    
     2e3:	31 c0                	xor    %eax,%eax
     2e5:	c3                   	ret    

000002e6 <dm_get_rq_mapinfo>:
     2e6:	85 c0                	test   %eax,%eax
     2e8:	74 10                	je     2fa <dm_get_rq_mapinfo+0x14>
     2ea:	8b 80 c0 00 00 00    	mov    0xc0(%eax),%eax
     2f0:	85 c0                	test   %eax,%eax
     2f2:	74 06                	je     2fa <dm_get_rq_mapinfo+0x14>
     2f4:	05 d8 00 00 00       	add    $0xd8,%eax
     2f9:	c3                   	ret    
     2fa:	31 c0                	xor    %eax,%eax
     2fc:	c3                   	ret    

000002fd <dm_open_count>:
     2fd:	8b 40 2c             	mov    0x2c(%eax),%eax
     300:	c3                   	ret    

00000301 <dm_blk_getgeo>:
     301:	53                   	push   %ebx
     302:	8b 40 50             	mov    0x50(%eax),%eax
     305:	8b 80 98 01 00 00    	mov    0x198(%eax),%eax
     30b:	8b 98 c4 00 00 00    	mov    0xc4(%eax),%ebx
     311:	8b 88 c0 00 00 00    	mov    0xc0(%eax),%ecx
     317:	31 c0                	xor    %eax,%eax
     319:	89 5a 04             	mov    %ebx,0x4(%edx)
     31c:	89 0a                	mov    %ecx,(%edx)
     31e:	5b                   	pop    %ebx
     31f:	c3                   	ret    

00000320 <dm_get_geometry>:
     320:	53                   	push   %ebx
     321:	8b 98 c4 00 00 00    	mov    0xc4(%eax),%ebx
     327:	8b 88 c0 00 00 00    	mov    0xc0(%eax),%ecx
     32d:	31 c0                	xor    %eax,%eax
     32f:	89 5a 04             	mov    %ebx,0x4(%edx)
     332:	89 0a                	mov    %ecx,(%edx)
     334:	5b                   	pop    %ebx
     335:	c3                   	ret    

00000336 <dm_get_mdptr>:
     336:	8b 40 4c             	mov    0x4c(%eax),%eax
     339:	c3                   	ret    

0000033a <dm_set_mdptr>:
     33a:	89 50 4c             	mov    %edx,0x4c(%eax)
     33d:	c3                   	ret    

0000033e <dm_get>:
     33e:	f0 ff 40 28          	lock incl 0x28(%eax)
     342:	c3                   	ret    

00000343 <dm_device_name>:
     343:	83 c0 3c             	add    $0x3c,%eax
     346:	c3                   	ret    

00000347 <dm_next_uevent_seq>:
     347:	ba 01 00 00 00       	mov    $0x1,%edx
     34c:	f0 0f c1 90 a8 00 00 	lock xadd %edx,0xa8(%eax)
     353:	00 
     354:	8d 42 01             	lea    0x1(%edx),%eax
     357:	c3                   	ret    

00000358 <dm_get_event_nr>:
     358:	8b 80 98 00 00 00    	mov    0x98(%eax),%eax
     35e:	c3                   	ret    

0000035f <dm_disk>:
     35f:	8b 40 38             	mov    0x38(%eax),%eax
     362:	c3                   	ret    

00000363 <dm_kobject>:
     363:	05 94 01 00 00       	add    $0x194,%eax
     368:	c3                   	ret    

00000369 <dm_get_from_kobject>:
     369:	89 c2                	mov    %eax,%edx
     36b:	8d 80 6c fe ff ff    	lea    -0x194(%eax),%eax
     371:	53                   	push   %ebx
     372:	8b 58 30             	mov    0x30(%eax),%ebx
     375:	89 d9                	mov    %ebx,%ecx
     377:	c1 e9 04             	shr    $0x4,%ecx
     37a:	c1 eb 03             	shr    $0x3,%ebx
     37d:	09 d9                	or     %ebx,%ecx
     37f:	80 e1 01             	and    $0x1,%cl
     382:	75 09                	jne    38d <dm_get_from_kobject+0x24>
     384:	f0 ff 82 94 fe ff ff 	lock incl -0x16c(%edx)
     38b:	eb 02                	jmp    38f <dm_get_from_kobject+0x26>
     38d:	31 c0                	xor    %eax,%eax
     38f:	5b                   	pop    %ebx
     390:	c3                   	ret    

00000391 <dm_suspended>:
     391:	8b 40 30             	mov    0x30(%eax),%eax
     394:	d1 e8                	shr    %eax
     396:	83 e0 01             	and    $0x1,%eax
     399:	c3                   	ret    

0000039a <local_exit>:
     39a:	a1 30 00 00 00       	mov    0x30,%eax
			39b: R_386_32	.bss
     39f:	e8 fc ff ff ff       	call   3a0 <local_exit+0x6>
			3a0: R_386_PC32	kmem_cache_destroy
     3a4:	a1 2c 00 00 00       	mov    0x2c,%eax
			3a5: R_386_32	.bss
     3a9:	e8 fc ff ff ff       	call   3aa <local_exit+0x10>
			3aa: R_386_PC32	kmem_cache_destroy
     3ae:	a1 28 00 00 00       	mov    0x28,%eax
			3af: R_386_32	.bss
     3b3:	e8 fc ff ff ff       	call   3b4 <local_exit+0x1a>
			3b4: R_386_PC32	kmem_cache_destroy
     3b8:	a1 24 00 00 00       	mov    0x24,%eax
			3b9: R_386_32	.bss
     3bd:	e8 fc ff ff ff       	call   3be <local_exit+0x24>
			3be: R_386_PC32	kmem_cache_destroy
     3c2:	8b 15 68 00 00 00    	mov    0x68,%edx
			3c4: R_386_32	.rodata
     3c8:	a1 08 00 00 00       	mov    0x8,%eax
			3c9: R_386_32	.bss
     3cd:	e8 fc ff ff ff       	call   3ce <local_exit+0x34>
			3ce: R_386_PC32	unregister_blkdev
     3d2:	e8 fc ff ff ff       	call   3d3 <local_exit+0x39>
			3d3: R_386_PC32	dm_uevent_exit
     3d7:	c7 05 08 00 00 00 00 	movl   $0x0,0x8
     3de:	00 00 00 
			3d9: R_386_32	.bss
     3e1:	68 7e 03 00 00       	push   $0x37e
			3e2: R_386_32	.rodata.str1.1
     3e6:	e8 fc ff ff ff       	call   3e7 <local_exit+0x4d>
			3e7: R_386_PC32	printk
     3eb:	59                   	pop    %ecx
     3ec:	c3                   	ret    

000003ed <dm_set_geometry>:
     3ed:	55                   	push   %ebp
     3ee:	89 d5                	mov    %edx,%ebp
     3f0:	57                   	push   %edi
     3f1:	56                   	push   %esi
     3f2:	53                   	push   %ebx
     3f3:	31 db                	xor    %ebx,%ebx
     3f5:	83 ec 0c             	sub    $0xc,%esp
     3f8:	89 04 24             	mov    %eax,(%esp)
     3fb:	0f b6 3a             	movzbl (%edx),%edi
     3fe:	0f b7 72 02          	movzwl 0x2(%edx),%esi
     402:	8b 4a 04             	mov    0x4(%edx),%ecx
     405:	89 f8                	mov    %edi,%eax
     407:	f7 e6                	mul    %esi
     409:	89 54 24 08          	mov    %edx,0x8(%esp)
     40d:	8b 7c 24 08          	mov    0x8(%esp),%edi
     411:	89 44 24 04          	mov    %eax,0x4(%esp)
     415:	0f b6 75 01          	movzbl 0x1(%ebp),%esi
     419:	f7 e6                	mul    %esi
     41b:	0f af fe             	imul   %esi,%edi
     41e:	89 44 24 04          	mov    %eax,0x4(%esp)
     422:	01 fa                	add    %edi,%edx
     424:	39 d3                	cmp    %edx,%ebx
     426:	89 54 24 08          	mov    %edx,0x8(%esp)
     42a:	72 1a                	jb     446 <dm_set_geometry+0x59>
     42c:	77 06                	ja     434 <dm_set_geometry+0x47>
     42e:	3b 4c 24 04          	cmp    0x4(%esp),%ecx
     432:	76 12                	jbe    446 <dm_set_geometry+0x59>
     434:	68 a2 03 00 00       	push   $0x3a2
			435: R_386_32	.rodata.str1.1
     439:	e8 fc ff ff ff       	call   43a <dm_set_geometry+0x4d>
			43a: R_386_PC32	printk
     43e:	b8 ea ff ff ff       	mov    $0xffffffea,%eax
     443:	5b                   	pop    %ebx
     444:	eb 17                	jmp    45d <dm_set_geometry+0x70>
     446:	8b 04 24             	mov    (%esp),%eax
     449:	8b 55 00             	mov    0x0(%ebp),%edx
     44c:	8b 4d 04             	mov    0x4(%ebp),%ecx
     44f:	89 90 c0 00 00 00    	mov    %edx,0xc0(%eax)
     455:	89 88 c4 00 00 00    	mov    %ecx,0xc4(%eax)
     45b:	31 c0                	xor    %eax,%eax
     45d:	83 c4 0c             	add    $0xc,%esp
     460:	5b                   	pop    %ebx
     461:	5e                   	pop    %esi
     462:	5f                   	pop    %edi
     463:	5d                   	pop    %ebp
     464:	c3                   	ret    

00000465 <dm_free_md_mempools>:
     465:	85 c0                	test   %eax,%eax
     467:	53                   	push   %ebx
     468:	89 c3                	mov    %eax,%ebx
     46a:	74 2b                	je     497 <dm_free_md_mempools+0x32>
     46c:	8b 00                	mov    (%eax),%eax
     46e:	85 c0                	test   %eax,%eax
     470:	74 05                	je     477 <dm_free_md_mempools+0x12>
     472:	e8 fc ff ff ff       	call   473 <dm_free_md_mempools+0xe>
			473: R_386_PC32	mempool_destroy
     477:	8b 43 04             	mov    0x4(%ebx),%eax
     47a:	85 c0                	test   %eax,%eax
     47c:	74 05                	je     483 <dm_free_md_mempools+0x1e>
     47e:	e8 fc ff ff ff       	call   47f <dm_free_md_mempools+0x1a>
			47f: R_386_PC32	mempool_destroy
     483:	8b 43 08             	mov    0x8(%ebx),%eax
     486:	85 c0                	test   %eax,%eax
     488:	74 05                	je     48f <dm_free_md_mempools+0x2a>
     48a:	e8 fc ff ff ff       	call   48b <dm_free_md_mempools+0x26>
			48b: R_386_PC32	bioset_free
     48f:	89 d8                	mov    %ebx,%eax
     491:	5b                   	pop    %ebx
     492:	e9 fc ff ff ff       	jmp    493 <dm_free_md_mempools+0x2e>
			493: R_386_PC32	kfree
     497:	5b                   	pop    %ebx
     498:	c3                   	ret    

00000499 <dm_uevent_add>:
     499:	57                   	push   %edi
     49a:	89 d7                	mov    %edx,%edi
     49c:	56                   	push   %esi
     49d:	8d b0 b4 00 00 00    	lea    0xb4(%eax),%esi
     4a3:	53                   	push   %ebx
     4a4:	89 c3                	mov    %eax,%ebx
     4a6:	89 f0                	mov    %esi,%eax
     4a8:	e8 fc ff ff ff       	call   4a9 <dm_uevent_add+0x10>
			4a9: R_386_PC32	_spin_lock_irqsave
     4ad:	8b 8b ac 00 00 00    	mov    0xac(%ebx),%ecx
     4b3:	8d 93 ac 00 00 00    	lea    0xac(%ebx),%edx
     4b9:	89 79 04             	mov    %edi,0x4(%ecx)
     4bc:	89 57 04             	mov    %edx,0x4(%edi)
     4bf:	89 0f                	mov    %ecx,(%edi)
     4c1:	89 c2                	mov    %eax,%edx
     4c3:	89 f0                	mov    %esi,%eax
     4c5:	89 bb ac 00 00 00    	mov    %edi,0xac(%ebx)
     4cb:	5b                   	pop    %ebx
     4cc:	5e                   	pop    %esi
     4cd:	5f                   	pop    %edi
     4ce:	e9 fc ff ff ff       	jmp    4cf <dm_uevent_add+0x36>
			4cf: R_386_PC32	_spin_unlock_irqrestore

000004d3 <dm_wait_event>:
     4d3:	55                   	push   %ebp
     4d4:	57                   	push   %edi
     4d5:	56                   	push   %esi
     4d6:	89 c6                	mov    %eax,%esi
     4d8:	53                   	push   %ebx
     4d9:	31 db                	xor    %ebx,%ebx
     4db:	83 ec 18             	sub    $0x18,%esp
     4de:	89 14 24             	mov    %edx,(%esp)
     4e1:	8b 80 98 00 00 00    	mov    0x98(%eax),%eax
     4e7:	39 c2                	cmp    %eax,%edx
     4e9:	75 73                	jne    55e <dm_wait_event+0x8b>
     4eb:	31 c0                	xor    %eax,%eax
     4ed:	b9 05 00 00 00       	mov    $0x5,%ecx
     4f2:	8d 7c 24 04          	lea    0x4(%esp),%edi
     4f6:	f3 ab                	rep stos %eax,%es:(%edi)
     4f8:	8d 44 24 10          	lea    0x10(%esp),%eax
     4fc:	64 8b 1d 00 00 00 00 	mov    %fs:0x0,%ebx
			4ff: R_386_32	per_cpu__current_task
     503:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
     50a:	00 
			507: R_386_32	autoremove_wake_function
     50b:	8d be 9c 00 00 00    	lea    0x9c(%esi),%edi
     511:	89 5c 24 08          	mov    %ebx,0x8(%esp)
     515:	8d 6c 24 04          	lea    0x4(%esp),%ebp
     519:	89 44 24 10          	mov    %eax,0x10(%esp)
     51d:	89 44 24 14          	mov    %eax,0x14(%esp)
     521:	89 f8                	mov    %edi,%eax
     523:	b9 01 00 00 00       	mov    $0x1,%ecx
     528:	89 ea                	mov    %ebp,%edx
     52a:	e8 fc ff ff ff       	call   52b <dm_wait_event+0x58>
			52b: R_386_PC32	prepare_to_wait
     52f:	8b 86 98 00 00 00    	mov    0x98(%esi),%eax
     535:	39 04 24             	cmp    %eax,(%esp)
     538:	75 17                	jne    551 <dm_wait_event+0x7e>
     53a:	8b 43 04             	mov    0x4(%ebx),%eax
     53d:	f6 40 08 04          	testb  $0x4,0x8(%eax)
     541:	74 07                	je     54a <dm_wait_event+0x77>
     543:	bb 00 fe ff ff       	mov    $0xfffffe00,%ebx
     548:	eb 09                	jmp    553 <dm_wait_event+0x80>
     54a:	e8 fc ff ff ff       	call   54b <dm_wait_event+0x78>
			54b: R_386_PC32	schedule
     54f:	eb d0                	jmp    521 <dm_wait_event+0x4e>
     551:	31 db                	xor    %ebx,%ebx
     553:	8d 54 24 04          	lea    0x4(%esp),%edx
     557:	89 f8                	mov    %edi,%eax
     559:	e8 fc ff ff ff       	call   55a <dm_wait_event+0x87>
			55a: R_386_PC32	finish_wait
     55e:	83 c4 18             	add    $0x18,%esp
     561:	89 d8                	mov    %ebx,%eax
     563:	5b                   	pop    %ebx
     564:	5e                   	pop    %esi
     565:	5f                   	pop    %edi
     566:	5d                   	pop    %ebp
     567:	c3                   	ret    

00000568 <dm_kobject_uevent>:
     568:	53                   	push   %ebx
     569:	89 c3                	mov    %eax,%ebx
     56b:	83 ec 28             	sub    $0x28,%esp
     56e:	65 a1 14 00 00 00    	mov    %gs:0x14,%eax
     574:	89 44 24 24          	mov    %eax,0x24(%esp)
     578:	31 c0                	xor    %eax,%eax
     57a:	8d 44 24 0c          	lea    0xc(%esp),%eax
     57e:	85 c9                	test   %ecx,%ecx
     580:	89 44 24 04          	mov    %eax,0x4(%esp)
     584:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)
     58b:	00 
     58c:	75 0d                	jne    59b <dm_kobject_uevent+0x33>
     58e:	8b 43 38             	mov    0x38(%ebx),%eax
     591:	83 c0 54             	add    $0x54,%eax
     594:	e8 fc ff ff ff       	call   595 <dm_kobject_uevent+0x2d>
			595: R_386_PC32	kobject_uevent
     599:	eb 2d                	jmp    5c8 <dm_kobject_uevent+0x60>
     59b:	51                   	push   %ecx
     59c:	68 1f 04 00 00       	push   $0x41f
			59d: R_386_32	.rodata.str1.1
     5a1:	68 29 04 00 00       	push   $0x429
			5a2: R_386_32	.rodata.str1.1
     5a6:	6a 18                	push   $0x18
     5a8:	50                   	push   %eax
     5a9:	89 54 24 14          	mov    %edx,0x14(%esp)
     5ad:	e8 fc ff ff ff       	call   5ae <dm_kobject_uevent+0x46>
			5ae: R_386_PC32	snprintf
     5b2:	8b 43 38             	mov    0x38(%ebx),%eax
     5b5:	8b 54 24 14          	mov    0x14(%esp),%edx
     5b9:	83 c0 54             	add    $0x54,%eax
     5bc:	8d 4c 24 18          	lea    0x18(%esp),%ecx
     5c0:	e8 fc ff ff ff       	call   5c1 <dm_kobject_uevent+0x59>
			5c1: R_386_PC32	kobject_uevent_env
     5c5:	83 c4 14             	add    $0x14,%esp
     5c8:	8b 44 24 24          	mov    0x24(%esp),%eax
     5cc:	65 33 05 14 00 00 00 	xor    %gs:0x14,%eax
     5d3:	74 05                	je     5da <dm_kobject_uevent+0x72>
     5d5:	e8 fc ff ff ff       	call   5d6 <dm_kobject_uevent+0x6e>
			5d6: R_386_PC32	__stack_chk_fail
     5da:	83 c4 28             	add    $0x28,%esp
     5dd:	5b                   	pop    %ebx
     5de:	c3                   	ret    

000005df <unlock_fs>:
     5df:	53                   	push   %ebx
     5e0:	89 c3                	mov    %eax,%ebx
     5e2:	f6 40 30 04          	testb  $0x4,0x30(%eax)
     5e6:	74 20                	je     608 <unlock_fs+0x29>
     5e8:	8b 90 b8 00 00 00    	mov    0xb8(%eax),%edx
     5ee:	8b 80 bc 00 00 00    	mov    0xbc(%eax),%eax
     5f4:	e8 fc ff ff ff       	call   5f5 <unlock_fs+0x16>
			5f5: R_386_PC32	thaw_bdev
     5f9:	c7 83 b8 00 00 00 00 	movl   $0x0,0xb8(%ebx)
     600:	00 00 00 
     603:	f0 80 63 30 fb       	lock andb $0xfb,0x30(%ebx)
     608:	5b                   	pop    %ebx
     609:	c3                   	ret    

0000060a <stop_queue>:
     60a:	56                   	push   %esi
     60b:	53                   	push   %ebx
     60c:	89 c3                	mov    %eax,%ebx
     60e:	8b 80 b8 01 00 00    	mov    0x1b8(%eax),%eax
     614:	e8 fc ff ff ff       	call   615 <stop_queue+0xb>
			615: R_386_PC32	_spin_lock_irqsave
     619:	89 c6                	mov    %eax,%esi
     61b:	89 d8                	mov    %ebx,%eax
     61d:	e8 fc ff ff ff       	call   61e <stop_queue+0x14>
			61e: R_386_PC32	blk_stop_queue
     622:	8b 83 b8 01 00 00    	mov    0x1b8(%ebx),%eax
     628:	89 f2                	mov    %esi,%edx
     62a:	5b                   	pop    %ebx
     62b:	5e                   	pop    %esi
     62c:	e9 fc ff ff ff       	jmp    62d <stop_queue+0x23>
			62d: R_386_PC32	_spin_unlock_irqrestore

00000631 <__unbind>:
     631:	57                   	push   %edi
     632:	56                   	push   %esi
     633:	53                   	push   %ebx
     634:	8b b0 88 00 00 00    	mov    0x88(%eax),%esi
     63a:	89 c3                	mov    %eax,%ebx
     63c:	85 f6                	test   %esi,%esi
     63e:	74 32                	je     672 <__unbind+0x41>
     640:	31 c9                	xor    %ecx,%ecx
     642:	31 d2                	xor    %edx,%edx
     644:	89 f0                	mov    %esi,%eax
     646:	e8 fc ff ff ff       	call   647 <__unbind+0x16>
			647: R_386_PC32	dm_table_event_callback
     64b:	8d 7b 24             	lea    0x24(%ebx),%edi
     64e:	89 f8                	mov    %edi,%eax
     650:	e8 fc ff ff ff       	call   651 <__unbind+0x20>
			651: R_386_PC32	_write_lock_irqsave
     655:	c7 83 88 00 00 00 00 	movl   $0x0,0x88(%ebx)
     65c:	00 00 00 
     65f:	89 c2                	mov    %eax,%edx
     661:	89 f8                	mov    %edi,%eax
     663:	e8 fc ff ff ff       	call   664 <__unbind+0x33>
			664: R_386_PC32	_write_unlock_irqrestore
     668:	89 f0                	mov    %esi,%eax
     66a:	5b                   	pop    %ebx
     66b:	5e                   	pop    %esi
     66c:	5f                   	pop    %edi
     66d:	e9 fc ff ff ff       	jmp    66e <__unbind+0x3d>
			66e: R_386_PC32	dm_table_destroy
     672:	5b                   	pop    %ebx
     673:	5e                   	pop    %esi
     674:	5f                   	pop    %edi
     675:	c3                   	ret    

00000676 <dm_swap_table>:
     676:	55                   	push   %ebp
     677:	89 c5                	mov    %eax,%ebp
     679:	57                   	push   %edi
     67a:	56                   	push   %esi
     67b:	53                   	push   %ebx
     67c:	83 ec 40             	sub    $0x40,%esp
     67f:	8d 40 10             	lea    0x10(%eax),%eax
     682:	89 14 24             	mov    %edx,(%esp)
     685:	89 44 24 0c          	mov    %eax,0xc(%esp)
     689:	e8 fc ff ff ff       	call   68a <dm_swap_table+0x14>
			68a: R_386_PC32	mutex_lock
     68e:	c7 44 24 08 ea ff ff 	movl   $0xffffffea,0x8(%esp)
     695:	ff 
     696:	f6 45 30 02          	testb  $0x2,0x30(%ebp)
     69a:	0f 84 9e 01 00 00    	je     83e <dm_swap_table+0x1c8>
     6a0:	8b 04 24             	mov    (%esp),%eax
     6a3:	8d 54 24 10          	lea    0x10(%esp),%edx
     6a7:	e8 fc ff ff ff       	call   6a8 <dm_swap_table+0x32>
			6a8: R_386_PC32	dm_calculate_queue_limits
     6ac:	85 c0                	test   %eax,%eax
     6ae:	89 44 24 08          	mov    %eax,0x8(%esp)
     6b2:	0f 85 86 01 00 00    	jne    83e <dm_swap_table+0x1c8>
     6b8:	8b 85 88 00 00 00    	mov    0x88(%ebp),%eax
     6be:	85 c0                	test   %eax,%eax
     6c0:	74 23                	je     6e5 <dm_swap_table+0x6f>
     6c2:	e8 fc ff ff ff       	call   6c3 <dm_swap_table+0x4d>
			6c3: R_386_PC32	dm_table_get_type
     6c7:	89 c3                	mov    %eax,%ebx
     6c9:	8b 04 24             	mov    (%esp),%eax
     6cc:	e8 fc ff ff ff       	call   6cd <dm_swap_table+0x57>
			6cd: R_386_PC32	dm_table_get_type
     6d1:	39 c3                	cmp    %eax,%ebx
     6d3:	74 10                	je     6e5 <dm_swap_table+0x6f>
     6d5:	68 2f 04 00 00       	push   $0x42f
			6d6: R_386_32	.rodata.str1.1
     6da:	e8 fc ff ff ff       	call   6db <dm_swap_table+0x65>
			6db: R_386_PC32	printk
     6df:	5d                   	pop    %ebp
     6e0:	e9 59 01 00 00       	jmp    83e <dm_swap_table+0x1c8>
     6e5:	89 e8                	mov    %ebp,%eax
     6e7:	e8 45 ff ff ff       	call   631 <__unbind>
     6ec:	8b 45 34             	mov    0x34(%ebp),%eax
     6ef:	89 44 24 04          	mov    %eax,0x4(%esp)
     6f3:	8b 04 24             	mov    (%esp),%eax
     6f6:	e8 fc ff ff ff       	call   6f7 <dm_swap_table+0x81>
			6f7: R_386_PC32	dm_table_get_size
     6fb:	89 c3                	mov    %eax,%ebx
     6fd:	8b 45 38             	mov    0x38(%ebp),%eax
     700:	89 d6                	mov    %edx,%esi
     702:	3b 50 40             	cmp    0x40(%eax),%edx
     705:	75 05                	jne    70c <dm_swap_table+0x96>
     707:	3b 58 3c             	cmp    0x3c(%eax),%ebx
     70a:	74 0f                	je     71b <dm_swap_table+0xa5>
     70c:	8d bd c0 00 00 00    	lea    0xc0(%ebp),%edi
     712:	b9 02 00 00 00       	mov    $0x2,%ecx
     717:	31 c0                	xor    %eax,%eax
     719:	f3 ab                	rep stos %eax,%es:(%edi)
     71b:	8b 45 38             	mov    0x38(%ebp),%eax
     71e:	89 58 3c             	mov    %ebx,0x3c(%eax)
     721:	89 70 40             	mov    %esi,0x40(%eax)
     724:	8b 85 bc 00 00 00    	mov    0xbc(%ebp),%eax
     72a:	8b 40 04             	mov    0x4(%eax),%eax
     72d:	83 c0 78             	add    $0x78,%eax
     730:	e8 fc ff ff ff       	call   731 <dm_swap_table+0xbb>
			731: R_386_PC32	mutex_lock
     735:	8b 85 bc 00 00 00    	mov    0xbc(%ebp),%eax
     73b:	8b 40 04             	mov    0x4(%eax),%eax
     73e:	ff 40 48             	incl   0x48(%eax)
     741:	89 da                	mov    %ebx,%edx
     743:	89 f1                	mov    %esi,%ecx
     745:	0f a4 d9 09          	shld   $0x9,%ebx,%ecx
     749:	c1 e2 09             	shl    $0x9,%edx
     74c:	89 50 40             	mov    %edx,0x40(%eax)
     74f:	89 48 44             	mov    %ecx,0x44(%eax)
     752:	ff 40 48             	incl   0x48(%eax)
     755:	8b 85 bc 00 00 00    	mov    0xbc(%ebp),%eax
     75b:	8b 40 04             	mov    0x4(%eax),%eax
     75e:	83 c0 78             	add    $0x78,%eax
     761:	e8 fc ff ff ff       	call   762 <dm_swap_table+0xec>
			762: R_386_PC32	mutex_unlock
     766:	89 f0                	mov    %esi,%eax
     768:	09 d8                	or     %ebx,%eax
     76a:	75 0d                	jne    779 <dm_swap_table+0x103>
     76c:	8b 04 24             	mov    (%esp),%eax
     76f:	e8 fc ff ff ff       	call   770 <dm_swap_table+0xfa>
			770: R_386_PC32	dm_table_destroy
     774:	e9 c5 00 00 00       	jmp    83e <dm_swap_table+0x1c8>
     779:	8b 04 24             	mov    (%esp),%eax
     77c:	89 e9                	mov    %ebp,%ecx
     77e:	ba 72 08 00 00       	mov    $0x872,%edx
			77f: R_386_32	.text
     783:	e8 fc ff ff ff       	call   784 <dm_swap_table+0x10e>
			784: R_386_PC32	dm_table_event_callback
     788:	8b 04 24             	mov    (%esp),%eax
     78b:	e8 fc ff ff ff       	call   78c <dm_swap_table+0x116>
			78c: R_386_PC32	dm_table_request_based
     790:	84 c0                	test   %al,%al
     792:	74 12                	je     7a6 <dm_swap_table+0x130>
     794:	8b 44 24 04          	mov    0x4(%esp),%eax
     798:	f6 80 b0 01 00 00 04 	testb  $0x4,0x1b0(%eax)
     79f:	75 05                	jne    7a6 <dm_swap_table+0x130>
     7a1:	e8 64 fe ff ff       	call   60a <stop_queue>
     7a6:	83 bd 8c 00 00 00 00 	cmpl   $0x0,0x8c(%ebp)
     7ad:	74 12                	je     7c1 <dm_swap_table+0x14b>
     7af:	83 bd 90 00 00 00 00 	cmpl   $0x0,0x90(%ebp)
     7b6:	74 09                	je     7c1 <dm_swap_table+0x14b>
     7b8:	83 bd 94 00 00 00 00 	cmpl   $0x0,0x94(%ebp)
     7bf:	75 47                	jne    808 <dm_swap_table+0x192>
     7c1:	8b 04 24             	mov    (%esp),%eax
     7c4:	e8 fc ff ff ff       	call   7c5 <dm_swap_table+0x14f>
			7c5: R_386_PC32	dm_table_get_md_mempools
     7c9:	85 c0                	test   %eax,%eax
     7cb:	74 09                	je     7d6 <dm_swap_table+0x160>
     7cd:	83 bd 8c 00 00 00 00 	cmpl   $0x0,0x8c(%ebp)
     7d4:	74 7d                	je     853 <dm_swap_table+0x1dd>
     7d6:	0f 0b                	ud2a   
     7d8:	eb fe                	jmp    7d8 <dm_swap_table+0x162>
     7da:	8b 10                	mov    (%eax),%edx
     7dc:	89 95 8c 00 00 00    	mov    %edx,0x8c(%ebp)
     7e2:	8b 50 04             	mov    0x4(%eax),%edx
     7e5:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
     7eb:	89 95 90 00 00 00    	mov    %edx,0x90(%ebp)
     7f1:	8b 50 08             	mov    0x8(%eax),%edx
     7f4:	c7 40 04 00 00 00 00 	movl   $0x0,0x4(%eax)
     7fb:	89 95 94 00 00 00    	mov    %edx,0x94(%ebp)
     801:	c7 40 08 00 00 00 00 	movl   $0x0,0x8(%eax)
     808:	8b 04 24             	mov    (%esp),%eax
     80b:	8d 5d 24             	lea    0x24(%ebp),%ebx
     80e:	e8 fc ff ff ff       	call   80f <dm_swap_table+0x199>
			80f: R_386_PC32	dm_table_free_md_mempools
     813:	89 d8                	mov    %ebx,%eax
     815:	e8 fc ff ff ff       	call   816 <dm_swap_table+0x1a0>
			816: R_386_PC32	_write_lock_irqsave
     81a:	89 c7                	mov    %eax,%edi
     81c:	8b 04 24             	mov    (%esp),%eax
     81f:	8d 4c 24 10          	lea    0x10(%esp),%ecx
     823:	89 85 88 00 00 00    	mov    %eax,0x88(%ebp)
     829:	8b 54 24 04          	mov    0x4(%esp),%edx
     82d:	8b 04 24             	mov    (%esp),%eax
     830:	e8 fc ff ff ff       	call   831 <dm_swap_table+0x1bb>
			831: R_386_PC32	dm_table_set_restrictions
     835:	89 fa                	mov    %edi,%edx
     837:	89 d8                	mov    %ebx,%eax
     839:	e8 fc ff ff ff       	call   83a <dm_swap_table+0x1c4>
			83a: R_386_PC32	_write_unlock_irqrestore
     83e:	8b 44 24 0c          	mov    0xc(%esp),%eax
     842:	e8 fc ff ff ff       	call   843 <dm_swap_table+0x1cd>
			843: R_386_PC32	mutex_unlock
     847:	8b 44 24 08          	mov    0x8(%esp),%eax
     84b:	83 c4 40             	add    $0x40,%esp
     84e:	5b                   	pop    %ebx
     84f:	5e                   	pop    %esi
     850:	5f                   	pop    %edi
     851:	5d                   	pop    %ebp
     852:	c3                   	ret    
     853:	83 bd 90 00 00 00 00 	cmpl   $0x0,0x90(%ebp)
     85a:	0f 85 76 ff ff ff    	jne    7d6 <dm_swap_table+0x160>
     860:	83 bd 94 00 00 00 00 	cmpl   $0x0,0x94(%ebp)
     867:	0f 84 6d ff ff ff    	je     7da <dm_swap_table+0x164>
     86d:	e9 64 ff ff ff       	jmp    7d6 <dm_swap_table+0x160>

00000872 <event_callback>:
     872:	55                   	push   %ebp
     873:	57                   	push   %edi
     874:	56                   	push   %esi
     875:	53                   	push   %ebx
     876:	89 c3                	mov    %eax,%ebx
     878:	83 ec 0c             	sub    $0xc,%esp
     87b:	8d 74 24 04          	lea    0x4(%esp),%esi
     87f:	8d 80 b4 00 00 00    	lea    0xb4(%eax),%eax
     885:	89 74 24 04          	mov    %esi,0x4(%esp)
     889:	89 74 24 08          	mov    %esi,0x8(%esp)
     88d:	89 04 24             	mov    %eax,(%esp)
     890:	e8 fc ff ff ff       	call   891 <event_callback+0x1f>
			891: R_386_PC32	_spin_lock_irqsave
     895:	8b bb ac 00 00 00    	mov    0xac(%ebx),%edi
     89b:	8d 8b ac 00 00 00    	lea    0xac(%ebx),%ecx
     8a1:	39 cf                	cmp    %ecx,%edi
     8a3:	89 c2                	mov    %eax,%edx
     8a5:	74 22                	je     8c9 <event_callback+0x57>
     8a7:	8b 6c 24 04          	mov    0x4(%esp),%ebp
     8ab:	8b 83 b0 00 00 00    	mov    0xb0(%ebx),%eax
     8b1:	89 77 04             	mov    %esi,0x4(%edi)
     8b4:	89 7c 24 04          	mov    %edi,0x4(%esp)
     8b8:	89 28                	mov    %ebp,(%eax)
     8ba:	89 45 04             	mov    %eax,0x4(%ebp)
     8bd:	89 8b ac 00 00 00    	mov    %ecx,0xac(%ebx)
     8c3:	89 8b b0 00 00 00    	mov    %ecx,0xb0(%ebx)
     8c9:	8b 04 24             	mov    (%esp),%eax
     8cc:	e8 fc ff ff ff       	call   8cd <event_callback+0x5b>
			8cd: R_386_PC32	_spin_unlock_irqrestore
     8d1:	8b 53 38             	mov    0x38(%ebx),%edx
     8d4:	83 c2 54             	add    $0x54,%edx
     8d7:	8d 44 24 04          	lea    0x4(%esp),%eax
     8db:	e8 fc ff ff ff       	call   8dc <event_callback+0x6a>
			8dc: R_386_PC32	dm_send_uevents
     8e0:	f0 ff 83 98 00 00 00 	lock incl 0x98(%ebx)
     8e7:	b9 01 00 00 00       	mov    $0x1,%ecx
     8ec:	ba 03 00 00 00       	mov    $0x3,%edx
     8f1:	8d 83 9c 00 00 00    	lea    0x9c(%ebx),%eax
     8f7:	6a 00                	push   $0x0
     8f9:	e8 fc ff ff ff       	call   8fa <event_callback+0x88>
			8fa: R_386_PC32	__wake_up
     8fe:	83 c4 10             	add    $0x10,%esp
     901:	5b                   	pop    %ebx
     902:	5e                   	pop    %esi
     903:	5f                   	pop    %edi
     904:	5d                   	pop    %ebp
     905:	c3                   	ret    

00000906 <dm_blk_open>:
     906:	53                   	push   %ebx
     907:	89 c3                	mov    %eax,%ebx
     909:	b8 0c 00 00 00       	mov    $0xc,%eax
			90a: R_386_32	.bss
     90e:	e8 fc ff ff ff       	call   90f <dm_blk_open+0x9>
			90f: R_386_PC32	_spin_lock
     913:	8b 43 50             	mov    0x50(%ebx),%eax
     916:	8b 80 98 01 00 00    	mov    0x198(%eax),%eax
     91c:	85 c0                	test   %eax,%eax
     91e:	74 1e                	je     93e <dm_blk_open+0x38>
     920:	8b 48 30             	mov    0x30(%eax),%ecx
     923:	89 ca                	mov    %ecx,%edx
     925:	c1 ea 04             	shr    $0x4,%edx
     928:	c1 e9 03             	shr    $0x3,%ecx
     92b:	09 ca                	or     %ecx,%edx
     92d:	80 e2 01             	and    $0x1,%dl
     930:	74 04                	je     936 <dm_blk_open+0x30>
     932:	31 c0                	xor    %eax,%eax
     934:	eb 08                	jmp    93e <dm_blk_open+0x38>
     936:	f0 ff 40 28          	lock incl 0x28(%eax)
     93a:	f0 ff 40 2c          	lock incl 0x2c(%eax)
     93e:	fe 05 0c 00 00 00    	incb   0xc
			940: R_386_32	.bss
     944:	83 f8 01             	cmp    $0x1,%eax
     947:	19 c0                	sbb    %eax,%eax
     949:	83 e0 fa             	and    $0xfffffffa,%eax
     94c:	5b                   	pop    %ebx
     94d:	c3                   	ret    

0000094e <dm_lock_for_deletion>:
     94e:	53                   	push   %ebx
     94f:	89 c3                	mov    %eax,%ebx
     951:	b8 0c 00 00 00       	mov    $0xc,%eax
			952: R_386_32	.bss
     956:	e8 fc ff ff ff       	call   957 <dm_lock_for_deletion+0x9>
			957: R_386_PC32	_spin_lock
     95b:	8b 53 2c             	mov    0x2c(%ebx),%edx
     95e:	b8 f0 ff ff ff       	mov    $0xfffffff0,%eax
     963:	85 d2                	test   %edx,%edx
     965:	75 07                	jne    96e <dm_lock_for_deletion+0x20>
     967:	f0 80 4b 30 10       	lock orb $0x10,0x30(%ebx)
     96c:	31 c0                	xor    %eax,%eax
     96e:	fe 05 0c 00 00 00    	incb   0xc
			970: R_386_32	.bss
     974:	5b                   	pop    %ebx
     975:	c3                   	ret    

00000976 <free_minor>:
     976:	53                   	push   %ebx
     977:	89 c3                	mov    %eax,%ebx
     979:	b8 0c 00 00 00       	mov    $0xc,%eax
			97a: R_386_32	.bss
     97e:	e8 fc ff ff ff       	call   97f <free_minor+0x9>
			97f: R_386_PC32	_spin_lock
     983:	89 da                	mov    %ebx,%edx
     985:	b8 10 00 00 00       	mov    $0x10,%eax
			986: R_386_32	.bss
     98a:	e8 fc ff ff ff       	call   98b <free_minor+0x15>
			98b: R_386_PC32	idr_remove
     98f:	fe 05 0c 00 00 00    	incb   0xc
			991: R_386_32	.bss
     995:	5b                   	pop    %ebx
     996:	c3                   	ret    

00000997 <dm_get_md>:
     997:	89 c2                	mov    %eax,%edx
     999:	53                   	push   %ebx
     99a:	89 c3                	mov    %eax,%ebx
     99c:	c1 ea 14             	shr    $0x14,%edx
     99f:	31 c0                	xor    %eax,%eax
     9a1:	3b 15 08 00 00 00    	cmp    0x8,%edx
			9a3: R_386_32	.bss
     9a7:	75 4e                	jne    9f7 <dm_get_md+0x60>
     9a9:	b8 0c 00 00 00       	mov    $0xc,%eax
			9aa: R_386_32	.bss
     9ae:	81 e3 ff ff 0f 00    	and    $0xfffff,%ebx
     9b4:	e8 fc ff ff ff       	call   9b5 <dm_get_md+0x1e>
			9b5: R_386_PC32	_spin_lock
     9b9:	89 da                	mov    %ebx,%edx
     9bb:	b8 10 00 00 00       	mov    $0x10,%eax
			9bc: R_386_32	.bss
     9c0:	e8 fc ff ff ff       	call   9c1 <dm_get_md+0x2a>
			9c1: R_386_PC32	idr_find
     9c5:	85 c0                	test   %eax,%eax
     9c7:	74 20                	je     9e9 <dm_get_md+0x52>
     9c9:	83 f8 ff             	cmp    $0xffffffff,%eax
     9cc:	74 19                	je     9e7 <dm_get_md+0x50>
     9ce:	8b 50 38             	mov    0x38(%eax),%edx
     9d1:	8b 92 40 01 00 00    	mov    0x140(%edx),%edx
     9d7:	81 e2 ff ff 0f 00    	and    $0xfffff,%edx
     9dd:	39 da                	cmp    %ebx,%edx
     9df:	75 06                	jne    9e7 <dm_get_md+0x50>
     9e1:	f6 40 30 08          	testb  $0x8,0x30(%eax)
     9e5:	74 02                	je     9e9 <dm_get_md+0x52>
     9e7:	31 c0                	xor    %eax,%eax
     9e9:	fe 05 0c 00 00 00    	incb   0xc
			9eb: R_386_32	.bss
     9ef:	85 c0                	test   %eax,%eax
     9f1:	74 04                	je     9f7 <dm_get_md+0x60>
     9f3:	f0 ff 40 28          	lock incl 0x28(%eax)
     9f7:	5b                   	pop    %ebx
     9f8:	c3                   	ret    

000009f9 <dm_create>:
     9f9:	55                   	push   %ebp
     9fa:	57                   	push   %edi
     9fb:	56                   	push   %esi
     9fc:	89 c6                	mov    %eax,%esi
     9fe:	53                   	push   %ebx
     9ff:	b8 28 0a 00 00       	mov    $0xa28,%eax
			a00: R_386_32	kmalloc_caches
     a04:	83 ec 08             	sub    $0x8,%esp
     a07:	89 14 24             	mov    %edx,(%esp)
     a0a:	ba d0 80 00 00       	mov    $0x80d0,%edx
     a0f:	e8 fc ff ff ff       	call   a10 <dm_create+0x17>
			a10: R_386_PC32	kmem_cache_alloc
     a14:	8b 2d 2c 0a 00 00    	mov    0xa2c,%ebp
			a16: R_386_32	kmalloc_caches
     a1a:	83 3d 04 00 00 00 00 	cmpl   $0x0,0x4
			a1c: R_386_32	__tracepoint_kmalloc
     a21:	89 c3                	mov    %eax,%ebx
     a23:	74 28                	je     a4d <dm_create+0x54>
     a25:	8b 3d 10 00 00 00    	mov    0x10,%edi
			a27: R_386_32	__tracepoint_kmalloc
     a2b:	85 ff                	test   %edi,%edi
     a2d:	74 1e                	je     a4d <dm_create+0x54>
     a2f:	68 d0 80 00 00       	push   $0x80d0
     a34:	89 da                	mov    %ebx,%edx
     a36:	b8 f9 09 00 00       	mov    $0x9f9,%eax
			a37: R_386_32	.text
     a3b:	b9 04 02 00 00       	mov    $0x204,%ecx
     a40:	55                   	push   %ebp
     a41:	ff 17                	call   *(%edi)
     a43:	83 c7 04             	add    $0x4,%edi
     a46:	83 3f 00             	cmpl   $0x0,(%edi)
     a49:	58                   	pop    %eax
     a4a:	5a                   	pop    %edx
     a4b:	eb e0                	jmp    a2d <dm_create+0x34>
     a4d:	85 db                	test   %ebx,%ebx
     a4f:	75 15                	jne    a66 <dm_create+0x6d>
     a51:	68 8c 04 00 00       	push   $0x48c
			a52: R_386_32	.rodata.str1.1
     a56:	e8 fc ff ff ff       	call   a57 <dm_create+0x5e>
			a57: R_386_PC32	printk
     a5b:	b8 fa ff ff ff       	mov    $0xfffffffa,%eax
     a60:	5d                   	pop    %ebp
     a61:	e9 b8 03 00 00       	jmp    e1e <dm_create+0x425>
     a66:	64 8b 15 00 00 00 00 	mov    %fs:0x0,%edx
			a69: R_386_32	per_cpu__cpu_number
     a6d:	83 3d 00 00 00 00 02 	cmpl   $0x2,0x0
			a6f: R_386_32	__this_module
     a74:	0f 84 98 03 00 00    	je     e12 <dm_create+0x419>
     a7a:	a1 54 01 00 00       	mov    0x154,%eax
			a7b: R_386_32	__this_module
     a7f:	03 04 95 00 00 00 00 	add    0x0(,%edx,4),%eax
			a82: R_386_32	__per_cpu_offset
     a86:	ff 00                	incl   (%eax)
     a88:	a1 54 01 00 00       	mov    0x154,%eax
			a89: R_386_32	__this_module
     a8d:	03 04 95 00 00 00 00 	add    0x0(,%edx,4),%eax
			a90: R_386_32	__per_cpu_offset
     a94:	83 3d 04 00 00 00 00 	cmpl   $0x0,0x4
			a96: R_386_32	__tracepoint_module_get
     a9b:	8b 28                	mov    (%eax),%ebp
     a9d:	0f 84 82 03 00 00    	je     e25 <dm_create+0x42c>
     aa3:	8b 3d 10 00 00 00    	mov    0x10,%edi
			aa5: R_386_32	__tracepoint_module_get
     aa9:	85 ff                	test   %edi,%edi
     aab:	0f 84 74 03 00 00    	je     e25 <dm_create+0x42c>
     ab1:	89 e9                	mov    %ebp,%ecx
     ab3:	ba 7a 0a 00 00       	mov    $0xa7a,%edx
			ab4: R_386_32	.text
     ab8:	b8 00 00 00 00       	mov    $0x0,%eax
			ab9: R_386_32	__this_module
     abd:	ff 17                	call   *(%edi)
     abf:	83 c7 04             	add    $0x4,%edi
     ac2:	83 3f 00             	cmpl   $0x0,(%edi)
     ac5:	eb e4                	jmp    aab <dm_create+0xb2>
     ac7:	ba d0 00 00 00       	mov    $0xd0,%edx
     acc:	b8 10 00 00 00       	mov    $0x10,%eax
			acd: R_386_32	.bss
     ad1:	e8 fc ff ff ff       	call   ad2 <dm_create+0xd9>
			ad2: R_386_PC32	idr_pre_get
     ad6:	85 c0                	test   %eax,%eax
     ad8:	0f 84 2a 03 00 00    	je     e08 <dm_create+0x40f>
     ade:	b8 0c 00 00 00       	mov    $0xc,%eax
			adf: R_386_32	.bss
     ae3:	e8 fc ff ff ff       	call   ae4 <dm_create+0xeb>
			ae4: R_386_PC32	_spin_lock
     ae8:	83 ca ff             	or     $0xffffffff,%edx
     aeb:	b8 10 00 00 00       	mov    $0x10,%eax
			aec: R_386_32	.bss
     af0:	8d 4c 24 04          	lea    0x4(%esp),%ecx
     af4:	e8 fc ff ff ff       	call   af5 <dm_create+0xfc>
			af5: R_386_PC32	idr_get_new
     af9:	83 ca ff             	or     $0xffffffff,%edx
     afc:	85 c0                	test   %eax,%eax
     afe:	75 1e                	jne    b1e <dm_create+0x125>
     b00:	8b 54 24 04          	mov    0x4(%esp),%edx
     b04:	81 fa ff ff 0f 00    	cmp    $0xfffff,%edx
     b0a:	7e 12                	jle    b1e <dm_create+0x125>
     b0c:	b8 10 00 00 00       	mov    $0x10,%eax
			b0d: R_386_32	.bss
     b11:	e8 fc ff ff ff       	call   b12 <dm_create+0x119>
			b12: R_386_PC32	idr_remove
     b16:	83 ca ff             	or     $0xffffffff,%edx
     b19:	b8 e4 ff ff ff       	mov    $0xffffffe4,%eax
     b1e:	fe 05 0c 00 00 00    	incb   0xc
			b20: R_386_32	.bss
     b24:	89 d6                	mov    %edx,%esi
     b26:	eb 7a                	jmp    ba2 <dm_create+0x1a9>
     b28:	81 fe ff ff 0f 00    	cmp    $0xfffff,%esi
     b2e:	0f 8f d4 02 00 00    	jg     e08 <dm_create+0x40f>
     b34:	ba d0 00 00 00       	mov    $0xd0,%edx
     b39:	b8 10 00 00 00       	mov    $0x10,%eax
			b3a: R_386_32	.bss
     b3e:	e8 fc ff ff ff       	call   b3f <dm_create+0x146>
			b3f: R_386_PC32	idr_pre_get
     b43:	85 c0                	test   %eax,%eax
     b45:	0f 84 bd 02 00 00    	je     e08 <dm_create+0x40f>
     b4b:	b8 0c 00 00 00       	mov    $0xc,%eax
			b4c: R_386_32	.bss
     b50:	e8 fc ff ff ff       	call   b51 <dm_create+0x158>
			b51: R_386_PC32	_spin_lock
     b55:	89 f2                	mov    %esi,%edx
     b57:	b8 10 00 00 00       	mov    $0x10,%eax
			b58: R_386_32	.bss
     b5c:	e8 fc ff ff ff       	call   b5d <dm_create+0x164>
			b5d: R_386_PC32	idr_find
     b61:	89 c2                	mov    %eax,%edx
     b63:	b8 f0 ff ff ff       	mov    $0xfffffff0,%eax
     b68:	85 d2                	test   %edx,%edx
     b6a:	75 30                	jne    b9c <dm_create+0x1a3>
     b6c:	8d 44 24 04          	lea    0x4(%esp),%eax
     b70:	83 ca ff             	or     $0xffffffff,%edx
     b73:	50                   	push   %eax
     b74:	89 f1                	mov    %esi,%ecx
     b76:	b8 10 00 00 00       	mov    $0x10,%eax
			b77: R_386_32	.bss
     b7b:	e8 fc ff ff ff       	call   b7c <dm_create+0x183>
			b7c: R_386_PC32	idr_get_new_above
     b80:	5f                   	pop    %edi
     b81:	85 c0                	test   %eax,%eax
     b83:	75 17                	jne    b9c <dm_create+0x1a3>
     b85:	8b 54 24 04          	mov    0x4(%esp),%edx
     b89:	39 f2                	cmp    %esi,%edx
     b8b:	74 0f                	je     b9c <dm_create+0x1a3>
     b8d:	b8 10 00 00 00       	mov    $0x10,%eax
			b8e: R_386_32	.bss
     b92:	e8 fc ff ff ff       	call   b93 <dm_create+0x19a>
			b93: R_386_PC32	idr_remove
     b97:	b8 f0 ff ff ff       	mov    $0xfffffff0,%eax
     b9c:	fe 05 0c 00 00 00    	incb   0xc
			b9e: R_386_32	.bss
     ba2:	85 c0                	test   %eax,%eax
     ba4:	0f 88 5e 02 00 00    	js     e08 <dm_create+0x40f>
     baa:	b9 24 00 00 00       	mov    $0x24,%ecx
			bab: R_386_32	.bss
     baf:	ba cf 04 00 00       	mov    $0x4cf,%edx
			bb0: R_386_32	.rodata.str1.1
     bb4:	89 d8                	mov    %ebx,%eax
     bb6:	e8 fc ff ff ff       	call   bb7 <dm_create+0x1be>
			bb7: R_386_PC32	__init_rwsem
     bbb:	8d 43 10             	lea    0x10(%ebx),%eax
     bbe:	b9 24 00 00 00       	mov    $0x24,%ecx
			bbf: R_386_32	.bss
     bc3:	ba dc 04 00 00       	mov    $0x4dc,%edx
			bc4: R_386_32	.rodata.str1.1
     bc8:	e8 fc ff ff ff       	call   bc9 <dm_create+0x1d0>
			bc9: R_386_PC32	__mutex_init
     bcd:	8d 83 ac 00 00 00    	lea    0xac(%ebx),%eax
     bd3:	31 d2                	xor    %edx,%edx
     bd5:	c7 43 28 01 00 00 00 	movl   $0x1,0x28(%ebx)
     bdc:	89 83 ac 00 00 00    	mov    %eax,0xac(%ebx)
     be2:	c7 43 2c 00 00 00 00 	movl   $0x0,0x2c(%ebx)
     be9:	89 83 b0 00 00 00    	mov    %eax,0xb0(%ebx)
     bef:	b8 bb 27 00 00       	mov    $0x27bb,%eax
			bf0: R_386_32	.text
     bf4:	c7 83 98 00 00 00 00 	movl   $0x0,0x98(%ebx)
     bfb:	00 00 00 
     bfe:	c7 43 7c 00 00 00 00 	movl   $0x0,0x7c(%ebx)
     c05:	c7 43 24 00 00 00 01 	movl   $0x1000000,0x24(%ebx)
     c0c:	c7 83 a8 00 00 00 00 	movl   $0x0,0xa8(%ebx)
     c13:	00 00 00 
     c16:	c7 83 b4 00 00 00 00 	movl   $0x0,0xb4(%ebx)
     c1d:	00 00 00 
     c20:	e8 fc ff ff ff       	call   c21 <dm_create+0x228>
			c21: R_386_PC32	blk_init_queue
     c25:	85 c0                	test   %eax,%eax
     c27:	89 43 34             	mov    %eax,0x34(%ebx)
     c2a:	0f 84 d1 01 00 00    	je     e01 <dm_create+0x408>
     c30:	0f ba b0 b0 01 00 00 	btrl   $0xd,0x1b0(%eax)
     c37:	0d 
     c38:	8b 43 34             	mov    0x34(%ebx),%eax
     c3b:	8b 50 44             	mov    0x44(%eax),%edx
     c3e:	89 93 90 01 00 00    	mov    %edx,0x190(%ebx)
     c44:	ba 82 24 00 00       	mov    $0x2482,%edx
			c45: R_386_32	.text
     c49:	89 98 a8 01 00 00    	mov    %ebx,0x1a8(%eax)
     c4f:	8b 43 34             	mov    0x34(%ebx),%eax
     c52:	c7 80 d8 00 00 00 6d 	movl   $0x276d,0xd8(%eax)
     c59:	27 00 00 
			c58: R_386_32	.text
     c5c:	8b 43 34             	mov    0x34(%ebx),%eax
     c5f:	89 98 dc 00 00 00    	mov    %ebx,0xdc(%eax)
     c65:	8b 43 34             	mov    0x34(%ebx),%eax
     c68:	e8 fc ff ff ff       	call   c69 <dm_create+0x270>
			c69: R_386_PC32	blk_queue_make_request
     c6d:	8b 43 34             	mov    0x34(%ebx),%eax
     c70:	83 ca ff             	or     $0xffffffff,%edx
     c73:	89 d1                	mov    %edx,%ecx
     c75:	e8 fc ff ff ff       	call   c76 <dm_create+0x27d>
			c76: R_386_PC32	blk_queue_bounce_limit
     c7a:	8b 43 34             	mov    0x34(%ebx),%eax
     c7d:	ba 20 26 00 00       	mov    $0x2620,%edx
			c7e: R_386_32	.text
     c82:	c7 40 4c d3 15 00 00 	movl   $0x15d3,0x4c(%eax)
			c85: R_386_32	.text
     c89:	8b 43 34             	mov    0x34(%ebx),%eax
     c8c:	e8 fc ff ff ff       	call   c8d <dm_create+0x294>
			c8d: R_386_PC32	blk_queue_merge_bvec
     c91:	8b 43 34             	mov    0x34(%ebx),%eax
     c94:	ba 48 1b 00 00       	mov    $0x1b48,%edx
			c95: R_386_32	.text
     c99:	e8 fc ff ff ff       	call   c9a <dm_create+0x2a1>
			c9a: R_386_PC32	blk_queue_softirq_done
     c9e:	8b 43 34             	mov    0x34(%ebx),%eax
     ca1:	ba ba 12 00 00       	mov    $0x12ba,%edx
			ca2: R_386_32	.text
     ca6:	e8 fc ff ff ff       	call   ca7 <dm_create+0x2ae>
			ca7: R_386_PC32	blk_queue_prep_rq
     cab:	8b 43 34             	mov    0x34(%ebx),%eax
     cae:	ba eb 25 00 00       	mov    $0x25eb,%edx
			caf: R_386_32	.text
     cb3:	e8 fc ff ff ff       	call   cb4 <dm_create+0x2bb>
			cb4: R_386_PC32	blk_queue_lld_busy
     cb8:	b8 01 00 00 00       	mov    $0x1,%eax
     cbd:	e8 fc ff ff ff       	call   cbe <dm_create+0x2c5>
			cbe: R_386_PC32	alloc_disk
     cc2:	85 c0                	test   %eax,%eax
     cc4:	89 43 38             	mov    %eax,0x38(%ebx)
     cc7:	0f 84 2c 01 00 00    	je     df9 <dm_create+0x400>
     ccd:	c7 43 50 00 00 00 00 	movl   $0x0,0x50(%ebx)
     cd4:	8d 43 58             	lea    0x58(%ebx),%eax
     cd7:	ba 24 00 00 00       	mov    $0x24,%edx
			cd8: R_386_32	.bss
     cdc:	c7 43 54 00 00 00 00 	movl   $0x0,0x54(%ebx)
     ce3:	e8 fc ff ff ff       	call   ce4 <dm_create+0x2eb>
			ce4: R_386_PC32	__init_waitqueue_head
     ce8:	8d 43 68             	lea    0x68(%ebx),%eax
     ceb:	ba 24 00 00 00       	mov    $0x24,%edx
			cec: R_386_32	.bss
     cf0:	89 43 68             	mov    %eax,0x68(%ebx)
     cf3:	89 43 6c             	mov    %eax,0x6c(%ebx)
     cf6:	8d 83 9c 00 00 00    	lea    0x9c(%ebx),%eax
     cfc:	c7 43 64 00 00 00 00 	movl   $0x0,0x64(%ebx)
     d03:	c7 43 70 7d 23 00 00 	movl   $0x237d,0x70(%ebx)
			d06: R_386_32	.text
     d0a:	e8 fc ff ff ff       	call   d0b <dm_create+0x312>
			d0b: R_386_PC32	__init_waitqueue_head
     d0f:	8b 43 38             	mov    0x38(%ebx),%eax
     d12:	8b 15 08 00 00 00    	mov    0x8,%edx
			d14: R_386_32	.bss
     d18:	89 10                	mov    %edx,(%eax)
     d1a:	8b 43 38             	mov    0x38(%ebx),%eax
     d1d:	89 70 04             	mov    %esi,0x4(%eax)
     d20:	8b 43 38             	mov    0x38(%ebx),%eax
     d23:	c7 80 90 01 00 00 6c 	movl   $0x6c,0x190(%eax)
     d2a:	00 00 00 
			d29: R_386_32	.rodata
     d2d:	8b 53 34             	mov    0x34(%ebx),%edx
     d30:	8b 43 38             	mov    0x38(%ebx),%eax
     d33:	89 90 94 01 00 00    	mov    %edx,0x194(%eax)
     d39:	8b 43 38             	mov    0x38(%ebx),%eax
     d3c:	89 98 98 01 00 00    	mov    %ebx,0x198(%eax)
     d42:	56                   	push   %esi
     d43:	68 ee 04 00 00       	push   $0x4ee
			d44: R_386_32	.rodata.str1.1
     d48:	8b 43 38             	mov    0x38(%ebx),%eax
     d4b:	83 c0 0c             	add    $0xc,%eax
     d4e:	50                   	push   %eax
     d4f:	e8 fc ff ff ff       	call   d50 <dm_create+0x357>
			d50: R_386_PC32	sprintf
     d54:	8b 43 38             	mov    0x38(%ebx),%eax
     d57:	e8 fc ff ff ff       	call   d58 <dm_create+0x35f>
			d58: R_386_PC32	add_disk
     d5c:	a1 08 00 00 00       	mov    0x8,%eax
			d5d: R_386_32	.bss
     d61:	c1 e0 14             	shl    $0x14,%eax
     d64:	09 f0                	or     %esi,%eax
     d66:	89 c2                	mov    %eax,%edx
     d68:	81 e2 ff ff 0f 00    	and    $0xfffff,%edx
     d6e:	52                   	push   %edx
     d6f:	c1 e8 14             	shr    $0x14,%eax
     d72:	50                   	push   %eax
     d73:	68 f4 04 00 00       	push   $0x4f4
			d74: R_386_32	.rodata.str1.1
     d78:	8d 43 3c             	lea    0x3c(%ebx),%eax
     d7b:	50                   	push   %eax
     d7c:	e8 fc ff ff ff       	call   d7d <dm_create+0x384>
			d7d: R_386_PC32	sprintf
     d81:	31 c9                	xor    %ecx,%ecx
     d83:	ba 01 00 00 00       	mov    $0x1,%edx
     d88:	b8 fa 04 00 00       	mov    $0x4fa,%eax
			d89: R_386_32	.rodata.str1.1
     d8d:	6a 00                	push   $0x0
     d8f:	6a 00                	push   $0x0
     d91:	6a 00                	push   $0x0
     d93:	e8 fc ff ff ff       	call   d94 <dm_create+0x39b>
			d94: R_386_PC32	__create_workqueue_key
     d98:	83 c4 28             	add    $0x28,%esp
     d9b:	85 c0                	test   %eax,%eax
     d9d:	89 83 84 00 00 00    	mov    %eax,0x84(%ebx)
     da3:	74 44                	je     de9 <dm_create+0x3f0>
     da5:	8b 43 38             	mov    0x38(%ebx),%eax
     da8:	31 d2                	xor    %edx,%edx
     daa:	e8 fc ff ff ff       	call   dab <dm_create+0x3b2>
			dab: R_386_PC32	bdget_disk
     daf:	85 c0                	test   %eax,%eax
     db1:	89 83 bc 00 00 00    	mov    %eax,0xbc(%ebx)
     db7:	74 25                	je     dde <dm_create+0x3e5>
     db9:	b8 0c 00 00 00       	mov    $0xc,%eax
			dba: R_386_32	.bss
     dbe:	e8 fc ff ff ff       	call   dbf <dm_create+0x3c6>
			dbf: R_386_PC32	_spin_lock
     dc3:	89 f1                	mov    %esi,%ecx
     dc5:	89 da                	mov    %ebx,%edx
     dc7:	b8 10 00 00 00       	mov    $0x10,%eax
			dc8: R_386_32	.bss
     dcc:	e8 fc ff ff ff       	call   dcd <dm_create+0x3d4>
			dcd: R_386_PC32	idr_replace
     dd1:	fe 05 0c 00 00 00    	incb   0xc
			dd3: R_386_32	.bss
     dd7:	40                   	inc    %eax
     dd8:	74 59                	je     e33 <dm_create+0x43a>
     dda:	0f 0b                	ud2a   
     ddc:	eb fe                	jmp    ddc <dm_create+0x3e3>
     dde:	8b 83 84 00 00 00    	mov    0x84(%ebx),%eax
     de4:	e8 fc ff ff ff       	call   de5 <dm_create+0x3ec>
			de5: R_386_PC32	destroy_workqueue
     de9:	8b 43 38             	mov    0x38(%ebx),%eax
     dec:	e8 fc ff ff ff       	call   ded <dm_create+0x3f4>
			ded: R_386_PC32	del_gendisk
     df1:	8b 43 38             	mov    0x38(%ebx),%eax
     df4:	e8 fc ff ff ff       	call   df5 <dm_create+0x3fc>
			df5: R_386_PC32	put_disk
     df9:	8b 43 34             	mov    0x34(%ebx),%eax
     dfc:	e8 fc ff ff ff       	call   dfd <dm_create+0x404>
			dfd: R_386_PC32	blk_cleanup_queue
     e01:	89 f0                	mov    %esi,%eax
     e03:	e8 6e fb ff ff       	call   976 <free_minor>
     e08:	b8 00 00 00 00       	mov    $0x0,%eax
			e09: R_386_32	__this_module
     e0d:	e8 fc ff ff ff       	call   e0e <dm_create+0x415>
			e0e: R_386_PC32	module_put
     e12:	89 d8                	mov    %ebx,%eax
     e14:	e8 fc ff ff ff       	call   e15 <dm_create+0x41c>
			e15: R_386_PC32	kfree
     e19:	b8 fa ff ff ff       	mov    $0xfffffffa,%eax
     e1e:	5a                   	pop    %edx
     e1f:	59                   	pop    %ecx
     e20:	5b                   	pop    %ebx
     e21:	5e                   	pop    %esi
     e22:	5f                   	pop    %edi
     e23:	5d                   	pop    %ebp
     e24:	c3                   	ret    
     e25:	83 fe ff             	cmp    $0xffffffff,%esi
     e28:	0f 85 fa fc ff ff    	jne    b28 <dm_create+0x12f>
     e2e:	e9 94 fc ff ff       	jmp    ac7 <dm_create+0xce>
     e33:	89 d8                	mov    %ebx,%eax
     e35:	e8 fc ff ff ff       	call   e36 <dm_create+0x43d>
			e36: R_386_PC32	dm_sysfs_init
     e3a:	8b 04 24             	mov    (%esp),%eax
     e3d:	89 18                	mov    %ebx,(%eax)
     e3f:	31 c0                	xor    %eax,%eax
     e41:	eb db                	jmp    e1e <dm_create+0x425>

00000e43 <dm_rq_bio_constructor>:
     e43:	57                   	push   %edi
     e44:	89 cf                	mov    %ecx,%edi
     e46:	56                   	push   %esi
     e47:	89 d6                	mov    %edx,%esi
     e49:	53                   	push   %ebx
     e4a:	89 c3                	mov    %eax,%ebx
     e4c:	8b 01                	mov    (%ecx),%eax
     e4e:	ba 20 00 00 00       	mov    $0x20,%edx
     e53:	8b 80 8c 00 00 00    	mov    0x8c(%eax),%eax
     e59:	e8 fc ff ff ff       	call   e5a <dm_rq_bio_constructor+0x17>
			e5a: R_386_PC32	mempool_alloc
     e5e:	ba f4 ff ff ff       	mov    $0xfffffff4,%edx
     e63:	85 c0                	test   %eax,%eax
     e65:	74 18                	je     e7f <dm_rq_bio_constructor+0x3c>
     e67:	89 30                	mov    %esi,(%eax)
     e69:	31 d2                	xor    %edx,%edx
     e6b:	89 78 04             	mov    %edi,0x4(%eax)
     e6e:	c7 43 3c 17 14 00 00 	movl   $0x1417,0x3c(%ebx)
			e71: R_386_32	.text
     e75:	89 43 40             	mov    %eax,0x40(%ebx)
     e78:	c7 43 48 94 12 00 00 	movl   $0x1294,0x48(%ebx)
			e7b: R_386_32	.text
     e7f:	89 d0                	mov    %edx,%eax
     e81:	5b                   	pop    %ebx
     e82:	5e                   	pop    %esi
     e83:	5f                   	pop    %edi
     e84:	c3                   	ret    

00000e85 <end_io_acct>:
     e85:	55                   	push   %ebp
     e86:	57                   	push   %edi
     e87:	8b 3d 00 00 00 00    	mov    0x0,%edi
			e89: R_386_32	jiffies
     e8d:	56                   	push   %esi
     e8e:	53                   	push   %ebx
     e8f:	8b 18                	mov    (%eax),%ebx
     e91:	2b 78 10             	sub    0x10(%eax),%edi
     e94:	8b 40 0c             	mov    0xc(%eax),%eax
     e97:	64 8b 2d 00 00 00 00 	mov    %fs:0x0,%ebp
			e9a: R_386_32	per_cpu__cpu_number
     e9e:	8b 53 38             	mov    0x38(%ebx),%edx
     ea1:	8b 70 14             	mov    0x14(%eax),%esi
     ea4:	89 e8                	mov    %ebp,%eax
     ea6:	83 c2 34             	add    $0x34,%edx
     ea9:	e8 fc ff ff ff       	call   eaa <end_io_acct+0x25>
			eaa: R_386_PC32	part_round_stats
     eae:	8b 43 38             	mov    0x38(%ebx),%eax
     eb1:	83 e6 01             	and    $0x1,%esi
     eb4:	8d 56 04             	lea    0x4(%esi),%edx
     eb7:	8b 80 84 01 00 00    	mov    0x184(%eax),%eax
     ebd:	03 04 ad 00 00 00 00 	add    0x0(,%ebp,4),%eax
			ec0: R_386_32	__per_cpu_offset
     ec4:	01 7c 90 08          	add    %edi,0x8(%eax,%edx,4)
     ec8:	8b 43 38             	mov    0x38(%ebx),%eax
     ecb:	83 b8 74 01 00 00 00 	cmpl   $0x0,0x174(%eax)
     ed2:	74 21                	je     ef5 <end_io_acct+0x70>
     ed4:	31 d2                	xor    %edx,%edx
     ed6:	83 f8 cc             	cmp    $0xffffffcc,%eax
     ed9:	74 06                	je     ee1 <end_io_acct+0x5c>
     edb:	8b 50 4c             	mov    0x4c(%eax),%edx
     ede:	83 ea 4c             	sub    $0x4c,%edx
     ee1:	8b 82 84 01 00 00    	mov    0x184(%edx),%eax
     ee7:	8d 56 04             	lea    0x4(%esi),%edx
     eea:	03 04 ad 00 00 00 00 	add    0x0(,%ebp,4),%eax
			eed: R_386_32	__per_cpu_offset
     ef1:	01 7c 90 08          	add    %edi,0x8(%eax,%edx,4)
     ef5:	8d 46 14             	lea    0x14(%esi),%eax
     ef8:	8b 4b 38             	mov    0x38(%ebx),%ecx
     efb:	8d 14 83             	lea    (%ebx,%eax,4),%edx
     efe:	83 c8 ff             	or     $0xffffffff,%eax
     f01:	f0 0f c1 02          	lock xadd %eax,(%edx)
     f05:	8d 56 5c             	lea    0x5c(%esi),%edx
     f08:	83 f6 01             	xor    $0x1,%esi
     f0b:	48                   	dec    %eax
     f0c:	83 c6 14             	add    $0x14,%esi
     f0f:	89 44 91 0c          	mov    %eax,0xc(%ecx,%edx,4)
     f13:	8b 14 b3             	mov    (%ebx,%esi,4),%edx
     f16:	01 d0                	add    %edx,%eax
     f18:	85 c0                	test   %eax,%eax
     f1a:	75 15                	jne    f31 <end_io_acct+0xac>
     f1c:	b9 01 00 00 00       	mov    $0x1,%ecx
     f21:	ba 03 00 00 00       	mov    $0x3,%edx
     f26:	8d 43 58             	lea    0x58(%ebx),%eax
     f29:	6a 00                	push   $0x0
     f2b:	e8 fc ff ff ff       	call   f2c <end_io_acct+0xa7>
			f2c: R_386_PC32	__wake_up
     f30:	59                   	pop    %ecx
     f31:	5b                   	pop    %ebx
     f32:	5e                   	pop    %esi
     f33:	5f                   	pop    %edi
     f34:	5d                   	pop    %ebp
     f35:	c3                   	ret    

00000f36 <dm_bio_destructor>:
     f36:	8b 50 40             	mov    0x40(%eax),%edx
     f39:	e9 fc ff ff ff       	jmp    f3a <dm_bio_destructor+0x4>
			f3a: R_386_PC32	bio_free

00000f3e <clone_bio>:
     f3e:	55                   	push   %ebp
     f3f:	89 c5                	mov    %eax,%ebp
     f41:	57                   	push   %edi
     f42:	56                   	push   %esi
     f43:	89 ce                	mov    %ecx,%esi
     f45:	53                   	push   %ebx
     f46:	89 d3                	mov    %edx,%ebx
     f48:	83 ec 0c             	sub    $0xc,%esp
     f4b:	8b 44 24 20          	mov    0x20(%esp),%eax
     f4f:	8b 4c 24 2c          	mov    0x2c(%esp),%ecx
     f53:	89 44 24 04          	mov    %eax,0x4(%esp)
     f57:	66 89 44 24 02       	mov    %ax,0x2(%esp)
     f5c:	8b 44 24 24          	mov    0x24(%esp),%eax
     f60:	66 89 44 24 0a       	mov    %ax,0xa(%esp)
     f65:	8b 55 2c             	mov    0x2c(%ebp),%edx
     f68:	b8 10 00 00 00       	mov    $0x10,%eax
     f6d:	e8 fc ff ff ff       	call   f6e <clone_bio+0x30>
			f6e: R_386_PC32	bio_alloc_bioset
     f72:	89 ea                	mov    %ebp,%edx
     f74:	89 c7                	mov    %eax,%edi
     f76:	e8 fc ff ff ff       	call   f77 <clone_bio+0x39>
			f77: R_386_PC32	__bio_clone
     f7b:	83 67 14 df          	andl   $0xffffffdf,0x14(%edi)
     f7f:	c7 47 48 36 0f 00 00 	movl   $0xf36,0x48(%edi)
			f82: R_386_32	.text
     f86:	89 1f                	mov    %ebx,(%edi)
     f88:	89 77 04             	mov    %esi,0x4(%edi)
     f8b:	8b 44 24 04          	mov    0x4(%esp),%eax
     f8f:	66 89 47 1a          	mov    %ax,0x1a(%edi)
     f93:	66 8b 44 24 0a       	mov    0xa(%esp),%ax
     f98:	66 03 44 24 02       	add    0x2(%esp),%ax
     f9d:	66 89 47 18          	mov    %ax,0x18(%edi)
     fa1:	8b 44 24 28          	mov    0x28(%esp),%eax
     fa5:	83 67 10 f7          	andl   $0xfffffff7,0x10(%edi)
     fa9:	c1 e0 09             	shl    $0x9,%eax
     fac:	89 47 20             	mov    %eax,0x20(%edi)
     faf:	83 7d 44 00          	cmpl   $0x0,0x44(%ebp)
     fb3:	74 41                	je     ff6 <clone_bio+0xb8>
     fb5:	ff 74 24 2c          	pushl  0x2c(%esp)
     fb9:	b9 10 00 00 00       	mov    $0x10,%ecx
     fbe:	89 ea                	mov    %ebp,%edx
     fc0:	89 f8                	mov    %edi,%eax
     fc2:	e8 fc ff ff ff       	call   fc3 <clone_bio+0x85>
			fc3: R_386_PC32	bio_integrity_clone
     fc7:	5b                   	pop    %ebx
     fc8:	66 8b 44 24 02       	mov    0x2(%esp),%ax
     fcd:	66 3b 45 1a          	cmp    0x1a(%ebp),%ax
     fd1:	75 08                	jne    fdb <clone_bio+0x9d>
     fd3:	8b 47 20             	mov    0x20(%edi),%eax
     fd6:	3b 45 20             	cmp    0x20(%ebp),%eax
     fd9:	73 1b                	jae    ff6 <clone_bio+0xb8>
     fdb:	0f b7 54 24 02       	movzwl 0x2(%esp),%edx
     fe0:	31 c9                	xor    %ecx,%ecx
     fe2:	89 e8                	mov    %ebp,%eax
     fe4:	e8 fc ff ff ff       	call   fe5 <clone_bio+0xa7>
			fe5: R_386_PC32	bio_sector_offset
     fe9:	8b 4c 24 28          	mov    0x28(%esp),%ecx
     fed:	89 c2                	mov    %eax,%edx
     fef:	89 f8                	mov    %edi,%eax
     ff1:	e8 fc ff ff ff       	call   ff2 <clone_bio+0xb4>
			ff2: R_386_PC32	bio_integrity_trim
     ff6:	83 c4 0c             	add    $0xc,%esp
     ff9:	89 f8                	mov    %edi,%eax
     ffb:	5b                   	pop    %ebx
     ffc:	5e                   	pop    %esi
     ffd:	5f                   	pop    %edi
     ffe:	5d                   	pop    %ebp
     fff:	c3                   	ret    

00001000 <dec_pending>:
    1000:	55                   	push   %ebp
    1001:	89 d5                	mov    %edx,%ebp
    1003:	57                   	push   %edi
    1004:	56                   	push   %esi
    1005:	53                   	push   %ebx
    1006:	89 c3                	mov    %eax,%ebx
    1008:	83 ec 08             	sub    $0x8,%esp
    100b:	85 d2                	test   %edx,%edx
    100d:	8b 30                	mov    (%eax),%esi
    100f:	74 22                	je     1033 <dec_pending+0x33>
    1011:	8d 78 14             	lea    0x14(%eax),%edi
    1014:	89 f8                	mov    %edi,%eax
    1016:	e8 fc ff ff ff       	call   1017 <dec_pending+0x17>
			1017: R_386_PC32	_spin_lock_irqsave
    101b:	83 7b 04 00          	cmpl   $0x0,0x4(%ebx)
    101f:	7e 06                	jle    1027 <dec_pending+0x27>
    1021:	f6 46 30 20          	testb  $0x20,0x30(%esi)
    1025:	75 03                	jne    102a <dec_pending+0x2a>
    1027:	89 6b 04             	mov    %ebp,0x4(%ebx)
    102a:	89 c2                	mov    %eax,%edx
    102c:	89 f8                	mov    %edi,%eax
    102e:	e8 fc ff ff ff       	call   102f <dec_pending+0x2f>
			102f: R_386_PC32	_spin_unlock_irqrestore
    1033:	f0 ff 4b 08          	lock decl 0x8(%ebx)
    1037:	0f 94 c0             	sete   %al
    103a:	84 c0                	test   %al,%al
    103c:	0f 84 c3 00 00 00    	je     1105 <dec_pending+0x105>
    1042:	83 7b 04 02          	cmpl   $0x2,0x4(%ebx)
    1046:	75 3d                	jne    1085 <dec_pending+0x85>
    1048:	8d 7e 7c             	lea    0x7c(%esi),%edi
    104b:	89 f8                	mov    %edi,%eax
    104d:	e8 fc ff ff ff       	call   104e <dec_pending+0x4e>
			104e: R_386_PC32	_spin_lock_irqsave
    1052:	f6 46 30 20          	testb  $0x20,0x30(%esi)
    1056:	74 1d                	je     1075 <dec_pending+0x75>
    1058:	8b 4b 0c             	mov    0xc(%ebx),%ecx
    105b:	f6 41 14 20          	testb  $0x20,0x14(%ecx)
    105f:	75 1b                	jne    107c <dec_pending+0x7c>
    1061:	8b 56 74             	mov    0x74(%esi),%edx
    1064:	89 51 08             	mov    %edx,0x8(%ecx)
    1067:	83 7e 78 00          	cmpl   $0x0,0x78(%esi)
    106b:	89 4e 74             	mov    %ecx,0x74(%esi)
    106e:	75 0c                	jne    107c <dec_pending+0x7c>
    1070:	89 4e 78             	mov    %ecx,0x78(%esi)
    1073:	eb 07                	jmp    107c <dec_pending+0x7c>
    1075:	c7 43 04 fb ff ff ff 	movl   $0xfffffffb,0x4(%ebx)
    107c:	89 c2                	mov    %eax,%edx
    107e:	89 f8                	mov    %edi,%eax
    1080:	e8 fc ff ff ff       	call   1081 <dec_pending+0x81>
			1081: R_386_PC32	_spin_unlock_irqrestore
    1085:	8b 43 0c             	mov    0xc(%ebx),%eax
    1088:	8b 6b 04             	mov    0x4(%ebx),%ebp
    108b:	89 04 24             	mov    %eax,(%esp)
    108e:	f6 40 14 20          	testb  $0x20,0x14(%eax)
    1092:	74 1d                	je     10b1 <dec_pending+0xb1>
    1094:	83 fd a1             	cmp    $0xffffffa1,%ebp
    1097:	74 0f                	je     10a8 <dec_pending+0xa8>
    1099:	83 be 80 00 00 00 00 	cmpl   $0x0,0x80(%esi)
    10a0:	75 06                	jne    10a8 <dec_pending+0xa8>
    10a2:	89 ae 80 00 00 00    	mov    %ebp,0x80(%esi)
    10a8:	89 d8                	mov    %ebx,%eax
    10aa:	e8 d6 fd ff ff       	call   e85 <end_io_acct>
    10af:	eb 41                	jmp    10f2 <dec_pending+0xf2>
    10b1:	89 d8                	mov    %ebx,%eax
    10b3:	e8 cd fd ff ff       	call   e85 <end_io_acct>
    10b8:	83 fd 02             	cmp    $0x2,%ebp
    10bb:	74 35                	je     10f2 <dec_pending+0xf2>
    10bd:	8b 46 34             	mov    0x34(%esi),%eax
    10c0:	83 3d 04 00 00 00 00 	cmpl   $0x0,0x4
			10c2: R_386_32	__tracepoint_block_bio_complete
    10c7:	89 44 24 04          	mov    %eax,0x4(%esp)
    10cb:	74 1b                	je     10e8 <dec_pending+0xe8>
    10cd:	8b 3d 10 00 00 00    	mov    0x10,%edi
			10cf: R_386_32	__tracepoint_block_bio_complete
    10d3:	85 ff                	test   %edi,%edi
    10d5:	74 11                	je     10e8 <dec_pending+0xe8>
    10d7:	8b 14 24             	mov    (%esp),%edx
    10da:	8b 44 24 04          	mov    0x4(%esp),%eax
    10de:	ff 17                	call   *(%edi)
    10e0:	83 c7 04             	add    $0x4,%edi
    10e3:	83 3f 00             	cmpl   $0x0,(%edi)
    10e6:	eb ed                	jmp    10d5 <dec_pending+0xd5>
    10e8:	8b 04 24             	mov    (%esp),%eax
    10eb:	89 ea                	mov    %ebp,%edx
    10ed:	e8 fc ff ff ff       	call   10ee <dec_pending+0xee>
			10ee: R_386_PC32	bio_endio
    10f2:	8b 96 8c 00 00 00    	mov    0x8c(%esi),%edx
    10f8:	89 d8                	mov    %ebx,%eax
    10fa:	5d                   	pop    %ebp
    10fb:	59                   	pop    %ecx
    10fc:	5b                   	pop    %ebx
    10fd:	5e                   	pop    %esi
    10fe:	5f                   	pop    %edi
    10ff:	5d                   	pop    %ebp
    1100:	e9 fc ff ff ff       	jmp    1101 <dec_pending+0x101>
			1101: R_386_PC32	mempool_free
    1105:	5e                   	pop    %esi
    1106:	5f                   	pop    %edi
    1107:	5b                   	pop    %ebx
    1108:	5e                   	pop    %esi
    1109:	5f                   	pop    %edi
    110a:	5d                   	pop    %ebp
    110b:	c3                   	ret    

0000110c <__map_bio>:
    110c:	55                   	push   %ebp
    110d:	57                   	push   %edi
    110e:	56                   	push   %esi
    110f:	89 ce                	mov    %ecx,%esi
    1111:	53                   	push   %ebx
    1112:	89 d3                	mov    %edx,%ebx
    1114:	83 ec 10             	sub    $0x10,%esp
    1117:	c7 42 3c f5 11 00 00 	movl   $0x11f5,0x3c(%edx)
			111a: R_386_32	.text
    111e:	89 4b 40             	mov    %ecx,0x40(%ebx)
    1121:	8b 11                	mov    (%ecx),%edx
    1123:	f0 ff 42 08          	lock incl 0x8(%edx)
    1127:	8b 13                	mov    (%ebx),%edx
    1129:	8b 4b 04             	mov    0x4(%ebx),%ecx
    112c:	89 14 24             	mov    %edx,(%esp)
    112f:	89 da                	mov    %ebx,%edx
    1131:	89 4c 24 04          	mov    %ecx,0x4(%esp)
    1135:	8b 68 04             	mov    0x4(%eax),%ebp
    1138:	8d 4e 08             	lea    0x8(%esi),%ecx
    113b:	ff 55 24             	call   *0x24(%ebp)
    113e:	83 f8 01             	cmp    $0x1,%eax
    1141:	89 c2                	mov    %eax,%edx
    1143:	75 5e                	jne    11a3 <__map_bio+0x97>
    1145:	8b 06                	mov    (%esi),%eax
    1147:	83 3d 04 00 00 00 00 	cmpl   $0x0,0x4
			1149: R_386_32	__tracepoint_block_remap
    114e:	8b 40 0c             	mov    0xc(%eax),%eax
    1151:	8b 40 0c             	mov    0xc(%eax),%eax
    1154:	8b 00                	mov    (%eax),%eax
    1156:	89 44 24 0c          	mov    %eax,0xc(%esp)
    115a:	8b 43 0c             	mov    0xc(%ebx),%eax
    115d:	8b 40 50             	mov    0x50(%eax),%eax
    1160:	8b 80 94 01 00 00    	mov    0x194(%eax),%eax
    1166:	89 44 24 08          	mov    %eax,0x8(%esp)
    116a:	74 29                	je     1195 <__map_bio+0x89>
    116c:	8b 35 10 00 00 00    	mov    0x10,%esi
			116e: R_386_32	__tracepoint_block_remap
    1172:	85 f6                	test   %esi,%esi
    1174:	74 1f                	je     1195 <__map_bio+0x89>
    1176:	8b 3c 24             	mov    (%esp),%edi
    1179:	8b 6c 24 04          	mov    0x4(%esp),%ebp
    117d:	55                   	push   %ebp
    117e:	89 da                	mov    %ebx,%edx
    1180:	57                   	push   %edi
    1181:	8b 44 24 10          	mov    0x10(%esp),%eax
    1185:	8b 4c 24 14          	mov    0x14(%esp),%ecx
    1189:	ff 16                	call   *(%esi)
    118b:	83 c6 04             	add    $0x4,%esi
    118e:	83 3e 00             	cmpl   $0x0,(%esi)
    1191:	58                   	pop    %eax
    1192:	5a                   	pop    %edx
    1193:	75 e8                	jne    117d <__map_bio+0x71>
    1195:	83 c4 10             	add    $0x10,%esp
    1198:	89 d8                	mov    %ebx,%eax
    119a:	5b                   	pop    %ebx
    119b:	5e                   	pop    %esi
    119c:	5f                   	pop    %edi
    119d:	5d                   	pop    %ebp
    119e:	e9 fc ff ff ff       	jmp    119f <__map_bio+0x93>
			119f: R_386_PC32	generic_make_request
    11a3:	83 f8 02             	cmp    $0x2,%eax
    11a6:	74 05                	je     11ad <__map_bio+0xa1>
    11a8:	83 f8 00             	cmp    $0x0,%eax
    11ab:	7d 2d                	jge    11da <__map_bio+0xce>
    11ad:	8b 06                	mov    (%esi),%eax
    11af:	8b 38                	mov    (%eax),%edi
    11b1:	e8 4a fe ff ff       	call   1000 <dec_pending>
    11b6:	8b 87 94 00 00 00    	mov    0x94(%edi),%eax
    11bc:	89 43 40             	mov    %eax,0x40(%ebx)
    11bf:	89 d8                	mov    %ebx,%eax
    11c1:	e8 fc ff ff ff       	call   11c2 <__map_bio+0xb6>
			11c2: R_386_PC32	bio_put
    11c6:	8b 97 90 00 00 00    	mov    0x90(%edi),%edx
    11cc:	89 f0                	mov    %esi,%eax
    11ce:	83 c4 10             	add    $0x10,%esp
    11d1:	5b                   	pop    %ebx
    11d2:	5e                   	pop    %esi
    11d3:	5f                   	pop    %edi
    11d4:	5d                   	pop    %ebp
    11d5:	e9 fc ff ff ff       	jmp    11d6 <__map_bio+0xca>
			11d6: R_386_PC32	mempool_free
    11da:	74 11                	je     11ed <__map_bio+0xe1>
    11dc:	50                   	push   %eax
    11dd:	68 03 05 00 00       	push   $0x503
			11de: R_386_32	.rodata.str1.1
    11e2:	e8 fc ff ff ff       	call   11e3 <__map_bio+0xd7>
			11e3: R_386_PC32	printk
    11e7:	0f 0b                	ud2a   
    11e9:	5b                   	pop    %ebx
    11ea:	5e                   	pop    %esi
    11eb:	eb fe                	jmp    11eb <__map_bio+0xdf>
    11ed:	83 c4 10             	add    $0x10,%esp
    11f0:	5b                   	pop    %ebx
    11f1:	5e                   	pop    %esi
    11f2:	5f                   	pop    %edi
    11f3:	5d                   	pop    %ebp
    11f4:	c3                   	ret    

000011f5 <clone_endio>:
    11f5:	55                   	push   %ebp
    11f6:	57                   	push   %edi
    11f7:	56                   	push   %esi
    11f8:	89 c6                	mov    %eax,%esi
    11fa:	53                   	push   %ebx
    11fb:	89 d3                	mov    %edx,%ebx
    11fd:	83 ec 08             	sub    $0x8,%esp
    1200:	8b 78 40             	mov    0x40(%eax),%edi
    1203:	85 db                	test   %ebx,%ebx
    1205:	8b 07                	mov    (%edi),%eax
    1207:	89 44 24 04          	mov    %eax,0x4(%esp)
    120b:	8b 28                	mov    (%eax),%ebp
    120d:	8b 47 04             	mov    0x4(%edi),%eax
    1210:	8b 50 04             	mov    0x4(%eax),%edx
    1213:	8b 52 2c             	mov    0x2c(%edx),%edx
    1216:	89 14 24             	mov    %edx,(%esp)
    1219:	75 0c                	jne    1227 <clone_endio+0x32>
    121b:	f6 46 10 01          	testb  $0x1,0x10(%esi)
    121f:	ba fb ff ff ff       	mov    $0xfffffffb,%edx
    1224:	0f 44 da             	cmove  %edx,%ebx
    1227:	83 3c 24 00          	cmpl   $0x0,(%esp)
    122b:	74 32                	je     125f <clone_endio+0x6a>
    122d:	8d 57 08             	lea    0x8(%edi),%edx
    1230:	89 d9                	mov    %ebx,%ecx
    1232:	52                   	push   %edx
    1233:	89 f2                	mov    %esi,%edx
    1235:	ff 54 24 04          	call   *0x4(%esp)
    1239:	5a                   	pop    %edx
    123a:	83 f8 02             	cmp    $0x2,%eax
    123d:	74 1e                	je     125d <clone_endio+0x68>
    123f:	85 c0                	test   %eax,%eax
    1241:	78 1a                	js     125d <clone_endio+0x68>
    1243:	83 f8 01             	cmp    $0x1,%eax
    1246:	74 45                	je     128d <clone_endio+0x98>
    1248:	85 c0                	test   %eax,%eax
    124a:	74 13                	je     125f <clone_endio+0x6a>
    124c:	50                   	push   %eax
    124d:	68 46 05 00 00       	push   $0x546
			124e: R_386_32	.rodata.str1.1
    1252:	e8 fc ff ff ff       	call   1253 <clone_endio+0x5e>
			1253: R_386_PC32	printk
    1257:	0f 0b                	ud2a   
    1259:	5d                   	pop    %ebp
    125a:	58                   	pop    %eax
    125b:	eb fe                	jmp    125b <clone_endio+0x66>
    125d:	89 c3                	mov    %eax,%ebx
    125f:	8b 85 94 00 00 00    	mov    0x94(%ebp),%eax
    1265:	89 46 40             	mov    %eax,0x40(%esi)
    1268:	8b 95 90 00 00 00    	mov    0x90(%ebp),%edx
    126e:	89 f8                	mov    %edi,%eax
    1270:	e8 fc ff ff ff       	call   1271 <clone_endio+0x7c>
			1271: R_386_PC32	mempool_free
    1275:	89 f0                	mov    %esi,%eax
    1277:	e8 fc ff ff ff       	call   1278 <clone_endio+0x83>
			1278: R_386_PC32	bio_put
    127c:	89 da                	mov    %ebx,%edx
    127e:	8b 44 24 04          	mov    0x4(%esp),%eax
    1282:	5e                   	pop    %esi
    1283:	5f                   	pop    %edi
    1284:	5b                   	pop    %ebx
    1285:	5e                   	pop    %esi
    1286:	5f                   	pop    %edi
    1287:	5d                   	pop    %ebp
    1288:	e9 73 fd ff ff       	jmp    1000 <dec_pending>
    128d:	59                   	pop    %ecx
    128e:	5b                   	pop    %ebx
    128f:	5b                   	pop    %ebx
    1290:	5e                   	pop    %esi
    1291:	5f                   	pop    %edi
    1292:	5d                   	pop    %ebp
    1293:	c3                   	ret    

00001294 <dm_rq_bio_destructor>:
    1294:	56                   	push   %esi
    1295:	53                   	push   %ebx
    1296:	89 c3                	mov    %eax,%ebx
    1298:	8b 40 40             	mov    0x40(%eax),%eax
    129b:	8b 50 04             	mov    0x4(%eax),%edx
    129e:	8b 32                	mov    (%edx),%esi
    12a0:	8b 96 8c 00 00 00    	mov    0x8c(%esi),%edx
    12a6:	e8 fc ff ff ff       	call   12a7 <dm_rq_bio_destructor+0x13>
			12a7: R_386_PC32	mempool_free
    12ab:	8b 96 94 00 00 00    	mov    0x94(%esi),%edx
    12b1:	89 d8                	mov    %ebx,%eax
    12b3:	5b                   	pop    %ebx
    12b4:	5e                   	pop    %esi
    12b5:	e9 fc ff ff ff       	jmp    12b6 <dm_rq_bio_destructor+0x22>
			12b6: R_386_PC32	bio_free

000012ba <dm_prep_fn>:
    12ba:	57                   	push   %edi
    12bb:	56                   	push   %esi
    12bc:	89 d6                	mov    %edx,%esi
    12be:	53                   	push   %ebx
    12bf:	8b b8 a8 01 00 00    	mov    0x1a8(%eax),%edi
    12c5:	8d 87 c8 00 00 00    	lea    0xc8(%edi),%eax
    12cb:	39 c2                	cmp    %eax,%edx
    12cd:	75 11                	jne    12e0 <dm_prep_fn+0x26>
    12cf:	31 c0                	xor    %eax,%eax
    12d1:	83 bf 34 01 00 00 00 	cmpl   $0x0,0x134(%edi)
    12d8:	0f 95 c0             	setne  %al
    12db:	e9 df 00 00 00       	jmp    13bf <dm_prep_fn+0x105>
    12e0:	83 7a 6c 00          	cmpl   $0x0,0x6c(%edx)
    12e4:	74 15                	je     12fb <dm_prep_fn+0x41>
    12e6:	68 8b 05 00 00       	push   $0x58b
			12e7: R_386_32	.rodata.str1.1
    12eb:	e8 fc ff ff ff       	call   12ec <dm_prep_fn+0x32>
			12ec: R_386_PC32	printk
    12f0:	b8 01 00 00 00       	mov    $0x1,%eax
    12f5:	59                   	pop    %ecx
    12f6:	e9 c4 00 00 00       	jmp    13bf <dm_prep_fn+0x105>
    12fb:	8b 87 90 00 00 00    	mov    0x90(%edi),%eax
    1301:	ba 20 00 00 00       	mov    $0x20,%edx
    1306:	e8 fc ff ff ff       	call   1307 <dm_prep_fn+0x4d>
			1307: R_386_PC32	mempool_alloc
    130b:	89 c3                	mov    %eax,%ebx
    130d:	b8 02 00 00 00       	mov    $0x2,%eax
    1312:	85 db                	test   %ebx,%ebx
    1314:	0f 84 a5 00 00 00    	je     13bf <dm_prep_fn+0x105>
    131a:	89 3b                	mov    %edi,(%ebx)
    131c:	b9 02 00 00 00       	mov    $0x2,%ecx
    1321:	30 c0                	xor    %al,%al
    1323:	c7 43 04 00 00 00 00 	movl   $0x0,0x4(%ebx)
    132a:	8d bb d8 00 00 00    	lea    0xd8(%ebx),%edi
    1330:	89 73 08             	mov    %esi,0x8(%ebx)
    1333:	c7 83 d4 00 00 00 00 	movl   $0x0,0xd4(%ebx)
    133a:	00 00 00 
    133d:	f3 ab                	rep stos %eax,%es:(%edi)
    133f:	8b 03                	mov    (%ebx),%eax
    1341:	8d 7b 0c             	lea    0xc(%ebx),%edi
    1344:	89 f2                	mov    %esi,%edx
    1346:	8b 88 94 00 00 00    	mov    0x94(%eax),%ecx
    134c:	89 f8                	mov    %edi,%eax
    134e:	53                   	push   %ebx
    134f:	68 43 0e 00 00       	push   $0xe43
			1350: R_386_32	.text
    1354:	6a 20                	push   $0x20
    1356:	e8 fc ff ff ff       	call   1357 <dm_prep_fn+0x9d>
			1357: R_386_PC32	blk_rq_prep_clone
    135b:	83 c4 0c             	add    $0xc,%esp
    135e:	85 c0                	test   %eax,%eax
    1360:	75 49                	jne    13ab <dm_prep_fn+0xf1>
    1362:	8b 86 94 00 00 00    	mov    0x94(%esi),%eax
    1368:	89 83 a0 00 00 00    	mov    %eax,0xa0(%ebx)
    136e:	8b 86 80 00 00 00    	mov    0x80(%esi),%eax
    1374:	66 89 83 8c 00 00 00 	mov    %ax,0x8c(%ebx)
    137b:	8b 86 a4 00 00 00    	mov    0xa4(%esi),%eax
    1381:	89 83 b0 00 00 00    	mov    %eax,0xb0(%ebx)
    1387:	8b 46 70             	mov    0x70(%esi),%eax
    138a:	c7 83 c8 00 00 00 c3 	movl   $0x13c3,0xc8(%ebx)
    1391:	13 00 00 
			1390: R_386_32	.text
    1394:	89 9b cc 00 00 00    	mov    %ebx,0xcc(%ebx)
    139a:	89 43 7c             	mov    %eax,0x7c(%ebx)
    139d:	31 c0                	xor    %eax,%eax
    139f:	89 7e 6c             	mov    %edi,0x6c(%esi)
    13a2:	81 4e 24 00 08 00 00 	orl    $0x800,0x24(%esi)
    13a9:	eb 14                	jmp    13bf <dm_prep_fn+0x105>
    13ab:	8b 03                	mov    (%ebx),%eax
    13ad:	8b 90 90 00 00 00    	mov    0x90(%eax),%edx
    13b3:	89 d8                	mov    %ebx,%eax
    13b5:	e8 fc ff ff ff       	call   13b6 <dm_prep_fn+0xfc>
			13b6: R_386_PC32	mempool_free
    13ba:	b8 02 00 00 00       	mov    $0x2,%eax
    13bf:	5b                   	pop    %ebx
    13c0:	5e                   	pop    %esi
    13c1:	5f                   	pop    %edi
    13c2:	c3                   	ret    

000013c3 <end_clone_request>:
    13c3:	56                   	push   %esi
    13c4:	89 d6                	mov    %edx,%esi
    13c6:	53                   	push   %ebx
    13c7:	89 c3                	mov    %eax,%ebx
    13c9:	8b 40 20             	mov    0x20(%eax),%eax
    13cc:	89 da                	mov    %ebx,%edx
    13ce:	e8 fc ff ff ff       	call   13cf <end_clone_request+0xc>
			13cf: R_386_PC32	__blk_put_request
    13d3:	8b 93 c0 00 00 00    	mov    0xc0(%ebx),%edx
    13d9:	8b 42 08             	mov    0x8(%edx),%eax
    13dc:	89 b2 d4 00 00 00    	mov    %esi,0xd4(%edx)
    13e2:	89 58 4c             	mov    %ebx,0x4c(%eax)
    13e5:	5b                   	pop    %ebx
    13e6:	5e                   	pop    %esi
    13e7:	e9 fc ff ff ff       	jmp    13e8 <end_clone_request+0x25>
			13e8: R_386_PC32	blk_complete_request

000013ec <dm_kill_unmapped_request>:
    13ec:	53                   	push   %ebx
    13ed:	8b 88 c0 00 00 00    	mov    0xc0(%eax),%ecx
    13f3:	8b 49 08             	mov    0x8(%ecx),%ecx
    13f6:	81 49 24 00 40 00 00 	orl    $0x4000,0x24(%ecx)
    13fd:	8b 98 c0 00 00 00    	mov    0xc0(%eax),%ebx
    1403:	8b 4b 08             	mov    0x8(%ebx),%ecx
    1406:	89 93 d4 00 00 00    	mov    %edx,0xd4(%ebx)
    140c:	89 41 4c             	mov    %eax,0x4c(%ecx)
    140f:	89 c8                	mov    %ecx,%eax
    1411:	5b                   	pop    %ebx
    1412:	e9 fc ff ff ff       	jmp    1413 <dm_kill_unmapped_request+0x27>
			1413: R_386_PC32	blk_complete_request

00001417 <end_clone_bio>:
    1417:	55                   	push   %ebp
    1418:	57                   	push   %edi
    1419:	89 d7                	mov    %edx,%edi
    141b:	56                   	push   %esi
    141c:	53                   	push   %ebx
    141d:	8b 50 40             	mov    0x40(%eax),%edx
    1420:	8b 5a 04             	mov    0x4(%edx),%ebx
    1423:	8b 32                	mov    (%edx),%esi
    1425:	8b 6e 20             	mov    0x20(%esi),%ebp
    1428:	e8 fc ff ff ff       	call   1429 <end_clone_bio+0x12>
			1429: R_386_PC32	bio_put
    142d:	83 bb d4 00 00 00 00 	cmpl   $0x0,0xd4(%ebx)
    1434:	75 2f                	jne    1465 <end_clone_bio+0x4e>
    1436:	85 ff                	test   %edi,%edi
    1438:	74 08                	je     1442 <end_clone_bio+0x2b>
    143a:	89 bb d4 00 00 00    	mov    %edi,0xd4(%ebx)
    1440:	eb 23                	jmp    1465 <end_clone_bio+0x4e>
    1442:	8b 43 08             	mov    0x8(%ebx),%eax
    1445:	39 70 3c             	cmp    %esi,0x3c(%eax)
    1448:	74 0b                	je     1455 <end_clone_bio+0x3e>
    144a:	68 ca 05 00 00       	push   $0x5ca
			144b: R_386_32	.rodata.str1.1
    144f:	e8 fc ff ff ff       	call   1450 <end_clone_bio+0x39>
			1450: R_386_PC32	printk
    1454:	5e                   	pop    %esi
    1455:	8b 43 08             	mov    0x8(%ebx),%eax
    1458:	89 e9                	mov    %ebp,%ecx
    145a:	31 d2                	xor    %edx,%edx
    145c:	5b                   	pop    %ebx
    145d:	5e                   	pop    %esi
    145e:	5f                   	pop    %edi
    145f:	5d                   	pop    %ebp
    1460:	e9 fc ff ff ff       	jmp    1461 <end_clone_bio+0x4a>
			1461: R_386_PC32	blk_update_request
    1465:	5b                   	pop    %ebx
    1466:	5e                   	pop    %esi
    1467:	5f                   	pop    %edi
    1468:	5d                   	pop    %ebp
    1469:	c3                   	ret    

0000146a <free_rq_clone>:
    146a:	53                   	push   %ebx
    146b:	8b 98 c0 00 00 00    	mov    0xc0(%eax),%ebx
    1471:	e8 fc ff ff ff       	call   1472 <free_rq_clone+0x8>
			1472: R_386_PC32	blk_rq_unprep_clone
    1476:	8b 03                	mov    (%ebx),%eax
    1478:	8b 90 90 00 00 00    	mov    0x90(%eax),%edx
    147e:	89 d8                	mov    %ebx,%eax
    1480:	5b                   	pop    %ebx
    1481:	e9 fc ff ff ff       	jmp    1482 <free_rq_clone+0x18>
			1482: R_386_PC32	mempool_free

00001486 <dm_underlying_device_busy>:
    1486:	e9 fc ff ff ff       	jmp    1487 <dm_underlying_device_busy+0x1>
			1487: R_386_PC32	blk_lld_busy

0000148b <dm_dispatch_request>:
    148b:	53                   	push   %ebx
    148c:	89 c3                	mov    %eax,%ebx
    148e:	8b 40 20             	mov    0x20(%eax),%eax
    1491:	66 83 b8 b0 01 00 00 	cmpw   $0x0,0x1b0(%eax)
    1498:	00 
    1499:	79 07                	jns    14a2 <dm_dispatch_request+0x17>
    149b:	81 4b 24 00 00 00 01 	orl    $0x1000000,0x24(%ebx)
    14a2:	a1 00 00 00 00       	mov    0x0,%eax
			14a3: R_386_32	jiffies
    14a7:	89 da                	mov    %ebx,%edx
    14a9:	89 43 64             	mov    %eax,0x64(%ebx)
    14ac:	8b 43 20             	mov    0x20(%ebx),%eax
    14af:	e8 fc ff ff ff       	call   14b0 <dm_dispatch_request+0x25>
			14b0: R_386_PC32	blk_insert_cloned_request
    14b4:	85 c0                	test   %eax,%eax
    14b6:	89 c1                	mov    %eax,%ecx
    14b8:	74 18                	je     14d2 <dm_dispatch_request+0x47>
    14ba:	8b 93 c0 00 00 00    	mov    0xc0(%ebx),%edx
    14c0:	8b 42 08             	mov    0x8(%edx),%eax
    14c3:	89 8a d4 00 00 00    	mov    %ecx,0xd4(%edx)
    14c9:	89 58 4c             	mov    %ebx,0x4c(%eax)
    14cc:	5b                   	pop    %ebx
    14cd:	e9 fc ff ff ff       	jmp    14ce <dm_dispatch_request+0x43>
			14ce: R_386_PC32	blk_complete_request
    14d2:	5b                   	pop    %ebx
    14d3:	c3                   	ret    

000014d4 <dm_get_table>:
    14d4:	57                   	push   %edi
    14d5:	56                   	push   %esi
    14d6:	8d 70 24             	lea    0x24(%eax),%esi
    14d9:	53                   	push   %ebx
    14da:	89 c3                	mov    %eax,%ebx
    14dc:	89 f0                	mov    %esi,%eax
    14de:	e8 fc ff ff ff       	call   14df <dm_get_table+0xb>
			14df: R_386_PC32	_read_lock_irqsave
    14e3:	8b 9b 88 00 00 00    	mov    0x88(%ebx),%ebx
    14e9:	85 db                	test   %ebx,%ebx
    14eb:	89 c7                	mov    %eax,%edi
    14ed:	74 07                	je     14f6 <dm_get_table+0x22>
    14ef:	89 d8                	mov    %ebx,%eax
    14f1:	e8 fc ff ff ff       	call   14f2 <dm_get_table+0x1e>
			14f2: R_386_PC32	dm_table_get
    14f6:	89 f0                	mov    %esi,%eax
    14f8:	89 fa                	mov    %edi,%edx
    14fa:	e8 fc ff ff ff       	call   14fb <dm_get_table+0x27>
			14fb: R_386_PC32	_read_unlock_irqrestore
    14ff:	89 d8                	mov    %ebx,%eax
    1501:	5b                   	pop    %ebx
    1502:	5e                   	pop    %esi
    1503:	5f                   	pop    %edi
    1504:	c3                   	ret    

00001505 <dm_resume>:
    1505:	55                   	push   %ebp
    1506:	57                   	push   %edi
    1507:	56                   	push   %esi
    1508:	53                   	push   %ebx
    1509:	89 c3                	mov    %eax,%ebx
    150b:	8d 68 10             	lea    0x10(%eax),%ebp
    150e:	83 ec 08             	sub    $0x8,%esp
    1511:	89 e8                	mov    %ebp,%eax
    1513:	e8 fc ff ff ff       	call   1514 <dm_resume+0xf>
			1514: R_386_PC32	mutex_lock
    1518:	f6 43 30 02          	testb  $0x2,0x30(%ebx)
    151c:	75 07                	jne    1525 <dm_resume+0x20>
    151e:	31 f6                	xor    %esi,%esi
    1520:	e9 92 00 00 00       	jmp    15b7 <dm_resume+0xb2>
    1525:	89 d8                	mov    %ebx,%eax
    1527:	e8 fc ff ff ff       	call   1528 <dm_resume+0x23>
			1528: R_386_PC32	dm_get_table
    152c:	85 c0                	test   %eax,%eax
    152e:	89 c6                	mov    %eax,%esi
    1530:	0f 84 81 00 00 00    	je     15b7 <dm_resume+0xb2>
    1536:	e8 fc ff ff ff       	call   1537 <dm_resume+0x32>
			1537: R_386_PC32	dm_table_get_size
    153b:	09 c2                	or     %eax,%edx
    153d:	74 78                	je     15b7 <dm_resume+0xb2>
    153f:	89 f0                	mov    %esi,%eax
    1541:	e8 fc ff ff ff       	call   1542 <dm_resume+0x3d>
			1542: R_386_PC32	dm_table_resume_targets
    1546:	85 c0                	test   %eax,%eax
    1548:	89 c7                	mov    %eax,%edi
    154a:	75 70                	jne    15bc <dm_resume+0xb7>
    154c:	f0 80 63 30 fe       	lock andb $0xfe,0x30(%ebx)
    1551:	8b 83 84 00 00 00    	mov    0x84(%ebx),%eax
    1557:	8d 53 64             	lea    0x64(%ebx),%edx
    155a:	e8 fc ff ff ff       	call   155b <dm_resume+0x56>
			155b: R_386_PC32	queue_work
    155f:	8b 53 34             	mov    0x34(%ebx),%edx
    1562:	f6 82 b1 01 00 00 20 	testb  $0x20,0x1b1(%edx)
    1569:	74 37                	je     15a2 <dm_resume+0x9d>
    156b:	8b 82 b8 01 00 00    	mov    0x1b8(%edx),%eax
    1571:	89 14 24             	mov    %edx,(%esp)
    1574:	e8 fc ff ff ff       	call   1575 <dm_resume+0x70>
			1575: R_386_PC32	_spin_lock_irqsave
    1579:	8b 14 24             	mov    (%esp),%edx
    157c:	89 44 24 04          	mov    %eax,0x4(%esp)
    1580:	f6 82 b0 01 00 00 04 	testb  $0x4,0x1b0(%edx)
    1587:	74 0a                	je     1593 <dm_resume+0x8e>
    1589:	89 d0                	mov    %edx,%eax
    158b:	e8 fc ff ff ff       	call   158c <dm_resume+0x87>
			158c: R_386_PC32	blk_start_queue
    1590:	8b 14 24             	mov    (%esp),%edx
    1593:	8b 82 b8 01 00 00    	mov    0x1b8(%edx),%eax
    1599:	8b 54 24 04          	mov    0x4(%esp),%edx
    159d:	e8 fc ff ff ff       	call   159e <dm_resume+0x99>
			159e: R_386_PC32	_spin_unlock_irqrestore
    15a2:	89 d8                	mov    %ebx,%eax
    15a4:	e8 36 f0 ff ff       	call   5df <unlock_fs>
    15a9:	f0 80 63 30 fd       	lock andb $0xfd,0x30(%ebx)
    15ae:	89 f0                	mov    %esi,%eax
    15b0:	e8 fc ff ff ff       	call   15b1 <dm_resume+0xac>
			15b1: R_386_PC32	dm_table_unplug_all
    15b5:	eb 05                	jmp    15bc <dm_resume+0xb7>
    15b7:	bf ea ff ff ff       	mov    $0xffffffea,%edi
    15bc:	89 f0                	mov    %esi,%eax
    15be:	e8 fc ff ff ff       	call   15bf <dm_resume+0xba>
			15bf: R_386_PC32	dm_table_put
    15c3:	89 e8                	mov    %ebp,%eax
    15c5:	e8 fc ff ff ff       	call   15c6 <dm_resume+0xc1>
			15c6: R_386_PC32	mutex_unlock
    15ca:	89 f8                	mov    %edi,%eax
    15cc:	5f                   	pop    %edi
    15cd:	5d                   	pop    %ebp
    15ce:	5b                   	pop    %ebx
    15cf:	5e                   	pop    %esi
    15d0:	5f                   	pop    %edi
    15d1:	5d                   	pop    %ebp
    15d2:	c3                   	ret    

000015d3 <dm_unplug_all>:
    15d3:	57                   	push   %edi
    15d4:	56                   	push   %esi
    15d5:	89 c6                	mov    %eax,%esi
    15d7:	53                   	push   %ebx
    15d8:	8b b8 a8 01 00 00    	mov    0x1a8(%eax),%edi
    15de:	89 f8                	mov    %edi,%eax
    15e0:	e8 fc ff ff ff       	call   15e1 <dm_unplug_all+0xe>
			15e1: R_386_PC32	dm_get_table
    15e5:	85 c0                	test   %eax,%eax
    15e7:	89 c3                	mov    %eax,%ebx
    15e9:	74 24                	je     160f <dm_unplug_all+0x3c>
    15eb:	8b 47 34             	mov    0x34(%edi),%eax
    15ee:	f6 80 b1 01 00 00 20 	testb  $0x20,0x1b1(%eax)
    15f5:	74 07                	je     15fe <dm_unplug_all+0x2b>
    15f7:	89 f0                	mov    %esi,%eax
    15f9:	e8 fc ff ff ff       	call   15fa <dm_unplug_all+0x27>
			15fa: R_386_PC32	generic_unplug_device
    15fe:	89 d8                	mov    %ebx,%eax
    1600:	e8 fc ff ff ff       	call   1601 <dm_unplug_all+0x2e>
			1601: R_386_PC32	dm_table_unplug_all
    1605:	89 d8                	mov    %ebx,%eax
    1607:	5b                   	pop    %ebx
    1608:	5e                   	pop    %esi
    1609:	5f                   	pop    %edi
    160a:	e9 fc ff ff ff       	jmp    160b <dm_unplug_all+0x38>
			160b: R_386_PC32	dm_table_put
    160f:	5b                   	pop    %ebx
    1610:	5e                   	pop    %esi
    1611:	5f                   	pop    %edi
    1612:	c3                   	ret    

00001613 <dm_wait_for_completion>:
    1613:	55                   	push   %ebp
    1614:	b9 05 00 00 00       	mov    $0x5,%ecx
    1619:	57                   	push   %edi
    161a:	56                   	push   %esi
    161b:	53                   	push   %ebx
    161c:	89 c3                	mov    %eax,%ebx
    161e:	83 ec 1c             	sub    $0x1c,%esp
    1621:	31 c0                	xor    %eax,%eax
    1623:	8d 7c 24 08          	lea    0x8(%esp),%edi
    1627:	f3 ab                	rep stos %eax,%es:(%edi)
    1629:	89 54 24 04          	mov    %edx,0x4(%esp)
    162d:	64 8b 2d 00 00 00 00 	mov    %fs:0x0,%ebp
			1630: R_386_32	per_cpu__current_task
    1634:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
    163b:	00 
			1638: R_386_32	default_wake_function
    163c:	89 ee                	mov    %ebp,%esi
    163e:	89 6c 24 0c          	mov    %ebp,0xc(%esp)
    1642:	8b 7b 34             	mov    0x34(%ebx),%edi
    1645:	89 f8                	mov    %edi,%eax
    1647:	e8 87 ff ff ff       	call   15d3 <dm_unplug_all>
    164c:	8d 43 58             	lea    0x58(%ebx),%eax
    164f:	8d 54 24 08          	lea    0x8(%esp),%edx
    1653:	89 04 24             	mov    %eax,(%esp)
    1656:	e8 fc ff ff ff       	call   1657 <dm_wait_for_completion+0x44>
			1657: R_386_PC32	add_wait_queue
    165b:	8b 44 24 04          	mov    0x4(%esp),%eax
    165f:	87 45 00             	xchg   %eax,0x0(%ebp)
    1662:	f0 83 04 24 00       	lock addl $0x0,(%esp)
    1667:	8b 43 34             	mov    0x34(%ebx),%eax
    166a:	f6 80 b1 01 00 00 20 	testb  $0x20,0x1b1(%eax)
    1671:	74 40                	je     16b3 <dm_wait_for_completion+0xa0>
    1673:	8b 87 b8 01 00 00    	mov    0x1b8(%edi),%eax
    1679:	e8 fc ff ff ff       	call   167a <dm_wait_for_completion+0x67>
			167a: R_386_PC32	_spin_lock_irqsave
    167e:	89 c2                	mov    %eax,%edx
    1680:	8b 87 14 02 00 00    	mov    0x214(%edi),%eax
    1686:	03 87 10 02 00 00    	add    0x210(%edi),%eax
    168c:	85 c0                	test   %eax,%eax
    168e:	75 16                	jne    16a6 <dm_wait_for_completion+0x93>
    1690:	f6 87 b0 01 00 00 04 	testb  $0x4,0x1b0(%edi)
    1697:	74 0d                	je     16a6 <dm_wait_for_completion+0x93>
    1699:	8b 87 b8 01 00 00    	mov    0x1b8(%edi),%eax
    169f:	e8 fc ff ff ff       	call   16a0 <dm_wait_for_completion+0x8d>
			16a0: R_386_PC32	_spin_unlock_irqrestore
    16a4:	eb 3c                	jmp    16e2 <dm_wait_for_completion+0xcf>
    16a6:	8b 87 b8 01 00 00    	mov    0x1b8(%edi),%eax
    16ac:	e8 fc ff ff ff       	call   16ad <dm_wait_for_completion+0x9a>
			16ad: R_386_PC32	_spin_unlock_irqrestore
    16b1:	eb 0e                	jmp    16c1 <dm_wait_for_completion+0xae>
    16b3:	8b 43 50             	mov    0x50(%ebx),%eax
    16b6:	85 c0                	test   %eax,%eax
    16b8:	75 07                	jne    16c1 <dm_wait_for_completion+0xae>
    16ba:	8b 43 54             	mov    0x54(%ebx),%eax
    16bd:	85 c0                	test   %eax,%eax
    16bf:	74 21                	je     16e2 <dm_wait_for_completion+0xcf>
    16c1:	83 7c 24 04 01       	cmpl   $0x1,0x4(%esp)
    16c6:	75 10                	jne    16d8 <dm_wait_for_completion+0xc5>
    16c8:	8b 46 04             	mov    0x4(%esi),%eax
    16cb:	f6 40 08 04          	testb  $0x4,0x8(%eax)
    16cf:	74 07                	je     16d8 <dm_wait_for_completion+0xc5>
    16d1:	bb fc ff ff ff       	mov    $0xfffffffc,%ebx
    16d6:	eb 0c                	jmp    16e4 <dm_wait_for_completion+0xd1>
    16d8:	e8 fc ff ff ff       	call   16d9 <dm_wait_for_completion+0xc6>
			16d9: R_386_PC32	io_schedule
    16dd:	e9 79 ff ff ff       	jmp    165b <dm_wait_for_completion+0x48>
    16e2:	31 db                	xor    %ebx,%ebx
    16e4:	64 8b 15 00 00 00 00 	mov    %fs:0x0,%edx
			16e7: R_386_32	per_cpu__current_task
    16eb:	31 c0                	xor    %eax,%eax
    16ed:	87 02                	xchg   %eax,(%edx)
    16ef:	8b 04 24             	mov    (%esp),%eax
    16f2:	8d 54 24 08          	lea    0x8(%esp),%edx
    16f6:	e8 fc ff ff ff       	call   16f7 <dm_wait_for_completion+0xe4>
			16f7: R_386_PC32	remove_wait_queue
    16fb:	89 d8                	mov    %ebx,%eax
    16fd:	83 c4 1c             	add    $0x1c,%esp
    1700:	5b                   	pop    %ebx
    1701:	5e                   	pop    %esi
    1702:	5f                   	pop    %edi
    1703:	5d                   	pop    %ebp
    1704:	c3                   	ret    

00001705 <dm_suspend>:
    1705:	55                   	push   %ebp
    1706:	57                   	push   %edi
    1707:	bf ea ff ff ff       	mov    $0xffffffea,%edi
    170c:	56                   	push   %esi
    170d:	53                   	push   %ebx
    170e:	89 c3                	mov    %eax,%ebx
    1710:	83 ec 14             	sub    $0x14,%esp
    1713:	8d 40 10             	lea    0x10(%eax),%eax
    1716:	89 54 24 10          	mov    %edx,0x10(%esp)
    171a:	89 44 24 0c          	mov    %eax,0xc(%esp)
    171e:	e8 fc ff ff ff       	call   171f <dm_suspend+0x1a>
			171f: R_386_PC32	mutex_lock
    1723:	f6 43 30 02          	testb  $0x2,0x30(%ebx)
    1727:	0f 85 e6 01 00 00    	jne    1913 <dm_suspend+0x20e>
    172d:	8b 74 24 10          	mov    0x10(%esp),%esi
    1731:	8b 7b 34             	mov    0x34(%ebx),%edi
    1734:	d1 ee                	shr    %esi
    1736:	83 e6 01             	and    $0x1,%esi
    1739:	f6 87 b1 01 00 00 20 	testb  $0x20,0x1b1(%edi)
    1740:	74 58                	je     179a <dm_suspend+0x95>
    1742:	85 f6                	test   %esi,%esi
    1744:	75 54                	jne    179a <dm_suspend+0x95>
    1746:	8b 87 b8 01 00 00    	mov    0x1b8(%edi),%eax
    174c:	bd 01 00 00 00       	mov    $0x1,%ebp
    1751:	e8 fc ff ff ff       	call   1752 <dm_suspend+0x4d>
			1752: R_386_PC32	_spin_lock_irqsave
    1756:	83 bb 44 01 00 00 00 	cmpl   $0x0,0x144(%ebx)
    175d:	89 c2                	mov    %eax,%edx
    175f:	74 21                	je     1782 <dm_suspend+0x7d>
    1761:	83 bb 34 01 00 00 00 	cmpl   $0x0,0x134(%ebx)
    1768:	75 04                	jne    176e <dm_suspend+0x69>
    176a:	0f 0b                	ud2a   
    176c:	eb fe                	jmp    176c <dm_suspend+0x67>
    176e:	68 18 06 00 00       	push   $0x618
			176f: R_386_32	.rodata.str1.1
    1773:	31 ed                	xor    %ebp,%ebp
    1775:	89 44 24 04          	mov    %eax,0x4(%esp)
    1779:	e8 fc ff ff ff       	call   177a <dm_suspend+0x75>
			177a: R_386_PC32	printk
    177e:	5a                   	pop    %edx
    177f:	8b 14 24             	mov    (%esp),%edx
    1782:	8b 87 b8 01 00 00    	mov    0x1b8(%edi),%eax
    1788:	bf f0 ff ff ff       	mov    $0xfffffff0,%edi
    178d:	e8 fc ff ff ff       	call   178e <dm_suspend+0x89>
			178e: R_386_PC32	_spin_unlock_irqrestore
    1792:	85 ed                	test   %ebp,%ebp
    1794:	0f 84 79 01 00 00    	je     1913 <dm_suspend+0x20e>
    179a:	89 d8                	mov    %ebx,%eax
    179c:	e8 fc ff ff ff       	call   179d <dm_suspend+0x98>
			179d: R_386_PC32	dm_get_table
    17a1:	85 f6                	test   %esi,%esi
    17a3:	89 44 24 04          	mov    %eax,0x4(%esp)
    17a7:	74 05                	je     17ae <dm_suspend+0xa9>
    17a9:	f0 80 4b 30 20       	lock orb $0x20,0x30(%ebx)
    17ae:	8b 44 24 04          	mov    0x4(%esp),%eax
    17b2:	e8 fc ff ff ff       	call   17b3 <dm_suspend+0xae>
			17b3: R_386_PC32	dm_table_presuspend_targets
    17b7:	85 f6                	test   %esi,%esi
    17b9:	0f 94 44 24 0b       	sete   0xb(%esp)
    17be:	f6 44 24 10 01       	testb  $0x1,0x10(%esp)
    17c3:	74 52                	je     1817 <dm_suspend+0x112>
    17c5:	80 7c 24 0b 00       	cmpb   $0x0,0xb(%esp)
    17ca:	74 4b                	je     1817 <dm_suspend+0x112>
    17cc:	83 bb b8 00 00 00 00 	cmpl   $0x0,0xb8(%ebx)
    17d3:	74 0f                	je     17e4 <dm_suspend+0xdf>
    17d5:	ba fb 08 00 00       	mov    $0x8fb,%edx
    17da:	b8 7c 04 00 00       	mov    $0x47c,%eax
			17db: R_386_32	.rodata.str1.1
    17df:	e8 fc ff ff ff       	call   17e0 <dm_suspend+0xdb>
			17e0: R_386_PC32	warn_slowpath_null
    17e4:	8b 83 bc 00 00 00    	mov    0xbc(%ebx),%eax
    17ea:	e8 fc ff ff ff       	call   17eb <dm_suspend+0xe6>
			17eb: R_386_PC32	freeze_bdev
    17ef:	3d 00 f0 ff ff       	cmp    $0xfffff000,%eax
    17f4:	89 83 b8 00 00 00    	mov    %eax,0xb8(%ebx)
    17fa:	76 16                	jbe    1812 <dm_suspend+0x10d>
    17fc:	85 c0                	test   %eax,%eax
    17fe:	89 c7                	mov    %eax,%edi
    1800:	c7 83 b8 00 00 00 00 	movl   $0x0,0xb8(%ebx)
    1807:	00 00 00 
    180a:	0f 85 fa 00 00 00    	jne    190a <dm_suspend+0x205>
    1810:	eb 05                	jmp    1817 <dm_suspend+0x112>
    1812:	f0 80 4b 30 04       	lock orb $0x4,0x30(%ebx)
    1817:	89 d8                	mov    %ebx,%eax
    1819:	e8 fc ff ff ff       	call   181a <dm_suspend+0x115>
			181a: R_386_PC32	down_write
    181e:	f0 80 4b 30 01       	lock orb $0x1,0x30(%ebx)
    1823:	f0 80 4b 30 40       	lock orb $0x40,0x30(%ebx)
    1828:	89 d8                	mov    %ebx,%eax
    182a:	e8 fc ff ff ff       	call   182b <dm_suspend+0x126>
			182b: R_386_PC32	up_write
    182f:	8b 83 84 00 00 00    	mov    0x84(%ebx),%eax
    1835:	e8 fc ff ff ff       	call   1836 <dm_suspend+0x131>
			1836: R_386_PC32	flush_workqueue
    183a:	8b 7b 34             	mov    0x34(%ebx),%edi
    183d:	f6 87 b1 01 00 00 20 	testb  $0x20,0x1b1(%edi)
    1844:	74 2a                	je     1870 <dm_suspend+0x16b>
    1846:	85 f6                	test   %esi,%esi
    1848:	74 09                	je     1853 <dm_suspend+0x14e>
    184a:	89 f8                	mov    %edi,%eax
    184c:	e8 b9 ed ff ff       	call   60a <stop_queue>
    1851:	eb 1d                	jmp    1870 <dm_suspend+0x16b>
    1853:	8d ab c8 00 00 00    	lea    0xc8(%ebx),%ebp
    1859:	89 f8                	mov    %edi,%eax
    185b:	89 ea                	mov    %ebp,%edx
    185d:	e8 fc ff ff ff       	call   185e <dm_suspend+0x159>
			185e: R_386_PC32	blk_rq_init
    1862:	89 f8                	mov    %edi,%eax
    1864:	31 c9                	xor    %ecx,%ecx
    1866:	89 ea                	mov    %ebp,%edx
    1868:	6a 00                	push   $0x0
    186a:	e8 fc ff ff ff       	call   186b <dm_suspend+0x166>
			186b: R_386_PC32	blk_insert_request
    186f:	58                   	pop    %eax
    1870:	ba 01 00 00 00       	mov    $0x1,%edx
    1875:	89 d8                	mov    %ebx,%eax
    1877:	e8 97 fd ff ff       	call   1613 <dm_wait_for_completion>
    187c:	89 c7                	mov    %eax,%edi
    187e:	89 d8                	mov    %ebx,%eax
    1880:	e8 fc ff ff ff       	call   1881 <dm_suspend+0x17c>
			1881: R_386_PC32	down_write
    1885:	85 f6                	test   %esi,%esi
    1887:	74 05                	je     188e <dm_suspend+0x189>
    1889:	f0 80 63 30 df       	lock andb $0xdf,0x30(%ebx)
    188e:	89 d8                	mov    %ebx,%eax
    1890:	e8 fc ff ff ff       	call   1891 <dm_suspend+0x18c>
			1891: R_386_PC32	up_write
    1895:	85 ff                	test   %edi,%edi
    1897:	79 63                	jns    18fc <dm_suspend+0x1f7>
    1899:	f0 80 63 30 fe       	lock andb $0xfe,0x30(%ebx)
    189e:	8b 83 84 00 00 00    	mov    0x84(%ebx),%eax
    18a4:	8d 53 64             	lea    0x64(%ebx),%edx
    18a7:	e8 fc ff ff ff       	call   18a8 <dm_suspend+0x1a3>
			18a8: R_386_PC32	queue_work
    18ac:	8b 73 34             	mov    0x34(%ebx),%esi
    18af:	f6 86 b1 01 00 00 20 	testb  $0x20,0x1b1(%esi)
    18b6:	74 3b                	je     18f3 <dm_suspend+0x1ee>
    18b8:	8b 86 b8 01 00 00    	mov    0x1b8(%esi),%eax
    18be:	e8 fc ff ff ff       	call   18bf <dm_suspend+0x1ba>
			18bf: R_386_PC32	_spin_lock_irqsave
    18c3:	80 7c 24 0b 00       	cmpb   $0x0,0xb(%esp)
    18c8:	89 c5                	mov    %eax,%ebp
    18ca:	74 0a                	je     18d6 <dm_suspend+0x1d1>
    18cc:	c7 83 34 01 00 00 01 	movl   $0x1,0x134(%ebx)
    18d3:	00 00 00 
    18d6:	f6 86 b0 01 00 00 04 	testb  $0x4,0x1b0(%esi)
    18dd:	74 07                	je     18e6 <dm_suspend+0x1e1>
    18df:	89 f0                	mov    %esi,%eax
    18e1:	e8 fc ff ff ff       	call   18e2 <dm_suspend+0x1dd>
			18e2: R_386_PC32	blk_start_queue
    18e6:	8b 86 b8 01 00 00    	mov    0x1b8(%esi),%eax
    18ec:	89 ea                	mov    %ebp,%edx
    18ee:	e8 fc ff ff ff       	call   18ef <dm_suspend+0x1ea>
			18ef: R_386_PC32	_spin_unlock_irqrestore
    18f3:	89 d8                	mov    %ebx,%eax
    18f5:	e8 e5 ec ff ff       	call   5df <unlock_fs>
    18fa:	eb 0e                	jmp    190a <dm_suspend+0x205>
    18fc:	8b 44 24 04          	mov    0x4(%esp),%eax
    1900:	e8 fc ff ff ff       	call   1901 <dm_suspend+0x1fc>
			1901: R_386_PC32	dm_table_postsuspend_targets
    1905:	f0 80 4b 30 02       	lock orb $0x2,0x30(%ebx)
    190a:	8b 44 24 04          	mov    0x4(%esp),%eax
    190e:	e8 fc ff ff ff       	call   190f <dm_suspend+0x20a>
			190f: R_386_PC32	dm_table_put
    1913:	8b 44 24 0c          	mov    0xc(%esp),%eax
    1917:	e8 fc ff ff ff       	call   1918 <dm_suspend+0x213>
			1918: R_386_PC32	mutex_unlock
    191c:	89 f8                	mov    %edi,%eax
    191e:	83 c4 14             	add    $0x14,%esp
    1921:	5b                   	pop    %ebx
    1922:	5e                   	pop    %esi
    1923:	5f                   	pop    %edi
    1924:	5d                   	pop    %ebp
    1925:	c3                   	ret    

00001926 <dm_put>:
    1926:	56                   	push   %esi
    1927:	53                   	push   %ebx
    1928:	89 c3                	mov    %eax,%ebx
    192a:	f6 40 30 08          	testb  $0x8,0x30(%eax)
    192e:	74 04                	je     1934 <dm_put+0xe>
    1930:	0f 0b                	ud2a   
    1932:	eb fe                	jmp    1932 <dm_put+0xc>
    1934:	8d 40 28             	lea    0x28(%eax),%eax
    1937:	ba 0c 00 00 00       	mov    $0xc,%edx
			1938: R_386_32	.bss
    193c:	e8 fc ff ff ff       	call   193d <dm_put+0x17>
			193d: R_386_PC32	_atomic_dec_and_lock
    1941:	85 c0                	test   %eax,%eax
    1943:	0f 84 08 01 00 00    	je     1a51 <dm_put+0x12b>
    1949:	89 d8                	mov    %ebx,%eax
    194b:	e8 fc ff ff ff       	call   194c <dm_put+0x26>
			194c: R_386_PC32	dm_get_table
    1950:	83 ca ff             	or     $0xffffffff,%edx
    1953:	89 c6                	mov    %eax,%esi
    1955:	8b 43 38             	mov    0x38(%ebx),%eax
    1958:	8b 88 40 01 00 00    	mov    0x140(%eax),%ecx
    195e:	b8 10 00 00 00       	mov    $0x10,%eax
			195f: R_386_32	.bss
    1963:	81 e1 ff ff 0f 00    	and    $0xfffff,%ecx
    1969:	e8 fc ff ff ff       	call   196a <dm_put+0x44>
			196a: R_386_PC32	idr_replace
    196e:	f0 80 4b 30 08       	lock orb $0x8,0x30(%ebx)
    1973:	fe 05 0c 00 00 00    	incb   0xc
			1975: R_386_32	.bss
    1979:	f6 43 30 02          	testb  $0x2,0x30(%ebx)
    197d:	75 0e                	jne    198d <dm_put+0x67>
    197f:	89 f0                	mov    %esi,%eax
    1981:	e8 fc ff ff ff       	call   1982 <dm_put+0x5c>
			1982: R_386_PC32	dm_table_presuspend_targets
    1986:	89 f0                	mov    %esi,%eax
    1988:	e8 fc ff ff ff       	call   1989 <dm_put+0x63>
			1989: R_386_PC32	dm_table_postsuspend_targets
    198d:	89 d8                	mov    %ebx,%eax
    198f:	e8 fc ff ff ff       	call   1990 <dm_put+0x6a>
			1990: R_386_PC32	dm_sysfs_exit
    1994:	89 f0                	mov    %esi,%eax
    1996:	e8 fc ff ff ff       	call   1997 <dm_put+0x71>
			1997: R_386_PC32	dm_table_put
    199b:	89 d8                	mov    %ebx,%eax
    199d:	e8 8f ec ff ff       	call   631 <__unbind>
    19a2:	8b 43 38             	mov    0x38(%ebx),%eax
    19a5:	8b b0 40 01 00 00    	mov    0x140(%eax),%esi
    19ab:	89 d8                	mov    %ebx,%eax
    19ad:	e8 2d ec ff ff       	call   5df <unlock_fs>
    19b2:	8b 83 bc 00 00 00    	mov    0xbc(%ebx),%eax
    19b8:	e8 fc ff ff ff       	call   19b9 <dm_put+0x93>
			19b9: R_386_PC32	bdput
    19bd:	8b 83 84 00 00 00    	mov    0x84(%ebx),%eax
    19c3:	e8 fc ff ff ff       	call   19c4 <dm_put+0x9e>
			19c4: R_386_PC32	destroy_workqueue
    19c8:	8b 83 90 00 00 00    	mov    0x90(%ebx),%eax
    19ce:	85 c0                	test   %eax,%eax
    19d0:	74 05                	je     19d7 <dm_put+0xb1>
    19d2:	e8 fc ff ff ff       	call   19d3 <dm_put+0xad>
			19d3: R_386_PC32	mempool_destroy
    19d7:	8b 83 8c 00 00 00    	mov    0x8c(%ebx),%eax
    19dd:	85 c0                	test   %eax,%eax
    19df:	74 05                	je     19e6 <dm_put+0xc0>
    19e1:	e8 fc ff ff ff       	call   19e2 <dm_put+0xbc>
			19e2: R_386_PC32	mempool_destroy
    19e6:	8b 83 94 00 00 00    	mov    0x94(%ebx),%eax
    19ec:	85 c0                	test   %eax,%eax
    19ee:	74 05                	je     19f5 <dm_put+0xcf>
    19f0:	e8 fc ff ff ff       	call   19f1 <dm_put+0xcb>
			19f1: R_386_PC32	bioset_free
    19f5:	8b 43 38             	mov    0x38(%ebx),%eax
    19f8:	e8 fc ff ff ff       	call   19f9 <dm_put+0xd3>
			19f9: R_386_PC32	blk_integrity_unregister
    19fd:	8b 43 38             	mov    0x38(%ebx),%eax
    1a00:	e8 fc ff ff ff       	call   1a01 <dm_put+0xdb>
			1a01: R_386_PC32	del_gendisk
    1a05:	89 f0                	mov    %esi,%eax
    1a07:	25 ff ff 0f 00       	and    $0xfffff,%eax
    1a0c:	e8 65 ef ff ff       	call   976 <free_minor>
    1a11:	b8 0c 00 00 00       	mov    $0xc,%eax
			1a12: R_386_32	.bss
    1a16:	e8 fc ff ff ff       	call   1a17 <dm_put+0xf1>
			1a17: R_386_PC32	_spin_lock
    1a1b:	8b 43 38             	mov    0x38(%ebx),%eax
    1a1e:	c7 80 98 01 00 00 00 	movl   $0x0,0x198(%eax)
    1a25:	00 00 00 
    1a28:	fe 05 0c 00 00 00    	incb   0xc
			1a2a: R_386_32	.bss
    1a2e:	8b 43 38             	mov    0x38(%ebx),%eax
    1a31:	e8 fc ff ff ff       	call   1a32 <dm_put+0x10c>
			1a32: R_386_PC32	put_disk
    1a36:	8b 43 34             	mov    0x34(%ebx),%eax
    1a39:	e8 fc ff ff ff       	call   1a3a <dm_put+0x114>
			1a3a: R_386_PC32	blk_cleanup_queue
    1a3e:	b8 00 00 00 00       	mov    $0x0,%eax
			1a3f: R_386_32	__this_module
    1a43:	e8 fc ff ff ff       	call   1a44 <dm_put+0x11e>
			1a44: R_386_PC32	module_put
    1a48:	89 d8                	mov    %ebx,%eax
    1a4a:	5b                   	pop    %ebx
    1a4b:	5e                   	pop    %esi
    1a4c:	e9 fc ff ff ff       	jmp    1a4d <dm_put+0x127>
			1a4d: R_386_PC32	kfree
    1a51:	5b                   	pop    %ebx
    1a52:	5e                   	pop    %esi
    1a53:	c3                   	ret    

00001a54 <dm_noflush_suspending>:
    1a54:	53                   	push   %ebx
    1a55:	8b 00                	mov    (%eax),%eax
    1a57:	e8 fc ff ff ff       	call   1a58 <dm_noflush_suspending+0x4>
			1a58: R_386_PC32	dm_table_get_md
    1a5c:	8b 58 30             	mov    0x30(%eax),%ebx
    1a5f:	e8 fc ff ff ff       	call   1a60 <dm_noflush_suspending+0xc>
			1a60: R_386_PC32	dm_put
    1a64:	c1 eb 05             	shr    $0x5,%ebx
    1a67:	83 e3 01             	and    $0x1,%ebx
    1a6a:	89 d8                	mov    %ebx,%eax
    1a6c:	5b                   	pop    %ebx
    1a6d:	c3                   	ret    

00001a6e <dm_blk_close>:
    1a6e:	8b 80 98 01 00 00    	mov    0x198(%eax),%eax
    1a74:	f0 ff 48 2c          	lock decl 0x2c(%eax)
    1a78:	e8 fc ff ff ff       	call   1a79 <dm_blk_close+0xb>
			1a79: R_386_PC32	dm_put
    1a7d:	31 c0                	xor    %eax,%eax
    1a7f:	c3                   	ret    

00001a80 <rq_completed>:
    1a80:	55                   	push   %ebp
    1a81:	89 d5                	mov    %edx,%ebp
    1a83:	57                   	push   %edi
    1a84:	56                   	push   %esi
    1a85:	89 c6                	mov    %eax,%esi
    1a87:	53                   	push   %ebx
    1a88:	8b 58 34             	mov    0x34(%eax),%ebx
    1a8b:	8b 83 b8 01 00 00    	mov    0x1b8(%ebx),%eax
    1a91:	e8 fc ff ff ff       	call   1a92 <rq_completed+0x12>
			1a92: R_386_PC32	_spin_lock_irqsave
    1a96:	8b bb 14 02 00 00    	mov    0x214(%ebx),%edi
    1a9c:	03 bb 10 02 00 00    	add    0x210(%ebx),%edi
    1aa2:	89 c2                	mov    %eax,%edx
    1aa4:	8b 83 b8 01 00 00    	mov    0x1b8(%ebx),%eax
    1aaa:	e8 fc ff ff ff       	call   1aab <rq_completed+0x2b>
			1aab: R_386_PC32	_spin_unlock_irqrestore
    1aaf:	85 ff                	test   %edi,%edi
    1ab1:	75 15                	jne    1ac8 <rq_completed+0x48>
    1ab3:	b9 01 00 00 00       	mov    $0x1,%ecx
    1ab8:	ba 03 00 00 00       	mov    $0x3,%edx
    1abd:	8d 46 58             	lea    0x58(%esi),%eax
    1ac0:	6a 00                	push   $0x0
    1ac2:	e8 fc ff ff ff       	call   1ac3 <rq_completed+0x43>
			1ac3: R_386_PC32	__wake_up
    1ac7:	59                   	pop    %ecx
    1ac8:	85 ed                	test   %ebp,%ebp
    1aca:	74 07                	je     1ad3 <rq_completed+0x53>
    1acc:	89 d8                	mov    %ebx,%eax
    1ace:	e8 fc ff ff ff       	call   1acf <rq_completed+0x4f>
			1acf: R_386_PC32	blk_run_queue
    1ad3:	89 f0                	mov    %esi,%eax
    1ad5:	5b                   	pop    %ebx
    1ad6:	5e                   	pop    %esi
    1ad7:	5f                   	pop    %edi
    1ad8:	5d                   	pop    %ebp
    1ad9:	e9 fc ff ff ff       	jmp    1ada <rq_completed+0x5a>
			1ada: R_386_PC32	dm_put

00001ade <dm_requeue_unmapped_request>:
    1ade:	55                   	push   %ebp
    1adf:	57                   	push   %edi
    1ae0:	56                   	push   %esi
    1ae1:	53                   	push   %ebx
    1ae2:	8b 80 c0 00 00 00    	mov    0xc0(%eax),%eax
    1ae8:	8b 68 08             	mov    0x8(%eax),%ebp
    1aeb:	8b 30                	mov    (%eax),%esi
    1aed:	8b 45 6c             	mov    0x6c(%ebp),%eax
    1af0:	81 65 24 ff f7 ff ff 	andl   $0xfffff7ff,0x24(%ebp)
    1af7:	8b 5d 20             	mov    0x20(%ebp),%ebx
    1afa:	c7 45 6c 00 00 00 00 	movl   $0x0,0x6c(%ebp)
    1b01:	e8 64 f9 ff ff       	call   146a <free_rq_clone>
    1b06:	8b 83 b8 01 00 00    	mov    0x1b8(%ebx),%eax
    1b0c:	e8 fc ff ff ff       	call   1b0d <dm_requeue_unmapped_request+0x2f>
			1b0d: R_386_PC32	_spin_lock_irqsave
    1b11:	89 c7                	mov    %eax,%edi
    1b13:	89 d8                	mov    %ebx,%eax
    1b15:	e8 fc ff ff ff       	call   1b16 <dm_requeue_unmapped_request+0x38>
			1b16: R_386_PC32	elv_queue_empty
    1b1a:	85 c0                	test   %eax,%eax
    1b1c:	74 07                	je     1b25 <dm_requeue_unmapped_request+0x47>
    1b1e:	89 d8                	mov    %ebx,%eax
    1b20:	e8 fc ff ff ff       	call   1b21 <dm_requeue_unmapped_request+0x43>
			1b21: R_386_PC32	blk_plug_device
    1b25:	89 ea                	mov    %ebp,%edx
    1b27:	89 d8                	mov    %ebx,%eax
    1b29:	e8 fc ff ff ff       	call   1b2a <dm_requeue_unmapped_request+0x4c>
			1b2a: R_386_PC32	blk_requeue_request
    1b2e:	8b 83 b8 01 00 00    	mov    0x1b8(%ebx),%eax
    1b34:	89 fa                	mov    %edi,%edx
    1b36:	e8 fc ff ff ff       	call   1b37 <dm_requeue_unmapped_request+0x59>
			1b37: R_386_PC32	_spin_unlock_irqrestore
    1b3b:	89 f0                	mov    %esi,%eax
    1b3d:	31 d2                	xor    %edx,%edx
    1b3f:	5b                   	pop    %ebx
    1b40:	5e                   	pop    %esi
    1b41:	5f                   	pop    %edi
    1b42:	5d                   	pop    %ebp
    1b43:	e9 38 ff ff ff       	jmp    1a80 <rq_completed>

00001b48 <dm_softirq_done>:
    1b48:	55                   	push   %ebp
    1b49:	57                   	push   %edi
    1b4a:	56                   	push   %esi
    1b4b:	53                   	push   %ebx
    1b4c:	8b 58 4c             	mov    0x4c(%eax),%ebx
    1b4f:	f6 40 25 40          	testb  $0x40,0x25(%eax)
    1b53:	8b 93 c0 00 00 00    	mov    0xc0(%ebx),%edx
    1b59:	8b 7a 04             	mov    0x4(%edx),%edi
    1b5c:	8b aa d4 00 00 00    	mov    0xd4(%edx),%ebp
    1b62:	8b 4f 04             	mov    0x4(%edi),%ecx
    1b65:	8b 71 30             	mov    0x30(%ecx),%esi
    1b68:	75 16                	jne    1b80 <dm_softirq_done+0x38>
    1b6a:	85 f6                	test   %esi,%esi
    1b6c:	74 12                	je     1b80 <dm_softirq_done+0x38>
    1b6e:	81 c2 d8 00 00 00    	add    $0xd8,%edx
    1b74:	89 e9                	mov    %ebp,%ecx
    1b76:	52                   	push   %edx
    1b77:	89 f8                	mov    %edi,%eax
    1b79:	89 da                	mov    %ebx,%edx
    1b7b:	ff d6                	call   *%esi
    1b7d:	5f                   	pop    %edi
    1b7e:	89 c5                	mov    %eax,%ebp
    1b80:	85 ed                	test   %ebp,%ebp
    1b82:	7f 58                	jg     1bdc <dm_softirq_done+0x94>
    1b84:	8b 83 c0 00 00 00    	mov    0xc0(%ebx),%eax
    1b8a:	8b 70 08             	mov    0x8(%eax),%esi
    1b8d:	8b 38                	mov    (%eax),%edi
    1b8f:	83 7e 28 02          	cmpl   $0x2,0x28(%esi)
    1b93:	75 27                	jne    1bbc <dm_softirq_done+0x74>
    1b95:	8b 43 78             	mov    0x78(%ebx),%eax
    1b98:	83 be a4 00 00 00 00 	cmpl   $0x0,0xa4(%esi)
    1b9f:	89 46 78             	mov    %eax,0x78(%esi)
    1ba2:	8b 83 a0 00 00 00    	mov    0xa0(%ebx),%eax
    1ba8:	89 86 a0 00 00 00    	mov    %eax,0xa0(%esi)
    1bae:	74 0c                	je     1bbc <dm_softirq_done+0x74>
    1bb0:	8b 83 9c 00 00 00    	mov    0x9c(%ebx),%eax
    1bb6:	89 86 9c 00 00 00    	mov    %eax,0x9c(%esi)
    1bbc:	89 d8                	mov    %ebx,%eax
    1bbe:	e8 a7 f8 ff ff       	call   146a <free_rq_clone>
    1bc3:	89 ea                	mov    %ebp,%edx
    1bc5:	89 f0                	mov    %esi,%eax
    1bc7:	e8 fc ff ff ff       	call   1bc8 <dm_softirq_done+0x80>
			1bc8: R_386_PC32	blk_end_request_all
    1bcc:	89 f8                	mov    %edi,%eax
    1bce:	ba 01 00 00 00       	mov    $0x1,%edx
    1bd3:	5b                   	pop    %ebx
    1bd4:	5e                   	pop    %esi
    1bd5:	5f                   	pop    %edi
    1bd6:	5d                   	pop    %ebp
    1bd7:	e9 a4 fe ff ff       	jmp    1a80 <rq_completed>
    1bdc:	83 fd 01             	cmp    $0x1,%ebp
    1bdf:	74 21                	je     1c02 <dm_softirq_done+0xba>
    1be1:	83 fd 02             	cmp    $0x2,%ebp
    1be4:	75 0b                	jne    1bf1 <dm_softirq_done+0xa9>
    1be6:	89 d8                	mov    %ebx,%eax
    1be8:	5b                   	pop    %ebx
    1be9:	5e                   	pop    %esi
    1bea:	5f                   	pop    %edi
    1beb:	5d                   	pop    %ebp
    1bec:	e9 fc ff ff ff       	jmp    1bed <dm_softirq_done+0xa5>
			1bed: R_386_PC32	dm_requeue_unmapped_request
    1bf1:	55                   	push   %ebp
    1bf2:	68 46 05 00 00       	push   $0x546
			1bf3: R_386_32	.rodata.str1.1
    1bf7:	e8 fc ff ff ff       	call   1bf8 <dm_softirq_done+0xb0>
			1bf8: R_386_PC32	printk
    1bfc:	0f 0b                	ud2a   
    1bfe:	5b                   	pop    %ebx
    1bff:	5e                   	pop    %esi
    1c00:	eb fe                	jmp    1c00 <dm_softirq_done+0xb8>
    1c02:	5b                   	pop    %ebx
    1c03:	5e                   	pop    %esi
    1c04:	5f                   	pop    %edi
    1c05:	5d                   	pop    %ebp
    1c06:	c3                   	ret    

00001c07 <dm_blk_ioctl>:
    1c07:	55                   	push   %ebp
    1c08:	57                   	push   %edi
    1c09:	89 cf                	mov    %ecx,%edi
    1c0b:	56                   	push   %esi
    1c0c:	53                   	push   %ebx
    1c0d:	8b 40 50             	mov    0x50(%eax),%eax
    1c10:	8b b0 98 01 00 00    	mov    0x198(%eax),%esi
    1c16:	89 f0                	mov    %esi,%eax
    1c18:	e8 fc ff ff ff       	call   1c19 <dm_blk_ioctl+0x12>
			1c19: R_386_PC32	dm_get_table
    1c1d:	85 c0                	test   %eax,%eax
    1c1f:	89 c3                	mov    %eax,%ebx
    1c21:	74 3d                	je     1c60 <dm_blk_ioctl+0x59>
    1c23:	e8 fc ff ff ff       	call   1c24 <dm_blk_ioctl+0x1d>
			1c24: R_386_PC32	dm_table_get_size
    1c28:	09 c2                	or     %eax,%edx
    1c2a:	74 34                	je     1c60 <dm_blk_ioctl+0x59>
    1c2c:	89 d8                	mov    %ebx,%eax
    1c2e:	e8 fc ff ff ff       	call   1c2f <dm_blk_ioctl+0x28>
			1c2f: R_386_PC32	dm_table_get_num_targets
    1c33:	48                   	dec    %eax
    1c34:	75 2a                	jne    1c60 <dm_blk_ioctl+0x59>
    1c36:	31 d2                	xor    %edx,%edx
    1c38:	89 d8                	mov    %ebx,%eax
    1c3a:	e8 fc ff ff ff       	call   1c3b <dm_blk_ioctl+0x34>
			1c3b: R_386_PC32	dm_table_get_target
    1c3f:	bd f5 ff ff ff       	mov    $0xfffffff5,%ebp
    1c44:	f6 46 30 02          	testb  $0x2,0x30(%esi)
    1c48:	75 1b                	jne    1c65 <dm_blk_ioctl+0x5e>
    1c4a:	8b 50 04             	mov    0x4(%eax),%edx
    1c4d:	8b 72 50             	mov    0x50(%edx),%esi
    1c50:	85 f6                	test   %esi,%esi
    1c52:	74 0c                	je     1c60 <dm_blk_ioctl+0x59>
    1c54:	8b 4c 24 14          	mov    0x14(%esp),%ecx
    1c58:	89 fa                	mov    %edi,%edx
    1c5a:	ff d6                	call   *%esi
    1c5c:	89 c5                	mov    %eax,%ebp
    1c5e:	eb 05                	jmp    1c65 <dm_blk_ioctl+0x5e>
    1c60:	bd e7 ff ff ff       	mov    $0xffffffe7,%ebp
    1c65:	89 d8                	mov    %ebx,%eax
    1c67:	e8 fc ff ff ff       	call   1c68 <dm_blk_ioctl+0x61>
			1c68: R_386_PC32	dm_table_put
    1c6c:	89 e8                	mov    %ebp,%eax
    1c6e:	5b                   	pop    %ebx
    1c6f:	5e                   	pop    %esi
    1c70:	5f                   	pop    %edi
    1c71:	5d                   	pop    %ebp
    1c72:	c3                   	ret    

00001c73 <__split_and_process_bio>:
    1c73:	55                   	push   %ebp
    1c74:	89 d5                	mov    %edx,%ebp
    1c76:	57                   	push   %edi
    1c77:	56                   	push   %esi
    1c78:	53                   	push   %ebx
    1c79:	83 ec 74             	sub    $0x74,%esp
    1c7c:	89 44 24 20          	mov    %eax,0x20(%esp)
    1c80:	e8 fc ff ff ff       	call   1c81 <__split_and_process_bio+0xe>
			1c81: R_386_PC32	dm_get_table
    1c85:	85 c0                	test   %eax,%eax
    1c87:	89 44 24 48          	mov    %eax,0x48(%esp)
    1c8b:	75 39                	jne    1cc6 <__split_and_process_bio+0x53>
    1c8d:	f6 45 14 20          	testb  $0x20,0x14(%ebp)
    1c91:	75 13                	jne    1ca6 <__split_and_process_bio+0x33>
    1c93:	83 c4 74             	add    $0x74,%esp
    1c96:	89 e8                	mov    %ebp,%eax
    1c98:	5b                   	pop    %ebx
    1c99:	ba fb ff ff ff       	mov    $0xfffffffb,%edx
    1c9e:	5e                   	pop    %esi
    1c9f:	5f                   	pop    %edi
    1ca0:	5d                   	pop    %ebp
    1ca1:	e9 fc ff ff ff       	jmp    1ca2 <__split_and_process_bio+0x2f>
			1ca2: R_386_PC32	bio_endio
    1ca6:	8b 44 24 20          	mov    0x20(%esp),%eax
    1caa:	83 b8 80 00 00 00 00 	cmpl   $0x0,0x80(%eax)
    1cb1:	0f 85 76 06 00 00    	jne    232d <__split_and_process_bio+0x6ba>
    1cb7:	c7 80 80 00 00 00 fb 	movl   $0xfffffffb,0x80(%eax)
    1cbe:	ff ff ff 
    1cc1:	e9 67 06 00 00       	jmp    232d <__split_and_process_bio+0x6ba>
    1cc6:	8b 54 24 20          	mov    0x20(%esp),%edx
    1cca:	8b 82 8c 00 00 00    	mov    0x8c(%edx),%eax
    1cd0:	ba 10 00 00 00       	mov    $0x10,%edx
    1cd5:	e8 fc ff ff ff       	call   1cd6 <__split_and_process_bio+0x63>
			1cd6: R_386_PC32	mempool_alloc
    1cda:	89 44 24 1c          	mov    %eax,0x1c(%esp)
    1cde:	c7 40 04 00 00 00 00 	movl   $0x0,0x4(%eax)
    1ce5:	c7 40 08 01 00 00 00 	movl   $0x1,0x8(%eax)
    1cec:	89 68 0c             	mov    %ebp,0xc(%eax)
    1cef:	8b 4c 24 20          	mov    0x20(%esp),%ecx
    1cf3:	c7 40 14 00 00 00 00 	movl   $0x0,0x14(%eax)
    1cfa:	89 08                	mov    %ecx,(%eax)
    1cfc:	8b 5d 00             	mov    0x0(%ebp),%ebx
    1cff:	8b 75 04             	mov    0x4(%ebp),%esi
    1d02:	89 5c 24 30          	mov    %ebx,0x30(%esp)
    1d06:	89 74 24 34          	mov    %esi,0x34(%esp)
    1d0a:	8b 45 20             	mov    0x20(%ebp),%eax
    1d0d:	c7 44 24 18 00 00 00 	movl   $0x0,0x18(%esp)
    1d14:	00 
    1d15:	c1 e8 09             	shr    $0x9,%eax
    1d18:	89 44 24 14          	mov    %eax,0x14(%esp)
    1d1c:	8b 45 14             	mov    0x14(%ebp),%eax
    1d1f:	a8 20                	test   $0x20,%al
    1d21:	74 1f                	je     1d42 <__split_and_process_bio+0xcf>
    1d23:	85 ed                	test   %ebp,%ebp
    1d25:	74 06                	je     1d2d <__split_and_process_bio+0xba>
    1d27:	83 7d 38 00          	cmpl   $0x0,0x38(%ebp)
    1d2b:	75 15                	jne    1d42 <__split_and_process_bio+0xcf>
    1d2d:	f6 c4 02             	test   $0x2,%ah
    1d30:	75 10                	jne    1d42 <__split_and_process_bio+0xcf>
    1d32:	c7 44 24 14 01 00 00 	movl   $0x1,0x14(%esp)
    1d39:	00 
    1d3a:	c7 44 24 18 00 00 00 	movl   $0x0,0x18(%esp)
    1d41:	00 
    1d42:	66 8b 75 1a          	mov    0x1a(%ebp),%si
    1d46:	8b 7c 24 1c          	mov    0x1c(%esp),%edi
    1d4a:	66 89 74 24 2e       	mov    %si,0x2e(%esp)
    1d4f:	8b 47 0c             	mov    0xc(%edi),%eax
    1d52:	8b 1f                	mov    (%edi),%ebx
    1d54:	8b 70 14             	mov    0x14(%eax),%esi
    1d57:	a1 00 00 00 00       	mov    0x0,%eax
			1d58: R_386_32	jiffies
    1d5c:	83 e6 01             	and    $0x1,%esi
    1d5f:	89 47 10             	mov    %eax,0x10(%edi)
    1d62:	8b 53 38             	mov    0x38(%ebx),%edx
    1d65:	64 a1 00 00 00 00    	mov    %fs:0x0,%eax
			1d67: R_386_32	per_cpu__cpu_number
    1d6b:	83 c2 34             	add    $0x34,%edx
    1d6e:	e8 fc ff ff ff       	call   1d6f <__split_and_process_bio+0xfc>
			1d6f: R_386_PC32	part_round_stats
    1d73:	8d 46 14             	lea    0x14(%esi),%eax
    1d76:	8b 4b 38             	mov    0x38(%ebx),%ecx
    1d79:	8d 14 83             	lea    (%ebx,%eax,4),%edx
    1d7c:	b8 01 00 00 00       	mov    $0x1,%eax
    1d81:	f0 0f c1 02          	lock xadd %eax,(%edx)
    1d85:	83 c6 5c             	add    $0x5c,%esi
    1d88:	40                   	inc    %eax
    1d89:	89 44 b1 0c          	mov    %eax,0xc(%ecx,%esi,4)
    1d8d:	31 d2                	xor    %edx,%edx
    1d8f:	e9 6e 05 00 00       	jmp    2302 <__split_and_process_bio+0x68f>
    1d94:	8b 45 14             	mov    0x14(%ebp),%eax
    1d97:	a8 20                	test   $0x20,%al
    1d99:	0f 84 d2 00 00 00    	je     1e71 <__split_and_process_bio+0x1fe>
    1d9f:	85 ed                	test   %ebp,%ebp
    1da1:	74 0a                	je     1dad <__split_and_process_bio+0x13a>
    1da3:	83 7d 38 00          	cmpl   $0x0,0x38(%ebp)
    1da7:	0f 85 c4 00 00 00    	jne    1e71 <__split_and_process_bio+0x1fe>
    1dad:	31 d2                	xor    %edx,%edx
    1daf:	f6 c4 02             	test   $0x2,%ah
    1db2:	0f 85 b9 00 00 00    	jne    1e71 <__split_and_process_bio+0x1fe>
    1db8:	eb 75                	jmp    1e2f <__split_and_process_bio+0x1bc>
    1dba:	8b 54 24 20          	mov    0x20(%esp),%edx
    1dbe:	8b 82 90 00 00 00    	mov    0x90(%edx),%eax
    1dc4:	ba 10 00 00 00       	mov    $0x10,%edx
    1dc9:	e8 fc ff ff ff       	call   1dca <__split_and_process_bio+0x157>
			1dca: R_386_PC32	mempool_alloc
    1dce:	8b 4c 24 1c          	mov    0x1c(%esp),%ecx
    1dd2:	89 c6                	mov    %eax,%esi
    1dd4:	89 08                	mov    %ecx,(%eax)
    1dd6:	8d 78 08             	lea    0x8(%eax),%edi
    1dd9:	b9 02 00 00 00       	mov    $0x2,%ecx
    1dde:	89 68 04             	mov    %ebp,0x4(%eax)
    1de1:	31 c0                	xor    %eax,%eax
    1de3:	f3 ab                	rep stos %eax,%es:(%edi)
    1de5:	8b 54 24 08          	mov    0x8(%esp),%edx
    1de9:	b0 10                	mov    $0x10,%al
    1deb:	89 56 08             	mov    %edx,0x8(%esi)
    1dee:	8b 5c 24 20          	mov    0x20(%esp),%ebx
    1df2:	31 d2                	xor    %edx,%edx
    1df4:	8b 8b 94 00 00 00    	mov    0x94(%ebx),%ecx
    1dfa:	e8 fc ff ff ff       	call   1dfb <__split_and_process_bio+0x188>
			1dfb: R_386_PC32	bio_alloc_bioset
    1dff:	8b 54 24 10          	mov    0x10(%esp),%edx
    1e03:	89 c3                	mov    %eax,%ebx
    1e05:	e8 fc ff ff ff       	call   1e06 <__split_and_process_bio+0x193>
			1e06: R_386_PC32	__bio_clone
    1e0a:	89 f1                	mov    %esi,%ecx
    1e0c:	89 da                	mov    %ebx,%edx
    1e0e:	c7 43 48 36 0f 00 00 	movl   $0xf36,0x48(%ebx)
			1e11: R_386_32	.text
    1e15:	89 e8                	mov    %ebp,%eax
    1e17:	e8 f0 f2 ff ff       	call   110c <__map_bio>
    1e1c:	ff 44 24 08          	incl   0x8(%esp)
    1e20:	8b 74 24 08          	mov    0x8(%esp),%esi
    1e24:	3b 75 20             	cmp    0x20(%ebp),%esi
    1e27:	72 91                	jb     1dba <__split_and_process_bio+0x147>
    1e29:	8b 54 24 14          	mov    0x14(%esp),%edx
    1e2d:	eb 04                	jmp    1e33 <__split_and_process_bio+0x1c0>
    1e2f:	89 6c 24 10          	mov    %ebp,0x10(%esp)
    1e33:	8b 44 24 48          	mov    0x48(%esp),%eax
    1e37:	8d 7a 01             	lea    0x1(%edx),%edi
    1e3a:	89 7c 24 14          	mov    %edi,0x14(%esp)
    1e3e:	e8 fc ff ff ff       	call   1e3f <__split_and_process_bio+0x1cc>
			1e3f: R_386_PC32	dm_table_get_target
    1e43:	85 c0                	test   %eax,%eax
    1e45:	89 c5                	mov    %eax,%ebp
    1e47:	75 1e                	jne    1e67 <__split_and_process_bio+0x1f4>
    1e49:	8b 6c 24 10          	mov    0x10(%esp),%ebp
    1e4d:	66 8b 5c 24 2e       	mov    0x2e(%esp),%bx
    1e52:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
    1e59:	00 
    1e5a:	c7 44 24 18 00 00 00 	movl   $0x0,0x18(%esp)
    1e61:	00 
    1e62:	e9 88 04 00 00       	jmp    22ef <__split_and_process_bio+0x67c>
    1e67:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)
    1e6e:	00 
    1e6f:	eb af                	jmp    1e20 <__split_and_process_bio+0x1ad>
    1e71:	8b 54 24 30          	mov    0x30(%esp),%edx
    1e75:	8b 4c 24 34          	mov    0x34(%esp),%ecx
    1e79:	8b 44 24 48          	mov    0x48(%esp),%eax
    1e7d:	e8 fc ff ff ff       	call   1e7e <__split_and_process_bio+0x20b>
			1e7e: R_386_PC32	dm_table_find_target
    1e82:	89 44 24 10          	mov    %eax,0x10(%esp)
    1e86:	83 38 00             	cmpl   $0x0,(%eax)
    1e89:	0f 84 64 04 00 00    	je     22f3 <__split_and_process_bio+0x680>
    1e8f:	8b 4c 24 10          	mov    0x10(%esp),%ecx
    1e93:	8b 44 24 30          	mov    0x30(%esp),%eax
    1e97:	8b 54 24 34          	mov    0x34(%esp),%edx
    1e9b:	8b 59 10             	mov    0x10(%ecx),%ebx
    1e9e:	89 cf                	mov    %ecx,%edi
    1ea0:	8b 71 14             	mov    0x14(%ecx),%esi
    1ea3:	2b 41 08             	sub    0x8(%ecx),%eax
    1ea6:	1b 51 0c             	sbb    0xc(%ecx),%edx
    1ea9:	89 5c 24 08          	mov    %ebx,0x8(%esp)
    1ead:	29 44 24 08          	sub    %eax,0x8(%esp)
    1eb1:	89 74 24 0c          	mov    %esi,0xc(%esp)
    1eb5:	19 54 24 0c          	sbb    %edx,0xc(%esp)
    1eb9:	8b 5f 1c             	mov    0x1c(%edi),%ebx
    1ebc:	8b 49 18             	mov    0x18(%ecx),%ecx
    1ebf:	89 de                	mov    %ebx,%esi
    1ec1:	09 ce                	or     %ecx,%esi
    1ec3:	74 59                	je     1f1e <__split_and_process_bio+0x2ab>
    1ec5:	89 c6                	mov    %eax,%esi
    1ec7:	89 d7                	mov    %edx,%edi
    1ec9:	01 ce                	add    %ecx,%esi
    1ecb:	11 df                	adc    %ebx,%edi
    1ecd:	89 74 24 3c          	mov    %esi,0x3c(%esp)
    1ed1:	89 ce                	mov    %ecx,%esi
    1ed3:	f7 de                	neg    %esi
    1ed5:	89 7c 24 40          	mov    %edi,0x40(%esp)
    1ed9:	89 df                	mov    %ebx,%edi
    1edb:	83 d7 00             	adc    $0x0,%edi
    1ede:	f7 df                	neg    %edi
    1ee0:	89 74 24 24          	mov    %esi,0x24(%esp)
    1ee4:	23 74 24 3c          	and    0x3c(%esp),%esi
    1ee8:	89 7c 24 28          	mov    %edi,0x28(%esp)
    1eec:	23 7c 24 40          	and    0x40(%esp),%edi
    1ef0:	89 74 24 60          	mov    %esi,0x60(%esp)
    1ef4:	8b 4c 24 60          	mov    0x60(%esp),%ecx
    1ef8:	89 7c 24 64          	mov    %edi,0x64(%esp)
    1efc:	8b 5c 24 64          	mov    0x64(%esp),%ebx
    1f00:	29 c1                	sub    %eax,%ecx
    1f02:	89 c8                	mov    %ecx,%eax
    1f04:	19 d3                	sbb    %edx,%ebx
    1f06:	39 5c 24 0c          	cmp    %ebx,0xc(%esp)
    1f0a:	89 da                	mov    %ebx,%edx
    1f0c:	72 10                	jb     1f1e <__split_and_process_bio+0x2ab>
    1f0e:	77 06                	ja     1f16 <__split_and_process_bio+0x2a3>
    1f10:	39 4c 24 08          	cmp    %ecx,0x8(%esp)
    1f14:	76 08                	jbe    1f1e <__split_and_process_bio+0x2ab>
    1f16:	89 44 24 08          	mov    %eax,0x8(%esp)
    1f1a:	89 54 24 0c          	mov    %edx,0xc(%esp)
    1f1e:	8b 5c 24 20          	mov    0x20(%esp),%ebx
    1f22:	ba 10 00 00 00       	mov    $0x10,%edx
    1f27:	8b 83 90 00 00 00    	mov    0x90(%ebx),%eax
    1f2d:	e8 fc ff ff ff       	call   1f2e <__split_and_process_bio+0x2bb>
			1f2e: R_386_PC32	mempool_alloc
    1f32:	b9 02 00 00 00       	mov    $0x2,%ecx
    1f37:	8b 74 24 1c          	mov    0x1c(%esp),%esi
    1f3b:	89 44 24 38          	mov    %eax,0x38(%esp)
    1f3f:	89 30                	mov    %esi,(%eax)
    1f41:	8b 7c 24 10          	mov    0x10(%esp),%edi
    1f45:	89 78 04             	mov    %edi,0x4(%eax)
    1f48:	89 c7                	mov    %eax,%edi
    1f4a:	31 c0                	xor    %eax,%eax
    1f4c:	83 c7 08             	add    $0x8,%edi
    1f4f:	f3 ab                	rep stos %eax,%es:(%edi)
    1f51:	8b 54 24 0c          	mov    0xc(%esp),%edx
    1f55:	39 54 24 18          	cmp    %edx,0x18(%esp)
    1f59:	77 64                	ja     1fbf <__split_and_process_bio+0x34c>
    1f5b:	72 0a                	jb     1f67 <__split_and_process_bio+0x2f4>
    1f5d:	8b 4c 24 08          	mov    0x8(%esp),%ecx
    1f61:	39 4c 24 14          	cmp    %ecx,0x14(%esp)
    1f65:	77 58                	ja     1fbf <__split_and_process_bio+0x34c>
    1f67:	8b 5c 24 20          	mov    0x20(%esp),%ebx
    1f6b:	ff b3 94 00 00 00    	pushl  0x94(%ebx)
    1f71:	ff 74 24 18          	pushl  0x18(%esp)
    1f75:	8b 45 18             	mov    0x18(%ebp),%eax
    1f78:	66 2b 44 24 36       	sub    0x36(%esp),%ax
    1f7d:	0f b7 c0             	movzwl %ax,%eax
    1f80:	50                   	push   %eax
    1f81:	0f b7 44 24 3a       	movzwl 0x3a(%esp),%eax
    1f86:	50                   	push   %eax
    1f87:	8b 54 24 40          	mov    0x40(%esp),%edx
    1f8b:	89 e8                	mov    %ebp,%eax
    1f8d:	8b 4c 24 44          	mov    0x44(%esp),%ecx
    1f91:	e8 a8 ef ff ff       	call   f3e <clone_bio>
    1f96:	8b 4c 24 48          	mov    0x48(%esp),%ecx
    1f9a:	89 c2                	mov    %eax,%edx
    1f9c:	8b 44 24 20          	mov    0x20(%esp),%eax
    1fa0:	e8 67 f1 ff ff       	call   110c <__map_bio>
    1fa5:	66 8b 5c 24 3e       	mov    0x3e(%esp),%bx
    1faa:	c7 44 24 24 00 00 00 	movl   $0x0,0x24(%esp)
    1fb1:	00 
    1fb2:	c7 44 24 28 00 00 00 	movl   $0x0,0x28(%esp)
    1fb9:	00 
    1fba:	e9 fc 00 00 00       	jmp    20bb <__split_and_process_bio+0x448>
    1fbf:	0f b7 74 24 2e       	movzwl 0x2e(%esp),%esi
    1fc4:	6b fe 0c             	imul   $0xc,%esi,%edi
    1fc7:	89 74 24 3c          	mov    %esi,0x3c(%esp)
    1fcb:	89 7c 24 58          	mov    %edi,0x58(%esp)
    1fcf:	03 7d 38             	add    0x38(%ebp),%edi
    1fd2:	89 7c 24 50          	mov    %edi,0x50(%esp)
    1fd6:	8b 47 04             	mov    0x4(%edi),%eax
    1fd9:	c7 44 24 28 00 00 00 	movl   $0x0,0x28(%esp)
    1fe0:	00 
    1fe1:	c1 e8 09             	shr    $0x9,%eax
    1fe4:	89 44 24 24          	mov    %eax,0x24(%esp)
    1fe8:	8b 44 24 0c          	mov    0xc(%esp),%eax
    1fec:	39 44 24 28          	cmp    %eax,0x28(%esp)
    1ff0:	72 22                	jb     2014 <__split_and_process_bio+0x3a1>
    1ff2:	77 0a                	ja     1ffe <__split_and_process_bio+0x38b>
    1ff4:	8b 54 24 08          	mov    0x8(%esp),%edx
    1ff8:	39 54 24 24          	cmp    %edx,0x24(%esp)
    1ffc:	76 16                	jbe    2014 <__split_and_process_bio+0x3a1>
    1ffe:	0f b7 4c 24 2e       	movzwl 0x2e(%esp),%ecx
    2003:	c7 44 24 4c 00 00 00 	movl   $0x0,0x4c(%esp)
    200a:	00 
    200b:	89 4c 24 70          	mov    %ecx,0x70(%esp)
    200f:	e9 99 01 00 00       	jmp    21ad <__split_and_process_bio+0x53a>
    2014:	0f b7 5c 24 2e       	movzwl 0x2e(%esp),%ebx
    2019:	31 c9                	xor    %ecx,%ecx
    201b:	31 f6                	xor    %esi,%esi
    201d:	31 ff                	xor    %edi,%edi
    201f:	89 5c 24 44          	mov    %ebx,0x44(%esp)
    2023:	8b 5c 24 50          	mov    0x50(%esp),%ebx
    2027:	83 c3 04             	add    $0x4,%ebx
    202a:	eb 25                	jmp    2051 <__split_and_process_bio+0x3de>
    202c:	8b 03                	mov    (%ebx),%eax
    202e:	31 d2                	xor    %edx,%edx
    2030:	41                   	inc    %ecx
    2031:	83 c3 0c             	add    $0xc,%ebx
    2034:	c1 e8 09             	shr    $0x9,%eax
    2037:	3b 54 24 0c          	cmp    0xc(%esp),%edx
    203b:	77 32                	ja     206f <__split_and_process_bio+0x3fc>
    203d:	72 06                	jb     2045 <__split_and_process_bio+0x3d2>
    203f:	3b 44 24 08          	cmp    0x8(%esp),%eax
    2043:	77 2a                	ja     206f <__split_and_process_bio+0x3fc>
    2045:	29 44 24 08          	sub    %eax,0x8(%esp)
    2049:	19 54 24 0c          	sbb    %edx,0xc(%esp)
    204d:	01 c6                	add    %eax,%esi
    204f:	11 d7                	adc    %edx,%edi
    2051:	8b 44 24 3c          	mov    0x3c(%esp),%eax
    2055:	8b 54 24 0c          	mov    0xc(%esp),%edx
    2059:	01 c8                	add    %ecx,%eax
    205b:	0b 54 24 08          	or     0x8(%esp),%edx
    205f:	89 44 24 24          	mov    %eax,0x24(%esp)
    2063:	74 0a                	je     206f <__split_and_process_bio+0x3fc>
    2065:	0f b7 45 18          	movzwl 0x18(%ebp),%eax
    2069:	39 44 24 24          	cmp    %eax,0x24(%esp)
    206d:	7c bd                	jl     202c <__split_and_process_bio+0x3b9>
    206f:	8b 4c 24 20          	mov    0x20(%esp),%ecx
    2073:	8b 5c 24 24          	mov    0x24(%esp),%ebx
    2077:	ff b1 94 00 00 00    	pushl  0x94(%ecx)
    207d:	89 d8                	mov    %ebx,%eax
    207f:	56                   	push   %esi
    2080:	66 2b 44 24 36       	sub    0x36(%esp),%ax
    2085:	0f b7 c0             	movzwl %ax,%eax
    2088:	50                   	push   %eax
    2089:	89 e8                	mov    %ebp,%eax
    208b:	ff 74 24 50          	pushl  0x50(%esp)
    208f:	8b 54 24 40          	mov    0x40(%esp),%edx
    2093:	8b 4c 24 44          	mov    0x44(%esp),%ecx
    2097:	e8 a2 ee ff ff       	call   f3e <clone_bio>
    209c:	8b 4c 24 48          	mov    0x48(%esp),%ecx
    20a0:	89 c2                	mov    %eax,%edx
    20a2:	8b 44 24 20          	mov    0x20(%esp),%eax
    20a6:	e8 61 f0 ff ff       	call   110c <__map_bio>
    20ab:	01 74 24 40          	add    %esi,0x40(%esp)
    20af:	11 7c 24 44          	adc    %edi,0x44(%esp)
    20b3:	29 74 24 24          	sub    %esi,0x24(%esp)
    20b7:	19 7c 24 28          	sbb    %edi,0x28(%esp)
    20bb:	31 d2                	xor    %edx,%edx
    20bd:	83 c4 10             	add    $0x10,%esp
    20c0:	e9 38 02 00 00       	jmp    22fd <__split_and_process_bio+0x68a>
    20c5:	8b 5c 24 44          	mov    0x44(%esp),%ebx
    20c9:	01 5c 24 4c          	add    %ebx,0x4c(%esp)
    20cd:	0f 84 da 00 00 00    	je     21ad <__split_and_process_bio+0x53a>
    20d3:	8b 54 24 30          	mov    0x30(%esp),%edx
    20d7:	8b 4c 24 34          	mov    0x34(%esp),%ecx
    20db:	8b 44 24 48          	mov    0x48(%esp),%eax
    20df:	e8 fc ff ff ff       	call   20e0 <__split_and_process_bio+0x46d>
			20e0: R_386_PC32	dm_table_find_target
    20e4:	89 44 24 10          	mov    %eax,0x10(%esp)
    20e8:	83 38 00             	cmpl   $0x0,(%eax)
    20eb:	0f 84 02 02 00 00    	je     22f3 <__split_and_process_bio+0x680>
    20f1:	8b 4c 24 30          	mov    0x30(%esp),%ecx
    20f5:	89 c6                	mov    %eax,%esi
    20f7:	8b 5c 24 34          	mov    0x34(%esp),%ebx
    20fb:	2b 48 08             	sub    0x8(%eax),%ecx
    20fe:	1b 58 0c             	sbb    0xc(%eax),%ebx
    2101:	8b 40 10             	mov    0x10(%eax),%eax
    2104:	8b 56 14             	mov    0x14(%esi),%edx
    2107:	89 44 24 08          	mov    %eax,0x8(%esp)
    210b:	29 4c 24 08          	sub    %ecx,0x8(%esp)
    210f:	89 54 24 0c          	mov    %edx,0xc(%esp)
    2113:	19 5c 24 0c          	sbb    %ebx,0xc(%esp)
    2117:	8b 56 1c             	mov    0x1c(%esi),%edx
    211a:	8b 46 18             	mov    0x18(%esi),%eax
    211d:	89 d7                	mov    %edx,%edi
    211f:	09 c7                	or     %eax,%edi
    2121:	74 57                	je     217a <__split_and_process_bio+0x507>
    2123:	89 ce                	mov    %ecx,%esi
    2125:	89 df                	mov    %ebx,%edi
    2127:	01 c6                	add    %eax,%esi
    2129:	11 d7                	adc    %edx,%edi
    212b:	89 34 24             	mov    %esi,(%esp)
    212e:	89 c6                	mov    %eax,%esi
    2130:	f7 de                	neg    %esi
    2132:	89 7c 24 04          	mov    %edi,0x4(%esp)
    2136:	89 d7                	mov    %edx,%edi
    2138:	83 d7 00             	adc    $0x0,%edi
    213b:	f7 df                	neg    %edi
    213d:	89 74 24 3c          	mov    %esi,0x3c(%esp)
    2141:	23 34 24             	and    (%esp),%esi
    2144:	89 7c 24 40          	mov    %edi,0x40(%esp)
    2148:	23 7c 24 04          	and    0x4(%esp),%edi
    214c:	89 74 24 68          	mov    %esi,0x68(%esp)
    2150:	8b 44 24 68          	mov    0x68(%esp),%eax
    2154:	89 7c 24 6c          	mov    %edi,0x6c(%esp)
    2158:	8b 54 24 6c          	mov    0x6c(%esp),%edx
    215c:	29 c8                	sub    %ecx,%eax
    215e:	89 c1                	mov    %eax,%ecx
    2160:	19 da                	sbb    %ebx,%edx
    2162:	39 54 24 0c          	cmp    %edx,0xc(%esp)
    2166:	89 d3                	mov    %edx,%ebx
    2168:	72 10                	jb     217a <__split_and_process_bio+0x507>
    216a:	77 06                	ja     2172 <__split_and_process_bio+0x4ff>
    216c:	39 44 24 08          	cmp    %eax,0x8(%esp)
    2170:	76 08                	jbe    217a <__split_and_process_bio+0x507>
    2172:	89 4c 24 08          	mov    %ecx,0x8(%esp)
    2176:	89 5c 24 0c          	mov    %ebx,0xc(%esp)
    217a:	8b 54 24 20          	mov    0x20(%esp),%edx
    217e:	8b 82 90 00 00 00    	mov    0x90(%edx),%eax
    2184:	ba 10 00 00 00       	mov    $0x10,%edx
    2189:	e8 fc ff ff ff       	call   218a <__split_and_process_bio+0x517>
			218a: R_386_PC32	mempool_alloc
    218e:	8b 4c 24 1c          	mov    0x1c(%esp),%ecx
    2192:	89 44 24 38          	mov    %eax,0x38(%esp)
    2196:	89 c7                	mov    %eax,%edi
    2198:	89 08                	mov    %ecx,(%eax)
    219a:	8b 5c 24 10          	mov    0x10(%esp),%ebx
    219e:	83 c7 08             	add    $0x8,%edi
    21a1:	b9 02 00 00 00       	mov    $0x2,%ecx
    21a6:	89 58 04             	mov    %ebx,0x4(%eax)
    21a9:	31 c0                	xor    %eax,%eax
    21ab:	f3 ab                	rep stos %eax,%es:(%edi)
    21ad:	8b 4c 24 28          	mov    0x28(%esp),%ecx
    21b1:	8b 54 24 24          	mov    0x24(%esp),%edx
    21b5:	89 4c 24 40          	mov    %ecx,0x40(%esp)
    21b9:	8b 4c 24 0c          	mov    0xc(%esp),%ecx
    21bd:	39 4c 24 28          	cmp    %ecx,0x28(%esp)
    21c1:	89 54 24 3c          	mov    %edx,0x3c(%esp)
    21c5:	72 1c                	jb     21e3 <__split_and_process_bio+0x570>
    21c7:	77 0a                	ja     21d3 <__split_and_process_bio+0x560>
    21c9:	8b 5c 24 08          	mov    0x8(%esp),%ebx
    21cd:	39 5c 24 24          	cmp    %ebx,0x24(%esp)
    21d1:	76 10                	jbe    21e3 <__split_and_process_bio+0x570>
    21d3:	8b 74 24 08          	mov    0x8(%esp),%esi
    21d7:	8b 7c 24 0c          	mov    0xc(%esp),%edi
    21db:	89 74 24 3c          	mov    %esi,0x3c(%esp)
    21df:	89 7c 24 40          	mov    %edi,0x40(%esp)
    21e3:	8b 7c 24 20          	mov    0x20(%esp),%edi
    21e7:	8b 44 24 3c          	mov    0x3c(%esp),%eax
    21eb:	8b 54 24 50          	mov    0x50(%esp),%edx
    21ef:	8b 4c 24 4c          	mov    0x4c(%esp),%ecx
    21f3:	8b bf 94 00 00 00    	mov    0x94(%edi),%edi
    21f9:	89 44 24 44          	mov    %eax,0x44(%esp)
    21fd:	8b 74 24 58          	mov    0x58(%esp),%esi
    2201:	b8 10 00 00 00       	mov    $0x10,%eax
    2206:	89 7c 24 54          	mov    %edi,0x54(%esp)
    220a:	03 4a 08             	add    0x8(%edx),%ecx
    220d:	ba 01 00 00 00       	mov    $0x1,%edx
    2212:	89 4c 24 5c          	mov    %ecx,0x5c(%esp)
    2216:	89 f9                	mov    %edi,%ecx
    2218:	03 75 38             	add    0x38(%ebp),%esi
    221b:	e8 fc ff ff ff       	call   221c <__split_and_process_bio+0x5a9>
			221c: R_386_PC32	bio_alloc_bioset
    2220:	b9 03 00 00 00       	mov    $0x3,%ecx
    2225:	c7 40 48 36 0f 00 00 	movl   $0xf36,0x48(%eax)
			2228: R_386_32	.text
    222c:	89 c3                	mov    %eax,%ebx
    222e:	8b 40 38             	mov    0x38(%eax),%eax
    2231:	89 c7                	mov    %eax,%edi
    2233:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)
    2235:	8b 7c 24 34          	mov    0x34(%esp),%edi
    2239:	8b 74 24 30          	mov    0x30(%esp),%esi
    223d:	89 7b 04             	mov    %edi,0x4(%ebx)
    2240:	89 33                	mov    %esi,(%ebx)
    2242:	8b 45 0c             	mov    0xc(%ebp),%eax
    2245:	89 43 0c             	mov    %eax,0xc(%ebx)
    2248:	8b 45 14             	mov    0x14(%ebp),%eax
    224b:	66 c7 43 18 01 00    	movw   $0x1,0x18(%ebx)
    2251:	83 e0 df             	and    $0xffffffdf,%eax
    2254:	89 43 14             	mov    %eax,0x14(%ebx)
    2257:	c1 64 24 44 09       	shll   $0x9,0x44(%esp)
    225c:	8b 7c 24 44          	mov    0x44(%esp),%edi
    2260:	8b 43 38             	mov    0x38(%ebx),%eax
    2263:	89 7b 20             	mov    %edi,0x20(%ebx)
    2266:	8b 54 24 5c          	mov    0x5c(%esp),%edx
    226a:	89 50 08             	mov    %edx,0x8(%eax)
    226d:	8b 53 38             	mov    0x38(%ebx),%edx
    2270:	8b 43 20             	mov    0x20(%ebx),%eax
    2273:	89 42 04             	mov    %eax,0x4(%edx)
    2276:	83 4b 10 10          	orl    $0x10,0x10(%ebx)
    227a:	83 7d 44 00          	cmpl   $0x0,0x44(%ebp)
    227e:	74 2c                	je     22ac <__split_and_process_bio+0x639>
    2280:	ff 74 24 54          	pushl  0x54(%esp)
    2284:	b1 10                	mov    $0x10,%cl
    2286:	89 ea                	mov    %ebp,%edx
    2288:	89 d8                	mov    %ebx,%eax
    228a:	e8 fc ff ff ff       	call   228b <__split_and_process_bio+0x618>
			228b: R_386_PC32	bio_integrity_clone
    228f:	89 e8                	mov    %ebp,%eax
    2291:	8b 4c 24 60          	mov    0x60(%esp),%ecx
    2295:	8b 54 24 74          	mov    0x74(%esp),%edx
    2299:	e8 fc ff ff ff       	call   229a <__split_and_process_bio+0x627>
			229a: R_386_PC32	bio_sector_offset
    229e:	8b 4c 24 40          	mov    0x40(%esp),%ecx
    22a2:	89 c2                	mov    %eax,%edx
    22a4:	89 d8                	mov    %ebx,%eax
    22a6:	e8 fc ff ff ff       	call   22a7 <__split_and_process_bio+0x634>
			22a7: R_386_PC32	bio_integrity_trim
    22ab:	58                   	pop    %eax
    22ac:	8b 4c 24 38          	mov    0x38(%esp),%ecx
    22b0:	89 da                	mov    %ebx,%edx
    22b2:	8b 44 24 10          	mov    0x10(%esp),%eax
    22b6:	e8 51 ee ff ff       	call   110c <__map_bio>
    22bb:	8b 4c 24 3c          	mov    0x3c(%esp),%ecx
    22bf:	8b 5c 24 40          	mov    0x40(%esp),%ebx
    22c3:	01 4c 24 30          	add    %ecx,0x30(%esp)
    22c7:	11 5c 24 34          	adc    %ebx,0x34(%esp)
    22cb:	29 4c 24 14          	sub    %ecx,0x14(%esp)
    22cf:	19 5c 24 18          	sbb    %ebx,0x18(%esp)
    22d3:	29 4c 24 24          	sub    %ecx,0x24(%esp)
    22d7:	19 5c 24 28          	sbb    %ebx,0x28(%esp)
    22db:	8b 5c 24 28          	mov    0x28(%esp),%ebx
    22df:	0b 5c 24 24          	or     0x24(%esp),%ebx
    22e3:	0f 85 dc fd ff ff    	jne    20c5 <__split_and_process_bio+0x452>
    22e9:	66 8b 5c 24 2e       	mov    0x2e(%esp),%bx
    22ee:	43                   	inc    %ebx
    22ef:	31 d2                	xor    %edx,%edx
    22f1:	eb 0a                	jmp    22fd <__split_and_process_bio+0x68a>
    22f3:	66 8b 5c 24 2e       	mov    0x2e(%esp),%bx
    22f8:	ba fb ff ff ff       	mov    $0xfffffffb,%edx
    22fd:	66 89 5c 24 2e       	mov    %bx,0x2e(%esp)
    2302:	85 d2                	test   %edx,%edx
    2304:	75 0e                	jne    2314 <__split_and_process_bio+0x6a1>
    2306:	8b 74 24 18          	mov    0x18(%esp),%esi
    230a:	0b 74 24 14          	or     0x14(%esp),%esi
    230e:	0f 85 80 fa ff ff    	jne    1d94 <__split_and_process_bio+0x121>
    2314:	8b 44 24 1c          	mov    0x1c(%esp),%eax
    2318:	e8 e3 ec ff ff       	call   1000 <dec_pending>
    231d:	8b 44 24 48          	mov    0x48(%esp),%eax
    2321:	83 c4 74             	add    $0x74,%esp
    2324:	5b                   	pop    %ebx
    2325:	5e                   	pop    %esi
    2326:	5f                   	pop    %edi
    2327:	5d                   	pop    %ebp
    2328:	e9 fc ff ff ff       	jmp    2329 <__split_and_process_bio+0x6b6>
			2329: R_386_PC32	dm_table_put
    232d:	83 c4 74             	add    $0x74,%esp
    2330:	5b                   	pop    %ebx
    2331:	5e                   	pop    %esi
    2332:	5f                   	pop    %edi
    2333:	5d                   	pop    %ebp
    2334:	c3                   	ret    

00002335 <dm_flush>:
    2335:	56                   	push   %esi
    2336:	ba 02 00 00 00       	mov    $0x2,%edx
    233b:	53                   	push   %ebx
    233c:	89 c3                	mov    %eax,%ebx
    233e:	e8 d0 f2 ff ff       	call   1613 <dm_wait_for_completion>
    2343:	8d b3 b8 01 00 00    	lea    0x1b8(%ebx),%esi
    2349:	89 f0                	mov    %esi,%eax
    234b:	e8 fc ff ff ff       	call   234c <dm_flush+0x17>
			234c: R_386_PC32	bio_init
    2350:	8b 83 bc 00 00 00    	mov    0xbc(%ebx),%eax
    2356:	89 f2                	mov    %esi,%edx
    2358:	c7 83 cc 01 00 00 21 	movl   $0x21,0x1cc(%ebx)
    235f:	00 00 00 
    2362:	89 83 c4 01 00 00    	mov    %eax,0x1c4(%ebx)
    2368:	89 d8                	mov    %ebx,%eax
    236a:	e8 04 f9 ff ff       	call   1c73 <__split_and_process_bio>
    236f:	89 d8                	mov    %ebx,%eax
    2371:	ba 02 00 00 00       	mov    $0x2,%edx
    2376:	5b                   	pop    %ebx
    2377:	5e                   	pop    %esi
    2378:	e9 96 f2 ff ff       	jmp    1613 <dm_wait_for_completion>

0000237d <dm_wq_work>:
    237d:	57                   	push   %edi
    237e:	89 c7                	mov    %eax,%edi
    2380:	56                   	push   %esi
    2381:	83 c7 18             	add    $0x18,%edi
    2384:	53                   	push   %ebx
    2385:	8d 58 9c             	lea    -0x64(%eax),%ebx
    2388:	89 d8                	mov    %ebx,%eax
    238a:	e8 fc ff ff ff       	call   238b <dm_wq_work+0xe>
			238b: R_386_PC32	down_write
    238f:	e9 d3 00 00 00       	jmp    2467 <dm_wq_work+0xea>
    2394:	89 f8                	mov    %edi,%eax
    2396:	e8 fc ff ff ff       	call   2397 <dm_wq_work+0x1a>
			2397: R_386_PC32	_spin_lock_irq
    239b:	8b 73 74             	mov    0x74(%ebx),%esi
    239e:	85 f6                	test   %esi,%esi
    23a0:	74 18                	je     23ba <dm_wq_work+0x3d>
    23a2:	8b 46 08             	mov    0x8(%esi),%eax
    23a5:	85 c0                	test   %eax,%eax
    23a7:	89 43 74             	mov    %eax,0x74(%ebx)
    23aa:	75 07                	jne    23b3 <dm_wq_work+0x36>
    23ac:	c7 43 78 00 00 00 00 	movl   $0x0,0x78(%ebx)
    23b3:	c7 46 08 00 00 00 00 	movl   $0x0,0x8(%esi)
    23ba:	fe 07                	incb   (%edi)
    23bc:	ff 15 0c 00 00 00    	call   *0xc
			23be: R_386_32	pv_irq_ops
    23c2:	85 f6                	test   %esi,%esi
    23c4:	75 0a                	jne    23d0 <dm_wq_work+0x53>
    23c6:	f0 80 63 30 bf       	lock andb $0xbf,0x30(%ebx)
    23cb:	e9 a1 00 00 00       	jmp    2471 <dm_wq_work+0xf4>
    23d0:	89 d8                	mov    %ebx,%eax
    23d2:	e8 fc ff ff ff       	call   23d3 <dm_wq_work+0x56>
			23d3: R_386_PC32	up_write
    23d7:	8b 43 34             	mov    0x34(%ebx),%eax
    23da:	f6 80 b1 01 00 00 20 	testb  $0x20,0x1b1(%eax)
    23e1:	74 09                	je     23ec <dm_wq_work+0x6f>
    23e3:	89 f0                	mov    %esi,%eax
    23e5:	e8 fc ff ff ff       	call   23e6 <dm_wq_work+0x69>
			23e6: R_386_PC32	generic_make_request
    23ea:	eb 74                	jmp    2460 <dm_wq_work+0xe3>
    23ec:	f6 46 14 20          	testb  $0x20,0x14(%esi)
    23f0:	74 65                	je     2457 <dm_wq_work+0xda>
    23f2:	89 d8                	mov    %ebx,%eax
    23f4:	c7 83 80 00 00 00 00 	movl   $0x0,0x80(%ebx)
    23fb:	00 00 00 
    23fe:	e8 32 ff ff ff       	call   2335 <dm_flush>
    2403:	8b 46 14             	mov    0x14(%esi),%eax
    2406:	a8 20                	test   $0x20,%al
    2408:	74 06                	je     2410 <dm_wq_work+0x93>
    240a:	83 7e 38 00          	cmpl   $0x0,0x38(%esi)
    240e:	74 6b                	je     247b <dm_wq_work+0xfe>
    2410:	89 d8                	mov    %ebx,%eax
    2412:	89 f2                	mov    %esi,%edx
    2414:	e8 5a f8 ff ff       	call   1c73 <__split_and_process_bio>
    2419:	89 d8                	mov    %ebx,%eax
    241b:	e8 15 ff ff ff       	call   2335 <dm_flush>
    2420:	8b 93 80 00 00 00    	mov    0x80(%ebx),%edx
    2426:	83 fa 02             	cmp    $0x2,%edx
    2429:	74 09                	je     2434 <dm_wq_work+0xb7>
    242b:	89 f0                	mov    %esi,%eax
    242d:	e8 fc ff ff ff       	call   242e <dm_wq_work+0xb1>
			242e: R_386_PC32	bio_endio
    2432:	eb 2c                	jmp    2460 <dm_wq_work+0xe3>
    2434:	89 f8                	mov    %edi,%eax
    2436:	e8 fc ff ff ff       	call   2437 <dm_wq_work+0xba>
			2437: R_386_PC32	_spin_lock_irq
    243b:	8b 43 74             	mov    0x74(%ebx),%eax
    243e:	89 46 08             	mov    %eax,0x8(%esi)
    2441:	83 7b 78 00          	cmpl   $0x0,0x78(%ebx)
    2445:	89 73 74             	mov    %esi,0x74(%ebx)
    2448:	75 03                	jne    244d <dm_wq_work+0xd0>
    244a:	89 73 78             	mov    %esi,0x78(%ebx)
    244d:	fe 07                	incb   (%edi)
    244f:	ff 15 0c 00 00 00    	call   *0xc
			2451: R_386_32	pv_irq_ops
    2455:	eb 09                	jmp    2460 <dm_wq_work+0xe3>
    2457:	89 f2                	mov    %esi,%edx
    2459:	89 d8                	mov    %ebx,%eax
    245b:	e8 13 f8 ff ff       	call   1c73 <__split_and_process_bio>
    2460:	89 d8                	mov    %ebx,%eax
    2462:	e8 fc ff ff ff       	call   2463 <dm_wq_work+0xe6>
			2463: R_386_PC32	down_write
    2467:	f6 43 30 01          	testb  $0x1,0x30(%ebx)
    246b:	0f 84 23 ff ff ff    	je     2394 <dm_wq_work+0x17>
    2471:	89 d8                	mov    %ebx,%eax
    2473:	5b                   	pop    %ebx
    2474:	5e                   	pop    %esi
    2475:	5f                   	pop    %edi
    2476:	e9 fc ff ff ff       	jmp    2477 <dm_wq_work+0xfa>
			2477: R_386_PC32	up_write
    247b:	f6 c4 02             	test   $0x2,%ah
    247e:	75 90                	jne    2410 <dm_wq_work+0x93>
    2480:	eb 9e                	jmp    2420 <dm_wq_work+0xa3>

00002482 <dm_request>:
    2482:	57                   	push   %edi
    2483:	56                   	push   %esi
    2484:	89 d6                	mov    %edx,%esi
    2486:	53                   	push   %ebx
    2487:	8b 98 a8 01 00 00    	mov    0x1a8(%eax),%ebx
    248d:	8b 7e 14             	mov    0x14(%esi),%edi
    2490:	8b 53 34             	mov    0x34(%ebx),%edx
    2493:	f6 82 b1 01 00 00 20 	testb  $0x20,0x1b1(%edx)
    249a:	74 1c                	je     24b8 <dm_request+0x36>
    249c:	83 e7 20             	and    $0x20,%edi
    249f:	74 0a                	je     24ab <dm_request+0x29>
    24a1:	ba a1 ff ff ff       	mov    $0xffffffa1,%edx
    24a6:	e9 cd 00 00 00       	jmp    2578 <dm_request+0xf6>
    24ab:	89 f2                	mov    %esi,%edx
    24ad:	ff 93 90 01 00 00    	call   *0x190(%ebx)
    24b3:	e9 2f 01 00 00       	jmp    25e7 <dm_request+0x165>
    24b8:	89 d8                	mov    %ebx,%eax
    24ba:	83 e7 01             	and    $0x1,%edi
    24bd:	e8 fc ff ff ff       	call   24be <dm_request+0x3c>
			24be: R_386_PC32	down_read
    24c2:	8b 43 38             	mov    0x38(%ebx),%eax
    24c5:	64 8b 15 00 00 00 00 	mov    %fs:0x0,%edx
			24c8: R_386_32	per_cpu__cpu_number
    24cc:	8b 80 84 01 00 00    	mov    0x184(%eax),%eax
    24d2:	03 04 95 00 00 00 00 	add    0x0(,%edx,4),%eax
			24d5: R_386_32	__per_cpu_offset
    24d9:	ff 44 b8 08          	incl   0x8(%eax,%edi,4)
    24dd:	8b 43 38             	mov    0x38(%ebx),%eax
    24e0:	83 b8 74 01 00 00 00 	cmpl   $0x0,0x174(%eax)
    24e7:	74 1e                	je     2507 <dm_request+0x85>
    24e9:	31 c9                	xor    %ecx,%ecx
    24eb:	83 f8 cc             	cmp    $0xffffffcc,%eax
    24ee:	74 06                	je     24f6 <dm_request+0x74>
    24f0:	8b 48 4c             	mov    0x4c(%eax),%ecx
    24f3:	83 e9 4c             	sub    $0x4c,%ecx
    24f6:	8b 81 84 01 00 00    	mov    0x184(%ecx),%eax
    24fc:	03 04 95 00 00 00 00 	add    0x0(,%edx,4),%eax
			24ff: R_386_32	__per_cpu_offset
    2503:	ff 44 b8 08          	incl   0x8(%eax,%edi,4)
    2507:	8b 43 38             	mov    0x38(%ebx),%eax
    250a:	8b 4e 20             	mov    0x20(%esi),%ecx
    250d:	8b 80 84 01 00 00    	mov    0x184(%eax),%eax
    2513:	03 04 95 00 00 00 00 	add    0x0(,%edx,4),%eax
			2516: R_386_32	__per_cpu_offset
    251a:	c1 e9 09             	shr    $0x9,%ecx
    251d:	01 0c b8             	add    %ecx,(%eax,%edi,4)
    2520:	8b 43 38             	mov    0x38(%ebx),%eax
    2523:	83 b8 74 01 00 00 00 	cmpl   $0x0,0x174(%eax)
    252a:	74 23                	je     254f <dm_request+0xcd>
    252c:	31 c9                	xor    %ecx,%ecx
    252e:	83 f8 cc             	cmp    $0xffffffcc,%eax
    2531:	74 06                	je     2539 <dm_request+0xb7>
    2533:	8b 48 4c             	mov    0x4c(%eax),%ecx
    2536:	83 e9 4c             	sub    $0x4c,%ecx
    2539:	8b 81 84 01 00 00    	mov    0x184(%ecx),%eax
    253f:	03 04 95 00 00 00 00 	add    0x0(,%edx,4),%eax
			2542: R_386_32	__per_cpu_offset
    2546:	8b 56 20             	mov    0x20(%esi),%edx
    2549:	c1 ea 09             	shr    $0x9,%edx
    254c:	01 14 b8             	add    %edx,(%eax,%edi,4)
    254f:	f6 43 30 40          	testb  $0x40,0x30(%ebx)
    2553:	75 06                	jne    255b <dm_request+0xd9>
    2555:	f6 46 14 20          	testb  $0x20,0x14(%esi)
    2559:	74 7a                	je     25d5 <dm_request+0x153>
    255b:	89 d8                	mov    %ebx,%eax
    255d:	e8 fc ff ff ff       	call   255e <dm_request+0xdc>
			255e: R_386_PC32	up_read
    2562:	f6 43 30 01          	testb  $0x1,0x30(%ebx)
    2566:	74 19                	je     2581 <dm_request+0xff>
    2568:	8b 46 14             	mov    0x14(%esi),%eax
    256b:	83 e0 03             	and    $0x3,%eax
    256e:	83 f8 02             	cmp    $0x2,%eax
    2571:	75 0e                	jne    2581 <dm_request+0xff>
    2573:	ba fb ff ff ff       	mov    $0xfffffffb,%edx
    2578:	89 f0                	mov    %esi,%eax
    257a:	e8 fc ff ff ff       	call   257b <dm_request+0xf9>
			257b: R_386_PC32	bio_endio
    257f:	eb 64                	jmp    25e5 <dm_request+0x163>
    2581:	89 d8                	mov    %ebx,%eax
    2583:	e8 fc ff ff ff       	call   2584 <dm_request+0x102>
			2584: R_386_PC32	down_write
    2588:	8d 43 7c             	lea    0x7c(%ebx),%eax
    258b:	e8 fc ff ff ff       	call   258c <dm_request+0x10a>
			258c: R_386_PC32	_spin_lock_irq
    2590:	c7 46 08 00 00 00 00 	movl   $0x0,0x8(%esi)
    2597:	8b 43 78             	mov    0x78(%ebx),%eax
    259a:	85 c0                	test   %eax,%eax
    259c:	74 05                	je     25a3 <dm_request+0x121>
    259e:	89 70 08             	mov    %esi,0x8(%eax)
    25a1:	eb 03                	jmp    25a6 <dm_request+0x124>
    25a3:	89 73 74             	mov    %esi,0x74(%ebx)
    25a6:	89 73 78             	mov    %esi,0x78(%ebx)
    25a9:	fe 43 7c             	incb   0x7c(%ebx)
    25ac:	ff 15 0c 00 00 00    	call   *0xc
			25ae: R_386_32	pv_irq_ops
    25b2:	f0 0f ba 6b 30 06    	lock btsl $0x6,0x30(%ebx)
    25b8:	19 c0                	sbb    %eax,%eax
    25ba:	85 c0                	test   %eax,%eax
    25bc:	75 0e                	jne    25cc <dm_request+0x14a>
    25be:	8b 83 84 00 00 00    	mov    0x84(%ebx),%eax
    25c4:	8d 53 64             	lea    0x64(%ebx),%edx
    25c7:	e8 fc ff ff ff       	call   25c8 <dm_request+0x146>
			25c8: R_386_PC32	queue_work
    25cc:	89 d8                	mov    %ebx,%eax
    25ce:	e8 fc ff ff ff       	call   25cf <dm_request+0x14d>
			25cf: R_386_PC32	up_write
    25d3:	eb 10                	jmp    25e5 <dm_request+0x163>
    25d5:	89 d8                	mov    %ebx,%eax
    25d7:	89 f2                	mov    %esi,%edx
    25d9:	e8 95 f6 ff ff       	call   1c73 <__split_and_process_bio>
    25de:	89 d8                	mov    %ebx,%eax
    25e0:	e8 fc ff ff ff       	call   25e1 <dm_request+0x15f>
			25e1: R_386_PC32	up_read
    25e5:	31 c0                	xor    %eax,%eax
    25e7:	5b                   	pop    %ebx
    25e8:	5e                   	pop    %esi
    25e9:	5f                   	pop    %edi
    25ea:	c3                   	ret    

000025eb <dm_lld_busy>:
    25eb:	56                   	push   %esi
    25ec:	53                   	push   %ebx
    25ed:	8b b0 a8 01 00 00    	mov    0x1a8(%eax),%esi
    25f3:	89 f0                	mov    %esi,%eax
    25f5:	e8 fc ff ff ff       	call   25f6 <dm_lld_busy+0xb>
			25f6: R_386_PC32	dm_get_table
    25fa:	85 c0                	test   %eax,%eax
    25fc:	89 c3                	mov    %eax,%ebx
    25fe:	74 0f                	je     260f <dm_lld_busy+0x24>
    2600:	f6 46 30 01          	testb  $0x1,0x30(%esi)
    2604:	75 09                	jne    260f <dm_lld_busy+0x24>
    2606:	e8 fc ff ff ff       	call   2607 <dm_lld_busy+0x1c>
			2607: R_386_PC32	dm_table_any_busy_target
    260b:	89 c6                	mov    %eax,%esi
    260d:	eb 05                	jmp    2614 <dm_lld_busy+0x29>
    260f:	be 01 00 00 00       	mov    $0x1,%esi
    2614:	89 d8                	mov    %ebx,%eax
    2616:	e8 fc ff ff ff       	call   2617 <dm_lld_busy+0x2c>
			2617: R_386_PC32	dm_table_put
    261b:	89 f0                	mov    %esi,%eax
    261d:	5b                   	pop    %ebx
    261e:	5e                   	pop    %esi
    261f:	c3                   	ret    

00002620 <dm_merge_bvec>:
    2620:	55                   	push   %ebp
    2621:	89 c5                	mov    %eax,%ebp
    2623:	57                   	push   %edi
    2624:	56                   	push   %esi
    2625:	53                   	push   %ebx
    2626:	89 d3                	mov    %edx,%ebx
    2628:	83 ec 2c             	sub    $0x2c,%esp
    262b:	89 4c 24 20          	mov    %ecx,0x20(%esp)
    262f:	8b 80 a8 01 00 00    	mov    0x1a8(%eax),%eax
    2635:	e8 fc ff ff ff       	call   2636 <dm_merge_bvec+0x16>
			2636: R_386_PC32	dm_get_table
    263a:	31 d2                	xor    %edx,%edx
    263c:	85 c0                	test   %eax,%eax
    263e:	89 44 24 14          	mov    %eax,0x14(%esp)
    2642:	0f 84 07 01 00 00    	je     274f <dm_merge_bvec+0x12f>
    2648:	8b 53 04             	mov    0x4(%ebx),%edx
    264b:	8b 4b 08             	mov    0x8(%ebx),%ecx
    264e:	e8 fc ff ff ff       	call   264f <dm_merge_bvec+0x2f>
			264f: R_386_PC32	dm_table_find_target
    2653:	83 38 00             	cmpl   $0x0,(%eax)
    2656:	0f 84 e0 00 00 00    	je     273c <dm_merge_bvec+0x11c>
    265c:	8b 50 10             	mov    0x10(%eax),%edx
    265f:	8b 48 14             	mov    0x14(%eax),%ecx
    2662:	8b 73 04             	mov    0x4(%ebx),%esi
    2665:	8b 7b 08             	mov    0x8(%ebx),%edi
    2668:	2b 70 08             	sub    0x8(%eax),%esi
    266b:	1b 78 0c             	sbb    0xc(%eax),%edi
    266e:	89 14 24             	mov    %edx,(%esp)
    2671:	29 34 24             	sub    %esi,(%esp)
    2674:	89 4c 24 04          	mov    %ecx,0x4(%esp)
    2678:	19 7c 24 04          	sbb    %edi,0x4(%esp)
    267c:	8b 50 18             	mov    0x18(%eax),%edx
    267f:	8b 48 1c             	mov    0x1c(%eax),%ecx
    2682:	89 54 24 0c          	mov    %edx,0xc(%esp)
    2686:	89 4c 24 10          	mov    %ecx,0x10(%esp)
    268a:	09 d1                	or     %edx,%ecx
    268c:	74 65                	je     26f3 <dm_merge_bvec+0xd3>
    268e:	8b 54 24 0c          	mov    0xc(%esp),%edx
    2692:	8b 4c 24 10          	mov    0x10(%esp),%ecx
    2696:	01 f2                	add    %esi,%edx
    2698:	11 f9                	adc    %edi,%ecx
    269a:	89 54 24 24          	mov    %edx,0x24(%esp)
    269e:	8b 54 24 0c          	mov    0xc(%esp),%edx
    26a2:	89 4c 24 28          	mov    %ecx,0x28(%esp)
    26a6:	8b 4c 24 10          	mov    0x10(%esp),%ecx
    26aa:	f7 da                	neg    %edx
    26ac:	83 d1 00             	adc    $0x0,%ecx
    26af:	f7 d9                	neg    %ecx
    26b1:	89 4c 24 10          	mov    %ecx,0x10(%esp)
    26b5:	8b 4c 24 24          	mov    0x24(%esp),%ecx
    26b9:	89 54 24 0c          	mov    %edx,0xc(%esp)
    26bd:	21 d1                	and    %edx,%ecx
    26bf:	8b 54 24 28          	mov    0x28(%esp),%edx
    26c3:	23 54 24 10          	and    0x10(%esp),%edx
    26c7:	89 4c 24 18          	mov    %ecx,0x18(%esp)
    26cb:	89 54 24 1c          	mov    %edx,0x1c(%esp)
    26cf:	8b 54 24 18          	mov    0x18(%esp),%edx
    26d3:	8b 4c 24 1c          	mov    0x1c(%esp),%ecx
    26d7:	29 f2                	sub    %esi,%edx
    26d9:	19 f9                	sbb    %edi,%ecx
    26db:	89 d6                	mov    %edx,%esi
    26dd:	39 4c 24 04          	cmp    %ecx,0x4(%esp)
    26e1:	89 cf                	mov    %ecx,%edi
    26e3:	72 0e                	jb     26f3 <dm_merge_bvec+0xd3>
    26e5:	77 05                	ja     26ec <dm_merge_bvec+0xcc>
    26e7:	39 14 24             	cmp    %edx,(%esp)
    26ea:	76 07                	jbe    26f3 <dm_merge_bvec+0xd3>
    26ec:	89 34 24             	mov    %esi,(%esp)
    26ef:	89 7c 24 04          	mov    %edi,0x4(%esp)
    26f3:	8b 4c 24 04          	mov    0x4(%esp),%ecx
    26f7:	8b 14 24             	mov    (%esp),%edx
    26fa:	83 f9 00             	cmp    $0x0,%ecx
    26fd:	77 08                	ja     2707 <dm_merge_bvec+0xe7>
    26ff:	81 fa 00 08 00 00    	cmp    $0x800,%edx
    2705:	76 05                	jbe    270c <dm_merge_bvec+0xec>
    2707:	ba 00 08 00 00       	mov    $0x800,%edx
    270c:	c1 e2 09             	shl    $0x9,%edx
    270f:	2b 53 0c             	sub    0xc(%ebx),%edx
    2712:	83 fa 00             	cmp    $0x0,%edx
    2715:	7c 1a                	jl     2731 <dm_merge_bvec+0x111>
    2717:	74 1a                	je     2733 <dm_merge_bvec+0x113>
    2719:	8b 48 04             	mov    0x4(%eax),%ecx
    271c:	8b 71 54             	mov    0x54(%ecx),%esi
    271f:	85 f6                	test   %esi,%esi
    2721:	74 10                	je     2733 <dm_merge_bvec+0x113>
    2723:	52                   	push   %edx
    2724:	8b 4c 24 24          	mov    0x24(%esp),%ecx
    2728:	89 da                	mov    %ebx,%edx
    272a:	ff d6                	call   *%esi
    272c:	59                   	pop    %ecx
    272d:	89 c2                	mov    %eax,%edx
    272f:	eb 0d                	jmp    273e <dm_merge_bvec+0x11e>
    2731:	31 d2                	xor    %edx,%edx
    2733:	83 bd 5c 02 00 00 08 	cmpl   $0x8,0x25c(%ebp)
    273a:	77 02                	ja     273e <dm_merge_bvec+0x11e>
    273c:	31 d2                	xor    %edx,%edx
    273e:	8b 44 24 14          	mov    0x14(%esp),%eax
    2742:	89 54 24 08          	mov    %edx,0x8(%esp)
    2746:	e8 fc ff ff ff       	call   2747 <dm_merge_bvec+0x127>
			2747: R_386_PC32	dm_table_put
    274b:	8b 54 24 08          	mov    0x8(%esp),%edx
    274f:	8b 4c 24 20          	mov    0x20(%esp),%ecx
    2753:	8b 41 04             	mov    0x4(%ecx),%eax
    2756:	39 c2                	cmp    %eax,%edx
    2758:	77 09                	ja     2763 <dm_merge_bvec+0x143>
    275a:	8b 4b 0c             	mov    0xc(%ebx),%ecx
    275d:	c1 e9 09             	shr    $0x9,%ecx
    2760:	0f 44 d0             	cmove  %eax,%edx
    2763:	83 c4 2c             	add    $0x2c,%esp
    2766:	89 d0                	mov    %edx,%eax
    2768:	5b                   	pop    %ebx
    2769:	5e                   	pop    %esi
    276a:	5f                   	pop    %edi
    276b:	5d                   	pop    %ebp
    276c:	c3                   	ret    

0000276d <dm_any_congested>:
    276d:	56                   	push   %esi
    276e:	89 c6                	mov    %eax,%esi
    2770:	53                   	push   %ebx
    2771:	83 ec 04             	sub    $0x4,%esp
    2774:	f6 40 30 01          	testb  $0x1,0x30(%eax)
    2778:	75 39                	jne    27b3 <dm_any_congested+0x46>
    277a:	89 14 24             	mov    %edx,(%esp)
    277d:	e8 fc ff ff ff       	call   277e <dm_any_congested+0x11>
			277e: R_386_PC32	dm_get_table
    2782:	8b 14 24             	mov    (%esp),%edx
    2785:	85 c0                	test   %eax,%eax
    2787:	89 c3                	mov    %eax,%ebx
    2789:	74 28                	je     27b3 <dm_any_congested+0x46>
    278b:	8b 46 34             	mov    0x34(%esi),%eax
    278e:	f6 80 b1 01 00 00 20 	testb  $0x20,0x1b1(%eax)
    2795:	74 0a                	je     27a1 <dm_any_congested+0x34>
    2797:	8b b0 d0 00 00 00    	mov    0xd0(%eax),%esi
    279d:	21 d6                	and    %edx,%esi
    279f:	eb 09                	jmp    27aa <dm_any_congested+0x3d>
    27a1:	89 d8                	mov    %ebx,%eax
    27a3:	e8 fc ff ff ff       	call   27a4 <dm_any_congested+0x37>
			27a4: R_386_PC32	dm_table_any_congested
    27a8:	89 c6                	mov    %eax,%esi
    27aa:	89 d8                	mov    %ebx,%eax
    27ac:	e8 fc ff ff ff       	call   27ad <dm_any_congested+0x40>
			27ad: R_386_PC32	dm_table_put
    27b1:	eb 02                	jmp    27b5 <dm_any_congested+0x48>
    27b3:	89 d6                	mov    %edx,%esi
    27b5:	89 f0                	mov    %esi,%eax
    27b7:	5b                   	pop    %ebx
    27b8:	5b                   	pop    %ebx
    27b9:	5e                   	pop    %esi
    27ba:	c3                   	ret    

000027bb <dm_request_fn>:
    27bb:	55                   	push   %ebp
    27bc:	57                   	push   %edi
    27bd:	56                   	push   %esi
    27be:	53                   	push   %ebx
    27bf:	89 c3                	mov    %eax,%ebx
    27c1:	83 ec 10             	sub    $0x10,%esp
    27c4:	8b a8 a8 01 00 00    	mov    0x1a8(%eax),%ebp
    27ca:	89 e8                	mov    %ebp,%eax
    27cc:	e8 fc ff ff ff       	call   27cd <dm_request_fn+0x12>
			27cd: R_386_PC32	dm_get_table
    27d1:	8d 7d 28             	lea    0x28(%ebp),%edi
    27d4:	89 44 24 04          	mov    %eax,0x4(%esp)
    27d8:	8d 85 c8 00 00 00    	lea    0xc8(%ebp),%eax
    27de:	89 04 24             	mov    %eax,(%esp)
    27e1:	89 7c 24 08          	mov    %edi,0x8(%esp)
    27e5:	e9 08 01 00 00       	jmp    28f2 <dm_request_fn+0x137>
    27ea:	89 d8                	mov    %ebx,%eax
    27ec:	e8 fc ff ff ff       	call   27ed <dm_request_fn+0x32>
			27ed: R_386_PC32	blk_peek_request
    27f1:	85 c0                	test   %eax,%eax
    27f3:	89 c6                	mov    %eax,%esi
    27f5:	0f 84 0b 01 00 00    	je     2906 <dm_request_fn+0x14b>
    27fb:	3b 04 24             	cmp    (%esp),%eax
    27fe:	75 47                	jne    2847 <dm_request_fn+0x8c>
    2800:	8b 83 14 02 00 00    	mov    0x214(%ebx),%eax
    2806:	03 83 10 02 00 00    	add    0x210(%ebx),%eax
    280c:	85 c0                	test   %eax,%eax
    280e:	0f 85 f2 00 00 00    	jne    2906 <dm_request_fn+0x14b>
    2814:	89 d8                	mov    %ebx,%eax
    2816:	e8 fc ff ff ff       	call   2817 <dm_request_fn+0x5c>
			2817: R_386_PC32	blk_stop_queue
    281b:	8b 04 24             	mov    (%esp),%eax
    281e:	e8 fc ff ff ff       	call   281f <dm_request_fn+0x64>
			281f: R_386_PC32	blk_start_request
    2823:	31 d2                	xor    %edx,%edx
    2825:	8b 04 24             	mov    (%esp),%eax
    2828:	e8 fc ff ff ff       	call   2829 <dm_request_fn+0x6e>
			2829: R_386_PC32	__blk_end_request_all
    282d:	8d 45 58             	lea    0x58(%ebp),%eax
    2830:	b9 01 00 00 00       	mov    $0x1,%ecx
    2835:	ba 03 00 00 00       	mov    $0x3,%edx
    283a:	6a 00                	push   $0x0
    283c:	e8 fc ff ff ff       	call   283d <dm_request_fn+0x82>
			283d: R_386_PC32	__wake_up
    2841:	5d                   	pop    %ebp
    2842:	e9 d1 00 00 00       	jmp    2918 <dm_request_fn+0x15d>
    2847:	8b 50 30             	mov    0x30(%eax),%edx
    284a:	8b 48 34             	mov    0x34(%eax),%ecx
    284d:	8b 44 24 04          	mov    0x4(%esp),%eax
    2851:	e8 fc ff ff ff       	call   2852 <dm_request_fn+0x97>
			2852: R_386_PC32	dm_table_find_target
    2856:	89 c7                	mov    %eax,%edi
    2858:	8b 40 04             	mov    0x4(%eax),%eax
    285b:	8b 50 58             	mov    0x58(%eax),%edx
    285e:	85 d2                	test   %edx,%edx
    2860:	74 0c                	je     286e <dm_request_fn+0xb3>
    2862:	89 f8                	mov    %edi,%eax
    2864:	ff d2                	call   *%edx
    2866:	85 c0                	test   %eax,%eax
    2868:	0f 85 98 00 00 00    	jne    2906 <dm_request_fn+0x14b>
    286e:	89 f0                	mov    %esi,%eax
    2870:	e8 fc ff ff ff       	call   2871 <dm_request_fn+0xb6>
			2871: R_386_PC32	blk_start_request
    2875:	8b 83 b8 01 00 00    	mov    0x1b8(%ebx),%eax
    287b:	fe 00                	incb   (%eax)
    287d:	8b 76 6c             	mov    0x6c(%esi),%esi
    2880:	8b 44 24 08          	mov    0x8(%esp),%eax
    2884:	8b 8e c0 00 00 00    	mov    0xc0(%esi),%ecx
    288a:	f0 ff 00             	lock incl (%eax)
    288d:	89 79 04             	mov    %edi,0x4(%ecx)
    2890:	8b 47 04             	mov    0x4(%edi),%eax
    2893:	81 c1 d8 00 00 00    	add    $0xd8,%ecx
    2899:	89 f2                	mov    %esi,%edx
    289b:	89 44 24 0c          	mov    %eax,0xc(%esp)
    289f:	89 f8                	mov    %edi,%eax
    28a1:	8b 7c 24 0c          	mov    0xc(%esp),%edi
    28a5:	ff 57 28             	call   *0x28(%edi)
    28a8:	83 f8 01             	cmp    $0x1,%eax
    28ab:	74 0c                	je     28b9 <dm_request_fn+0xfe>
    28ad:	83 f8 02             	cmp    $0x2,%eax
    28b0:	74 10                	je     28c2 <dm_request_fn+0x107>
    28b2:	83 f8 00             	cmp    $0x0,%eax
    28b5:	74 30                	je     28e7 <dm_request_fn+0x12c>
    28b7:	eb 12                	jmp    28cb <dm_request_fn+0x110>
    28b9:	89 f0                	mov    %esi,%eax
    28bb:	e8 fc ff ff ff       	call   28bc <dm_request_fn+0x101>
			28bc: R_386_PC32	dm_dispatch_request
    28c0:	eb 25                	jmp    28e7 <dm_request_fn+0x12c>
    28c2:	89 f0                	mov    %esi,%eax
    28c4:	e8 fc ff ff ff       	call   28c5 <dm_request_fn+0x10a>
			28c5: R_386_PC32	dm_requeue_unmapped_request
    28c9:	eb 1c                	jmp    28e7 <dm_request_fn+0x12c>
    28cb:	7e 11                	jle    28de <dm_request_fn+0x123>
    28cd:	50                   	push   %eax
    28ce:	68 03 05 00 00       	push   $0x503
			28cf: R_386_32	.rodata.str1.1
    28d3:	e8 fc ff ff ff       	call   28d4 <dm_request_fn+0x119>
			28d4: R_386_PC32	printk
    28d8:	0f 0b                	ud2a   
    28da:	5e                   	pop    %esi
    28db:	5f                   	pop    %edi
    28dc:	eb fe                	jmp    28dc <dm_request_fn+0x121>
    28de:	89 c2                	mov    %eax,%edx
    28e0:	89 f0                	mov    %esi,%eax
    28e2:	e8 fc ff ff ff       	call   28e3 <dm_request_fn+0x128>
			28e3: R_386_PC32	dm_kill_unmapped_request
    28e7:	8b 83 b8 01 00 00    	mov    0x1b8(%ebx),%eax
    28ed:	e8 fc ff ff ff       	call   28ee <dm_request_fn+0x133>
			28ee: R_386_PC32	_spin_lock_irq
    28f2:	8b 83 b0 01 00 00    	mov    0x1b0(%ebx),%eax
    28f8:	84 c0                	test   %al,%al
    28fa:	78 1c                	js     2918 <dm_request_fn+0x15d>
    28fc:	a8 04                	test   $0x4,%al
    28fe:	0f 84 e6 fe ff ff    	je     27ea <dm_request_fn+0x2f>
    2904:	eb 12                	jmp    2918 <dm_request_fn+0x15d>
    2906:	89 d8                	mov    %ebx,%eax
    2908:	e8 fc ff ff ff       	call   2909 <dm_request_fn+0x14e>
			2909: R_386_PC32	elv_queue_empty
    290d:	85 c0                	test   %eax,%eax
    290f:	75 07                	jne    2918 <dm_request_fn+0x15d>
    2911:	89 d8                	mov    %ebx,%eax
    2913:	e8 fc ff ff ff       	call   2914 <dm_request_fn+0x159>
			2914: R_386_PC32	blk_plug_device
    2918:	8b 44 24 04          	mov    0x4(%esp),%eax
    291c:	83 c4 10             	add    $0x10,%esp
    291f:	5b                   	pop    %ebx
    2920:	5e                   	pop    %esi
    2921:	5f                   	pop    %edi
    2922:	5d                   	pop    %ebp
    2923:	e9 fc ff ff ff       	jmp    2924 <dm_request_fn+0x169>
			2924: R_386_PC32	dm_table_put

00002928 <dm_alloc_md_mempools>:
    2928:	55                   	push   %ebp
    2929:	ba d0 00 00 00       	mov    $0xd0,%edx
    292e:	57                   	push   %edi
    292f:	89 c7                	mov    %eax,%edi
    2931:	56                   	push   %esi
    2932:	b8 10 04 00 00       	mov    $0x410,%eax
			2933: R_386_32	kmalloc_caches
    2937:	53                   	push   %ebx
    2938:	e8 fc ff ff ff       	call   2939 <dm_alloc_md_mempools+0x11>
			2939: R_386_PC32	kmem_cache_alloc
    293d:	8b 2d 14 04 00 00    	mov    0x414,%ebp
			293f: R_386_32	kmalloc_caches
    2943:	83 3d 04 00 00 00 00 	cmpl   $0x0,0x4
			2945: R_386_32	__tracepoint_kmalloc
    294a:	89 c3                	mov    %eax,%ebx
    294c:	74 28                	je     2976 <dm_alloc_md_mempools+0x4e>
    294e:	8b 35 10 00 00 00    	mov    0x10,%esi
			2950: R_386_32	__tracepoint_kmalloc
    2954:	85 f6                	test   %esi,%esi
    2956:	74 1e                	je     2976 <dm_alloc_md_mempools+0x4e>
    2958:	68 d0 00 00 00       	push   $0xd0
    295d:	89 da                	mov    %ebx,%edx
    295f:	b8 28 29 00 00       	mov    $0x2928,%eax
			2960: R_386_32	.text
    2964:	b9 0c 00 00 00       	mov    $0xc,%ecx
    2969:	55                   	push   %ebp
    296a:	ff 16                	call   *(%esi)
    296c:	83 c6 04             	add    $0x4,%esi
    296f:	83 3e 00             	cmpl   $0x0,(%esi)
    2972:	58                   	pop    %eax
    2973:	5a                   	pop    %edx
    2974:	eb e0                	jmp    2956 <dm_alloc_md_mempools+0x2e>
    2976:	85 db                	test   %ebx,%ebx
    2978:	89 de                	mov    %ebx,%esi
    297a:	0f 84 94 00 00 00    	je     2a14 <dm_alloc_md_mempools+0xec>
    2980:	83 ff 01             	cmp    $0x1,%edi
    2983:	75 08                	jne    298d <dm_alloc_md_mempools+0x65>
    2985:	ff 35 24 00 00 00    	pushl  0x24
			2987: R_386_32	.bss
    298b:	eb 06                	jmp    2993 <dm_alloc_md_mempools+0x6b>
    298d:	ff 35 30 00 00 00    	pushl  0x30
			298f: R_386_32	.bss
    2993:	b9 00 00 00 00       	mov    $0x0,%ecx
			2994: R_386_32	mempool_free_slab
    2998:	ba 00 00 00 00       	mov    $0x0,%edx
			2999: R_386_32	mempool_alloc_slab
    299d:	b8 00 01 00 00       	mov    $0x100,%eax
    29a2:	e8 fc ff ff ff       	call   29a3 <dm_alloc_md_mempools+0x7b>
			29a3: R_386_PC32	mempool_create
    29a7:	59                   	pop    %ecx
    29a8:	85 c0                	test   %eax,%eax
    29aa:	89 03                	mov    %eax,(%ebx)
    29ac:	74 5d                	je     2a0b <dm_alloc_md_mempools+0xe3>
    29ae:	83 ff 01             	cmp    $0x1,%edi
    29b1:	75 08                	jne    29bb <dm_alloc_md_mempools+0x93>
    29b3:	ff 35 28 00 00 00    	pushl  0x28
			29b5: R_386_32	.bss
    29b9:	eb 06                	jmp    29c1 <dm_alloc_md_mempools+0x99>
    29bb:	ff 35 2c 00 00 00    	pushl  0x2c
			29bd: R_386_32	.bss
    29c1:	ba 00 00 00 00       	mov    $0x0,%edx
			29c2: R_386_32	mempool_alloc_slab
    29c6:	b9 00 00 00 00       	mov    $0x0,%ecx
			29c7: R_386_32	mempool_free_slab
    29cb:	b8 00 01 00 00       	mov    $0x100,%eax
    29d0:	e8 fc ff ff ff       	call   29d1 <dm_alloc_md_mempools+0xa9>
			29d1: R_386_PC32	mempool_create
    29d5:	5a                   	pop    %edx
    29d6:	85 c0                	test   %eax,%eax
    29d8:	89 43 04             	mov    %eax,0x4(%ebx)
    29db:	74 27                	je     2a04 <dm_alloc_md_mempools+0xdc>
    29dd:	4f                   	dec    %edi
    29de:	75 09                	jne    29e9 <dm_alloc_md_mempools+0xc1>
    29e0:	31 d2                	xor    %edx,%edx
    29e2:	b8 10 00 00 00       	mov    $0x10,%eax
    29e7:	eb 07                	jmp    29f0 <dm_alloc_md_mempools+0xc8>
    29e9:	31 d2                	xor    %edx,%edx
    29eb:	b8 00 01 00 00       	mov    $0x100,%eax
    29f0:	e8 fc ff ff ff       	call   29f1 <dm_alloc_md_mempools+0xc9>
			29f1: R_386_PC32	bioset_create
    29f5:	85 c0                	test   %eax,%eax
    29f7:	89 43 08             	mov    %eax,0x8(%ebx)
    29fa:	75 18                	jne    2a14 <dm_alloc_md_mempools+0xec>
    29fc:	8b 43 04             	mov    0x4(%ebx),%eax
    29ff:	e8 fc ff ff ff       	call   2a00 <dm_alloc_md_mempools+0xd8>
			2a00: R_386_PC32	mempool_destroy
    2a04:	8b 03                	mov    (%ebx),%eax
    2a06:	e8 fc ff ff ff       	call   2a07 <dm_alloc_md_mempools+0xdf>
			2a07: R_386_PC32	mempool_destroy
    2a0b:	89 d8                	mov    %ebx,%eax
    2a0d:	31 f6                	xor    %esi,%esi
    2a0f:	e8 fc ff ff ff       	call   2a10 <dm_alloc_md_mempools+0xe8>
			2a10: R_386_PC32	kfree
    2a14:	89 f0                	mov    %esi,%eax
    2a16:	5b                   	pop    %ebx
    2a17:	5e                   	pop    %esi
    2a18:	5f                   	pop    %edi
    2a19:	5d                   	pop    %ebp
    2a1a:	c3                   	ret    
    2a1b:	90                   	nop

00002a1c <dm_table_get>:
    2a1c:	f0 ff 40 04          	lock incl 0x4(%eax)
    2a20:	c3                   	ret    

00002a21 <dm_table_put>:
    2a21:	85 c0                	test   %eax,%eax
    2a23:	74 04                	je     2a29 <dm_table_put+0x8>
    2a25:	f0 ff 48 04          	lock decl 0x4(%eax)
    2a29:	c3                   	ret    

00002a2a <dm_table_get_type>:
    2a2a:	8b 40 08             	mov    0x8(%eax),%eax
    2a2d:	c3                   	ret    

00002a2e <dm_table_request_based>:
    2a2e:	83 78 08 02          	cmpl   $0x2,0x8(%eax)
    2a32:	0f 94 c0             	sete   %al
    2a35:	c3                   	ret    

00002a36 <dm_table_get_md_mempools>:
    2a36:	8b 80 b4 00 00 00    	mov    0xb4(%eax),%eax
    2a3c:	c3                   	ret    

00002a3d <dm_table_get_size>:
    2a3d:	55                   	push   %ebp
    2a3e:	31 d2                	xor    %edx,%edx
    2a40:	89 e5                	mov    %esp,%ebp
    2a42:	57                   	push   %edi
    2a43:	53                   	push   %ebx
    2a44:	8b 88 90 00 00 00    	mov    0x90(%eax),%ecx
    2a4a:	89 c3                	mov    %eax,%ebx
    2a4c:	31 c0                	xor    %eax,%eax
    2a4e:	85 c9                	test   %ecx,%ecx
    2a50:	74 14                	je     2a66 <dm_table_get_size+0x29>
    2a52:	8b 83 98 00 00 00    	mov    0x98(%ebx),%eax
    2a58:	8b 54 c8 fc          	mov    -0x4(%eax,%ecx,8),%edx
    2a5c:	8b 44 c8 f8          	mov    -0x8(%eax,%ecx,8),%eax
    2a60:	83 c0 01             	add    $0x1,%eax
    2a63:	83 d2 00             	adc    $0x0,%edx
    2a66:	5b                   	pop    %ebx
    2a67:	5f                   	pop    %edi
    2a68:	5d                   	pop    %ebp
    2a69:	c3                   	ret    

00002a6a <dm_table_get_target>:
    2a6a:	31 c9                	xor    %ecx,%ecx
    2a6c:	3b 90 90 00 00 00    	cmp    0x90(%eax),%edx
    2a72:	73 09                	jae    2a7d <dm_table_get_target+0x13>
    2a74:	6b ca 2c             	imul   $0x2c,%edx,%ecx
    2a77:	03 88 9c 00 00 00    	add    0x9c(%eax),%ecx
    2a7d:	89 c8                	mov    %ecx,%eax
    2a7f:	c3                   	ret    

00002a80 <dm_table_find_target>:
    2a80:	55                   	push   %ebp
    2a81:	57                   	push   %edi
    2a82:	31 ff                	xor    %edi,%edi
    2a84:	56                   	push   %esi
    2a85:	31 f6                	xor    %esi,%esi
    2a87:	53                   	push   %ebx
    2a88:	83 ec 04             	sub    $0x4,%esp
    2a8b:	8b 58 0c             	mov    0xc(%eax),%ebx
    2a8e:	89 1c 24             	mov    %ebx,(%esp)
    2a91:	31 db                	xor    %ebx,%ebx
    2a93:	eb 25                	jmp    2aba <dm_table_find_target+0x3a>
    2a95:	8d 34 b6             	lea    (%esi,%esi,4),%esi
    2a98:	01 de                	add    %ebx,%esi
    2a9a:	31 db                	xor    %ebx,%ebx
    2a9c:	89 f5                	mov    %esi,%ebp
    2a9e:	c1 e5 05             	shl    $0x5,%ebp
    2aa1:	03 6c b8 50          	add    0x50(%eax,%edi,4),%ebp
    2aa5:	39 4c dd 04          	cmp    %ecx,0x4(%ebp,%ebx,8)
    2aa9:	77 0e                	ja     2ab9 <dm_table_find_target+0x39>
    2aab:	72 06                	jb     2ab3 <dm_table_find_target+0x33>
    2aad:	39 54 dd 00          	cmp    %edx,0x0(%ebp,%ebx,8)
    2ab1:	73 06                	jae    2ab9 <dm_table_find_target+0x39>
    2ab3:	43                   	inc    %ebx
    2ab4:	83 fb 04             	cmp    $0x4,%ebx
    2ab7:	75 ec                	jne    2aa5 <dm_table_find_target+0x25>
    2ab9:	47                   	inc    %edi
    2aba:	3b 3c 24             	cmp    (%esp),%edi
    2abd:	75 d6                	jne    2a95 <dm_table_find_target+0x15>
    2abf:	8d 14 b3             	lea    (%ebx,%esi,4),%edx
    2ac2:	6b d2 2c             	imul   $0x2c,%edx,%edx
    2ac5:	03 90 9c 00 00 00    	add    0x9c(%eax),%edx
    2acb:	89 d0                	mov    %edx,%eax
    2acd:	5a                   	pop    %edx
    2ace:	5b                   	pop    %ebx
    2acf:	5e                   	pop    %esi
    2ad0:	5f                   	pop    %edi
    2ad1:	5d                   	pop    %ebp
    2ad2:	c3                   	ret    

00002ad3 <dm_table_get_num_targets>:
    2ad3:	8b 80 90 00 00 00    	mov    0x90(%eax),%eax
    2ad9:	c3                   	ret    

00002ada <dm_table_get_devices>:
    2ada:	05 a4 00 00 00       	add    $0xa4,%eax
    2adf:	c3                   	ret    

00002ae0 <dm_table_get_mode>:
    2ae0:	8b 80 a0 00 00 00    	mov    0xa0(%eax),%eax
    2ae6:	c3                   	ret    

00002ae7 <suspend_targets>:
    2ae7:	57                   	push   %edi
    2ae8:	89 d7                	mov    %edx,%edi
    2aea:	56                   	push   %esi
    2aeb:	53                   	push   %ebx
    2aec:	8b b0 90 00 00 00    	mov    0x90(%eax),%esi
    2af2:	8b 98 9c 00 00 00    	mov    0x9c(%eax),%ebx
    2af8:	eb 23                	jmp    2b1d <suspend_targets+0x36>
    2afa:	85 ff                	test   %edi,%edi
    2afc:	8b 43 04             	mov    0x4(%ebx),%eax
    2aff:	74 0d                	je     2b0e <suspend_targets+0x27>
    2b01:	8b 50 3c             	mov    0x3c(%eax),%edx
    2b04:	85 d2                	test   %edx,%edx
    2b06:	74 11                	je     2b19 <suspend_targets+0x32>
    2b08:	89 d8                	mov    %ebx,%eax
    2b0a:	ff d2                	call   *%edx
    2b0c:	eb 0b                	jmp    2b19 <suspend_targets+0x32>
    2b0e:	8b 48 38             	mov    0x38(%eax),%ecx
    2b11:	85 c9                	test   %ecx,%ecx
    2b13:	74 04                	je     2b19 <suspend_targets+0x32>
    2b15:	89 d8                	mov    %ebx,%eax
    2b17:	ff d1                	call   *%ecx
    2b19:	83 c3 2c             	add    $0x2c,%ebx
    2b1c:	4e                   	dec    %esi
    2b1d:	85 f6                	test   %esi,%esi
    2b1f:	75 d9                	jne    2afa <suspend_targets+0x13>
    2b21:	5b                   	pop    %ebx
    2b22:	5e                   	pop    %esi
    2b23:	5f                   	pop    %edi
    2b24:	c3                   	ret    

00002b25 <dm_table_presuspend_targets>:
    2b25:	85 c0                	test   %eax,%eax
    2b27:	74 04                	je     2b2d <dm_table_presuspend_targets+0x8>
    2b29:	31 d2                	xor    %edx,%edx
    2b2b:	eb ba                	jmp    2ae7 <suspend_targets>
    2b2d:	c3                   	ret    

00002b2e <dm_table_postsuspend_targets>:
    2b2e:	85 c0                	test   %eax,%eax
    2b30:	74 07                	je     2b39 <dm_table_postsuspend_targets+0xb>
    2b32:	ba 01 00 00 00       	mov    $0x1,%edx
    2b37:	eb ae                	jmp    2ae7 <suspend_targets>
    2b39:	c3                   	ret    

00002b3a <dm_table_resume_targets>:
    2b3a:	56                   	push   %esi
    2b3b:	89 c6                	mov    %eax,%esi
    2b3d:	53                   	push   %ebx
    2b3e:	31 db                	xor    %ebx,%ebx
    2b40:	eb 1a                	jmp    2b5c <dm_table_resume_targets+0x22>
    2b42:	6b c3 2c             	imul   $0x2c,%ebx,%eax
    2b45:	03 86 9c 00 00 00    	add    0x9c(%esi),%eax
    2b4b:	8b 50 04             	mov    0x4(%eax),%edx
    2b4e:	8b 52 40             	mov    0x40(%edx),%edx
    2b51:	85 d2                	test   %edx,%edx
    2b53:	74 06                	je     2b5b <dm_table_resume_targets+0x21>
    2b55:	ff d2                	call   *%edx
    2b57:	85 c0                	test   %eax,%eax
    2b59:	75 2d                	jne    2b88 <dm_table_resume_targets+0x4e>
    2b5b:	43                   	inc    %ebx
    2b5c:	3b 9e 90 00 00 00    	cmp    0x90(%esi),%ebx
    2b62:	72 de                	jb     2b42 <dm_table_resume_targets+0x8>
    2b64:	31 db                	xor    %ebx,%ebx
    2b66:	eb 16                	jmp    2b7e <dm_table_resume_targets+0x44>
    2b68:	6b c3 2c             	imul   $0x2c,%ebx,%eax
    2b6b:	03 86 9c 00 00 00    	add    0x9c(%esi),%eax
    2b71:	8b 50 04             	mov    0x4(%eax),%edx
    2b74:	8b 52 44             	mov    0x44(%edx),%edx
    2b77:	85 d2                	test   %edx,%edx
    2b79:	74 02                	je     2b7d <dm_table_resume_targets+0x43>
    2b7b:	ff d2                	call   *%edx
    2b7d:	43                   	inc    %ebx
    2b7e:	3b 9e 90 00 00 00    	cmp    0x90(%esi),%ebx
    2b84:	72 e2                	jb     2b68 <dm_table_resume_targets+0x2e>
    2b86:	31 c0                	xor    %eax,%eax
    2b88:	5b                   	pop    %ebx
    2b89:	5e                   	pop    %esi
    2b8a:	c3                   	ret    

00002b8b <dm_table_any_busy_target>:
    2b8b:	56                   	push   %esi
    2b8c:	89 c6                	mov    %eax,%esi
    2b8e:	53                   	push   %ebx
    2b8f:	31 db                	xor    %ebx,%ebx
    2b91:	eb 21                	jmp    2bb4 <dm_table_any_busy_target+0x29>
    2b93:	6b c3 2c             	imul   $0x2c,%ebx,%eax
    2b96:	03 86 9c 00 00 00    	add    0x9c(%esi),%eax
    2b9c:	8b 50 04             	mov    0x4(%eax),%edx
    2b9f:	8b 52 58             	mov    0x58(%edx),%edx
    2ba2:	85 d2                	test   %edx,%edx
    2ba4:	74 0d                	je     2bb3 <dm_table_any_busy_target+0x28>
    2ba6:	ff d2                	call   *%edx
    2ba8:	85 c0                	test   %eax,%eax
    2baa:	74 07                	je     2bb3 <dm_table_any_busy_target+0x28>
    2bac:	b8 01 00 00 00       	mov    $0x1,%eax
    2bb1:	eb 0b                	jmp    2bbe <dm_table_any_busy_target+0x33>
    2bb3:	43                   	inc    %ebx
    2bb4:	3b 9e 90 00 00 00    	cmp    0x90(%esi),%ebx
    2bba:	72 d7                	jb     2b93 <dm_table_any_busy_target+0x8>
    2bbc:	31 c0                	xor    %eax,%eax
    2bbe:	5b                   	pop    %ebx
    2bbf:	5e                   	pop    %esi
    2bc0:	c3                   	ret    

00002bc1 <dm_table_get_md>:
    2bc1:	53                   	push   %ebx
    2bc2:	89 c3                	mov    %eax,%ebx
    2bc4:	8b 00                	mov    (%eax),%eax
    2bc6:	e8 fc ff ff ff       	call   2bc7 <dm_table_get_md+0x6>
			2bc7: R_386_PC32	dm_get
    2bcb:	8b 03                	mov    (%ebx),%eax
    2bcd:	5b                   	pop    %ebx
    2bce:	c3                   	ret    

00002bcf <trace_kmalloc>:
    2bcf:	55                   	push   %ebp
    2bd0:	89 c5                	mov    %eax,%ebp
    2bd2:	83 3d 04 00 00 00 00 	cmpl   $0x0,0x4
			2bd4: R_386_32	__tracepoint_kmalloc
    2bd9:	57                   	push   %edi
    2bda:	89 d7                	mov    %edx,%edi
    2bdc:	56                   	push   %esi
    2bdd:	89 ce                	mov    %ecx,%esi
    2bdf:	53                   	push   %ebx
    2be0:	74 24                	je     2c06 <trace_kmalloc+0x37>
    2be2:	8b 1d 10 00 00 00    	mov    0x10,%ebx
			2be4: R_386_32	__tracepoint_kmalloc
    2be8:	85 db                	test   %ebx,%ebx
    2bea:	74 1a                	je     2c06 <trace_kmalloc+0x37>
    2bec:	ff 74 24 18          	pushl  0x18(%esp)
    2bf0:	89 f1                	mov    %esi,%ecx
    2bf2:	ff 74 24 18          	pushl  0x18(%esp)
    2bf6:	89 e8                	mov    %ebp,%eax
    2bf8:	89 fa                	mov    %edi,%edx
    2bfa:	ff 13                	call   *(%ebx)
    2bfc:	83 c3 04             	add    $0x4,%ebx
    2bff:	83 3b 00             	cmpl   $0x0,(%ebx)
    2c02:	59                   	pop    %ecx
    2c03:	58                   	pop    %eax
    2c04:	eb e4                	jmp    2bea <trace_kmalloc+0x1b>
    2c06:	5b                   	pop    %ebx
    2c07:	5e                   	pop    %esi
    2c08:	5f                   	pop    %edi
    2c09:	5d                   	pop    %ebp
    2c0a:	c3                   	ret    

00002c0b <dm_table_unplug_all>:
    2c0b:	55                   	push   %ebp
    2c0c:	57                   	push   %edi
    2c0d:	56                   	push   %esi
    2c0e:	89 c6                	mov    %eax,%esi
    2c10:	53                   	push   %ebx
    2c11:	83 ec 28             	sub    $0x28,%esp
    2c14:	8b 9e a4 00 00 00    	mov    0xa4(%esi),%ebx
    2c1a:	65 a1 14 00 00 00    	mov    %gs:0x14,%eax
    2c20:	89 44 24 24          	mov    %eax,0x24(%esp)
    2c24:	31 c0                	xor    %eax,%eax
    2c26:	8d be a4 00 00 00    	lea    0xa4(%esi),%edi
    2c2c:	8d 6c 24 04          	lea    0x4(%esp),%ebp
    2c30:	eb 4a                	jmp    2c7c <dm_table_unplug_all+0x71>
    2c32:	8b 43 0c             	mov    0xc(%ebx),%eax
    2c35:	8b 40 50             	mov    0x50(%eax),%eax
    2c38:	8b 80 94 01 00 00    	mov    0x194(%eax),%eax
    2c3e:	85 c0                	test   %eax,%eax
    2c40:	74 07                	je     2c49 <dm_table_unplug_all+0x3e>
    2c42:	e8 fc ff ff ff       	call   2c43 <dm_table_unplug_all+0x38>
			2c43: R_386_PC32	blk_unplug
    2c47:	eb 31                	jmp    2c7a <dm_table_unplug_all+0x6f>
    2c49:	e8 fc ff ff ff       	call   2c4a <dm_table_unplug_all+0x3f>
			2c4a: R_386_PC32	printk_ratelimit
    2c4e:	85 c0                	test   %eax,%eax
    2c50:	74 28                	je     2c7a <dm_table_unplug_all+0x6f>
    2c52:	8b 43 0c             	mov    0xc(%ebx),%eax
    2c55:	89 ea                	mov    %ebp,%edx
    2c57:	e8 fc ff ff ff       	call   2c58 <dm_table_unplug_all+0x4d>
			2c58: R_386_PC32	bdevname
    2c5c:	89 c2                	mov    %eax,%edx
    2c5e:	8b 06                	mov    (%esi),%eax
    2c60:	89 14 24             	mov    %edx,(%esp)
    2c63:	e8 fc ff ff ff       	call   2c64 <dm_table_unplug_all+0x59>
			2c64: R_386_PC32	dm_device_name
    2c68:	8b 14 24             	mov    (%esp),%edx
    2c6b:	52                   	push   %edx
    2c6c:	50                   	push   %eax
    2c6d:	68 92 06 00 00       	push   $0x692
			2c6e: R_386_32	.rodata.str1.1
    2c72:	e8 fc ff ff ff       	call   2c73 <dm_table_unplug_all+0x68>
			2c73: R_386_PC32	printk
    2c77:	83 c4 0c             	add    $0xc,%esp
    2c7a:	8b 1b                	mov    (%ebx),%ebx
    2c7c:	8b 03                	mov    (%ebx),%eax
    2c7e:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    2c82:	39 fb                	cmp    %edi,%ebx
    2c84:	75 ac                	jne    2c32 <dm_table_unplug_all+0x27>
    2c86:	8b 44 24 24          	mov    0x24(%esp),%eax
    2c8a:	65 33 05 14 00 00 00 	xor    %gs:0x14,%eax
    2c91:	74 05                	je     2c98 <dm_table_unplug_all+0x8d>
    2c93:	e8 fc ff ff ff       	call   2c94 <dm_table_unplug_all+0x89>
			2c94: R_386_PC32	__stack_chk_fail
    2c98:	83 c4 28             	add    $0x28,%esp
    2c9b:	5b                   	pop    %ebx
    2c9c:	5e                   	pop    %esi
    2c9d:	5f                   	pop    %edi
    2c9e:	5d                   	pop    %ebp
    2c9f:	c3                   	ret    

00002ca0 <dm_table_any_congested>:
    2ca0:	55                   	push   %ebp
    2ca1:	89 d5                	mov    %edx,%ebp
    2ca3:	57                   	push   %edi
    2ca4:	31 ff                	xor    %edi,%edi
    2ca6:	56                   	push   %esi
    2ca7:	89 c6                	mov    %eax,%esi
    2ca9:	53                   	push   %ebx
    2caa:	83 ec 2c             	sub    $0x2c,%esp
    2cad:	8b 9e a4 00 00 00    	mov    0xa4(%esi),%ebx
    2cb3:	8d 96 a4 00 00 00    	lea    0xa4(%esi),%edx
    2cb9:	65 a1 14 00 00 00    	mov    %gs:0x14,%eax
    2cbf:	89 44 24 28          	mov    %eax,0x28(%esp)
    2cc3:	31 c0                	xor    %eax,%eax
    2cc5:	89 54 24 04          	mov    %edx,0x4(%esp)
    2cc9:	eb 67                	jmp    2d32 <dm_table_any_congested+0x92>
    2ccb:	8b 43 0c             	mov    0xc(%ebx),%eax
    2cce:	8b 40 50             	mov    0x50(%eax),%eax
    2cd1:	8b 80 94 01 00 00    	mov    0x194(%eax),%eax
    2cd7:	85 c0                	test   %eax,%eax
    2cd9:	74 22                	je     2cfd <dm_table_any_congested+0x5d>
    2cdb:	8b 88 d8 00 00 00    	mov    0xd8(%eax),%ecx
    2ce1:	85 c9                	test   %ecx,%ecx
    2ce3:	74 0c                	je     2cf1 <dm_table_any_congested+0x51>
    2ce5:	8b 80 dc 00 00 00    	mov    0xdc(%eax),%eax
    2ceb:	89 ea                	mov    %ebp,%edx
    2ced:	ff d1                	call   *%ecx
    2cef:	eb 08                	jmp    2cf9 <dm_table_any_congested+0x59>
    2cf1:	8b 80 d0 00 00 00    	mov    0xd0(%eax),%eax
    2cf7:	21 e8                	and    %ebp,%eax
    2cf9:	09 c7                	or     %eax,%edi
    2cfb:	eb 33                	jmp    2d30 <dm_table_any_congested+0x90>
    2cfd:	e8 fc ff ff ff       	call   2cfe <dm_table_any_congested+0x5e>
			2cfe: R_386_PC32	printk_ratelimit
    2d02:	85 c0                	test   %eax,%eax
    2d04:	74 2a                	je     2d30 <dm_table_any_congested+0x90>
    2d06:	8b 43 0c             	mov    0xc(%ebx),%eax
    2d09:	8d 54 24 08          	lea    0x8(%esp),%edx
    2d0d:	e8 fc ff ff ff       	call   2d0e <dm_table_any_congested+0x6e>
			2d0e: R_386_PC32	bdevname
    2d12:	89 c2                	mov    %eax,%edx
    2d14:	8b 06                	mov    (%esi),%eax
    2d16:	89 14 24             	mov    %edx,(%esp)
    2d19:	e8 fc ff ff ff       	call   2d1a <dm_table_any_congested+0x7a>
			2d1a: R_386_PC32	dm_device_name
    2d1e:	8b 14 24             	mov    (%esp),%edx
    2d21:	52                   	push   %edx
    2d22:	50                   	push   %eax
    2d23:	68 d4 06 00 00       	push   $0x6d4
			2d24: R_386_32	.rodata.str1.1
    2d28:	e8 fc ff ff ff       	call   2d29 <dm_table_any_congested+0x89>
			2d29: R_386_PC32	printk
    2d2d:	83 c4 0c             	add    $0xc,%esp
    2d30:	8b 1b                	mov    (%ebx),%ebx
    2d32:	8b 03                	mov    (%ebx),%eax
    2d34:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    2d38:	3b 5c 24 04          	cmp    0x4(%esp),%ebx
    2d3c:	75 8d                	jne    2ccb <dm_table_any_congested+0x2b>
    2d3e:	8b 54 24 28          	mov    0x28(%esp),%edx
    2d42:	65 33 15 14 00 00 00 	xor    %gs:0x14,%edx
    2d49:	89 f8                	mov    %edi,%eax
    2d4b:	74 05                	je     2d52 <dm_table_any_congested+0xb2>
    2d4d:	e8 fc ff ff ff       	call   2d4e <dm_table_any_congested+0xae>
			2d4e: R_386_PC32	__stack_chk_fail
    2d52:	83 c4 2c             	add    $0x2c,%esp
    2d55:	5b                   	pop    %ebx
    2d56:	5e                   	pop    %esi
    2d57:	5f                   	pop    %edi
    2d58:	5d                   	pop    %ebp
    2d59:	c3                   	ret    

00002d5a <device_area_is_invalid>:
    2d5a:	55                   	push   %ebp
    2d5b:	57                   	push   %edi
    2d5c:	56                   	push   %esi
    2d5d:	53                   	push   %ebx
    2d5e:	83 ec 3c             	sub    $0x3c,%esp
    2d61:	89 44 24 14          	mov    %eax,0x14(%esp)
    2d65:	8b 44 24 60          	mov    0x60(%esp),%eax
    2d69:	65 8b 0d 14 00 00 00 	mov    %gs:0x14,%ecx
    2d70:	89 4c 24 38          	mov    %ecx,0x38(%esp)
    2d74:	31 c9                	xor    %ecx,%ecx
    2d76:	8b 5c 24 50          	mov    0x50(%esp),%ebx
    2d7a:	8b 74 24 54          	mov    0x54(%esp),%esi
    2d7e:	89 04 24             	mov    %eax,(%esp)
    2d81:	8b 02                	mov    (%edx),%eax
    2d83:	8b 0c 24             	mov    (%esp),%ecx
    2d86:	8b 50 04             	mov    0x4(%eax),%edx
    2d89:	8b 7a 48             	mov    0x48(%edx),%edi
    2d8c:	89 7c 24 04          	mov    %edi,0x4(%esp)
    2d90:	83 e7 01             	and    $0x1,%edi
    2d93:	74 04                	je     2d99 <device_area_is_invalid+0x3f>
    2d95:	f3 90                	pause  
    2d97:	eb f0                	jmp    2d89 <device_area_is_invalid+0x2f>
    2d99:	8b 7a 40             	mov    0x40(%edx),%edi
    2d9c:	8b 6a 44             	mov    0x44(%edx),%ebp
    2d9f:	89 7c 24 0c          	mov    %edi,0xc(%esp)
    2da3:	89 6c 24 10          	mov    %ebp,0x10(%esp)
    2da7:	8b 6c 24 04          	mov    0x4(%esp),%ebp
    2dab:	39 6a 48             	cmp    %ebp,0x48(%edx)
    2dae:	75 d9                	jne    2d89 <device_area_is_invalid+0x2f>
    2db0:	8b 6c 24 10          	mov    0x10(%esp),%ebp
    2db4:	8b 7c 24 0c          	mov    0xc(%esp),%edi
    2db8:	89 0c 24             	mov    %ecx,(%esp)
    2dbb:	8b 51 28             	mov    0x28(%ecx),%edx
    2dbe:	0f ac ef 09          	shrd   $0x9,%ebp,%edi
    2dc2:	c1 fd 09             	sar    $0x9,%ebp
    2dc5:	89 e9                	mov    %ebp,%ecx
    2dc7:	09 f9                	or     %edi,%ecx
    2dc9:	66 89 54 24 04       	mov    %dx,0x4(%esp)
    2dce:	0f 84 0e 01 00 00    	je     2ee2 <device_area_is_invalid+0x188>
    2dd4:	39 ee                	cmp    %ebp,%esi
    2dd6:	77 24                	ja     2dfc <device_area_is_invalid+0xa2>
    2dd8:	72 04                	jb     2dde <device_area_is_invalid+0x84>
    2dda:	39 fb                	cmp    %edi,%ebx
    2ddc:	73 1e                	jae    2dfc <device_area_is_invalid+0xa2>
    2dde:	8b 54 24 58          	mov    0x58(%esp),%edx
    2de2:	8b 4c 24 5c          	mov    0x5c(%esp),%ecx
    2de6:	01 da                	add    %ebx,%edx
    2de8:	11 f1                	adc    %esi,%ecx
    2dea:	39 e9                	cmp    %ebp,%ecx
    2dec:	89 54 24 0c          	mov    %edx,0xc(%esp)
    2df0:	89 4c 24 10          	mov    %ecx,0x10(%esp)
    2df4:	72 4b                	jb     2e41 <device_area_is_invalid+0xe7>
    2df6:	77 04                	ja     2dfc <device_area_is_invalid+0xa2>
    2df8:	39 fa                	cmp    %edi,%edx
    2dfa:	76 45                	jbe    2e41 <device_area_is_invalid+0xe7>
    2dfc:	8d 54 24 18          	lea    0x18(%esp),%edx
    2e00:	e8 fc ff ff ff       	call   2e01 <device_area_is_invalid+0xa7>
			2e01: R_386_PC32	bdevname
    2e05:	8b 4c 24 14          	mov    0x14(%esp),%ecx
    2e09:	89 c2                	mov    %eax,%edx
    2e0b:	8b 01                	mov    (%ecx),%eax
    2e0d:	8b 00                	mov    (%eax),%eax
    2e0f:	89 54 24 08          	mov    %edx,0x8(%esp)
    2e13:	e8 fc ff ff ff       	call   2e14 <device_area_is_invalid+0xba>
			2e14: R_386_PC32	dm_device_name
    2e18:	55                   	push   %ebp
    2e19:	57                   	push   %edi
    2e1a:	ff 74 24 64          	pushl  0x64(%esp)
    2e1e:	ff 74 24 64          	pushl  0x64(%esp)
    2e22:	56                   	push   %esi
    2e23:	53                   	push   %ebx
    2e24:	8b 54 24 20          	mov    0x20(%esp),%edx
    2e28:	52                   	push   %edx
    2e29:	50                   	push   %eax
    2e2a:	68 17 07 00 00       	push   $0x717
			2e2b: R_386_32	.rodata.str1.1
    2e2f:	e8 fc ff ff ff       	call   2e30 <device_area_is_invalid+0xd6>
			2e30: R_386_PC32	printk
    2e34:	b8 01 00 00 00       	mov    $0x1,%eax
    2e39:	83 c4 24             	add    $0x24,%esp
    2e3c:	e9 a3 00 00 00       	jmp    2ee4 <device_area_is_invalid+0x18a>
    2e41:	8b 7c 24 04          	mov    0x4(%esp),%edi
    2e45:	66 c1 ef 09          	shr    $0x9,%di
    2e49:	66 83 ff 01          	cmp    $0x1,%di
    2e4d:	0f 86 8f 00 00 00    	jbe    2ee2 <device_area_is_invalid+0x188>
    2e53:	0f b7 ff             	movzwl %di,%edi
    2e56:	4f                   	dec    %edi
    2e57:	89 fd                	mov    %edi,%ebp
    2e59:	89 f9                	mov    %edi,%ecx
    2e5b:	c1 fd 1f             	sar    $0x1f,%ebp
    2e5e:	21 d9                	and    %ebx,%ecx
    2e60:	89 ea                	mov    %ebp,%edx
    2e62:	21 f2                	and    %esi,%edx
    2e64:	09 ca                	or     %ecx,%edx
    2e66:	74 2b                	je     2e93 <device_area_is_invalid+0x139>
    2e68:	8d 54 24 18          	lea    0x18(%esp),%edx
    2e6c:	e8 fc ff ff ff       	call   2e6d <device_area_is_invalid+0x113>
			2e6d: R_386_PC32	bdevname
    2e71:	8b 54 24 14          	mov    0x14(%esp),%edx
    2e75:	89 c7                	mov    %eax,%edi
    2e77:	8b 04 24             	mov    (%esp),%eax
    2e7a:	0f b7 68 28          	movzwl 0x28(%eax),%ebp
    2e7e:	8b 02                	mov    (%edx),%eax
    2e80:	8b 00                	mov    (%eax),%eax
    2e82:	e8 fc ff ff ff       	call   2e83 <device_area_is_invalid+0x129>
			2e83: R_386_PC32	dm_device_name
    2e87:	57                   	push   %edi
    2e88:	55                   	push   %ebp
    2e89:	56                   	push   %esi
    2e8a:	53                   	push   %ebx
    2e8b:	50                   	push   %eax
    2e8c:	68 72 07 00 00       	push   $0x772
			2e8d: R_386_32	.rodata.str1.1
    2e91:	eb 40                	jmp    2ed3 <device_area_is_invalid+0x179>
    2e93:	8b 54 24 58          	mov    0x58(%esp),%edx
    2e97:	8b 5c 24 5c          	mov    0x5c(%esp),%ebx
    2e9b:	21 fa                	and    %edi,%edx
    2e9d:	21 eb                	and    %ebp,%ebx
    2e9f:	09 d3                	or     %edx,%ebx
    2ea1:	74 3f                	je     2ee2 <device_area_is_invalid+0x188>
    2ea3:	8d 54 24 18          	lea    0x18(%esp),%edx
    2ea7:	e8 fc ff ff ff       	call   2ea8 <device_area_is_invalid+0x14e>
			2ea8: R_386_PC32	bdevname
    2eac:	8b 6c 24 14          	mov    0x14(%esp),%ebp
    2eb0:	8b 0c 24             	mov    (%esp),%ecx
    2eb3:	89 c3                	mov    %eax,%ebx
    2eb5:	8b 45 00             	mov    0x0(%ebp),%eax
    2eb8:	0f b7 79 28          	movzwl 0x28(%ecx),%edi
    2ebc:	8b 00                	mov    (%eax),%eax
    2ebe:	e8 fc ff ff ff       	call   2ebf <device_area_is_invalid+0x165>
			2ebf: R_386_PC32	dm_device_name
    2ec3:	53                   	push   %ebx
    2ec4:	57                   	push   %edi
    2ec5:	ff 74 24 64          	pushl  0x64(%esp)
    2ec9:	ff 74 24 64          	pushl  0x64(%esp)
    2ecd:	50                   	push   %eax
    2ece:	68 ca 07 00 00       	push   $0x7ca
			2ecf: R_386_32	.rodata.str1.1
    2ed3:	e8 fc ff ff ff       	call   2ed4 <device_area_is_invalid+0x17a>
			2ed4: R_386_PC32	printk
    2ed8:	b8 01 00 00 00       	mov    $0x1,%eax
    2edd:	83 c4 18             	add    $0x18,%esp
    2ee0:	eb 02                	jmp    2ee4 <device_area_is_invalid+0x18a>
    2ee2:	31 c0                	xor    %eax,%eax
    2ee4:	8b 54 24 38          	mov    0x38(%esp),%edx
    2ee8:	65 33 15 14 00 00 00 	xor    %gs:0x14,%edx
    2eef:	74 05                	je     2ef6 <device_area_is_invalid+0x19c>
    2ef1:	e8 fc ff ff ff       	call   2ef2 <device_area_is_invalid+0x198>
			2ef2: R_386_PC32	__stack_chk_fail
    2ef6:	83 c4 3c             	add    $0x3c,%esp
    2ef9:	5b                   	pop    %ebx
    2efa:	5e                   	pop    %esi
    2efb:	5f                   	pop    %edi
    2efc:	5d                   	pop    %ebp
    2efd:	c3                   	ret    

00002efe <dm_table_set_type>:
    2efe:	55                   	push   %ebp
    2eff:	31 d2                	xor    %edx,%edx
    2f01:	57                   	push   %edi
    2f02:	31 c9                	xor    %ecx,%ecx
    2f04:	56                   	push   %esi
    2f05:	53                   	push   %ebx
    2f06:	31 db                	xor    %ebx,%ebx
    2f08:	8b b0 90 00 00 00    	mov    0x90(%eax),%esi
    2f0e:	eb 2c                	jmp    2f3c <dm_table_set_type+0x3e>
    2f10:	6b eb 2c             	imul   $0x2c,%ebx,%ebp
    2f13:	8b b8 9c 00 00 00    	mov    0x9c(%eax),%edi
    2f19:	8b 6c 3d 04          	mov    0x4(%ebp,%edi,1),%ebp
    2f1d:	bf 01 00 00 00       	mov    $0x1,%edi
    2f22:	83 7d 28 00          	cmpl   $0x0,0x28(%ebp)
    2f26:	0f 45 d7             	cmovne %edi,%edx
    2f29:	0f 44 cf             	cmove  %edi,%ecx
    2f2c:	84 d2                	test   %dl,%dl
    2f2e:	74 0b                	je     2f3b <dm_table_set_type+0x3d>
    2f30:	84 c9                	test   %cl,%cl
    2f32:	74 07                	je     2f3b <dm_table_set_type+0x3d>
    2f34:	68 20 08 00 00       	push   $0x820
			2f35: R_386_32	.rodata.str1.1
    2f39:	eb 42                	jmp    2f7d <dm_table_set_type+0x7f>
    2f3b:	43                   	inc    %ebx
    2f3c:	39 f3                	cmp    %esi,%ebx
    2f3e:	72 d0                	jb     2f10 <dm_table_set_type+0x12>
    2f40:	85 c9                	test   %ecx,%ecx
    2f42:	74 09                	je     2f4d <dm_table_set_type+0x4f>
    2f44:	c7 40 08 01 00 00 00 	movl   $0x1,0x8(%eax)
    2f4b:	eb 5c                	jmp    2fa9 <dm_table_set_type+0xab>
    2f4d:	85 d2                	test   %edx,%edx
    2f4f:	75 04                	jne    2f55 <dm_table_set_type+0x57>
    2f51:	0f 0b                	ud2a   
    2f53:	eb fe                	jmp    2f53 <dm_table_set_type+0x55>
    2f55:	8d 98 a4 00 00 00    	lea    0xa4(%eax),%ebx
    2f5b:	8b 90 a4 00 00 00    	mov    0xa4(%eax),%edx
    2f61:	eb 29                	jmp    2f8c <dm_table_set_type+0x8e>
    2f63:	8b 52 0c             	mov    0xc(%edx),%edx
    2f66:	8b 52 50             	mov    0x50(%edx),%edx
    2f69:	8b 92 94 01 00 00    	mov    0x194(%edx),%edx
    2f6f:	f6 82 b1 01 00 00 20 	testb  $0x20,0x1b1(%edx)
    2f76:	75 12                	jne    2f8a <dm_table_set_type+0x8c>
    2f78:	68 8d 08 00 00       	push   $0x88d
			2f79: R_386_32	.rodata.str1.1
    2f7d:	e8 fc ff ff ff       	call   2f7e <dm_table_set_type+0x80>
			2f7e: R_386_PC32	printk
    2f82:	b8 ea ff ff ff       	mov    $0xffffffea,%eax
    2f87:	59                   	pop    %ecx
    2f88:	eb 21                	jmp    2fab <dm_table_set_type+0xad>
    2f8a:	89 ca                	mov    %ecx,%edx
    2f8c:	8b 0a                	mov    (%edx),%ecx
    2f8e:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    2f92:	39 da                	cmp    %ebx,%edx
    2f94:	75 cd                	jne    2f63 <dm_table_set_type+0x65>
    2f96:	83 fe 01             	cmp    $0x1,%esi
    2f99:	76 07                	jbe    2fa2 <dm_table_set_type+0xa4>
    2f9b:	68 e4 08 00 00       	push   $0x8e4
			2f9c: R_386_32	.rodata.str1.1
    2fa0:	eb db                	jmp    2f7d <dm_table_set_type+0x7f>
    2fa2:	c7 40 08 02 00 00 00 	movl   $0x2,0x8(%eax)
    2fa9:	31 c0                	xor    %eax,%eax
    2fab:	5b                   	pop    %ebx
    2fac:	5e                   	pop    %esi
    2fad:	5f                   	pop    %edi
    2fae:	5d                   	pop    %ebp
    2faf:	c3                   	ret    

00002fb0 <dm_table_set_restrictions>:
    2fb0:	55                   	push   %ebp
    2fb1:	89 d5                	mov    %edx,%ebp
    2fb3:	57                   	push   %edi
    2fb4:	56                   	push   %esi
    2fb5:	53                   	push   %ebx
    2fb6:	89 c3                	mov    %eax,%ebx
    2fb8:	89 c8                	mov    %ecx,%eax
    2fba:	83 ec 04             	sub    $0x4,%esp
    2fbd:	8d ba 54 02 00 00    	lea    0x254(%edx),%edi
    2fc3:	b9 0c 00 00 00       	mov    $0xc,%ecx
    2fc8:	89 c6                	mov    %eax,%esi
    2fca:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)
    2fcc:	80 78 2f 00          	cmpb   $0x0,0x2f(%eax)
    2fd0:	74 0a                	je     2fdc <dm_table_set_restrictions+0x2c>
    2fd2:	0f ba b2 b0 01 00 00 	btrl   $0x0,0x1b0(%edx)
    2fd9:	00 
    2fda:	eb 08                	jmp    2fe4 <dm_table_set_restrictions+0x34>
    2fdc:	0f ba aa b0 01 00 00 	btsl   $0x0,0x1b0(%edx)
    2fe3:	00 
    2fe4:	8d 83 a4 00 00 00    	lea    0xa4(%ebx),%eax
    2fea:	89 04 24             	mov    %eax,(%esp)
    2fed:	8b 03                	mov    (%ebx),%eax
    2fef:	e8 fc ff ff ff       	call   2ff0 <dm_table_set_restrictions+0x40>
			2ff0: R_386_PC32	dm_disk
    2ff4:	83 b8 c0 01 00 00 00 	cmpl   $0x0,0x1c0(%eax)
    2ffb:	0f 84 8f 00 00 00    	je     3090 <dm_table_set_restrictions+0xe0>
    3001:	8b b3 a4 00 00 00    	mov    0xa4(%ebx),%esi
    3007:	31 ff                	xor    %edi,%edi
    3009:	eb 4d                	jmp    3058 <dm_table_set_restrictions+0xa8>
    300b:	85 ff                	test   %edi,%edi
    300d:	74 45                	je     3054 <dm_table_set_restrictions+0xa4>
    300f:	8b 46 0c             	mov    0xc(%esi),%eax
    3012:	8b 50 50             	mov    0x50(%eax),%edx
    3015:	8b 47 0c             	mov    0xc(%edi),%eax
    3018:	8b 40 50             	mov    0x50(%eax),%eax
    301b:	e8 fc ff ff ff       	call   301c <dm_table_set_restrictions+0x6c>
			301c: R_386_PC32	blk_integrity_compare
    3020:	85 c0                	test   %eax,%eax
    3022:	79 30                	jns    3054 <dm_table_set_restrictions+0xa4>
    3024:	8b 46 0c             	mov    0xc(%esi),%eax
    3027:	8b 40 50             	mov    0x50(%eax),%eax
    302a:	83 c0 0c             	add    $0xc,%eax
    302d:	89 04 24             	mov    %eax,(%esp)
    3030:	8b 47 0c             	mov    0xc(%edi),%eax
    3033:	8b 70 50             	mov    0x50(%eax),%esi
    3036:	8b 03                	mov    (%ebx),%eax
    3038:	83 c6 0c             	add    $0xc,%esi
    303b:	e8 fc ff ff ff       	call   303c <dm_table_set_restrictions+0x8c>
			303c: R_386_PC32	dm_device_name
    3040:	ff 34 24             	pushl  (%esp)
    3043:	56                   	push   %esi
    3044:	50                   	push   %eax
    3045:	68 34 09 00 00       	push   $0x934
			3046: R_386_32	.rodata.str1.1
    304a:	e8 fc ff ff ff       	call   304b <dm_table_set_restrictions+0x9b>
			304b: R_386_PC32	printk
    304f:	83 c4 10             	add    $0x10,%esp
    3052:	eb 2e                	jmp    3082 <dm_table_set_restrictions+0xd2>
    3054:	89 f7                	mov    %esi,%edi
    3056:	8b 36                	mov    (%esi),%esi
    3058:	8b 06                	mov    (%esi),%eax
    305a:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    305e:	3b 34 24             	cmp    (%esp),%esi
    3061:	75 a8                	jne    300b <dm_table_set_restrictions+0x5b>
    3063:	85 ff                	test   %edi,%edi
    3065:	74 1b                	je     3082 <dm_table_set_restrictions+0xd2>
    3067:	8b 47 0c             	mov    0xc(%edi),%eax
    306a:	8b 40 50             	mov    0x50(%eax),%eax
    306d:	8b b0 c0 01 00 00    	mov    0x1c0(%eax),%esi
    3073:	85 f6                	test   %esi,%esi
    3075:	74 0b                	je     3082 <dm_table_set_restrictions+0xd2>
    3077:	8b 03                	mov    (%ebx),%eax
    3079:	e8 fc ff ff ff       	call   307a <dm_table_set_restrictions+0xca>
			307a: R_386_PC32	dm_disk
    307e:	89 f2                	mov    %esi,%edx
    3080:	eb 09                	jmp    308b <dm_table_set_restrictions+0xdb>
    3082:	8b 03                	mov    (%ebx),%eax
    3084:	e8 fc ff ff ff       	call   3085 <dm_table_set_restrictions+0xd5>
			3085: R_386_PC32	dm_disk
    3089:	31 d2                	xor    %edx,%edx
    308b:	e8 fc ff ff ff       	call   308c <dm_table_set_restrictions+0xdc>
			308c: R_386_PC32	blk_integrity_register
    3090:	f0 83 04 24 00       	lock addl $0x0,(%esp)
    3095:	83 7b 08 02          	cmpl   $0x2,0x8(%ebx)
    3099:	75 08                	jne    30a3 <dm_table_set_restrictions+0xf3>
    309b:	0f ba ad b0 01 00 00 	btsl   $0xd,0x1b0(%ebp)
    30a2:	0d 
    30a3:	5b                   	pop    %ebx
    30a4:	5b                   	pop    %ebx
    30a5:	5e                   	pop    %esi
    30a6:	5f                   	pop    %edi
    30a7:	5d                   	pop    %ebp
    30a8:	c3                   	ret    

000030a9 <dm_calculate_queue_limits>:
    30a9:	55                   	push   %ebp
    30aa:	31 ed                	xor    %ebp,%ebp
    30ac:	57                   	push   %edi
    30ad:	89 c7                	mov    %eax,%edi
    30af:	56                   	push   %esi
    30b0:	89 d0                	mov    %edx,%eax
    30b2:	53                   	push   %ebx
    30b3:	83 c4 80             	add    $0xffffff80,%esp
    30b6:	89 54 24 10          	mov    %edx,0x10(%esp)
    30ba:	e8 fc ff ff ff       	call   30bb <dm_calculate_queue_limits+0x12>
			30bb: R_386_PC32	blk_set_default_limits
    30bf:	e9 af 00 00 00       	jmp    3173 <dm_calculate_queue_limits+0xca>
    30c4:	8d 44 24 50          	lea    0x50(%esp),%eax
    30c8:	31 f6                	xor    %esi,%esi
    30ca:	e8 fc ff ff ff       	call   30cb <dm_calculate_queue_limits+0x22>
			30cb: R_386_PC32	blk_set_default_limits
    30cf:	3b af 90 00 00 00    	cmp    0x90(%edi),%ebp
    30d5:	73 09                	jae    30e0 <dm_calculate_queue_limits+0x37>
    30d7:	6b f5 2c             	imul   $0x2c,%ebp,%esi
    30da:	03 b7 9c 00 00 00    	add    0x9c(%edi),%esi
    30e0:	8b 46 04             	mov    0x4(%esi),%eax
    30e3:	8b 58 5c             	mov    0x5c(%eax),%ebx
    30e6:	85 db                	test   %ebx,%ebx
    30e8:	74 3e                	je     3128 <dm_calculate_queue_limits+0x7f>
    30ea:	8d 4c 24 50          	lea    0x50(%esp),%ecx
    30ee:	ba 00 00 00 00       	mov    $0x0,%edx
			30ef: R_386_32	dm_set_device_limits
    30f3:	89 f0                	mov    %esi,%eax
    30f5:	ff d3                	call   *%ebx
    30f7:	8b 46 04             	mov    0x4(%esi),%eax
    30fa:	8b 48 60             	mov    0x60(%eax),%ecx
    30fd:	85 c9                	test   %ecx,%ecx
    30ff:	74 08                	je     3109 <dm_calculate_queue_limits+0x60>
    3101:	8d 54 24 50          	lea    0x50(%esp),%edx
    3105:	89 f0                	mov    %esi,%eax
    3107:	ff d1                	call   *%ecx
    3109:	8b 5e 04             	mov    0x4(%esi),%ebx
    310c:	8d 4c 24 50          	lea    0x50(%esp),%ecx
    3110:	ba 5a 2d 00 00       	mov    $0x2d5a,%edx
			3111: R_386_32	.text
    3115:	89 f0                	mov    %esi,%eax
    3117:	ff 53 5c             	call   *0x5c(%ebx)
    311a:	85 c0                	test   %eax,%eax
    311c:	74 0a                	je     3128 <dm_calculate_queue_limits+0x7f>
    311e:	b8 ea ff ff ff       	mov    $0xffffffea,%eax
    3123:	e9 51 01 00 00       	jmp    3279 <dm_calculate_queue_limits+0x1d0>
    3128:	6a 00                	push   $0x0
    312a:	6a 00                	push   $0x0
    312c:	8b 44 24 18          	mov    0x18(%esp),%eax
    3130:	8d 54 24 58          	lea    0x58(%esp),%edx
    3134:	e8 fc ff ff ff       	call   3135 <dm_calculate_queue_limits+0x8c>
			3135: R_386_PC32	blk_stack_limits
    3139:	5a                   	pop    %edx
    313a:	59                   	pop    %ecx
    313b:	85 c0                	test   %eax,%eax
    313d:	79 33                	jns    3172 <dm_calculate_queue_limits+0xc9>
    313f:	8b 56 10             	mov    0x10(%esi),%edx
    3142:	8b 4e 14             	mov    0x14(%esi),%ecx
    3145:	8b 07                	mov    (%edi),%eax
    3147:	8b 5e 08             	mov    0x8(%esi),%ebx
    314a:	8b 76 0c             	mov    0xc(%esi),%esi
    314d:	89 54 24 04          	mov    %edx,0x4(%esp)
    3151:	89 0c 24             	mov    %ecx,(%esp)
    3154:	e8 fc ff ff ff       	call   3155 <dm_calculate_queue_limits+0xac>
			3155: R_386_PC32	dm_device_name
    3159:	8b 0c 24             	mov    (%esp),%ecx
    315c:	8b 54 24 04          	mov    0x4(%esp),%edx
    3160:	51                   	push   %ecx
    3161:	52                   	push   %edx
    3162:	56                   	push   %esi
    3163:	53                   	push   %ebx
    3164:	50                   	push   %eax
    3165:	68 78 09 00 00       	push   $0x978
			3166: R_386_32	.rodata.str1.1
    316a:	e8 fc ff ff ff       	call   316b <dm_calculate_queue_limits+0xc2>
			316b: R_386_PC32	printk
    316f:	83 c4 18             	add    $0x18,%esp
    3172:	45                   	inc    %ebp
    3173:	3b af 90 00 00 00    	cmp    0x90(%edi),%ebp
    3179:	0f 82 45 ff ff ff    	jb     30c4 <dm_calculate_queue_limits+0x1b>
    317f:	8b 44 24 10          	mov    0x10(%esp),%eax
    3183:	31 db                	xor    %ebx,%ebx
    3185:	31 f6                	xor    %esi,%esi
    3187:	31 ed                	xor    %ebp,%ebp
    3189:	8b 40 28             	mov    0x28(%eax),%eax
    318c:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
    3193:	00 
    3194:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
    319b:	00 
    319c:	66 c1 e8 09          	shr    $0x9,%ax
    31a0:	66 89 44 24 0a       	mov    %ax,0xa(%esp)
    31a5:	48                   	dec    %eax
    31a6:	66 89 44 24 1e       	mov    %ax,0x1e(%esp)
    31ab:	eb 73                	jmp    3220 <dm_calculate_queue_limits+0x177>
    31ad:	8b 5c 24 14          	mov    0x14(%esp),%ebx
    31b1:	8d 44 24 20          	lea    0x20(%esp),%eax
    31b5:	03 9f 9c 00 00 00    	add    0x9c(%edi),%ebx
    31bb:	ff 44 24 0c          	incl   0xc(%esp)
    31bf:	e8 fc ff ff ff       	call   31c0 <dm_calculate_queue_limits+0x117>
			31c0: R_386_PC32	blk_set_default_limits
    31c4:	8b 43 04             	mov    0x4(%ebx),%eax
    31c7:	8b 40 5c             	mov    0x5c(%eax),%eax
    31ca:	85 c0                	test   %eax,%eax
    31cc:	89 44 24 18          	mov    %eax,0x18(%esp)
    31d0:	74 0f                	je     31e1 <dm_calculate_queue_limits+0x138>
    31d2:	8d 4c 24 20          	lea    0x20(%esp),%ecx
    31d6:	ba 00 00 00 00       	mov    $0x0,%edx
			31d7: R_386_32	dm_set_device_limits
    31db:	89 d8                	mov    %ebx,%eax
    31dd:	ff 54 24 18          	call   *0x18(%esp)
    31e1:	83 7b 14 00          	cmpl   $0x0,0x14(%ebx)
    31e5:	0f b7 c6             	movzwl %si,%eax
    31e8:	8b 53 10             	mov    0x10(%ebx),%edx
    31eb:	75 04                	jne    31f1 <dm_calculate_queue_limits+0x148>
    31ed:	39 d0                	cmp    %edx,%eax
    31ef:	73 13                	jae    3204 <dm_calculate_queue_limits+0x15b>
    31f1:	8b 44 24 48          	mov    0x48(%esp),%eax
    31f5:	0f b7 f6             	movzwl %si,%esi
    31f8:	66 c1 e8 09          	shr    $0x9,%ax
    31fc:	0f b7 c0             	movzwl %ax,%eax
    31ff:	48                   	dec    %eax
    3200:	85 c6                	test   %eax,%esi
    3202:	75 2f                	jne    3233 <dm_calculate_queue_limits+0x18a>
    3204:	66 8b 44 24 0a       	mov    0xa(%esp),%ax
    3209:	01 d5                	add    %edx,%ebp
    320b:	31 f6                	xor    %esi,%esi
    320d:	66 23 6c 24 1e       	and    0x1e(%esp),%bp
    3212:	66 29 e8             	sub    %bp,%ax
    3215:	66 85 ed             	test   %bp,%bp
    3218:	0f 45 f0             	cmovne %eax,%esi
    321b:	83 44 24 14 2c       	addl   $0x2c,0x14(%esp)
    3220:	8b 44 24 0c          	mov    0xc(%esp),%eax
    3224:	3b 87 90 00 00 00    	cmp    0x90(%edi),%eax
    322a:	72 81                	jb     31ad <dm_calculate_queue_limits+0x104>
    322c:	31 c0                	xor    %eax,%eax
    322e:	66 85 f6             	test   %si,%si
    3231:	74 46                	je     3279 <dm_calculate_queue_limits+0x1d0>
    3233:	8b 44 24 10          	mov    0x10(%esp),%eax
    3237:	8b 53 10             	mov    0x10(%ebx),%edx
    323a:	8b 4b 14             	mov    0x14(%ebx),%ecx
    323d:	8b 73 0c             	mov    0xc(%ebx),%esi
    3240:	0f b7 68 28          	movzwl 0x28(%eax),%ebp
    3244:	8b 07                	mov    (%edi),%eax
    3246:	8b 5b 08             	mov    0x8(%ebx),%ebx
    3249:	89 54 24 04          	mov    %edx,0x4(%esp)
    324d:	89 0c 24             	mov    %ecx,(%esp)
    3250:	e8 fc ff ff ff       	call   3251 <dm_calculate_queue_limits+0x1a8>
			3251: R_386_PC32	dm_device_name
    3255:	55                   	push   %ebp
    3256:	8b 4c 24 04          	mov    0x4(%esp),%ecx
    325a:	8b 54 24 08          	mov    0x8(%esp),%edx
    325e:	51                   	push   %ecx
    325f:	52                   	push   %edx
    3260:	56                   	push   %esi
    3261:	53                   	push   %ebx
    3262:	ff 74 24 20          	pushl  0x20(%esp)
    3266:	50                   	push   %eax
    3267:	68 e8 09 00 00       	push   $0x9e8
			3268: R_386_32	.rodata.str1.1
    326c:	e8 fc ff ff ff       	call   326d <dm_calculate_queue_limits+0x1c4>
			326d: R_386_PC32	printk
    3271:	b8 ea ff ff ff       	mov    $0xffffffea,%eax
    3276:	83 c4 20             	add    $0x20,%esp
    3279:	83 ec 80             	sub    $0xffffff80,%esp
    327c:	5b                   	pop    %ebx
    327d:	5e                   	pop    %esi
    327e:	5f                   	pop    %edi
    327f:	5d                   	pop    %ebp
    3280:	c3                   	ret    

00003281 <dm_table_event>:
    3281:	53                   	push   %ebx
    3282:	89 c3                	mov    %eax,%ebx
    3284:	89 e0                	mov    %esp,%eax
    3286:	25 00 e0 ff ff       	and    $0xffffe000,%eax
    328b:	f7 40 14 00 ff ff 07 	testl  $0x7ffff00,0x14(%eax)
    3292:	74 04                	je     3298 <dm_table_event+0x17>
    3294:	0f 0b                	ud2a   
    3296:	eb fe                	jmp    3296 <dm_table_event+0x15>
    3298:	b8 00 00 00 00       	mov    $0x0,%eax
			3299: R_386_32	.data
    329d:	e8 fc ff ff ff       	call   329e <dm_table_event+0x1d>
			329e: R_386_PC32	mutex_lock
    32a2:	8b 93 ac 00 00 00    	mov    0xac(%ebx),%edx
    32a8:	85 d2                	test   %edx,%edx
    32aa:	74 08                	je     32b4 <dm_table_event+0x33>
    32ac:	8b 83 b0 00 00 00    	mov    0xb0(%ebx),%eax
    32b2:	ff d2                	call   *%edx
    32b4:	5b                   	pop    %ebx
    32b5:	b8 00 00 00 00       	mov    $0x0,%eax
			32b6: R_386_32	.data
    32ba:	e9 fc ff ff ff       	jmp    32bb <dm_table_event+0x3a>
			32bb: R_386_PC32	mutex_unlock

000032bf <dm_table_event_callback>:
    32bf:	57                   	push   %edi
    32c0:	89 cf                	mov    %ecx,%edi
    32c2:	56                   	push   %esi
    32c3:	89 d6                	mov    %edx,%esi
    32c5:	53                   	push   %ebx
    32c6:	89 c3                	mov    %eax,%ebx
    32c8:	b8 00 00 00 00       	mov    $0x0,%eax
			32c9: R_386_32	.data
    32cd:	e8 fc ff ff ff       	call   32ce <dm_table_event_callback+0xf>
			32ce: R_386_PC32	mutex_lock
    32d2:	b8 00 00 00 00       	mov    $0x0,%eax
			32d3: R_386_32	.data
    32d7:	89 b3 ac 00 00 00    	mov    %esi,0xac(%ebx)
    32dd:	89 bb b0 00 00 00    	mov    %edi,0xb0(%ebx)
    32e3:	5b                   	pop    %ebx
    32e4:	5e                   	pop    %esi
    32e5:	5f                   	pop    %edi
    32e6:	e9 fc ff ff ff       	jmp    32e7 <dm_table_event_callback+0x28>
			32e7: R_386_PC32	mutex_unlock

000032eb <dm_table_free_md_mempools>:
    32eb:	53                   	push   %ebx
    32ec:	89 c3                	mov    %eax,%ebx
    32ee:	8b 80 b4 00 00 00    	mov    0xb4(%eax),%eax
    32f4:	e8 fc ff ff ff       	call   32f5 <dm_table_free_md_mempools+0xa>
			32f5: R_386_PC32	dm_free_md_mempools
    32f9:	c7 83 b4 00 00 00 00 	movl   $0x0,0xb4(%ebx)
    3300:	00 00 00 
    3303:	5b                   	pop    %ebx
    3304:	c3                   	ret    

00003305 <dm_table_alloc_md_mempools>:
    3305:	53                   	push   %ebx
    3306:	89 c3                	mov    %eax,%ebx
    3308:	8b 40 08             	mov    0x8(%eax),%eax
    330b:	85 c0                	test   %eax,%eax
    330d:	75 12                	jne    3321 <dm_table_alloc_md_mempools+0x1c>
    330f:	68 58 0a 00 00       	push   $0xa58
			3310: R_386_32	.rodata.str1.1
    3314:	e8 fc ff ff ff       	call   3315 <dm_table_alloc_md_mempools+0x10>
			3315: R_386_PC32	printk
    3319:	b8 ea ff ff ff       	mov    $0xffffffea,%eax
    331e:	5b                   	pop    %ebx
    331f:	eb 13                	jmp    3334 <dm_table_alloc_md_mempools+0x2f>
    3321:	e8 fc ff ff ff       	call   3322 <dm_table_alloc_md_mempools+0x1d>
			3322: R_386_PC32	dm_alloc_md_mempools
    3326:	83 f8 01             	cmp    $0x1,%eax
    3329:	89 83 b4 00 00 00    	mov    %eax,0xb4(%ebx)
    332f:	19 c0                	sbb    %eax,%eax
    3331:	83 e0 f4             	and    $0xfffffff4,%eax
    3334:	5b                   	pop    %ebx
    3335:	c3                   	ret    

00003336 <realloc_argv>:
    3336:	55                   	push   %ebp
    3337:	bd 40 00 00 00       	mov    $0x40,%ebp
    333c:	57                   	push   %edi
    333d:	56                   	push   %esi
    333e:	53                   	push   %ebx
    333f:	89 c3                	mov    %eax,%ebx
    3341:	83 ec 08             	sub    $0x8,%esp
    3344:	89 54 24 04          	mov    %edx,0x4(%esp)
    3348:	8b 00                	mov    (%eax),%eax
    334a:	85 c0                	test   %eax,%eax
    334c:	8d 14 00             	lea    (%eax,%eax,1),%edx
    334f:	0f 45 ea             	cmovne %edx,%ebp
    3352:	ba d0 00 00 00       	mov    $0xd0,%edx
    3357:	8d 04 ad 00 00 00 00 	lea    0x0(,%ebp,4),%eax
    335e:	e8 fc ff ff ff       	call   335f <realloc_argv+0x29>
			335f: R_386_PC32	__kmalloc
    3363:	85 c0                	test   %eax,%eax
    3365:	89 c2                	mov    %eax,%edx
    3367:	74 1d                	je     3386 <realloc_argv+0x50>
    3369:	8b 03                	mov    (%ebx),%eax
    336b:	89 d7                	mov    %edx,%edi
    336d:	8b 74 24 04          	mov    0x4(%esp),%esi
    3371:	c1 e0 02             	shl    $0x2,%eax
    3374:	89 c1                	mov    %eax,%ecx
    3376:	c1 e9 02             	shr    $0x2,%ecx
    3379:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)
    337b:	89 c1                	mov    %eax,%ecx
    337d:	83 e1 03             	and    $0x3,%ecx
    3380:	74 02                	je     3384 <realloc_argv+0x4e>
    3382:	f3 a4                	rep movsb %ds:(%esi),%es:(%edi)
    3384:	89 2b                	mov    %ebp,(%ebx)
    3386:	8b 44 24 04          	mov    0x4(%esp),%eax
    338a:	89 14 24             	mov    %edx,(%esp)
    338d:	e8 fc ff ff ff       	call   338e <realloc_argv+0x58>
			338e: R_386_PC32	kfree
    3392:	8b 14 24             	mov    (%esp),%edx
    3395:	5e                   	pop    %esi
    3396:	5f                   	pop    %edi
    3397:	5b                   	pop    %ebx
    3398:	89 d0                	mov    %edx,%eax
    339a:	5e                   	pop    %esi
    339b:	5f                   	pop    %edi
    339c:	5d                   	pop    %ebp
    339d:	c3                   	ret    

0000339e <dm_split_args>:
    339e:	55                   	push   %ebp
    339f:	57                   	push   %edi
    33a0:	56                   	push   %esi
    33a1:	89 ce                	mov    %ecx,%esi
    33a3:	53                   	push   %ebx
    33a4:	89 c3                	mov    %eax,%ebx
    33a6:	83 ec 0c             	sub    $0xc,%esp
    33a9:	85 c9                	test   %ecx,%ecx
    33ab:	89 14 24             	mov    %edx,(%esp)
    33ae:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)
    33b5:	00 
    33b6:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
    33bc:	75 0b                	jne    33c9 <dm_split_args+0x2b>
    33be:	c7 02 00 00 00 00    	movl   $0x0,(%edx)
    33c4:	e9 99 00 00 00       	jmp    3462 <dm_split_args+0xc4>
    33c9:	8d 7c 24 08          	lea    0x8(%esp),%edi
    33cd:	31 d2                	xor    %edx,%edx
    33cf:	89 f8                	mov    %edi,%eax
    33d1:	e8 60 ff ff ff       	call   3336 <realloc_argv>
    33d6:	85 c0                	test   %eax,%eax
    33d8:	0f 84 88 00 00 00    	je     3466 <dm_split_args+0xc8>
    33de:	89 f7                	mov    %esi,%edi
    33e0:	eb 02                	jmp    33e4 <dm_split_args+0x46>
    33e2:	89 cf                	mov    %ecx,%edi
    33e4:	8a 17                	mov    (%edi),%dl
    33e6:	84 d2                	test   %dl,%dl
    33e8:	74 73                	je     345d <dm_split_args+0xbf>
    33ea:	0f b6 d2             	movzbl %dl,%edx
    33ed:	f6 82 00 00 00 00 20 	testb  $0x20,0x0(%edx)
			33ef: R_386_32	_ctype
    33f4:	8d 4f 01             	lea    0x1(%edi),%ecx
    33f7:	75 e9                	jne    33e2 <dm_split_args+0x44>
    33f9:	eb 78                	jmp    3473 <dm_split_args+0xd5>
    33fb:	80 fa 5c             	cmp    $0x5c,%dl
    33fe:	75 0f                	jne    340f <dm_split_args+0x71>
    3400:	8a 46 01             	mov    0x1(%esi),%al
    3403:	84 c0                	test   %al,%al
    3405:	74 08                	je     340f <dm_split_args+0x71>
    3407:	88 41 ff             	mov    %al,-0x1(%ecx)
    340a:	83 c6 02             	add    $0x2,%esi
    340d:	eb 10                	jmp    341f <dm_split_args+0x81>
    340f:	0f b6 c2             	movzbl %dl,%eax
    3412:	f6 80 00 00 00 00 20 	testb  $0x20,0x0(%eax)
			3414: R_386_32	_ctype
    3419:	75 12                	jne    342d <dm_split_args+0x8f>
    341b:	88 51 ff             	mov    %dl,-0x1(%ecx)
    341e:	46                   	inc    %esi
    341f:	41                   	inc    %ecx
    3420:	8d 41 ff             	lea    -0x1(%ecx),%eax
    3423:	89 44 24 04          	mov    %eax,0x4(%esp)
    3427:	8a 16                	mov    (%esi),%dl
    3429:	84 d2                	test   %dl,%dl
    342b:	75 ce                	jne    33fb <dm_split_args+0x5d>
    342d:	8b 13                	mov    (%ebx),%edx
    342f:	89 e8                	mov    %ebp,%eax
    3431:	42                   	inc    %edx
    3432:	3b 54 24 08          	cmp    0x8(%esp),%edx
    3436:	76 0f                	jbe    3447 <dm_split_args+0xa9>
    3438:	89 ea                	mov    %ebp,%edx
    343a:	8d 44 24 08          	lea    0x8(%esp),%eax
    343e:	e8 f3 fe ff ff       	call   3336 <realloc_argv>
    3443:	85 c0                	test   %eax,%eax
    3445:	74 1f                	je     3466 <dm_split_args+0xc8>
    3447:	8b 54 24 04          	mov    0x4(%esp),%edx
    344b:	80 3e 01             	cmpb   $0x1,(%esi)
    344e:	c6 02 00             	movb   $0x0,(%edx)
    3451:	8b 13                	mov    (%ebx),%edx
    3453:	83 de ff             	sbb    $0xffffffff,%esi
    3456:	89 3c 90             	mov    %edi,(%eax,%edx,4)
    3459:	ff 03                	incl   (%ebx)
    345b:	eb 81                	jmp    33de <dm_split_args+0x40>
    345d:	8b 14 24             	mov    (%esp),%edx
    3460:	89 02                	mov    %eax,(%edx)
    3462:	31 c0                	xor    %eax,%eax
    3464:	eb 05                	jmp    346b <dm_split_args+0xcd>
    3466:	b8 f4 ff ff ff       	mov    $0xfffffff4,%eax
    346b:	83 c4 0c             	add    $0xc,%esp
    346e:	5b                   	pop    %ebx
    346f:	5e                   	pop    %esi
    3470:	5f                   	pop    %edi
    3471:	5d                   	pop    %ebp
    3472:	c3                   	ret    
    3473:	89 fe                	mov    %edi,%esi
    3475:	89 c5                	mov    %eax,%ebp
    3477:	eb a7                	jmp    3420 <dm_split_args+0x82>

00003479 <close_dev>:
    3479:	53                   	push   %ebx
    347a:	89 c3                	mov    %eax,%ebx
    347c:	83 7b 0c 00          	cmpl   $0x0,0xc(%ebx)
    3480:	89 d0                	mov    %edx,%eax
    3482:	74 21                	je     34a5 <close_dev+0x2c>
    3484:	e8 fc ff ff ff       	call   3485 <close_dev+0xc>
			3485: R_386_PC32	dm_disk
    3489:	89 c2                	mov    %eax,%edx
    348b:	8b 43 0c             	mov    0xc(%ebx),%eax
    348e:	e8 fc ff ff ff       	call   348f <close_dev+0x16>
			348f: R_386_PC32	bd_release_from_disk
    3493:	8b 53 10             	mov    0x10(%ebx),%edx
    3496:	8b 43 0c             	mov    0xc(%ebx),%eax
    3499:	e8 fc ff ff ff       	call   349a <close_dev+0x21>
			349a: R_386_PC32	blkdev_put
    349e:	c7 43 0c 00 00 00 00 	movl   $0x0,0xc(%ebx)
    34a5:	5b                   	pop    %ebx
    34a6:	c3                   	ret    

000034a7 <dm_put_device>:
    34a7:	56                   	push   %esi
    34a8:	53                   	push   %ebx
    34a9:	89 d3                	mov    %edx,%ebx
    34ab:	8d 72 f4             	lea    -0xc(%edx),%esi
    34ae:	f0 ff 4a fc          	lock decl -0x4(%edx)
    34b2:	0f 94 c2             	sete   %dl
    34b5:	84 d2                	test   %dl,%dl
    34b7:	74 2d                	je     34e6 <dm_put_device+0x3f>
    34b9:	8b 00                	mov    (%eax),%eax
    34bb:	8b 10                	mov    (%eax),%edx
    34bd:	89 f0                	mov    %esi,%eax
    34bf:	e8 b5 ff ff ff       	call   3479 <close_dev>
    34c4:	8b 46 04             	mov    0x4(%esi),%eax
    34c7:	8b 53 f4             	mov    -0xc(%ebx),%edx
    34ca:	89 42 04             	mov    %eax,0x4(%edx)
    34cd:	89 10                	mov    %edx,(%eax)
    34cf:	89 f0                	mov    %esi,%eax
    34d1:	c7 43 f4 00 01 10 00 	movl   $0x100100,-0xc(%ebx)
    34d8:	c7 46 04 00 02 20 00 	movl   $0x200200,0x4(%esi)
    34df:	5b                   	pop    %ebx
    34e0:	5e                   	pop    %esi
    34e1:	e9 fc ff ff ff       	jmp    34e2 <dm_put_device+0x3b>
			34e2: R_386_PC32	kfree
    34e6:	5b                   	pop    %ebx
    34e7:	5e                   	pop    %esi
    34e8:	c3                   	ret    

000034e9 <open_dev>:
    34e9:	55                   	push   %ebp
    34ea:	89 cd                	mov    %ecx,%ebp
    34ec:	57                   	push   %edi
    34ed:	56                   	push   %esi
    34ee:	53                   	push   %ebx
    34ef:	89 c3                	mov    %eax,%ebx
    34f1:	83 7b 0c 00          	cmpl   $0x0,0xc(%ebx)
    34f5:	89 d0                	mov    %edx,%eax
    34f7:	74 04                	je     34fd <open_dev+0x14>
    34f9:	0f 0b                	ud2a   
    34fb:	eb fe                	jmp    34fb <open_dev+0x12>
    34fd:	8b 53 10             	mov    0x10(%ebx),%edx
    3500:	e8 fc ff ff ff       	call   3501 <open_dev+0x18>
			3501: R_386_PC32	open_by_devnum
    3505:	3d 00 f0 ff ff       	cmp    $0xfffff000,%eax
    350a:	89 c6                	mov    %eax,%esi
    350c:	89 c7                	mov    %eax,%edi
    350e:	77 2b                	ja     353b <open_dev+0x52>
    3510:	89 e8                	mov    %ebp,%eax
    3512:	e8 fc ff ff ff       	call   3513 <open_dev+0x2a>
			3513: R_386_PC32	dm_disk
    3517:	8b 15 a0 00 00 00    	mov    0xa0,%edx
			3519: R_386_32	.rodata
    351d:	89 c1                	mov    %eax,%ecx
    351f:	89 f0                	mov    %esi,%eax
    3521:	e8 fc ff ff ff       	call   3522 <open_dev+0x39>
			3522: R_386_PC32	bd_claim_by_disk
    3526:	85 c0                	test   %eax,%eax
    3528:	89 c7                	mov    %eax,%edi
    352a:	74 0c                	je     3538 <open_dev+0x4f>
    352c:	8b 53 10             	mov    0x10(%ebx),%edx
    352f:	89 f0                	mov    %esi,%eax
    3531:	e8 fc ff ff ff       	call   3532 <open_dev+0x49>
			3532: R_386_PC32	blkdev_put
    3536:	eb 03                	jmp    353b <open_dev+0x52>
    3538:	89 73 0c             	mov    %esi,0xc(%ebx)
    353b:	89 f8                	mov    %edi,%eax
    353d:	5b                   	pop    %ebx
    353e:	5e                   	pop    %esi
    353f:	5f                   	pop    %edi
    3540:	5d                   	pop    %ebp
    3541:	c3                   	ret    

00003542 <dm_get_device>:
    3542:	55                   	push   %ebp
    3543:	57                   	push   %edi
    3544:	56                   	push   %esi
    3545:	53                   	push   %ebx
    3546:	89 d3                	mov    %edx,%ebx
    3548:	83 ec 60             	sub    $0x60,%esp
    354b:	8b 94 24 88 00 00 00 	mov    0x88(%esp),%edx
    3552:	89 54 24 08          	mov    %edx,0x8(%esp)
    3556:	65 8b 15 14 00 00 00 	mov    %gs:0x14,%edx
    355d:	89 54 24 5c          	mov    %edx,0x5c(%esp)
    3561:	31 d2                	xor    %edx,%edx
    3563:	8b 30                	mov    (%eax),%esi
    3565:	85 f6                	test   %esi,%esi
    3567:	75 04                	jne    356d <dm_get_device+0x2b>
    3569:	0f 0b                	ud2a   
    356b:	eb fe                	jmp    356b <dm_get_device+0x29>
    356d:	8d 44 24 0c          	lea    0xc(%esp),%eax
    3571:	50                   	push   %eax
    3572:	8d 44 24 14          	lea    0x14(%esp),%eax
    3576:	50                   	push   %eax
    3577:	68 a0 0a 00 00       	push   $0xaa0
			3578: R_386_32	.rodata.str1.1
    357c:	53                   	push   %ebx
    357d:	e8 fc ff ff ff       	call   357e <dm_get_device+0x3c>
			357e: R_386_PC32	sscanf
    3582:	83 c4 10             	add    $0x10,%esp
    3585:	83 f8 02             	cmp    $0x2,%eax
    3588:	75 2e                	jne    35b8 <dm_get_device+0x76>
    358a:	8b 54 24 10          	mov    0x10(%esp),%edx
    358e:	8b 44 24 0c          	mov    0xc(%esp),%eax
    3592:	89 d5                	mov    %edx,%ebp
    3594:	c1 e5 14             	shl    $0x14,%ebp
    3597:	09 c5                	or     %eax,%ebp
    3599:	89 e9                	mov    %ebp,%ecx
    359b:	c1 e9 14             	shr    $0x14,%ecx
    359e:	39 d1                	cmp    %edx,%ecx
    35a0:	0f 85 88 01 00 00    	jne    372e <dm_get_device+0x1ec>
    35a6:	89 ea                	mov    %ebp,%edx
    35a8:	81 e2 ff ff 0f 00    	and    $0xfffff,%edx
    35ae:	39 c2                	cmp    %eax,%edx
    35b0:	0f 85 78 01 00 00    	jne    372e <dm_get_device+0x1ec>
    35b6:	eb 1b                	jmp    35d3 <dm_get_device+0x91>
    35b8:	89 d8                	mov    %ebx,%eax
    35ba:	e8 fc ff ff ff       	call   35bb <dm_get_device+0x79>
			35bb: R_386_PC32	lookup_bdev
    35bf:	3d 00 f0 ff ff       	cmp    $0xfffff000,%eax
    35c4:	89 c2                	mov    %eax,%edx
    35c6:	0f 87 67 01 00 00    	ja     3733 <dm_get_device+0x1f1>
    35cc:	8b 28                	mov    (%eax),%ebp
    35ce:	e8 fc ff ff ff       	call   35cf <dm_get_device+0x8d>
			35cf: R_386_PC32	bdput
    35d3:	8d 86 a4 00 00 00    	lea    0xa4(%esi),%eax
    35d9:	89 44 24 04          	mov    %eax,0x4(%esp)
    35dd:	8b 9e a4 00 00 00    	mov    0xa4(%esi),%ebx
    35e3:	eb 09                	jmp    35ee <dm_get_device+0xac>
    35e5:	8b 53 0c             	mov    0xc(%ebx),%edx
    35e8:	39 2a                	cmp    %ebp,(%edx)
    35ea:	74 10                	je     35fc <dm_get_device+0xba>
    35ec:	89 c3                	mov    %eax,%ebx
    35ee:	8b 03                	mov    (%ebx),%eax
    35f0:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    35f4:	3b 5c 24 04          	cmp    0x4(%esp),%ebx
    35f8:	75 eb                	jne    35e5 <dm_get_device+0xa3>
    35fa:	eb 08                	jmp    3604 <dm_get_device+0xc2>
    35fc:	85 db                	test   %ebx,%ebx
    35fe:	0f 85 b0 00 00 00    	jne    36b4 <dm_get_device+0x172>
    3604:	ba d0 00 00 00       	mov    $0xd0,%edx
    3609:	b8 18 06 00 00       	mov    $0x618,%eax
			360a: R_386_32	kmalloc_caches
    360e:	e8 fc ff ff ff       	call   360f <dm_get_device+0xcd>
			360f: R_386_PC32	kmem_cache_alloc
    3613:	b9 24 00 00 00       	mov    $0x24,%ecx
    3618:	68 d0 00 00 00       	push   $0xd0
    361d:	89 c7                	mov    %eax,%edi
    361f:	ff 35 1c 06 00 00    	pushl  0x61c
			3621: R_386_32	kmalloc_caches
    3625:	89 c2                	mov    %eax,%edx
    3627:	b8 04 36 00 00       	mov    $0x3604,%eax
			3628: R_386_32	.text
    362c:	89 fb                	mov    %edi,%ebx
    362e:	e8 9c f5 ff ff       	call   2bcf <trace_kmalloc>
    3633:	85 ff                	test   %edi,%edi
    3635:	58                   	pop    %eax
    3636:	5a                   	pop    %edx
    3637:	ba f4 ff ff ff       	mov    $0xfffffff4,%edx
    363c:	0f 84 f1 00 00 00    	je     3733 <dm_get_device+0x1f1>
    3642:	8b 94 24 84 00 00 00 	mov    0x84(%esp),%edx
    3649:	89 f8                	mov    %edi,%eax
    364b:	c7 47 0c 00 00 00 00 	movl   $0x0,0xc(%edi)
    3652:	89 57 10             	mov    %edx,0x10(%edi)
    3655:	8b 0e                	mov    (%esi),%ecx
    3657:	89 ea                	mov    %ebp,%edx
    3659:	e8 8b fe ff ff       	call   34e9 <open_dev>
    365e:	85 c0                	test   %eax,%eax
    3660:	89 c2                	mov    %eax,%edx
    3662:	74 12                	je     3676 <dm_get_device+0x134>
    3664:	89 f8                	mov    %edi,%eax
    3666:	89 14 24             	mov    %edx,(%esp)
    3669:	e8 fc ff ff ff       	call   366a <dm_get_device+0x128>
			366a: R_386_PC32	kfree
    366e:	8b 14 24             	mov    (%esp),%edx
    3671:	e9 bd 00 00 00       	jmp    3733 <dm_get_device+0x1f1>
    3676:	89 e8                	mov    %ebp,%eax
    3678:	25 ff ff 0f 00       	and    $0xfffff,%eax
    367d:	50                   	push   %eax
    367e:	c1 ed 14             	shr    $0x14,%ebp
    3681:	55                   	push   %ebp
    3682:	68 a0 0a 00 00       	push   $0xaa0
			3683: R_386_32	.rodata.str1.1
    3687:	8d 47 14             	lea    0x14(%edi),%eax
    368a:	50                   	push   %eax
    368b:	e8 fc ff ff ff       	call   368c <dm_get_device+0x14a>
			368c: R_386_PC32	sprintf
    3690:	c7 47 08 00 00 00 00 	movl   $0x0,0x8(%edi)
    3697:	8b 86 a4 00 00 00    	mov    0xa4(%esi),%eax
    369d:	89 78 04             	mov    %edi,0x4(%eax)
    36a0:	89 07                	mov    %eax,(%edi)
    36a2:	8b 44 24 14          	mov    0x14(%esp),%eax
    36a6:	83 c4 10             	add    $0x10,%esp
    36a9:	89 47 04             	mov    %eax,0x4(%edi)
    36ac:	89 be a4 00 00 00    	mov    %edi,0xa4(%esi)
    36b2:	eb 69                	jmp    371d <dm_get_device+0x1db>
    36b4:	8b 43 10             	mov    0x10(%ebx),%eax
    36b7:	8b 94 24 84 00 00 00 	mov    0x84(%esp),%edx
    36be:	09 c2                	or     %eax,%edx
    36c0:	39 d0                	cmp    %edx,%eax
    36c2:	74 59                	je     371d <dm_get_device+0x1db>
    36c4:	8b 2e                	mov    (%esi),%ebp
    36c6:	8d 7c 24 14          	lea    0x14(%esp),%edi
    36ca:	b9 09 00 00 00       	mov    $0x9,%ecx
    36cf:	89 de                	mov    %ebx,%esi
    36d1:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)
    36d3:	8d 7c 24 38          	lea    0x38(%esp),%edi
    36d7:	8d 74 24 14          	lea    0x14(%esp),%esi
    36db:	8d 44 24 38          	lea    0x38(%esp),%eax
    36df:	b1 09                	mov    $0x9,%cl
    36e1:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)
    36e3:	89 e9                	mov    %ebp,%ecx
    36e5:	c7 44 24 44 00 00 00 	movl   $0x0,0x44(%esp)
    36ec:	00 
    36ed:	8b 94 24 84 00 00 00 	mov    0x84(%esp),%edx
    36f4:	09 54 24 48          	or     %edx,0x48(%esp)
    36f8:	8b 53 0c             	mov    0xc(%ebx),%edx
    36fb:	8b 12                	mov    (%edx),%edx
    36fd:	e8 e7 fd ff ff       	call   34e9 <open_dev>
    3702:	85 c0                	test   %eax,%eax
    3704:	89 c2                	mov    %eax,%edx
    3706:	75 2b                	jne    3733 <dm_get_device+0x1f1>
    3708:	8b 84 24 84 00 00 00 	mov    0x84(%esp),%eax
    370f:	89 ea                	mov    %ebp,%edx
    3711:	09 43 10             	or     %eax,0x10(%ebx)
    3714:	8d 44 24 14          	lea    0x14(%esp),%eax
    3718:	e8 5c fd ff ff       	call   3479 <close_dev>
    371d:	f0 ff 43 08          	lock incl 0x8(%ebx)
    3721:	8b 54 24 08          	mov    0x8(%esp),%edx
    3725:	83 c3 0c             	add    $0xc,%ebx
    3728:	89 1a                	mov    %ebx,(%edx)
    372a:	31 d2                	xor    %edx,%edx
    372c:	eb 05                	jmp    3733 <dm_get_device+0x1f1>
    372e:	ba b5 ff ff ff       	mov    $0xffffffb5,%edx
    3733:	89 d0                	mov    %edx,%eax
    3735:	8b 54 24 5c          	mov    0x5c(%esp),%edx
    3739:	65 33 15 14 00 00 00 	xor    %gs:0x14,%edx
    3740:	74 05                	je     3747 <dm_get_device+0x205>
    3742:	e8 fc ff ff ff       	call   3743 <dm_get_device+0x201>
			3743: R_386_PC32	__stack_chk_fail
    3747:	83 c4 60             	add    $0x60,%esp
    374a:	5b                   	pop    %ebx
    374b:	5e                   	pop    %esi
    374c:	5f                   	pop    %edi
    374d:	5d                   	pop    %ebp
    374e:	c3                   	ret    

0000374f <dm_set_device_limits>:
    374f:	55                   	push   %ebp
    3750:	57                   	push   %edi
    3751:	89 c7                	mov    %eax,%edi
    3753:	56                   	push   %esi
    3754:	53                   	push   %ebx
    3755:	83 ec 30             	sub    $0x30,%esp
    3758:	65 a1 14 00 00 00    	mov    %gs:0x14,%eax
    375e:	89 44 24 2c          	mov    %eax,0x2c(%esp)
    3762:	31 c0                	xor    %eax,%eax
    3764:	8b 6c 24 54          	mov    0x54(%esp),%ebp
    3768:	8b 32                	mov    (%edx),%esi
    376a:	8b 46 50             	mov    0x50(%esi),%eax
    376d:	8b 98 94 01 00 00    	mov    0x194(%eax),%ebx
    3773:	85 db                	test   %ebx,%ebx
    3775:	75 2a                	jne    37a1 <dm_set_device_limits+0x52>
    3777:	8d 54 24 0c          	lea    0xc(%esp),%edx
    377b:	89 f0                	mov    %esi,%eax
    377d:	e8 fc ff ff ff       	call   377e <dm_set_device_limits+0x2f>
			377e: R_386_PC32	bdevname
    3782:	89 c3                	mov    %eax,%ebx
    3784:	8b 07                	mov    (%edi),%eax
    3786:	8b 00                	mov    (%eax),%eax
    3788:	e8 fc ff ff ff       	call   3789 <dm_set_device_limits+0x3a>
			3789: R_386_PC32	dm_device_name
    378d:	53                   	push   %ebx
    378e:	50                   	push   %eax
    378f:	68 a6 0a 00 00       	push   $0xaa6
			3790: R_386_32	.rodata.str1.1
    3794:	e8 fc ff ff ff       	call   3795 <dm_set_device_limits+0x46>
			3795: R_386_PC32	printk
    3799:	83 c4 0c             	add    $0xc,%esp
    379c:	e9 9b 00 00 00       	jmp    383c <dm_set_device_limits+0xed>
    37a1:	ff 74 24 48          	pushl  0x48(%esp)
    37a5:	89 f2                	mov    %esi,%edx
    37a7:	ff 74 24 48          	pushl  0x48(%esp)
    37ab:	89 e8                	mov    %ebp,%eax
    37ad:	e8 fc ff ff ff       	call   37ae <dm_set_device_limits+0x5f>
			37ae: R_386_PC32	bdev_stack_limits
    37b2:	5a                   	pop    %edx
    37b3:	59                   	pop    %ecx
    37b4:	85 c0                	test   %eax,%eax
    37b6:	79 60                	jns    3818 <dm_set_device_limits+0xc9>
    37b8:	8b 93 6c 02 00 00    	mov    0x26c(%ebx),%edx
    37be:	89 54 24 08          	mov    %edx,0x8(%esp)
    37c2:	0f b7 8b 7c 02 00 00 	movzwl 0x27c(%ebx),%ecx
    37c9:	8d 54 24 0c          	lea    0xc(%esp),%edx
    37cd:	89 4c 24 04          	mov    %ecx,0x4(%esp)
    37d1:	8b 83 68 02 00 00    	mov    0x268(%ebx),%eax
    37d7:	89 04 24             	mov    %eax,(%esp)
    37da:	89 f0                	mov    %esi,%eax
    37dc:	e8 fc ff ff ff       	call   37dd <dm_set_device_limits+0x8e>
			37dd: R_386_PC32	bdevname
    37e1:	89 c6                	mov    %eax,%esi
    37e3:	8b 07                	mov    (%edi),%eax
    37e5:	8b 00                	mov    (%eax),%eax
    37e7:	e8 fc ff ff ff       	call   37e8 <dm_set_device_limits+0x99>
			37e8: R_386_PC32	dm_device_name
    37ec:	8b 54 24 44          	mov    0x44(%esp),%edx
    37f0:	8b 4c 24 48          	mov    0x48(%esp),%ecx
    37f4:	0f a4 d1 09          	shld   $0x9,%edx,%ecx
    37f8:	51                   	push   %ecx
    37f9:	c1 e2 09             	shl    $0x9,%edx
    37fc:	52                   	push   %edx
    37fd:	ff 74 24 10          	pushl  0x10(%esp)
    3801:	ff 74 24 10          	pushl  0x10(%esp)
    3805:	ff 74 24 10          	pushl  0x10(%esp)
    3809:	56                   	push   %esi
    380a:	50                   	push   %eax
    380b:	68 f0 0a 00 00       	push   $0xaf0
			380c: R_386_32	.rodata.str1.1
    3810:	e8 fc ff ff ff       	call   3811 <dm_set_device_limits+0xc2>
			3811: R_386_PC32	printk
    3815:	83 c4 20             	add    $0x20,%esp
    3818:	83 7b 50 00          	cmpl   $0x0,0x50(%ebx)
    381c:	74 1e                	je     383c <dm_set_device_limits+0xed>
    381e:	8b 47 04             	mov    0x4(%edi),%eax
    3821:	83 78 54 00          	cmpl   $0x0,0x54(%eax)
    3825:	75 15                	jne    383c <dm_set_device_limits+0xed>
    3827:	8b 55 0c             	mov    0xc(%ebp),%edx
    382a:	b8 08 00 00 00       	mov    $0x8,%eax
    382f:	85 d2                	test   %edx,%edx
    3831:	74 06                	je     3839 <dm_set_device_limits+0xea>
    3833:	83 fa 08             	cmp    $0x8,%edx
    3836:	0f 46 c2             	cmovbe %edx,%eax
    3839:	89 45 0c             	mov    %eax,0xc(%ebp)
    383c:	31 c0                	xor    %eax,%eax
    383e:	8b 54 24 2c          	mov    0x2c(%esp),%edx
    3842:	65 33 15 14 00 00 00 	xor    %gs:0x14,%edx
    3849:	74 05                	je     3850 <dm_set_device_limits+0x101>
    384b:	e8 fc ff ff ff       	call   384c <dm_set_device_limits+0xfd>
			384c: R_386_PC32	__stack_chk_fail
    3850:	83 c4 30             	add    $0x30,%esp
    3853:	5b                   	pop    %ebx
    3854:	5e                   	pop    %esi
    3855:	5f                   	pop    %edi
    3856:	5d                   	pop    %ebp
    3857:	c3                   	ret    

00003858 <dm_table_destroy>:
    3858:	55                   	push   %ebp
    3859:	57                   	push   %edi
    385a:	56                   	push   %esi
    385b:	53                   	push   %ebx
    385c:	89 c3                	mov    %eax,%ebx
    385e:	eb 0a                	jmp    386a <dm_table_destroy+0x12>
    3860:	b8 01 00 00 00       	mov    $0x1,%eax
    3865:	e8 fc ff ff ff       	call   3866 <dm_table_destroy+0xe>
			3866: R_386_PC32	msleep
    386a:	8b 43 04             	mov    0x4(%ebx),%eax
    386d:	85 c0                	test   %eax,%eax
    386f:	75 ef                	jne    3860 <dm_table_destroy+0x8>
    3871:	f0 83 04 24 00       	lock addl $0x0,(%esp)
    3876:	8b 43 0c             	mov    0xc(%ebx),%eax
    3879:	83 f8 01             	cmp    $0x1,%eax
    387c:	76 09                	jbe    3887 <dm_table_destroy+0x2f>
    387e:	8b 44 83 48          	mov    0x48(%ebx,%eax,4),%eax
    3882:	e8 fc ff ff ff       	call   3883 <dm_table_destroy+0x2b>
			3883: R_386_PC32	vfree
    3887:	31 ff                	xor    %edi,%edi
    3889:	eb 20                	jmp    38ab <dm_table_destroy+0x53>
    388b:	6b f7 2c             	imul   $0x2c,%edi,%esi
    388e:	03 b3 9c 00 00 00    	add    0x9c(%ebx),%esi
    3894:	8b 46 04             	mov    0x4(%esi),%eax
    3897:	8b 50 20             	mov    0x20(%eax),%edx
    389a:	85 d2                	test   %edx,%edx
    389c:	74 04                	je     38a2 <dm_table_destroy+0x4a>
    389e:	89 f0                	mov    %esi,%eax
    38a0:	ff d2                	call   *%edx
    38a2:	8b 46 04             	mov    0x4(%esi),%eax
    38a5:	47                   	inc    %edi
    38a6:	e8 fc ff ff ff       	call   38a7 <dm_table_destroy+0x4f>
			38a7: R_386_PC32	dm_put_target_type
    38ab:	3b bb 90 00 00 00    	cmp    0x90(%ebx),%edi
    38b1:	72 d8                	jb     388b <dm_table_destroy+0x33>
    38b3:	8b 83 98 00 00 00    	mov    0x98(%ebx),%eax
    38b9:	8d ab a4 00 00 00    	lea    0xa4(%ebx),%ebp
    38bf:	e8 fc ff ff ff       	call   38c0 <dm_table_destroy+0x68>
			38c0: R_386_PC32	vfree
    38c4:	8b b3 a4 00 00 00    	mov    0xa4(%ebx),%esi
    38ca:	39 ee                	cmp    %ebp,%esi
    38cc:	74 25                	je     38f3 <dm_table_destroy+0x9b>
    38ce:	8b 3e                	mov    (%esi),%edi
    38d0:	8d 46 14             	lea    0x14(%esi),%eax
    38d3:	50                   	push   %eax
    38d4:	68 98 0b 00 00       	push   $0xb98
			38d5: R_386_32	.rodata.str1.1
    38d9:	e8 fc ff ff ff       	call   38da <dm_table_destroy+0x82>
			38da: R_386_PC32	printk
    38de:	89 f0                	mov    %esi,%eax
    38e0:	e8 fc ff ff ff       	call   38e1 <dm_table_destroy+0x89>
			38e1: R_386_PC32	kfree
    38e5:	39 ef                	cmp    %ebp,%edi
    38e7:	8b 07                	mov    (%edi),%eax
    38e9:	5e                   	pop    %esi
    38ea:	5a                   	pop    %edx
    38eb:	74 06                	je     38f3 <dm_table_destroy+0x9b>
    38ed:	89 fe                	mov    %edi,%esi
    38ef:	89 c7                	mov    %eax,%edi
    38f1:	eb dd                	jmp    38d0 <dm_table_destroy+0x78>
    38f3:	8b 83 b4 00 00 00    	mov    0xb4(%ebx),%eax
    38f9:	e8 fc ff ff ff       	call   38fa <dm_table_destroy+0xa2>
			38fa: R_386_PC32	dm_free_md_mempools
    38fe:	89 d8                	mov    %ebx,%eax
    3900:	5b                   	pop    %ebx
    3901:	5e                   	pop    %esi
    3902:	5f                   	pop    %edi
    3903:	5d                   	pop    %ebp
    3904:	e9 fc ff ff ff       	jmp    3905 <dm_table_destroy+0xad>
			3905: R_386_PC32	kfree

00003909 <dm_vcalloc>:
    3909:	57                   	push   %edi
    390a:	89 d1                	mov    %edx,%ecx
    390c:	56                   	push   %esi
    390d:	31 d2                	xor    %edx,%edx
    390f:	89 c6                	mov    %eax,%esi
    3911:	83 c8 ff             	or     $0xffffffff,%eax
    3914:	f7 f1                	div    %ecx
    3916:	53                   	push   %ebx
    3917:	31 db                	xor    %ebx,%ebx
    3919:	39 c6                	cmp    %eax,%esi
    391b:	77 2a                	ja     3947 <dm_vcalloc+0x3e>
    391d:	0f af f1             	imul   %ecx,%esi
    3920:	89 f0                	mov    %esi,%eax
    3922:	e8 fc ff ff ff       	call   3923 <dm_vcalloc+0x1a>
			3923: R_386_PC32	vmalloc
    3927:	85 c0                	test   %eax,%eax
    3929:	89 c3                	mov    %eax,%ebx
    392b:	74 1a                	je     3947 <dm_vcalloc+0x3e>
    392d:	89 f1                	mov    %esi,%ecx
    392f:	89 c7                	mov    %eax,%edi
    3931:	c1 e9 02             	shr    $0x2,%ecx
    3934:	31 c0                	xor    %eax,%eax
    3936:	89 f2                	mov    %esi,%edx
    3938:	f3 ab                	rep stos %eax,%es:(%edi)
    393a:	f6 c2 02             	test   $0x2,%dl
    393d:	74 02                	je     3941 <dm_vcalloc+0x38>
    393f:	66 ab                	stos   %ax,%es:(%edi)
    3941:	f6 c2 01             	test   $0x1,%dl
    3944:	74 01                	je     3947 <dm_vcalloc+0x3e>
    3946:	aa                   	stos   %al,%es:(%edi)
    3947:	89 d8                	mov    %ebx,%eax
    3949:	5b                   	pop    %ebx
    394a:	5e                   	pop    %esi
    394b:	5f                   	pop    %edi
    394c:	c3                   	ret    

0000394d <dm_table_complete>:
    394d:	55                   	push   %ebp
    394e:	bd 05 00 00 00       	mov    $0x5,%ebp
    3953:	57                   	push   %edi
    3954:	31 ff                	xor    %edi,%edi
    3956:	56                   	push   %esi
    3957:	53                   	push   %ebx
    3958:	89 c3                	mov    %eax,%ebx
    395a:	83 ec 20             	sub    $0x20,%esp
    395d:	8b 88 90 00 00 00    	mov    0x90(%eax),%ecx
    3963:	83 c1 03             	add    $0x3,%ecx
    3966:	c1 e9 02             	shr    $0x2,%ecx
    3969:	89 c8                	mov    %ecx,%eax
    396b:	eb 09                	jmp    3976 <dm_table_complete+0x29>
    396d:	83 c0 04             	add    $0x4,%eax
    3970:	31 d2                	xor    %edx,%edx
    3972:	f7 f5                	div    %ebp
    3974:	89 f7                	mov    %esi,%edi
    3976:	83 f8 01             	cmp    $0x1,%eax
    3979:	8d 77 01             	lea    0x1(%edi),%esi
    397c:	77 ef                	ja     396d <dm_table_complete+0x20>
    397e:	8d 47 04             	lea    0x4(%edi),%eax
    3981:	83 fe 01             	cmp    $0x1,%esi
    3984:	89 73 0c             	mov    %esi,0xc(%ebx)
    3987:	89 0c 83             	mov    %ecx,(%ebx,%eax,4)
    398a:	8b 93 98 00 00 00    	mov    0x98(%ebx),%edx
    3990:	89 54 bb 50          	mov    %edx,0x50(%ebx,%edi,4)
    3994:	0f 86 18 01 00 00    	jbe    3ab2 <dm_table_complete+0x165>
    399a:	4f                   	dec    %edi
    399b:	31 f6                	xor    %esi,%esi
    399d:	8d 0c 83             	lea    (%ebx,%eax,4),%ecx
    39a0:	bd 05 00 00 00       	mov    $0x5,%ebp
    39a5:	eb 0f                	jmp    39b6 <dm_table_complete+0x69>
    39a7:	8b 41 04             	mov    0x4(%ecx),%eax
    39aa:	31 d2                	xor    %edx,%edx
    39ac:	4f                   	dec    %edi
    39ad:	83 c0 04             	add    $0x4,%eax
    39b0:	f7 f5                	div    %ebp
    39b2:	89 01                	mov    %eax,(%ecx)
    39b4:	01 c6                	add    %eax,%esi
    39b6:	83 e9 04             	sub    $0x4,%ecx
    39b9:	85 ff                	test   %edi,%edi
    39bb:	79 ea                	jns    39a7 <dm_table_complete+0x5a>
    39bd:	ba 20 00 00 00       	mov    $0x20,%edx
    39c2:	89 f0                	mov    %esi,%eax
    39c4:	e8 fc ff ff ff       	call   39c5 <dm_table_complete+0x78>
			39c5: R_386_PC32	dm_vcalloc
    39c9:	ba f4 ff ff ff       	mov    $0xfffffff4,%edx
    39ce:	85 c0                	test   %eax,%eax
    39d0:	0f 84 de 00 00 00    	je     3ab4 <dm_table_complete+0x167>
    39d6:	8b 53 0c             	mov    0xc(%ebx),%edx
    39d9:	8d 4a fe             	lea    -0x2(%edx),%ecx
    39dc:	89 4c 24 0c          	mov    %ecx,0xc(%esp)
    39e0:	8d 54 93 08          	lea    0x8(%ebx,%edx,4),%edx
    39e4:	e9 be 00 00 00       	jmp    3aa7 <dm_table_complete+0x15a>
    39e9:	89 42 40             	mov    %eax,0x40(%edx)
    39ec:	8b 7c 24 0c          	mov    0xc(%esp),%edi
    39f0:	31 c9                	xor    %ecx,%ecx
    39f2:	8b 32                	mov    (%edx),%esi
    39f4:	47                   	inc    %edi
    39f5:	89 74 24 14          	mov    %esi,0x14(%esp)
    39f9:	89 7c 24 1c          	mov    %edi,0x1c(%esp)
    39fd:	e9 8d 00 00 00       	jmp    3a8f <dm_table_complete+0x142>
    3a02:	8b 72 40             	mov    0x40(%edx),%esi
    3a05:	89 cd                	mov    %ecx,%ebp
    3a07:	c1 e5 05             	shl    $0x5,%ebp
    3a0a:	8d 3c 89             	lea    (%ecx,%ecx,4),%edi
    3a0d:	89 7c 24 18          	mov    %edi,0x18(%esp)
    3a11:	01 f5                	add    %esi,%ebp
    3a13:	31 f6                	xor    %esi,%esi
    3a15:	89 6c 24 10          	mov    %ebp,0x10(%esp)
    3a19:	89 04 24             	mov    %eax,(%esp)
    3a1c:	8b 44 24 18          	mov    0x18(%esp),%eax
    3a20:	8b 7c 24 1c          	mov    0x1c(%esp),%edi
    3a24:	8d 2c 06             	lea    (%esi,%eax,1),%ebp
    3a27:	8b 43 0c             	mov    0xc(%ebx),%eax
    3a2a:	48                   	dec    %eax
    3a2b:	89 44 24 04          	mov    %eax,0x4(%esp)
    3a2f:	8b 04 24             	mov    (%esp),%eax
    3a32:	eb 08                	jmp    3a3c <dm_table_complete+0xef>
    3a34:	8d 6c ad 00          	lea    0x0(%ebp,%ebp,4),%ebp
    3a38:	47                   	inc    %edi
    3a39:	83 c5 04             	add    $0x4,%ebp
    3a3c:	3b 7c 24 04          	cmp    0x4(%esp),%edi
    3a40:	72 f2                	jb     3a34 <dm_table_complete+0xe7>
    3a42:	89 04 24             	mov    %eax,(%esp)
    3a45:	c7 44 24 04 ff ff ff 	movl   $0xffffffff,0x4(%esp)
    3a4c:	ff 
    3a4d:	c7 44 24 08 ff ff ff 	movl   $0xffffffff,0x8(%esp)
    3a54:	ff 
    3a55:	3b 6c bb 10          	cmp    0x10(%ebx,%edi,4),%ebp
    3a59:	73 17                	jae    3a72 <dm_table_complete+0x125>
    3a5b:	89 e8                	mov    %ebp,%eax
    3a5d:	c1 e0 05             	shl    $0x5,%eax
    3a60:	03 44 bb 50          	add    0x50(%ebx,%edi,4),%eax
    3a64:	8b 78 18             	mov    0x18(%eax),%edi
    3a67:	8b 68 1c             	mov    0x1c(%eax),%ebp
    3a6a:	89 7c 24 04          	mov    %edi,0x4(%esp)
    3a6e:	89 6c 24 08          	mov    %ebp,0x8(%esp)
    3a72:	8b 7c 24 04          	mov    0x4(%esp),%edi
    3a76:	8b 6c 24 08          	mov    0x8(%esp),%ebp
    3a7a:	8b 44 24 10          	mov    0x10(%esp),%eax
    3a7e:	89 3c f0             	mov    %edi,(%eax,%esi,8)
    3a81:	89 6c f0 04          	mov    %ebp,0x4(%eax,%esi,8)
    3a85:	46                   	inc    %esi
    3a86:	83 fe 04             	cmp    $0x4,%esi
    3a89:	75 91                	jne    3a1c <dm_table_complete+0xcf>
    3a8b:	8b 04 24             	mov    (%esp),%eax
    3a8e:	41                   	inc    %ecx
    3a8f:	3b 0a                	cmp    (%edx),%ecx
    3a91:	0f 82 6b ff ff ff    	jb     3a02 <dm_table_complete+0xb5>
    3a97:	8b 4c 24 14          	mov    0x14(%esp),%ecx
    3a9b:	83 ea 04             	sub    $0x4,%edx
    3a9e:	ff 4c 24 0c          	decl   0xc(%esp)
    3aa2:	c1 e1 05             	shl    $0x5,%ecx
    3aa5:	01 c8                	add    %ecx,%eax
    3aa7:	83 7c 24 0c 00       	cmpl   $0x0,0xc(%esp)
    3aac:	0f 89 37 ff ff ff    	jns    39e9 <dm_table_complete+0x9c>
    3ab2:	31 d2                	xor    %edx,%edx
    3ab4:	83 c4 20             	add    $0x20,%esp
    3ab7:	89 d0                	mov    %edx,%eax
    3ab9:	5b                   	pop    %ebx
    3aba:	5e                   	pop    %esi
    3abb:	5f                   	pop    %edi
    3abc:	5d                   	pop    %ebp
    3abd:	c3                   	ret    

00003abe <alloc_targets>:
    3abe:	55                   	push   %ebp
    3abf:	57                   	push   %edi
    3ac0:	56                   	push   %esi
    3ac1:	53                   	push   %ebx
    3ac2:	89 c3                	mov    %eax,%ebx
    3ac4:	83 ec 14             	sub    $0x14,%esp
    3ac7:	89 54 24 0c          	mov    %edx,0xc(%esp)
    3acb:	8b a8 90 00 00 00    	mov    0x90(%eax),%ebp
    3ad1:	89 d0                	mov    %edx,%eax
    3ad3:	40                   	inc    %eax
    3ad4:	ba 34 00 00 00       	mov    $0x34,%edx
    3ad9:	e8 fc ff ff ff       	call   3ada <alloc_targets+0x1c>
			3ada: R_386_PC32	dm_vcalloc
    3ade:	89 04 24             	mov    %eax,(%esp)
    3ae1:	b8 f4 ff ff ff       	mov    $0xfffffff4,%eax
    3ae6:	83 3c 24 00          	cmpl   $0x0,(%esp)
    3aea:	0f 84 a6 00 00 00    	je     3b96 <alloc_targets+0xd8>
    3af0:	8b 44 24 0c          	mov    0xc(%esp),%eax
    3af4:	85 ed                	test   %ebp,%ebp
    3af6:	8b 14 24             	mov    (%esp),%edx
    3af9:	8d 04 c2             	lea    (%edx,%eax,8),%eax
    3afc:	89 44 24 10          	mov    %eax,0x10(%esp)
    3b00:	74 3c                	je     3b3e <alloc_targets+0x80>
    3b02:	8d 04 ed 00 00 00 00 	lea    0x0(,%ebp,8),%eax
    3b09:	8b b3 98 00 00 00    	mov    0x98(%ebx),%esi
    3b0f:	89 d7                	mov    %edx,%edi
    3b11:	89 c1                	mov    %eax,%ecx
    3b13:	c1 e9 02             	shr    $0x2,%ecx
    3b16:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)
    3b18:	89 c1                	mov    %eax,%ecx
    3b1a:	83 e1 03             	and    $0x3,%ecx
    3b1d:	74 02                	je     3b21 <alloc_targets+0x63>
    3b1f:	f3 a4                	rep movsb %ds:(%esi),%es:(%edi)
    3b21:	6b c5 2c             	imul   $0x2c,%ebp,%eax
    3b24:	8b b3 9c 00 00 00    	mov    0x9c(%ebx),%esi
    3b2a:	8b 7c 24 10          	mov    0x10(%esp),%edi
    3b2e:	89 c1                	mov    %eax,%ecx
    3b30:	c1 e9 02             	shr    $0x2,%ecx
    3b33:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)
    3b35:	89 c1                	mov    %eax,%ecx
    3b37:	83 e1 03             	and    $0x3,%ecx
    3b3a:	74 02                	je     3b3e <alloc_targets+0x80>
    3b3c:	f3 a4                	rep movsb %ds:(%esi),%es:(%edi)
    3b3e:	8b 74 24 0c          	mov    0xc(%esp),%esi
    3b42:	8b 14 24             	mov    (%esp),%edx
    3b45:	29 ee                	sub    %ebp,%esi
    3b47:	c1 e6 03             	shl    $0x3,%esi
    3b4a:	89 f1                	mov    %esi,%ecx
    3b4c:	8d 3c ea             	lea    (%edx,%ebp,8),%edi
    3b4f:	83 cd ff             	or     $0xffffffff,%ebp
    3b52:	c1 e9 02             	shr    $0x2,%ecx
    3b55:	89 e8                	mov    %ebp,%eax
    3b57:	89 4c 24 04          	mov    %ecx,0x4(%esp)
    3b5b:	89 f2                	mov    %esi,%edx
    3b5d:	f3 ab                	rep stos %eax,%es:(%edi)
    3b5f:	f6 c2 02             	test   $0x2,%dl
    3b62:	74 02                	je     3b66 <alloc_targets+0xa8>
    3b64:	66 ab                	stos   %ax,%es:(%edi)
    3b66:	f6 c2 01             	test   $0x1,%dl
    3b69:	74 01                	je     3b6c <alloc_targets+0xae>
    3b6b:	aa                   	stos   %al,%es:(%edi)
    3b6c:	8b 83 98 00 00 00    	mov    0x98(%ebx),%eax
    3b72:	e8 fc ff ff ff       	call   3b73 <alloc_targets+0xb5>
			3b73: R_386_PC32	vfree
    3b77:	8b 04 24             	mov    (%esp),%eax
    3b7a:	8b 4c 24 0c          	mov    0xc(%esp),%ecx
    3b7e:	8b 54 24 10          	mov    0x10(%esp),%edx
    3b82:	89 83 98 00 00 00    	mov    %eax,0x98(%ebx)
    3b88:	31 c0                	xor    %eax,%eax
    3b8a:	89 8b 94 00 00 00    	mov    %ecx,0x94(%ebx)
    3b90:	89 93 9c 00 00 00    	mov    %edx,0x9c(%ebx)
    3b96:	83 c4 14             	add    $0x14,%esp
    3b99:	5b                   	pop    %ebx
    3b9a:	5e                   	pop    %esi
    3b9b:	5f                   	pop    %edi
    3b9c:	5d                   	pop    %ebp
    3b9d:	c3                   	ret    

00003b9e <dm_table_add_target>:
    3b9e:	55                   	push   %ebp
    3b9f:	89 c5                	mov    %eax,%ebp
    3ba1:	57                   	push   %edi
    3ba2:	56                   	push   %esi
    3ba3:	53                   	push   %ebx
    3ba4:	83 ec 18             	sub    $0x18,%esp
    3ba7:	8b 44 24 30          	mov    0x30(%esp),%eax
    3bab:	89 14 24             	mov    %edx,(%esp)
    3bae:	8b 5c 24 2c          	mov    0x2c(%esp),%ebx
    3bb2:	89 44 24 04          	mov    %eax,0x4(%esp)
    3bb6:	8b 44 24 34          	mov    0x34(%esp),%eax
    3bba:	89 44 24 08          	mov    %eax,0x8(%esp)
    3bbe:	8b 44 24 38          	mov    0x38(%esp),%eax
    3bc2:	89 44 24 0c          	mov    %eax,0xc(%esp)
    3bc6:	8b 95 94 00 00 00    	mov    0x94(%ebp),%edx
    3bcc:	39 95 90 00 00 00    	cmp    %edx,0x90(%ebp)
    3bd2:	72 13                	jb     3be7 <dm_table_add_target+0x49>
    3bd4:	01 d2                	add    %edx,%edx
    3bd6:	89 e8                	mov    %ebp,%eax
    3bd8:	e8 e1 fe ff ff       	call   3abe <alloc_targets>
    3bdd:	85 c0                	test   %eax,%eax
    3bdf:	89 c7                	mov    %eax,%edi
    3be1:	0f 85 6f 01 00 00    	jne    3d56 <dm_table_add_target+0x1b8>
    3be7:	6b b5 90 00 00 00 2c 	imul   $0x2c,0x90(%ebp),%esi
    3bee:	b9 0b 00 00 00       	mov    $0xb,%ecx
    3bf3:	03 b5 9c 00 00 00    	add    0x9c(%ebp),%esi
    3bf9:	31 c0                	xor    %eax,%eax
    3bfb:	89 f7                	mov    %esi,%edi
    3bfd:	f3 ab                	rep stos %eax,%es:(%edi)
    3bff:	8b 44 24 0c          	mov    0xc(%esp),%eax
    3c03:	0b 44 24 08          	or     0x8(%esp),%eax
    3c07:	75 1f                	jne    3c28 <dm_table_add_target+0x8a>
    3c09:	8b 45 00             	mov    0x0(%ebp),%eax
    3c0c:	bf ea ff ff ff       	mov    $0xffffffea,%edi
    3c11:	e8 fc ff ff ff       	call   3c12 <dm_table_add_target+0x74>
			3c12: R_386_PC32	dm_device_name
    3c16:	50                   	push   %eax
    3c17:	68 e6 0b 00 00       	push   $0xbe6
			3c18: R_386_32	.rodata.str1.1
    3c1c:	e8 fc ff ff ff       	call   3c1d <dm_table_add_target+0x7f>
			3c1d: R_386_PC32	printk
    3c21:	59                   	pop    %ecx
    3c22:	5b                   	pop    %ebx
    3c23:	e9 2e 01 00 00       	jmp    3d56 <dm_table_add_target+0x1b8>
    3c28:	8b 04 24             	mov    (%esp),%eax
    3c2b:	e8 fc ff ff ff       	call   3c2c <dm_table_add_target+0x8e>
			3c2c: R_386_PC32	dm_get_target_type
    3c30:	85 c0                	test   %eax,%eax
    3c32:	89 46 04             	mov    %eax,0x4(%esi)
    3c35:	75 23                	jne    3c5a <dm_table_add_target+0xbc>
    3c37:	8b 45 00             	mov    0x0(%ebp),%eax
    3c3a:	bf ea ff ff ff       	mov    $0xffffffea,%edi
    3c3f:	e8 fc ff ff ff       	call   3c40 <dm_table_add_target+0xa2>
			3c40: R_386_PC32	dm_device_name
    3c44:	ff 34 24             	pushl  (%esp)
    3c47:	50                   	push   %eax
    3c48:	68 17 0c 00 00       	push   $0xc17
			3c49: R_386_32	.rodata.str1.1
    3c4d:	e8 fc ff ff ff       	call   3c4e <dm_table_add_target+0xb0>
			3c4e: R_386_PC32	printk
    3c52:	83 c4 0c             	add    $0xc,%esp
    3c55:	e9 fc 00 00 00       	jmp    3d56 <dm_table_add_target+0x1b8>
    3c5a:	89 2e                	mov    %ebp,(%esi)
    3c5c:	89 5e 08             	mov    %ebx,0x8(%esi)
    3c5f:	8b 44 24 04          	mov    0x4(%esp),%eax
    3c63:	89 46 0c             	mov    %eax,0xc(%esi)
    3c66:	8b 44 24 08          	mov    0x8(%esp),%eax
    3c6a:	89 46 10             	mov    %eax,0x10(%esi)
    3c6d:	8b 44 24 0c          	mov    0xc(%esp),%eax
    3c71:	c7 46 28 4d 0c 00 00 	movl   $0xc4d,0x28(%esi)
			3c74: R_386_32	.rodata.str1.1
    3c78:	89 46 14             	mov    %eax,0x14(%esi)
    3c7b:	8b 8d 90 00 00 00    	mov    0x90(%ebp),%ecx
    3c81:	85 c9                	test   %ecx,%ecx
    3c83:	75 06                	jne    3c8b <dm_table_add_target+0xed>
    3c85:	0b 5c 24 04          	or     0x4(%esp),%ebx
    3c89:	eb 20                	jmp    3cab <dm_table_add_target+0x10d>
    3c8b:	49                   	dec    %ecx
    3c8c:	6b c9 2c             	imul   $0x2c,%ecx,%ecx
    3c8f:	03 8d 9c 00 00 00    	add    0x9c(%ebp),%ecx
    3c95:	8b 41 10             	mov    0x10(%ecx),%eax
    3c98:	03 41 08             	add    0x8(%ecx),%eax
    3c9b:	8b 51 14             	mov    0x14(%ecx),%edx
    3c9e:	13 51 0c             	adc    0xc(%ecx),%edx
    3ca1:	31 c3                	xor    %eax,%ebx
    3ca3:	8b 44 24 04          	mov    0x4(%esp),%eax
    3ca7:	31 d0                	xor    %edx,%eax
    3ca9:	09 c3                	or     %eax,%ebx
    3cab:	0f 94 c0             	sete   %al
    3cae:	0f b6 c0             	movzbl %al,%eax
    3cb1:	85 c0                	test   %eax,%eax
    3cb3:	75 0e                	jne    3cc3 <dm_table_add_target+0x125>
    3cb5:	c7 46 28 5b 0c 00 00 	movl   $0xc5b,0x28(%esi)
			3cb8: R_386_32	.rodata.str1.1
    3cbc:	bf ea ff ff ff       	mov    $0xffffffea,%edi
    3cc1:	eb 6d                	jmp    3d30 <dm_table_add_target+0x192>
    3cc3:	8b 4c 24 3c          	mov    0x3c(%esp),%ecx
    3cc7:	8d 54 24 10          	lea    0x10(%esp),%edx
    3ccb:	8d 44 24 14          	lea    0x14(%esp),%eax
    3ccf:	e8 fc ff ff ff       	call   3cd0 <dm_table_add_target+0x132>
			3cd0: R_386_PC32	dm_split_args
    3cd4:	85 c0                	test   %eax,%eax
    3cd6:	89 c7                	mov    %eax,%edi
    3cd8:	74 09                	je     3ce3 <dm_table_add_target+0x145>
    3cda:	c7 46 28 68 0c 00 00 	movl   $0xc68,0x28(%esi)
			3cdd: R_386_32	.rodata.str1.1
    3ce1:	eb 4d                	jmp    3d30 <dm_table_add_target+0x192>
    3ce3:	8b 5e 04             	mov    0x4(%esi),%ebx
    3ce6:	89 f0                	mov    %esi,%eax
    3ce8:	8b 4c 24 10          	mov    0x10(%esp),%ecx
    3cec:	8b 54 24 14          	mov    0x14(%esp),%edx
    3cf0:	ff 53 1c             	call   *0x1c(%ebx)
    3cf3:	89 c7                	mov    %eax,%edi
    3cf5:	8b 44 24 10          	mov    0x10(%esp),%eax
    3cf9:	e8 fc ff ff ff       	call   3cfa <dm_table_add_target+0x15c>
			3cfa: R_386_PC32	kfree
    3cfe:	85 ff                	test   %edi,%edi
    3d00:	75 2e                	jne    3d30 <dm_table_add_target+0x192>
    3d02:	8b 46 08             	mov    0x8(%esi),%eax
    3d05:	03 46 10             	add    0x10(%esi),%eax
    3d08:	8b 56 0c             	mov    0xc(%esi),%edx
    3d0b:	13 56 14             	adc    0x14(%esi),%edx
    3d0e:	8b 8d 90 00 00 00    	mov    0x90(%ebp),%ecx
    3d14:	83 c0 ff             	add    $0xffffffff,%eax
    3d17:	8b 9d 98 00 00 00    	mov    0x98(%ebp),%ebx
    3d1d:	83 d2 ff             	adc    $0xffffffff,%edx
    3d20:	89 04 cb             	mov    %eax,(%ebx,%ecx,8)
    3d23:	89 54 cb 04          	mov    %edx,0x4(%ebx,%ecx,8)
    3d27:	41                   	inc    %ecx
    3d28:	89 8d 90 00 00 00    	mov    %ecx,0x90(%ebp)
    3d2e:	eb 26                	jmp    3d56 <dm_table_add_target+0x1b8>
    3d30:	8b 45 00             	mov    0x0(%ebp),%eax
    3d33:	8b 5e 28             	mov    0x28(%esi),%ebx
    3d36:	e8 fc ff ff ff       	call   3d37 <dm_table_add_target+0x199>
			3d37: R_386_PC32	dm_device_name
    3d3b:	53                   	push   %ebx
    3d3c:	ff 74 24 04          	pushl  0x4(%esp)
    3d40:	50                   	push   %eax
    3d41:	68 98 0c 00 00       	push   $0xc98
			3d42: R_386_32	.rodata.str1.1
    3d46:	e8 fc ff ff ff       	call   3d47 <dm_table_add_target+0x1a9>
			3d47: R_386_PC32	printk
    3d4b:	8b 46 04             	mov    0x4(%esi),%eax
    3d4e:	e8 fc ff ff ff       	call   3d4f <dm_table_add_target+0x1b1>
			3d4f: R_386_PC32	dm_put_target_type
    3d53:	83 c4 10             	add    $0x10,%esp
    3d56:	83 c4 18             	add    $0x18,%esp
    3d59:	89 f8                	mov    %edi,%eax
    3d5b:	5b                   	pop    %ebx
    3d5c:	5e                   	pop    %esi
    3d5d:	5f                   	pop    %edi
    3d5e:	5d                   	pop    %ebp
    3d5f:	c3                   	ret    

00003d60 <dm_table_create>:
    3d60:	55                   	push   %ebp
    3d61:	89 c5                	mov    %eax,%ebp
    3d63:	57                   	push   %edi
    3d64:	b8 08 02 00 00       	mov    $0x208,%eax
			3d65: R_386_32	kmalloc_caches
    3d69:	56                   	push   %esi
    3d6a:	89 d7                	mov    %edx,%edi
    3d6c:	53                   	push   %ebx
    3d6d:	ba d0 80 00 00       	mov    $0x80d0,%edx
    3d72:	89 ce                	mov    %ecx,%esi
    3d74:	e8 fc ff ff ff       	call   3d75 <dm_table_create+0x15>
			3d75: R_386_PC32	kmem_cache_alloc
    3d79:	b9 b8 00 00 00       	mov    $0xb8,%ecx
    3d7e:	68 d0 80 00 00       	push   $0x80d0
    3d83:	89 c2                	mov    %eax,%edx
    3d85:	ff 35 0c 02 00 00    	pushl  0x20c
			3d87: R_386_32	kmalloc_caches
    3d8b:	89 c3                	mov    %eax,%ebx
    3d8d:	b8 60 3d 00 00       	mov    $0x3d60,%eax
			3d8e: R_386_32	.text
    3d92:	e8 38 ee ff ff       	call   2bcf <trace_kmalloc>
    3d97:	85 db                	test   %ebx,%ebx
    3d99:	58                   	pop    %eax
    3d9a:	b8 f4 ff ff ff       	mov    $0xfffffff4,%eax
    3d9f:	5a                   	pop    %edx
    3da0:	74 53                	je     3df5 <dm_table_create+0x95>
    3da2:	8d 83 a4 00 00 00    	lea    0xa4(%ebx),%eax
    3da8:	85 f6                	test   %esi,%esi
    3daa:	89 83 a4 00 00 00    	mov    %eax,0xa4(%ebx)
    3db0:	89 83 a8 00 00 00    	mov    %eax,0xa8(%ebx)
    3db6:	b8 04 00 00 00       	mov    $0x4,%eax
    3dbb:	0f 44 f0             	cmove  %eax,%esi
    3dbe:	89 d8                	mov    %ebx,%eax
    3dc0:	8d 56 03             	lea    0x3(%esi),%edx
    3dc3:	83 e2 fc             	and    $0xfffffffc,%edx
    3dc6:	c7 43 04 00 00 00 00 	movl   $0x0,0x4(%ebx)
    3dcd:	e8 ec fc ff ff       	call   3abe <alloc_targets>
    3dd2:	85 c0                	test   %eax,%eax
    3dd4:	74 0e                	je     3de4 <dm_table_create+0x84>
    3dd6:	89 d8                	mov    %ebx,%eax
    3dd8:	e8 fc ff ff ff       	call   3dd9 <dm_table_create+0x79>
			3dd9: R_386_PC32	kfree
    3ddd:	b8 f4 ff ff ff       	mov    $0xfffffff4,%eax
    3de2:	eb 11                	jmp    3df5 <dm_table_create+0x95>
    3de4:	89 bb a0 00 00 00    	mov    %edi,0xa0(%ebx)
    3dea:	8b 44 24 14          	mov    0x14(%esp),%eax
    3dee:	89 03                	mov    %eax,(%ebx)
    3df0:	31 c0                	xor    %eax,%eax
    3df2:	89 5d 00             	mov    %ebx,0x0(%ebp)
    3df5:	5b                   	pop    %ebx
    3df6:	5e                   	pop    %esi
    3df7:	5f                   	pop    %edi
    3df8:	5d                   	pop    %ebp
    3df9:	c3                   	ret    
    3dfa:	90                   	nop
    3dfb:	90                   	nop

00003dfc <io_err_ctr>:
    3dfc:	31 c0                	xor    %eax,%eax
    3dfe:	c3                   	ret    

00003dff <io_err_dtr>:
    3dff:	c3                   	ret    

00003e00 <io_err_map>:
    3e00:	b8 fb ff ff ff       	mov    $0xfffffffb,%eax
    3e05:	c3                   	ret    

00003e06 <__find_target_type>:
    3e06:	56                   	push   %esi
    3e07:	89 c6                	mov    %eax,%esi
    3e09:	53                   	push   %ebx
    3e0a:	8b 1d 90 00 00 00    	mov    0x90,%ebx
			3e0c: R_386_32	.data
    3e10:	eb 11                	jmp    3e23 <__find_target_type+0x1d>
    3e12:	8b 53 08             	mov    0x8(%ebx),%edx
    3e15:	89 f0                	mov    %esi,%eax
    3e17:	e8 fc ff ff ff       	call   3e18 <__find_target_type+0x12>
			3e18: R_386_PC32	strcmp
    3e1c:	85 c0                	test   %eax,%eax
    3e1e:	74 17                	je     3e37 <__find_target_type+0x31>
    3e20:	8b 5b 64             	mov    0x64(%ebx),%ebx
    3e23:	83 eb 64             	sub    $0x64,%ebx
    3e26:	8b 43 64             	mov    0x64(%ebx),%eax
    3e29:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    3e2d:	81 fb 2c 00 00 00    	cmp    $0x2c,%ebx
			3e2f: R_386_32	.data
    3e33:	75 dd                	jne    3e12 <__find_target_type+0xc>
    3e35:	31 db                	xor    %ebx,%ebx
    3e37:	89 d8                	mov    %ebx,%eax
    3e39:	5b                   	pop    %ebx
    3e3a:	5e                   	pop    %esi
    3e3b:	c3                   	ret    

00003e3c <dm_unregister_target>:
    3e3c:	53                   	push   %ebx
    3e3d:	89 c3                	mov    %eax,%ebx
    3e3f:	b8 80 00 00 00       	mov    $0x80,%eax
			3e40: R_386_32	.data
    3e44:	e8 fc ff ff ff       	call   3e45 <dm_unregister_target+0x9>
			3e45: R_386_PC32	down_write
    3e49:	8b 43 08             	mov    0x8(%ebx),%eax
    3e4c:	e8 b5 ff ff ff       	call   3e06 <__find_target_type>
    3e51:	85 c0                	test   %eax,%eax
    3e53:	75 13                	jne    3e68 <dm_unregister_target+0x2c>
    3e55:	ff 73 08             	pushl  0x8(%ebx)
    3e58:	68 d7 0c 00 00       	push   $0xcd7
			3e59: R_386_32	.rodata.str1.1
    3e5d:	e8 fc ff ff ff       	call   3e5e <dm_unregister_target+0x22>
			3e5e: R_386_PC32	printk
    3e62:	0f 0b                	ud2a   
    3e64:	58                   	pop    %eax
    3e65:	5a                   	pop    %edx
    3e66:	eb fe                	jmp    3e66 <dm_unregister_target+0x2a>
    3e68:	8b 43 68             	mov    0x68(%ebx),%eax
    3e6b:	8b 53 64             	mov    0x64(%ebx),%edx
    3e6e:	89 42 04             	mov    %eax,0x4(%edx)
    3e71:	89 10                	mov    %edx,(%eax)
    3e73:	b8 80 00 00 00       	mov    $0x80,%eax
			3e74: R_386_32	.data
    3e78:	c7 43 64 00 01 10 00 	movl   $0x100100,0x64(%ebx)
    3e7f:	c7 43 68 00 02 20 00 	movl   $0x200200,0x68(%ebx)
    3e86:	5b                   	pop    %ebx
    3e87:	e9 fc ff ff ff       	jmp    3e88 <dm_unregister_target+0x4c>
			3e88: R_386_PC32	up_write

00003e8c <dm_target_exit>:
    3e8c:	b8 14 00 00 00       	mov    $0x14,%eax
			3e8d: R_386_32	.data
    3e91:	e9 fc ff ff ff       	jmp    3e92 <dm_target_exit+0x6>
			3e92: R_386_PC32	dm_unregister_target

00003e96 <dm_register_target>:
    3e96:	56                   	push   %esi
    3e97:	be ef ff ff ff       	mov    $0xffffffef,%esi
    3e9c:	53                   	push   %ebx
    3e9d:	89 c3                	mov    %eax,%ebx
    3e9f:	b8 80 00 00 00       	mov    $0x80,%eax
			3ea0: R_386_32	.data
    3ea4:	e8 fc ff ff ff       	call   3ea5 <dm_register_target+0xf>
			3ea5: R_386_PC32	down_write
    3ea9:	8b 43 08             	mov    0x8(%ebx),%eax
    3eac:	e8 55 ff ff ff       	call   3e06 <__find_target_type>
    3eb1:	85 c0                	test   %eax,%eax
    3eb3:	75 1d                	jne    3ed2 <dm_register_target+0x3c>
    3eb5:	8b 15 90 00 00 00    	mov    0x90,%edx
			3eb7: R_386_32	.data
    3ebb:	8d 43 64             	lea    0x64(%ebx),%eax
    3ebe:	31 f6                	xor    %esi,%esi
    3ec0:	89 42 04             	mov    %eax,0x4(%edx)
    3ec3:	89 53 64             	mov    %edx,0x64(%ebx)
    3ec6:	c7 43 68 90 00 00 00 	movl   $0x90,0x68(%ebx)
			3ec9: R_386_32	.data
    3ecd:	a3 90 00 00 00       	mov    %eax,0x90
			3ece: R_386_32	.data
    3ed2:	b8 80 00 00 00       	mov    $0x80,%eax
			3ed3: R_386_32	.data
    3ed7:	e8 fc ff ff ff       	call   3ed8 <dm_register_target+0x42>
			3ed8: R_386_PC32	up_write
    3edc:	89 f0                	mov    %esi,%eax
    3ede:	5b                   	pop    %ebx
    3edf:	5e                   	pop    %esi
    3ee0:	c3                   	ret    

00003ee1 <dm_target_iterate>:
    3ee1:	57                   	push   %edi
    3ee2:	89 c7                	mov    %eax,%edi
    3ee4:	56                   	push   %esi
    3ee5:	b8 80 00 00 00       	mov    $0x80,%eax
			3ee6: R_386_32	.data
    3eea:	53                   	push   %ebx
    3eeb:	89 d6                	mov    %edx,%esi
    3eed:	e8 fc ff ff ff       	call   3eee <dm_target_iterate+0xd>
			3eee: R_386_PC32	down_read
    3ef2:	8b 1d 90 00 00 00    	mov    0x90,%ebx
			3ef4: R_386_32	.data
    3ef8:	eb 09                	jmp    3f03 <dm_target_iterate+0x22>
    3efa:	89 d8                	mov    %ebx,%eax
    3efc:	89 f2                	mov    %esi,%edx
    3efe:	ff d7                	call   *%edi
    3f00:	8b 5b 64             	mov    0x64(%ebx),%ebx
    3f03:	83 eb 64             	sub    $0x64,%ebx
    3f06:	8b 43 64             	mov    0x64(%ebx),%eax
    3f09:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    3f0d:	81 fb 2c 00 00 00    	cmp    $0x2c,%ebx
			3f0f: R_386_32	.data
    3f13:	75 e5                	jne    3efa <dm_target_iterate+0x19>
    3f15:	b8 80 00 00 00       	mov    $0x80,%eax
			3f16: R_386_32	.data
    3f1a:	e8 fc ff ff ff       	call   3f1b <dm_target_iterate+0x3a>
			3f1b: R_386_PC32	up_read
    3f1f:	31 c0                	xor    %eax,%eax
    3f21:	5b                   	pop    %ebx
    3f22:	5e                   	pop    %esi
    3f23:	5f                   	pop    %edi
    3f24:	c3                   	ret    

00003f25 <dm_put_target_type>:
    3f25:	53                   	push   %ebx
    3f26:	89 c3                	mov    %eax,%ebx
    3f28:	b8 80 00 00 00       	mov    $0x80,%eax
			3f29: R_386_32	.data
    3f2d:	e8 fc ff ff ff       	call   3f2e <dm_put_target_type+0x9>
			3f2e: R_386_PC32	down_read
    3f32:	8b 43 0c             	mov    0xc(%ebx),%eax
    3f35:	e8 fc ff ff ff       	call   3f36 <dm_put_target_type+0x11>
			3f36: R_386_PC32	module_put
    3f3a:	b8 80 00 00 00       	mov    $0x80,%eax
			3f3b: R_386_32	.data
    3f3f:	5b                   	pop    %ebx
    3f40:	e9 fc ff ff ff       	jmp    3f41 <dm_put_target_type+0x1c>
			3f41: R_386_PC32	up_read

00003f45 <get_target_type>:
    3f45:	55                   	push   %ebp
    3f46:	57                   	push   %edi
    3f47:	56                   	push   %esi
    3f48:	53                   	push   %ebx
    3f49:	89 c3                	mov    %eax,%ebx
    3f4b:	b8 80 00 00 00       	mov    $0x80,%eax
			3f4c: R_386_32	.data
    3f50:	e8 fc ff ff ff       	call   3f51 <get_target_type+0xc>
			3f51: R_386_PC32	down_read
    3f55:	89 d8                	mov    %ebx,%eax
    3f57:	e8 aa fe ff ff       	call   3e06 <__find_target_type>
    3f5c:	85 c0                	test   %eax,%eax
    3f5e:	89 c7                	mov    %eax,%edi
    3f60:	74 5b                	je     3fbd <get_target_type+0x78>
    3f62:	8b 58 0c             	mov    0xc(%eax),%ebx
    3f65:	85 db                	test   %ebx,%ebx
    3f67:	74 54                	je     3fbd <get_target_type+0x78>
    3f69:	64 8b 15 00 00 00 00 	mov    %fs:0x0,%edx
			3f6c: R_386_32	per_cpu__cpu_number
    3f70:	83 3b 02             	cmpl   $0x2,(%ebx)
    3f73:	75 04                	jne    3f79 <get_target_type+0x34>
    3f75:	31 ff                	xor    %edi,%edi
    3f77:	eb 44                	jmp    3fbd <get_target_type+0x78>
    3f79:	8b 83 54 01 00 00    	mov    0x154(%ebx),%eax
    3f7f:	03 04 95 00 00 00 00 	add    0x0(,%edx,4),%eax
			3f82: R_386_32	__per_cpu_offset
    3f86:	ff 00                	incl   (%eax)
    3f88:	8b 83 54 01 00 00    	mov    0x154(%ebx),%eax
    3f8e:	03 04 95 00 00 00 00 	add    0x0(,%edx,4),%eax
			3f91: R_386_32	__per_cpu_offset
    3f95:	83 3d 04 00 00 00 00 	cmpl   $0x0,0x4
			3f97: R_386_32	__tracepoint_module_get
    3f9c:	8b 28                	mov    (%eax),%ebp
    3f9e:	74 1d                	je     3fbd <get_target_type+0x78>
    3fa0:	8b 35 10 00 00 00    	mov    0x10,%esi
			3fa2: R_386_32	__tracepoint_module_get
    3fa6:	85 f6                	test   %esi,%esi
    3fa8:	74 13                	je     3fbd <get_target_type+0x78>
    3faa:	89 e9                	mov    %ebp,%ecx
    3fac:	ba 79 3f 00 00       	mov    $0x3f79,%edx
			3fad: R_386_32	.text
    3fb1:	89 d8                	mov    %ebx,%eax
    3fb3:	ff 16                	call   *(%esi)
    3fb5:	83 c6 04             	add    $0x4,%esi
    3fb8:	83 3e 00             	cmpl   $0x0,(%esi)
    3fbb:	eb eb                	jmp    3fa8 <get_target_type+0x63>
    3fbd:	b8 80 00 00 00       	mov    $0x80,%eax
			3fbe: R_386_32	.data
    3fc2:	e8 fc ff ff ff       	call   3fc3 <get_target_type+0x7e>
			3fc3: R_386_PC32	up_read
    3fc7:	89 f8                	mov    %edi,%eax
    3fc9:	5b                   	pop    %ebx
    3fca:	5e                   	pop    %esi
    3fcb:	5f                   	pop    %edi
    3fcc:	5d                   	pop    %ebp
    3fcd:	c3                   	ret    

00003fce <dm_get_target_type>:
    3fce:	53                   	push   %ebx
    3fcf:	89 c3                	mov    %eax,%ebx
    3fd1:	e8 6f ff ff ff       	call   3f45 <get_target_type>
    3fd6:	85 c0                	test   %eax,%eax
    3fd8:	75 18                	jne    3ff2 <dm_get_target_type+0x24>
    3fda:	53                   	push   %ebx
    3fdb:	68 2f 0d 00 00       	push   $0xd2f
			3fdc: R_386_32	.rodata.str1.1
    3fe0:	6a 01                	push   $0x1
    3fe2:	e8 fc ff ff ff       	call   3fe3 <dm_get_target_type+0x15>
			3fe3: R_386_PC32	__request_module
    3fe7:	89 d8                	mov    %ebx,%eax
    3fe9:	83 c4 0c             	add    $0xc,%esp
    3fec:	5b                   	pop    %ebx
    3fed:	e9 53 ff ff ff       	jmp    3f45 <get_target_type>
    3ff2:	5b                   	pop    %ebx
    3ff3:	c3                   	ret    

00003ff4 <linear_map>:
    3ff4:	53                   	push   %ebx
    3ff5:	8b 48 24             	mov    0x24(%eax),%ecx
    3ff8:	8b 09                	mov    (%ecx),%ecx
    3ffa:	8b 09                	mov    (%ecx),%ecx
    3ffc:	89 4a 0c             	mov    %ecx,0xc(%edx)
    3fff:	8b 4a 20             	mov    0x20(%edx),%ecx
    4002:	c1 e9 09             	shr    $0x9,%ecx
    4005:	74 19                	je     4020 <linear_map+0x2c>
    4007:	8b 48 24             	mov    0x24(%eax),%ecx
    400a:	8b 59 08             	mov    0x8(%ecx),%ebx
    400d:	8b 49 04             	mov    0x4(%ecx),%ecx
    4010:	03 0a                	add    (%edx),%ecx
    4012:	13 5a 04             	adc    0x4(%edx),%ebx
    4015:	2b 48 08             	sub    0x8(%eax),%ecx
    4018:	1b 58 0c             	sbb    0xc(%eax),%ebx
    401b:	89 0a                	mov    %ecx,(%edx)
    401d:	89 5a 04             	mov    %ebx,0x4(%edx)
    4020:	b8 01 00 00 00       	mov    $0x1,%eax
    4025:	5b                   	pop    %ebx
    4026:	c3                   	ret    

00004027 <linear_merge>:
    4027:	55                   	push   %ebp
    4028:	57                   	push   %edi
    4029:	56                   	push   %esi
    402a:	53                   	push   %ebx
    402b:	8b 58 24             	mov    0x24(%eax),%ebx
    402e:	8b 74 24 14          	mov    0x14(%esp),%esi
    4032:	8b 1b                	mov    (%ebx),%ebx
    4034:	8b 3b                	mov    (%ebx),%edi
    4036:	8b 5f 50             	mov    0x50(%edi),%ebx
    4039:	8b 9b 94 01 00 00    	mov    0x194(%ebx),%ebx
    403f:	83 7b 50 00          	cmpl   $0x0,0x50(%ebx)
    4043:	74 27                	je     406c <linear_merge+0x45>
    4045:	89 3a                	mov    %edi,(%edx)
    4047:	8b 78 24             	mov    0x24(%eax),%edi
    404a:	8b 6f 08             	mov    0x8(%edi),%ebp
    404d:	8b 7f 04             	mov    0x4(%edi),%edi
    4050:	03 7a 04             	add    0x4(%edx),%edi
    4053:	13 6a 08             	adc    0x8(%edx),%ebp
    4056:	2b 78 08             	sub    0x8(%eax),%edi
    4059:	1b 68 0c             	sbb    0xc(%eax),%ebp
    405c:	89 d8                	mov    %ebx,%eax
    405e:	89 7a 04             	mov    %edi,0x4(%edx)
    4061:	89 6a 08             	mov    %ebp,0x8(%edx)
    4064:	ff 53 50             	call   *0x50(%ebx)
    4067:	39 c6                	cmp    %eax,%esi
    4069:	0f 4f f0             	cmovg  %eax,%esi
    406c:	89 f0                	mov    %esi,%eax
    406e:	5b                   	pop    %ebx
    406f:	5e                   	pop    %esi
    4070:	5f                   	pop    %edi
    4071:	5d                   	pop    %ebp
    4072:	c3                   	ret    

00004073 <linear_iterate_devices>:
    4073:	53                   	push   %ebx
    4074:	89 d3                	mov    %edx,%ebx
    4076:	8b 50 24             	mov    0x24(%eax),%edx
    4079:	51                   	push   %ecx
    407a:	ff 70 14             	pushl  0x14(%eax)
    407d:	ff 70 10             	pushl  0x10(%eax)
    4080:	ff 72 08             	pushl  0x8(%edx)
    4083:	ff 72 04             	pushl  0x4(%edx)
    4086:	8b 12                	mov    (%edx),%edx
    4088:	ff d3                	call   *%ebx
    408a:	83 c4 14             	add    $0x14,%esp
    408d:	5b                   	pop    %ebx
    408e:	c3                   	ret    

0000408f <dm_linear_exit>:
    408f:	b8 98 00 00 00       	mov    $0x98,%eax
			4090: R_386_32	.data
    4094:	e9 fc ff ff ff       	jmp    4095 <dm_linear_exit+0x6>
			4095: R_386_PC32	dm_unregister_target

00004099 <linear_ioctl>:
    4099:	53                   	push   %ebx
    409a:	8b 40 24             	mov    0x24(%eax),%eax
    409d:	89 d3                	mov    %edx,%ebx
    409f:	8b 00                	mov    (%eax),%eax
    40a1:	8b 50 04             	mov    0x4(%eax),%edx
    40a4:	51                   	push   %ecx
    40a5:	8b 00                	mov    (%eax),%eax
    40a7:	89 d9                	mov    %ebx,%ecx
    40a9:	e8 fc ff ff ff       	call   40aa <linear_ioctl+0x11>
			40aa: R_386_PC32	__blkdev_driver_ioctl
    40ae:	5a                   	pop    %edx
    40af:	5b                   	pop    %ebx
    40b0:	c3                   	ret    

000040b1 <linear_status>:
    40b1:	85 d2                	test   %edx,%edx
    40b3:	8b 40 24             	mov    0x24(%eax),%eax
    40b6:	74 05                	je     40bd <linear_status+0xc>
    40b8:	4a                   	dec    %edx
    40b9:	75 25                	jne    40e0 <linear_status+0x2f>
    40bb:	eb 05                	jmp    40c2 <linear_status+0x11>
    40bd:	c6 01 00             	movb   $0x0,(%ecx)
    40c0:	eb 1e                	jmp    40e0 <linear_status+0x2f>
    40c2:	ff 70 08             	pushl  0x8(%eax)
    40c5:	ff 70 04             	pushl  0x4(%eax)
    40c8:	8b 00                	mov    (%eax),%eax
    40ca:	83 c0 08             	add    $0x8,%eax
    40cd:	50                   	push   %eax
    40ce:	68 3b 0d 00 00       	push   $0xd3b
			40cf: R_386_32	.rodata.str1.1
    40d3:	ff 74 24 14          	pushl  0x14(%esp)
    40d7:	51                   	push   %ecx
    40d8:	e8 fc ff ff ff       	call   40d9 <linear_status+0x28>
			40d9: R_386_PC32	snprintf
    40dd:	83 c4 18             	add    $0x18,%esp
    40e0:	31 c0                	xor    %eax,%eax
    40e2:	c3                   	ret    

000040e3 <linear_dtr>:
    40e3:	53                   	push   %ebx
    40e4:	8b 58 24             	mov    0x24(%eax),%ebx
    40e7:	8b 13                	mov    (%ebx),%edx
    40e9:	e8 fc ff ff ff       	call   40ea <linear_dtr+0x7>
			40ea: R_386_PC32	dm_put_device
    40ee:	89 d8                	mov    %ebx,%eax
    40f0:	5b                   	pop    %ebx
    40f1:	e9 fc ff ff ff       	jmp    40f2 <linear_dtr+0xf>
			40f2: R_386_PC32	kfree

000040f6 <linear_ctr>:
    40f6:	55                   	push   %ebp
    40f7:	89 cd                	mov    %ecx,%ebp
    40f9:	57                   	push   %edi
    40fa:	56                   	push   %esi
    40fb:	53                   	push   %ebx
    40fc:	89 c3                	mov    %eax,%ebx
    40fe:	83 ec 0c             	sub    $0xc,%esp
    4101:	83 fa 02             	cmp    $0x2,%edx
    4104:	74 0c                	je     4112 <linear_ctr+0x1c>
    4106:	c7 40 28 71 0d 00 00 	movl   $0xd71,0x28(%eax)
			4109: R_386_32	.rodata.str1.1
    410d:	e9 d2 00 00 00       	jmp    41e4 <linear_ctr+0xee>
    4112:	ba d0 00 00 00       	mov    $0xd0,%edx
    4117:	b8 10 04 00 00       	mov    $0x410,%eax
			4118: R_386_32	kmalloc_caches
    411c:	e8 fc ff ff ff       	call   411d <linear_ctr+0x27>
			411d: R_386_PC32	kmem_cache_alloc
    4121:	83 3d 04 00 00 00 00 	cmpl   $0x0,0x4
			4123: R_386_32	__tracepoint_kmalloc
    4128:	89 c6                	mov    %eax,%esi
    412a:	a1 14 04 00 00       	mov    0x414,%eax
			412b: R_386_32	kmalloc_caches
    412f:	89 04 24             	mov    %eax,(%esp)
    4132:	74 2b                	je     415f <linear_ctr+0x69>
    4134:	8b 3d 10 00 00 00    	mov    0x10,%edi
			4136: R_386_32	__tracepoint_kmalloc
    413a:	85 ff                	test   %edi,%edi
    413c:	74 21                	je     415f <linear_ctr+0x69>
    413e:	68 d0 00 00 00       	push   $0xd0
    4143:	b9 0c 00 00 00       	mov    $0xc,%ecx
    4148:	ff 74 24 04          	pushl  0x4(%esp)
    414c:	89 f2                	mov    %esi,%edx
    414e:	b8 12 41 00 00       	mov    $0x4112,%eax
			414f: R_386_32	.text
    4153:	ff 17                	call   *(%edi)
    4155:	83 c7 04             	add    $0x4,%edi
    4158:	83 3f 00             	cmpl   $0x0,(%edi)
    415b:	5a                   	pop    %edx
    415c:	59                   	pop    %ecx
    415d:	eb dd                	jmp    413c <linear_ctr+0x46>
    415f:	85 f6                	test   %esi,%esi
    4161:	75 0e                	jne    4171 <linear_ctr+0x7b>
    4163:	c7 43 28 88 0d 00 00 	movl   $0xd88,0x28(%ebx)
			4166: R_386_32	.rodata.str1.1
    416a:	b8 f4 ff ff ff       	mov    $0xfffffff4,%eax
    416f:	eb 78                	jmp    41e9 <linear_ctr+0xf3>
    4171:	8d 44 24 04          	lea    0x4(%esp),%eax
    4175:	50                   	push   %eax
    4176:	68 b2 0d 00 00       	push   $0xdb2
			4177: R_386_32	.rodata.str1.1
    417b:	ff 75 04             	pushl  0x4(%ebp)
    417e:	e8 fc ff ff ff       	call   417f <linear_ctr+0x89>
			417f: R_386_PC32	sscanf
    4183:	83 c4 0c             	add    $0xc,%esp
    4186:	48                   	dec    %eax
    4187:	74 09                	je     4192 <linear_ctr+0x9c>
    4189:	c7 43 28 b7 0d 00 00 	movl   $0xdb7,0x28(%ebx)
			418c: R_386_32	.rodata.str1.1
    4190:	eb 4b                	jmp    41dd <linear_ctr+0xe7>
    4192:	8b 44 24 04          	mov    0x4(%esp),%eax
    4196:	8b 54 24 08          	mov    0x8(%esp),%edx
    419a:	89 46 04             	mov    %eax,0x4(%esi)
    419d:	89 56 08             	mov    %edx,0x8(%esi)
    41a0:	8b 03                	mov    (%ebx),%eax
    41a2:	e8 fc ff ff ff       	call   41a3 <linear_ctr+0xad>
			41a3: R_386_PC32	dm_table_get_mode
    41a7:	56                   	push   %esi
    41a8:	50                   	push   %eax
    41a9:	89 d8                	mov    %ebx,%eax
    41ab:	ff 73 14             	pushl  0x14(%ebx)
    41ae:	ff 73 10             	pushl  0x10(%ebx)
    41b1:	ff 76 08             	pushl  0x8(%esi)
    41b4:	ff 76 04             	pushl  0x4(%esi)
    41b7:	8b 55 00             	mov    0x0(%ebp),%edx
    41ba:	e8 fc ff ff ff       	call   41bb <linear_ctr+0xc5>
			41bb: R_386_PC32	dm_get_device
    41bf:	83 c4 18             	add    $0x18,%esp
    41c2:	85 c0                	test   %eax,%eax
    41c4:	74 09                	je     41cf <linear_ctr+0xd9>
    41c6:	c7 43 28 d8 0d 00 00 	movl   $0xdd8,0x28(%ebx)
			41c9: R_386_32	.rodata.str1.1
    41cd:	eb 0e                	jmp    41dd <linear_ctr+0xe7>
    41cf:	c7 43 20 01 00 00 00 	movl   $0x1,0x20(%ebx)
    41d6:	31 c0                	xor    %eax,%eax
    41d8:	89 73 24             	mov    %esi,0x24(%ebx)
    41db:	eb 0c                	jmp    41e9 <linear_ctr+0xf3>
    41dd:	89 f0                	mov    %esi,%eax
    41df:	e8 fc ff ff ff       	call   41e0 <linear_ctr+0xea>
			41e0: R_386_PC32	kfree
    41e4:	b8 ea ff ff ff       	mov    $0xffffffea,%eax
    41e9:	83 c4 0c             	add    $0xc,%esp
    41ec:	5b                   	pop    %ebx
    41ed:	5e                   	pop    %esi
    41ee:	5f                   	pop    %edi
    41ef:	5d                   	pop    %ebp
    41f0:	c3                   	ret    
    41f1:	90                   	nop
    41f2:	90                   	nop
    41f3:	90                   	nop

000041f4 <stripe_iterate_devices>:
    41f4:	55                   	push   %ebp
    41f5:	89 c5                	mov    %eax,%ebp
    41f7:	57                   	push   %edi
    41f8:	56                   	push   %esi
    41f9:	31 f6                	xor    %esi,%esi
    41fb:	53                   	push   %ebx
    41fc:	83 ec 08             	sub    $0x8,%esp
    41ff:	89 54 24 04          	mov    %edx,0x4(%esp)
    4203:	8b 78 24             	mov    0x24(%eax),%edi
    4206:	89 fb                	mov    %edi,%ebx
    4208:	8b 53 2c             	mov    0x2c(%ebx),%edx
    420b:	89 e8                	mov    %ebp,%eax
    420d:	51                   	push   %ecx
    420e:	ff 77 08             	pushl  0x8(%edi)
    4211:	ff 77 04             	pushl  0x4(%edi)
    4214:	ff 73 34             	pushl  0x34(%ebx)
    4217:	ff 73 30             	pushl  0x30(%ebx)
    421a:	89 4c 24 14          	mov    %ecx,0x14(%esp)
    421e:	ff 54 24 18          	call   *0x18(%esp)
    4222:	83 c4 14             	add    $0x14,%esp
    4225:	85 c0                	test   %eax,%eax
    4227:	8b 0c 24             	mov    (%esp),%ecx
    422a:	75 08                	jne    4234 <stripe_iterate_devices+0x40>
    422c:	46                   	inc    %esi
    422d:	83 c3 10             	add    $0x10,%ebx
    4230:	3b 37                	cmp    (%edi),%esi
    4232:	72 d4                	jb     4208 <stripe_iterate_devices+0x14>
    4234:	5a                   	pop    %edx
    4235:	59                   	pop    %ecx
    4236:	5b                   	pop    %ebx
    4237:	5e                   	pop    %esi
    4238:	5f                   	pop    %edi
    4239:	5d                   	pop    %ebp
    423a:	c3                   	ret    

0000423b <dm_stripe_exit>:
    423b:	b8 04 01 00 00       	mov    $0x104,%eax
			423c: R_386_32	.data
    4240:	e8 fc ff ff ff       	call   4241 <dm_stripe_exit+0x6>
			4241: R_386_PC32	dm_unregister_target
    4245:	a1 34 00 00 00       	mov    0x34,%eax
			4246: R_386_32	.bss
    424a:	e9 fc ff ff ff       	jmp    424b <dm_stripe_exit+0x10>
			424b: R_386_PC32	destroy_workqueue

0000424f <stripe_io_hints>:
    424f:	57                   	push   %edi
    4250:	56                   	push   %esi
    4251:	89 d6                	mov    %edx,%esi
    4253:	53                   	push   %ebx
    4254:	8b 78 24             	mov    0x24(%eax),%edi
    4257:	89 f0                	mov    %esi,%eax
    4259:	8b 5f 10             	mov    0x10(%edi),%ebx
    425c:	43                   	inc    %ebx
    425d:	c1 e3 09             	shl    $0x9,%ebx
    4260:	89 da                	mov    %ebx,%edx
    4262:	e8 fc ff ff ff       	call   4263 <stripe_io_hints+0x14>
			4263: R_386_PC32	blk_limits_io_min
    4267:	8b 17                	mov    (%edi),%edx
    4269:	89 f0                	mov    %esi,%eax
    426b:	0f af d3             	imul   %ebx,%edx
    426e:	5b                   	pop    %ebx
    426f:	5e                   	pop    %esi
    4270:	5f                   	pop    %edi
    4271:	e9 fc ff ff ff       	jmp    4272 <stripe_io_hints+0x23>
			4272: R_386_PC32	blk_limits_io_opt

00004276 <stripe_status>:
    4276:	55                   	push   %ebp
    4277:	89 e5                	mov    %esp,%ebp
    4279:	57                   	push   %edi
    427a:	56                   	push   %esi
    427b:	53                   	push   %ebx
    427c:	83 ec 14             	sub    $0x14,%esp
    427f:	8b 5d 08             	mov    0x8(%ebp),%ebx
    4282:	89 4d ec             	mov    %ecx,-0x14(%ebp)
    4285:	65 8b 0d 14 00 00 00 	mov    %gs:0x14,%ecx
    428c:	89 4d f0             	mov    %ecx,-0x10(%ebp)
    428f:	31 c9                	xor    %ecx,%ecx
    4291:	8b 78 24             	mov    0x24(%eax),%edi
    4294:	8b 07                	mov    (%edi),%eax
    4296:	8d 48 13             	lea    0x13(%eax),%ecx
    4299:	83 e1 fc             	and    $0xfffffffc,%ecx
    429c:	29 cc                	sub    %ecx,%esp
    429e:	8d 4c 24 0f          	lea    0xf(%esp),%ecx
    42a2:	83 e1 f0             	and    $0xfffffff0,%ecx
    42a5:	85 d2                	test   %edx,%edx
    42a7:	74 0c                	je     42b5 <stripe_status+0x3f>
    42a9:	4a                   	dec    %edx
    42aa:	0f 85 17 01 00 00    	jne    43c7 <stripe_status+0x151>
    42b0:	e9 a2 00 00 00       	jmp    4357 <stripe_status+0xe1>
    42b5:	31 f6                	xor    %esi,%esi
    42b7:	85 db                	test   %ebx,%ebx
    42b9:	74 1a                	je     42d5 <stripe_status+0x5f>
    42bb:	50                   	push   %eax
    42bc:	68 ff 0d 00 00       	push   $0xdff
			42bd: R_386_32	.rodata.str1.1
    42c1:	53                   	push   %ebx
    42c2:	ff 75 ec             	pushl  -0x14(%ebp)
    42c5:	89 4d e4             	mov    %ecx,-0x1c(%ebp)
    42c8:	e8 fc ff ff ff       	call   42c9 <stripe_status+0x53>
			42c9: R_386_PC32	scnprintf
    42cd:	8b 4d e4             	mov    -0x1c(%ebp),%ecx
    42d0:	89 c6                	mov    %eax,%esi
    42d2:	83 c4 10             	add    $0x10,%esp
    42d5:	31 d2                	xor    %edx,%edx
    42d7:	89 4d e8             	mov    %ecx,-0x18(%ebp)
    42da:	eb 51                	jmp    432d <stripe_status+0xb7>
    42dc:	31 c0                	xor    %eax,%eax
    42de:	39 de                	cmp    %ebx,%esi
    42e0:	73 2b                	jae    430d <stripe_status+0x97>
    42e2:	89 d0                	mov    %edx,%eax
    42e4:	c1 e0 04             	shl    $0x4,%eax
    42e7:	8b 44 07 2c          	mov    0x2c(%edi,%eax,1),%eax
    42eb:	89 55 e0             	mov    %edx,-0x20(%ebp)
    42ee:	83 c0 08             	add    $0x8,%eax
    42f1:	50                   	push   %eax
    42f2:	89 d8                	mov    %ebx,%eax
    42f4:	68 03 0e 00 00       	push   $0xe03
			42f5: R_386_32	.rodata.str1.1
    42f9:	29 f0                	sub    %esi,%eax
    42fb:	50                   	push   %eax
    42fc:	8b 45 ec             	mov    -0x14(%ebp),%eax
    42ff:	01 f0                	add    %esi,%eax
    4301:	50                   	push   %eax
    4302:	e8 fc ff ff ff       	call   4303 <stripe_status+0x8d>
			4303: R_386_PC32	scnprintf
    4307:	8b 55 e0             	mov    -0x20(%ebp),%edx
    430a:	83 c4 10             	add    $0x10,%esp
    430d:	89 d1                	mov    %edx,%ecx
    430f:	c1 e1 04             	shl    $0x4,%ecx
    4312:	8d 4c 39 20          	lea    0x20(%ecx,%edi,1),%ecx
    4316:	8b 49 18             	mov    0x18(%ecx),%ecx
    4319:	83 f9 01             	cmp    $0x1,%ecx
    431c:	19 c9                	sbb    %ecx,%ecx
    431e:	01 c6                	add    %eax,%esi
    4320:	8b 45 e8             	mov    -0x18(%ebp),%eax
    4323:	83 e1 fd             	and    $0xfffffffd,%ecx
    4326:	83 c1 44             	add    $0x44,%ecx
    4329:	88 0c 10             	mov    %cl,(%eax,%edx,1)
    432c:	42                   	inc    %edx
    432d:	3b 17                	cmp    (%edi),%edx
    432f:	72 ab                	jb     42dc <stripe_status+0x66>
    4331:	8b 4d e8             	mov    -0x18(%ebp),%ecx
    4334:	39 de                	cmp    %ebx,%esi
    4336:	c6 04 11 00          	movb   $0x0,(%ecx,%edx,1)
    433a:	0f 83 87 00 00 00    	jae    43c7 <stripe_status+0x151>
    4340:	51                   	push   %ecx
    4341:	29 f3                	sub    %esi,%ebx
    4343:	03 75 ec             	add    -0x14(%ebp),%esi
    4346:	68 07 0e 00 00       	push   $0xe07
			4347: R_386_32	.rodata.str1.1
    434b:	53                   	push   %ebx
    434c:	56                   	push   %esi
    434d:	e8 fc ff ff ff       	call   434e <stripe_status+0xd8>
			434e: R_386_PC32	scnprintf
    4352:	83 c4 10             	add    $0x10,%esp
    4355:	eb 70                	jmp    43c7 <stripe_status+0x151>
    4357:	31 f6                	xor    %esi,%esi
    4359:	85 db                	test   %ebx,%ebx
    435b:	74 23                	je     4380 <stripe_status+0x10a>
    435d:	8b 47 10             	mov    0x10(%edi),%eax
    4360:	8b 57 14             	mov    0x14(%edi),%edx
    4363:	83 c0 01             	add    $0x1,%eax
    4366:	83 d2 00             	adc    $0x0,%edx
    4369:	52                   	push   %edx
    436a:	50                   	push   %eax
    436b:	ff 37                	pushl  (%edi)
    436d:	68 0c 0e 00 00       	push   $0xe0c
			436e: R_386_32	.rodata.str1.1
    4372:	53                   	push   %ebx
    4373:	ff 75 ec             	pushl  -0x14(%ebp)
    4376:	e8 fc ff ff ff       	call   4377 <stripe_status+0x101>
			4377: R_386_PC32	scnprintf
    437b:	89 c6                	mov    %eax,%esi
    437d:	83 c4 18             	add    $0x18,%esp
    4380:	89 fa                	mov    %edi,%edx
    4382:	31 c9                	xor    %ecx,%ecx
    4384:	eb 3d                	jmp    43c3 <stripe_status+0x14d>
    4386:	31 c0                	xor    %eax,%eax
    4388:	39 de                	cmp    %ebx,%esi
    438a:	73 31                	jae    43bd <stripe_status+0x147>
    438c:	ff 72 34             	pushl  0x34(%edx)
    438f:	ff 72 30             	pushl  0x30(%edx)
    4392:	8b 42 2c             	mov    0x2c(%edx),%eax
    4395:	89 55 e0             	mov    %edx,-0x20(%ebp)
    4398:	89 4d e4             	mov    %ecx,-0x1c(%ebp)
    439b:	83 c0 08             	add    $0x8,%eax
    439e:	50                   	push   %eax
    439f:	89 d8                	mov    %ebx,%eax
    43a1:	68 14 0e 00 00       	push   $0xe14
			43a2: R_386_32	.rodata.str1.1
    43a6:	29 f0                	sub    %esi,%eax
    43a8:	50                   	push   %eax
    43a9:	8b 45 ec             	mov    -0x14(%ebp),%eax
    43ac:	01 f0                	add    %esi,%eax
    43ae:	50                   	push   %eax
    43af:	e8 fc ff ff ff       	call   43b0 <stripe_status+0x13a>
			43b0: R_386_PC32	scnprintf
    43b4:	8b 4d e4             	mov    -0x1c(%ebp),%ecx
    43b7:	8b 55 e0             	mov    -0x20(%ebp),%edx
    43ba:	83 c4 18             	add    $0x18,%esp
    43bd:	01 c6                	add    %eax,%esi
    43bf:	41                   	inc    %ecx
    43c0:	83 c2 10             	add    $0x10,%edx
    43c3:	3b 0f                	cmp    (%edi),%ecx
    43c5:	72 bf                	jb     4386 <stripe_status+0x110>
    43c7:	31 c0                	xor    %eax,%eax
    43c9:	8b 55 f0             	mov    -0x10(%ebp),%edx
    43cc:	65 33 15 14 00 00 00 	xor    %gs:0x14,%edx
    43d3:	74 05                	je     43da <stripe_status+0x164>
    43d5:	e8 fc ff ff ff       	call   43d6 <stripe_status+0x160>
			43d6: R_386_PC32	__stack_chk_fail
    43da:	8d 65 f4             	lea    -0xc(%ebp),%esp
    43dd:	5b                   	pop    %ebx
    43de:	5e                   	pop    %esi
    43df:	5f                   	pop    %edi
    43e0:	5d                   	pop    %ebp
    43e1:	c3                   	ret    

000043e2 <stripe_end_io>:
    43e2:	55                   	push   %ebp
    43e3:	57                   	push   %edi
    43e4:	56                   	push   %esi
    43e5:	89 ce                	mov    %ecx,%esi
    43e7:	53                   	push   %ebx
    43e8:	83 ec 18             	sub    $0x18,%esp
    43eb:	65 8b 0d 14 00 00 00 	mov    %gs:0x14,%ecx
    43f2:	89 4c 24 14          	mov    %ecx,0x14(%esp)
    43f6:	31 c9                	xor    %ecx,%ecx
    43f8:	85 f6                	test   %esi,%esi
    43fa:	8b 58 24             	mov    0x24(%eax),%ebx
    43fd:	0f 84 94 00 00 00    	je     4497 <stripe_end_io+0xb5>
    4403:	83 fe f5             	cmp    $0xfffffff5,%esi
    4406:	75 0b                	jne    4413 <stripe_end_io+0x31>
    4408:	f6 42 14 10          	testb  $0x10,0x14(%edx)
    440c:	74 0a                	je     4418 <stripe_end_io+0x36>
    440e:	e9 84 00 00 00       	jmp    4497 <stripe_end_io+0xb5>
    4413:	83 fe a1             	cmp    $0xffffffa1,%esi
    4416:	74 7f                	je     4497 <stripe_end_io+0xb5>
    4418:	8d 6c 24 04          	lea    0x4(%esp),%ebp
    441c:	b9 04 00 00 00       	mov    $0x4,%ecx
    4421:	89 ef                	mov    %ebp,%edi
    4423:	31 c0                	xor    %eax,%eax
    4425:	f3 ab                	rep stos %eax,%es:(%edi)
    4427:	8b 42 0c             	mov    0xc(%edx),%eax
    442a:	31 ff                	xor    %edi,%edi
    442c:	8b 40 50             	mov    0x50(%eax),%eax
    442f:	8b 80 40 01 00 00    	mov    0x140(%eax),%eax
    4435:	89 c2                	mov    %eax,%edx
    4437:	81 e2 ff ff 0f 00    	and    $0xfffff,%edx
    443d:	52                   	push   %edx
    443e:	c1 e8 14             	shr    $0x14,%eax
    4441:	50                   	push   %eax
    4442:	68 1d 0e 00 00       	push   $0xe1d
			4443: R_386_32	.rodata.str1.1
    4447:	55                   	push   %ebp
    4448:	e8 fc ff ff ff       	call   4449 <stripe_end_io+0x67>
			4449: R_386_PC32	sprintf
    444d:	8d 43 1c             	lea    0x1c(%ebx),%eax
    4450:	89 44 24 10          	mov    %eax,0x10(%esp)
    4454:	83 c4 10             	add    $0x10,%esp
    4457:	eb 3a                	jmp    4493 <stripe_end_io+0xb1>
    4459:	89 f8                	mov    %edi,%eax
    445b:	89 ea                	mov    %ebp,%edx
    445d:	c1 e0 04             	shl    $0x4,%eax
    4460:	8b 44 03 2c          	mov    0x2c(%ebx,%eax,1),%eax
    4464:	83 c0 08             	add    $0x8,%eax
    4467:	e8 fc ff ff ff       	call   4468 <stripe_end_io+0x86>
			4468: R_386_PC32	strcmp
    446c:	85 c0                	test   %eax,%eax
    446e:	75 22                	jne    4492 <stripe_end_io+0xb0>
    4470:	89 f8                	mov    %edi,%eax
    4472:	c1 e0 04             	shl    $0x4,%eax
    4475:	8d 44 18 20          	lea    0x20(%eax,%ebx,1),%eax
    4479:	f0 ff 40 18          	lock incl 0x18(%eax)
    447d:	8b 40 18             	mov    0x18(%eax),%eax
    4480:	83 f8 0e             	cmp    $0xe,%eax
    4483:	7f 0d                	jg     4492 <stripe_end_io+0xb0>
    4485:	8b 14 24             	mov    (%esp),%edx
    4488:	a1 34 00 00 00       	mov    0x34,%eax
			4489: R_386_32	.bss
    448d:	e8 fc ff ff ff       	call   448e <stripe_end_io+0xac>
			448e: R_386_PC32	queue_work
    4492:	47                   	inc    %edi
    4493:	3b 3b                	cmp    (%ebx),%edi
    4495:	72 c2                	jb     4459 <stripe_end_io+0x77>
    4497:	8b 54 24 14          	mov    0x14(%esp),%edx
    449b:	65 33 15 14 00 00 00 	xor    %gs:0x14,%edx
    44a2:	89 f0                	mov    %esi,%eax
    44a4:	74 05                	je     44ab <stripe_end_io+0xc9>
    44a6:	e8 fc ff ff ff       	call   44a7 <stripe_end_io+0xc5>
			44a7: R_386_PC32	__stack_chk_fail
    44ab:	83 c4 18             	add    $0x18,%esp
    44ae:	5b                   	pop    %ebx
    44af:	5e                   	pop    %esi
    44b0:	5f                   	pop    %edi
    44b1:	5d                   	pop    %ebp
    44b2:	c3                   	ret    

000044b3 <stripe_map>:
    44b3:	55                   	push   %ebp
    44b4:	57                   	push   %edi
    44b5:	56                   	push   %esi
    44b6:	89 d6                	mov    %edx,%esi
    44b8:	53                   	push   %ebx
    44b9:	83 ec 18             	sub    $0x18,%esp
    44bc:	8b 52 14             	mov    0x14(%edx),%edx
    44bf:	8b 58 24             	mov    0x24(%eax),%ebx
    44c2:	f6 c2 20             	test   $0x20,%dl
    44c5:	74 2a                	je     44f1 <stripe_map+0x3e>
    44c7:	85 f6                	test   %esi,%esi
    44c9:	74 06                	je     44d1 <stripe_map+0x1e>
    44cb:	83 7e 38 00          	cmpl   $0x0,0x38(%esi)
    44cf:	75 20                	jne    44f1 <stripe_map+0x3e>
    44d1:	80 e6 02             	and    $0x2,%dh
    44d4:	75 1b                	jne    44f1 <stripe_map+0x3e>
    44d6:	8b 01                	mov    (%ecx),%eax
    44d8:	3b 03                	cmp    (%ebx),%eax
    44da:	72 04                	jb     44e0 <stripe_map+0x2d>
    44dc:	0f 0b                	ud2a   
    44de:	eb fe                	jmp    44de <stripe_map+0x2b>
    44e0:	c1 e0 04             	shl    $0x4,%eax
    44e3:	8b 44 03 2c          	mov    0x2c(%ebx,%eax,1),%eax
    44e7:	8b 00                	mov    (%eax),%eax
    44e9:	89 46 0c             	mov    %eax,0xc(%esi)
    44ec:	e9 ba 00 00 00       	jmp    45ab <stripe_map+0xf8>
    44f1:	8b 16                	mov    (%esi),%edx
    44f3:	8b 4e 04             	mov    0x4(%esi),%ecx
    44f6:	89 54 24 10          	mov    %edx,0x10(%esp)
    44fa:	89 4c 24 14          	mov    %ecx,0x14(%esp)
    44fe:	8b 78 08             	mov    0x8(%eax),%edi
    4501:	8b 68 0c             	mov    0xc(%eax),%ebp
    4504:	29 7c 24 10          	sub    %edi,0x10(%esp)
    4508:	19 6c 24 14          	sbb    %ebp,0x14(%esp)
    450c:	8b 2b                	mov    (%ebx),%ebp
    450e:	8b 7c 24 10          	mov    0x10(%esp),%edi
    4512:	89 6c 24 08          	mov    %ebp,0x8(%esp)
    4516:	8b 43 0c             	mov    0xc(%ebx),%eax
    4519:	8b 6c 24 14          	mov    0x14(%esp),%ebp
    451d:	88 c1                	mov    %al,%cl
    451f:	31 c0                	xor    %eax,%eax
    4521:	0f ad ef             	shrd   %cl,%ebp,%edi
    4524:	d3 ed                	shr    %cl,%ebp
    4526:	f6 c1 20             	test   $0x20,%cl
    4529:	0f 45 fd             	cmovne %ebp,%edi
    452c:	0f 45 e8             	cmovne %eax,%ebp
    452f:	89 3c 24             	mov    %edi,(%esp)
    4532:	89 f8                	mov    %edi,%eax
    4534:	89 ea                	mov    %ebp,%edx
    4536:	89 d7                	mov    %edx,%edi
    4538:	31 d2                	xor    %edx,%edx
    453a:	85 ff                	test   %edi,%edi
    453c:	89 c1                	mov    %eax,%ecx
    453e:	89 6c 24 04          	mov    %ebp,0x4(%esp)
    4542:	74 0a                	je     454e <stripe_map+0x9b>
    4544:	89 f8                	mov    %edi,%eax
    4546:	31 d2                	xor    %edx,%edx
    4548:	f7 74 24 08          	divl   0x8(%esp)
    454c:	89 c7                	mov    %eax,%edi
    454e:	89 c8                	mov    %ecx,%eax
    4550:	f7 74 24 08          	divl   0x8(%esp)
    4554:	89 d5                	mov    %edx,%ebp
    4556:	89 fa                	mov    %edi,%edx
    4558:	83 c5 02             	add    $0x2,%ebp
    455b:	c1 e5 04             	shl    $0x4,%ebp
    455e:	89 54 24 04          	mov    %edx,0x4(%esp)
    4562:	8b 54 24 10          	mov    0x10(%esp),%edx
    4566:	89 04 24             	mov    %eax,(%esp)
    4569:	8b 4c 2b 0c          	mov    0xc(%ebx,%ebp,1),%ecx
    456d:	8b 04 24             	mov    (%esp),%eax
    4570:	8b 09                	mov    (%ecx),%ecx
    4572:	89 4e 0c             	mov    %ecx,0xc(%esi)
    4575:	8b 7c 1d 10          	mov    0x10(%ebp,%ebx,1),%edi
    4579:	23 53 10             	and    0x10(%ebx),%edx
    457c:	8b 6c 1d 14          	mov    0x14(%ebp,%ebx,1),%ebp
    4580:	8b 4c 24 14          	mov    0x14(%esp),%ecx
    4584:	23 4b 14             	and    0x14(%ebx),%ecx
    4587:	01 d7                	add    %edx,%edi
    4589:	8b 54 24 04          	mov    0x4(%esp),%edx
    458d:	11 cd                	adc    %ecx,%ebp
    458f:	8b 4b 0c             	mov    0xc(%ebx),%ecx
    4592:	31 db                	xor    %ebx,%ebx
    4594:	0f a5 c2             	shld   %cl,%eax,%edx
    4597:	d3 e0                	shl    %cl,%eax
    4599:	f6 c1 20             	test   $0x20,%cl
    459c:	0f 45 d0             	cmovne %eax,%edx
    459f:	0f 45 c3             	cmovne %ebx,%eax
    45a2:	01 c7                	add    %eax,%edi
    45a4:	11 d5                	adc    %edx,%ebp
    45a6:	89 3e                	mov    %edi,(%esi)
    45a8:	89 6e 04             	mov    %ebp,0x4(%esi)
    45ab:	83 c4 18             	add    $0x18,%esp
    45ae:	b8 01 00 00 00       	mov    $0x1,%eax
    45b3:	5b                   	pop    %ebx
    45b4:	5e                   	pop    %esi
    45b5:	5f                   	pop    %edi
    45b6:	5d                   	pop    %ebp
    45b7:	c3                   	ret    

000045b8 <stripe_dtr>:
    45b8:	55                   	push   %ebp
    45b9:	57                   	push   %edi
    45ba:	89 c7                	mov    %eax,%edi
    45bc:	56                   	push   %esi
    45bd:	53                   	push   %ebx
    45be:	8b 68 24             	mov    0x24(%eax),%ebp
    45c1:	31 db                	xor    %ebx,%ebx
    45c3:	89 ee                	mov    %ebp,%esi
    45c5:	eb 0b                	jmp    45d2 <stripe_dtr+0x1a>
    45c7:	8b 56 1c             	mov    0x1c(%esi),%edx
    45ca:	89 f8                	mov    %edi,%eax
    45cc:	43                   	inc    %ebx
    45cd:	e8 fc ff ff ff       	call   45ce <stripe_dtr+0x16>
			45ce: R_386_PC32	dm_put_device
    45d2:	83 c6 10             	add    $0x10,%esi
    45d5:	3b 5d 00             	cmp    0x0(%ebp),%ebx
    45d8:	72 ed                	jb     45c7 <stripe_dtr+0xf>
    45da:	a1 34 00 00 00       	mov    0x34,%eax
			45db: R_386_32	.bss
    45df:	e8 fc ff ff ff       	call   45e0 <stripe_dtr+0x28>
			45e0: R_386_PC32	flush_workqueue
    45e4:	89 e8                	mov    %ebp,%eax
    45e6:	5b                   	pop    %ebx
    45e7:	5e                   	pop    %esi
    45e8:	5f                   	pop    %edi
    45e9:	5d                   	pop    %ebp
    45ea:	e9 fc ff ff ff       	jmp    45eb <stripe_dtr+0x33>
			45eb: R_386_PC32	kfree

000045ef <trigger_event>:
    45ef:	8b 40 fc             	mov    -0x4(%eax),%eax
    45f2:	8b 00                	mov    (%eax),%eax
    45f4:	e9 fc ff ff ff       	jmp    45f5 <trigger_event+0x6>
			45f5: R_386_PC32	dm_table_event

000045f9 <stripe_ctr>:
    45f9:	55                   	push   %ebp
    45fa:	57                   	push   %edi
    45fb:	56                   	push   %esi
    45fc:	53                   	push   %ebx
    45fd:	89 c3                	mov    %eax,%ebx
    45ff:	83 ec 20             	sub    $0x20,%esp
    4602:	83 fa 01             	cmp    $0x1,%edx
    4605:	89 54 24 10          	mov    %edx,0x10(%esp)
    4609:	89 4c 24 0c          	mov    %ecx,0xc(%esp)
    460d:	77 09                	ja     4618 <stripe_ctr+0x1f>
    460f:	c7 40 28 ba 0e 00 00 	movl   $0xeba,0x28(%eax)
			4612: R_386_32	.rodata.str1.1
    4616:	eb 28                	jmp    4640 <stripe_ctr+0x47>
    4618:	8b 7c 24 0c          	mov    0xc(%esp),%edi
    461c:	8d 74 24 1c          	lea    0x1c(%esp),%esi
    4620:	b9 0a 00 00 00       	mov    $0xa,%ecx
    4625:	89 f2                	mov    %esi,%edx
    4627:	8b 07                	mov    (%edi),%eax
    4629:	e8 fc ff ff ff       	call   462a <stripe_ctr+0x31>
			462a: R_386_PC32	simple_strtoul
    462e:	89 c5                	mov    %eax,%ebp
    4630:	8b 44 24 1c          	mov    0x1c(%esp),%eax
    4634:	80 38 00             	cmpb   $0x0,(%eax)
    4637:	74 11                	je     464a <stripe_ctr+0x51>
    4639:	c7 43 28 cf 0e 00 00 	movl   $0xecf,0x28(%ebx)
			463c: R_386_32	.rodata.str1.1
    4640:	bd ea ff ff ff       	mov    $0xffffffea,%ebp
    4645:	e9 1e 02 00 00       	jmp    4868 <stripe_ctr+0x26f>
    464a:	8b 54 24 0c          	mov    0xc(%esp),%edx
    464e:	b9 0a 00 00 00       	mov    $0xa,%ecx
    4653:	8b 42 04             	mov    0x4(%edx),%eax
    4656:	89 f2                	mov    %esi,%edx
    4658:	e8 fc ff ff ff       	call   4659 <stripe_ctr+0x60>
			4659: R_386_PC32	simple_strtoul
    465d:	89 c7                	mov    %eax,%edi
    465f:	8b 44 24 1c          	mov    0x1c(%esp),%eax
    4663:	80 38 00             	cmpb   $0x0,(%eax)
    4666:	74 09                	je     4671 <stripe_ctr+0x78>
    4668:	c7 43 28 e4 0e 00 00 	movl   $0xee4,0x28(%ebx)
			466b: R_386_32	.rodata.str1.1
    466f:	eb cf                	jmp    4640 <stripe_ctr+0x47>
    4671:	31 c0                	xor    %eax,%eax
    4673:	85 ff                	test   %edi,%edi
    4675:	74 0b                	je     4682 <stripe_ctr+0x89>
    4677:	8d 47 ff             	lea    -0x1(%edi),%eax
    467a:	85 f8                	test   %edi,%eax
    467c:	0f 94 c0             	sete   %al
    467f:	0f b6 c0             	movzbl %al,%eax
    4682:	85 c0                	test   %eax,%eax
    4684:	74 05                	je     468b <stripe_ctr+0x92>
    4686:	83 ff 07             	cmp    $0x7,%edi
    4689:	77 09                	ja     4694 <stripe_ctr+0x9b>
    468b:	c7 43 28 f7 0e 00 00 	movl   $0xef7,0x28(%ebx)
			468e: R_386_32	.rodata.str1.1
    4692:	eb ac                	jmp    4640 <stripe_ctr+0x47>
    4694:	8b 43 10             	mov    0x10(%ebx),%eax
    4697:	8d 4f ff             	lea    -0x1(%edi),%ecx
    469a:	8b 53 14             	mov    0x14(%ebx),%edx
    469d:	85 c8                	test   %ecx,%eax
    469f:	89 44 24 04          	mov    %eax,0x4(%esp)
    46a3:	89 54 24 08          	mov    %edx,0x8(%esp)
    46a7:	74 09                	je     46b2 <stripe_ctr+0xb9>
    46a9:	c7 43 28 0a 0f 00 00 	movl   $0xf0a,0x28(%ebx)
			46ac: R_386_32	.rodata.str1.1
    46b0:	eb 8e                	jmp    4640 <stripe_ctr+0x47>
    46b2:	8b 44 24 04          	mov    0x4(%esp),%eax
    46b6:	8b 54 24 08          	mov    0x8(%esp),%edx
    46ba:	89 54 24 04          	mov    %edx,0x4(%esp)
    46be:	31 d2                	xor    %edx,%edx
    46c0:	89 c1                	mov    %eax,%ecx
    46c2:	83 7c 24 04 00       	cmpl   $0x0,0x4(%esp)
    46c7:	74 0c                	je     46d5 <stripe_ctr+0xdc>
    46c9:	8b 44 24 04          	mov    0x4(%esp),%eax
    46cd:	31 d2                	xor    %edx,%edx
    46cf:	f7 f5                	div    %ebp
    46d1:	89 44 24 04          	mov    %eax,0x4(%esp)
    46d5:	89 c8                	mov    %ecx,%eax
    46d7:	f7 f5                	div    %ebp
    46d9:	89 d6                	mov    %edx,%esi
    46db:	8b 54 24 04          	mov    0x4(%esp),%edx
    46df:	85 f6                	test   %esi,%esi
    46e1:	89 44 24 04          	mov    %eax,0x4(%esp)
    46e5:	89 54 24 08          	mov    %edx,0x8(%esp)
    46e9:	74 0c                	je     46f7 <stripe_ctr+0xfe>
    46eb:	c7 43 28 34 0f 00 00 	movl   $0xf34,0x28(%ebx)
			46ee: R_386_32	.rodata.str1.1
    46f2:	e9 49 ff ff ff       	jmp    4640 <stripe_ctr+0x47>
    46f7:	8d 44 2d 02          	lea    0x2(%ebp,%ebp,1),%eax
    46fb:	39 44 24 10          	cmp    %eax,0x10(%esp)
    46ff:	74 0c                	je     470d <stripe_ctr+0x114>
    4701:	c7 43 28 65 0f 00 00 	movl   $0xf65,0x28(%ebx)
			4704: R_386_32	.rodata.str1.1
    4708:	e9 33 ff ff ff       	jmp    4640 <stripe_ctr+0x47>
    470d:	81 fd fd ff ff 0f    	cmp    $0xffffffd,%ebp
    4713:	77 18                	ja     472d <stripe_ctr+0x134>
    4715:	89 e8                	mov    %ebp,%eax
    4717:	ba d0 00 00 00       	mov    $0xd0,%edx
    471c:	c1 e0 04             	shl    $0x4,%eax
    471f:	83 c0 2c             	add    $0x2c,%eax
    4722:	e8 fc ff ff ff       	call   4723 <stripe_ctr+0x12a>
			4723: R_386_PC32	__kmalloc
    4727:	85 c0                	test   %eax,%eax
    4729:	89 c6                	mov    %eax,%esi
    472b:	75 11                	jne    473e <stripe_ctr+0x145>
    472d:	c7 43 28 87 0f 00 00 	movl   $0xf87,0x28(%ebx)
			4730: R_386_32	.rodata.str1.1
    4734:	bd f4 ff ff ff       	mov    $0xfffffff4,%ebp
    4739:	e9 2a 01 00 00       	jmp    4868 <stripe_ctr+0x26f>
    473e:	c7 40 1c 00 00 00 00 	movl   $0x0,0x1c(%eax)
    4745:	8d 40 20             	lea    0x20(%eax),%eax
    4748:	89 46 20             	mov    %eax,0x20(%esi)
    474b:	89 46 24             	mov    %eax,0x24(%esi)
    474e:	89 f8                	mov    %edi,%eax
    4750:	c7 46 28 ef 45 00 00 	movl   $0x45ef,0x28(%esi)
			4753: R_386_32	.text
    4757:	89 5e 18             	mov    %ebx,0x18(%esi)
    475a:	89 2e                	mov    %ebp,(%esi)
    475c:	8b 54 24 04          	mov    0x4(%esp),%edx
    4760:	8b 4c 24 08          	mov    0x8(%esp),%ecx
    4764:	89 56 04             	mov    %edx,0x4(%esi)
    4767:	31 d2                	xor    %edx,%edx
    4769:	83 c0 ff             	add    $0xffffffff,%eax
    476c:	89 4e 08             	mov    %ecx,0x8(%esi)
    476f:	89 53 1c             	mov    %edx,0x1c(%ebx)
    4772:	83 d2 ff             	adc    $0xffffffff,%edx
    4775:	89 7b 18             	mov    %edi,0x18(%ebx)
    4778:	89 6b 20             	mov    %ebp,0x20(%ebx)
    477b:	89 46 10             	mov    %eax,0x10(%esi)
    477e:	b8 01 00 00 00       	mov    $0x1,%eax
    4783:	89 56 14             	mov    %edx,0x14(%esi)
    4786:	89 c2                	mov    %eax,%edx
    4788:	40                   	inc    %eax
    4789:	d1 ef                	shr    %edi
    478b:	75 f9                	jne    4786 <stripe_ctr+0x18d>
    478d:	8d 42 ff             	lea    -0x1(%edx),%eax
    4790:	31 c9                	xor    %ecx,%ecx
    4792:	89 46 0c             	mov    %eax,0xc(%esi)
    4795:	89 cf                	mov    %ecx,%edi
    4797:	e9 bf 00 00 00       	jmp    485b <stripe_ctr+0x262>
    479c:	8d 4c 24 14          	lea    0x14(%esp),%ecx
    47a0:	51                   	push   %ecx
    47a1:	68 b4 0f 00 00       	push   $0xfb4
			47a2: R_386_32	.rodata.str1.1
    47a6:	8b 44 24 14          	mov    0x14(%esp),%eax
    47aa:	ff 74 f8 0c          	pushl  0xc(%eax,%edi,8)
    47ae:	e8 fc ff ff ff       	call   47af <stripe_ctr+0x1b6>
			47af: R_386_PC32	sscanf
    47b3:	83 c4 0c             	add    $0xc,%esp
    47b6:	48                   	dec    %eax
    47b7:	75 69                	jne    4822 <stripe_ctr+0x229>
    47b9:	8b 03                	mov    (%ebx),%eax
    47bb:	e8 fc ff ff ff       	call   47bc <stripe_ctr+0x1c3>
			47bc: R_386_PC32	dm_table_get_mode
    47c0:	8b 4c 24 0c          	mov    0xc(%esp),%ecx
    47c4:	8b 54 f9 08          	mov    0x8(%ecx,%edi,8),%edx
    47c8:	89 f9                	mov    %edi,%ecx
    47ca:	c1 e1 04             	shl    $0x4,%ecx
    47cd:	8d 4c 31 20          	lea    0x20(%ecx,%esi,1),%ecx
    47d1:	89 4c 24 04          	mov    %ecx,0x4(%esp)
    47d5:	83 c1 0c             	add    $0xc,%ecx
    47d8:	51                   	push   %ecx
    47d9:	50                   	push   %eax
    47da:	89 d8                	mov    %ebx,%eax
    47dc:	ff 76 08             	pushl  0x8(%esi)
    47df:	ff 76 04             	pushl  0x4(%esi)
    47e2:	ff 74 24 28          	pushl  0x28(%esp)
    47e6:	ff 74 24 28          	pushl  0x28(%esp)
    47ea:	e8 fc ff ff ff       	call   47eb <stripe_ctr+0x1f2>
			47eb: R_386_PC32	dm_get_device
    47ef:	83 c4 18             	add    $0x18,%esp
    47f2:	85 c0                	test   %eax,%eax
    47f4:	74 09                	je     47ff <stripe_ctr+0x206>
    47f6:	89 f9                	mov    %edi,%ecx
    47f8:	bd fa ff ff ff       	mov    $0xfffffffa,%ebp
    47fd:	eb 2a                	jmp    4829 <stripe_ctr+0x230>
    47ff:	8b 54 24 14          	mov    0x14(%esp),%edx
    4803:	89 f8                	mov    %edi,%eax
    4805:	47                   	inc    %edi
    4806:	8b 4c 24 18          	mov    0x18(%esp),%ecx
    480a:	c1 e0 04             	shl    $0x4,%eax
    480d:	89 54 06 30          	mov    %edx,0x30(%esi,%eax,1)
    4811:	89 4c 06 34          	mov    %ecx,0x34(%esi,%eax,1)
    4815:	8b 44 24 04          	mov    0x4(%esp),%eax
    4819:	c7 40 18 00 00 00 00 	movl   $0x0,0x18(%eax)
    4820:	eb 39                	jmp    485b <stripe_ctr+0x262>
    4822:	89 f9                	mov    %edi,%ecx
    4824:	bd ea ff ff ff       	mov    $0xffffffea,%ebp
    4829:	89 c8                	mov    %ecx,%eax
    482b:	c1 e0 04             	shl    $0x4,%eax
    482e:	c7 43 28 b9 0f 00 00 	movl   $0xfb9,0x28(%ebx)
			4831: R_386_32	.rodata.str1.1
    4835:	8d 7c 06 1c          	lea    0x1c(%esi,%eax,1),%edi
    4839:	eb 13                	jmp    484e <stripe_ctr+0x255>
    483b:	8b 17                	mov    (%edi),%edx
    483d:	49                   	dec    %ecx
    483e:	89 d8                	mov    %ebx,%eax
    4840:	89 0c 24             	mov    %ecx,(%esp)
    4843:	83 ef 10             	sub    $0x10,%edi
    4846:	e8 fc ff ff ff       	call   4847 <stripe_ctr+0x24e>
			4847: R_386_PC32	dm_put_device
    484b:	8b 0c 24             	mov    (%esp),%ecx
    484e:	85 c9                	test   %ecx,%ecx
    4850:	75 e9                	jne    483b <stripe_ctr+0x242>
    4852:	89 f0                	mov    %esi,%eax
    4854:	e8 fc ff ff ff       	call   4855 <stripe_ctr+0x25c>
			4855: R_386_PC32	kfree
    4859:	eb 0d                	jmp    4868 <stripe_ctr+0x26f>
    485b:	39 ef                	cmp    %ebp,%edi
    485d:	0f 82 39 ff ff ff    	jb     479c <stripe_ctr+0x1a3>
    4863:	89 73 24             	mov    %esi,0x24(%ebx)
    4866:	31 ed                	xor    %ebp,%ebp
    4868:	83 c4 20             	add    $0x20,%esp
    486b:	89 e8                	mov    %ebp,%eax
    486d:	5b                   	pop    %ebx
    486e:	5e                   	pop    %esi
    486f:	5f                   	pop    %edi
    4870:	5d                   	pop    %ebp
    4871:	c3                   	ret    
    4872:	90                   	nop
    4873:	90                   	nop

00004874 <dm_copy_name_and_uuid>:
    4874:	55                   	push   %ebp
    4875:	89 d5                	mov    %edx,%ebp
    4877:	57                   	push   %edi
    4878:	ba fa ff ff ff       	mov    $0xfffffffa,%edx
    487d:	56                   	push   %esi
    487e:	89 cf                	mov    %ecx,%edi
    4880:	53                   	push   %ebx
    4881:	89 c3                	mov    %eax,%ebx
    4883:	83 ec 04             	sub    $0x4,%esp
    4886:	85 c0                	test   %eax,%eax
    4888:	74 5d                	je     48e7 <dm_copy_name_and_uuid+0x73>
    488a:	b8 70 01 00 00       	mov    $0x170,%eax
			488b: R_386_32	.data
    488f:	e8 fc ff ff ff       	call   4890 <dm_copy_name_and_uuid+0x1c>
			4890: R_386_PC32	mutex_lock
    4894:	89 d8                	mov    %ebx,%eax
    4896:	e8 fc ff ff ff       	call   4897 <dm_copy_name_and_uuid+0x23>
			4897: R_386_PC32	dm_get_mdptr
    489b:	85 c0                	test   %eax,%eax
    489d:	89 c6                	mov    %eax,%esi
    489f:	74 31                	je     48d2 <dm_copy_name_and_uuid+0x5e>
    48a1:	39 58 18             	cmp    %ebx,0x18(%eax)
    48a4:	75 2c                	jne    48d2 <dm_copy_name_and_uuid+0x5e>
    48a6:	85 ed                	test   %ebp,%ebp
    48a8:	74 0a                	je     48b4 <dm_copy_name_and_uuid+0x40>
    48aa:	8b 50 10             	mov    0x10(%eax),%edx
    48ad:	89 e8                	mov    %ebp,%eax
    48af:	e8 fc ff ff ff       	call   48b0 <dm_copy_name_and_uuid+0x3c>
			48b0: R_386_PC32	strcpy
    48b4:	31 d2                	xor    %edx,%edx
    48b6:	85 ff                	test   %edi,%edi
    48b8:	74 1d                	je     48d7 <dm_copy_name_and_uuid+0x63>
    48ba:	8b 56 14             	mov    0x14(%esi),%edx
    48bd:	b8 e3 0f 00 00       	mov    $0xfe3,%eax
			48be: R_386_32	.rodata.str1.1
    48c2:	85 d2                	test   %edx,%edx
    48c4:	0f 44 d0             	cmove  %eax,%edx
    48c7:	89 f8                	mov    %edi,%eax
    48c9:	e8 fc ff ff ff       	call   48ca <dm_copy_name_and_uuid+0x56>
			48ca: R_386_PC32	strcpy
    48ce:	31 d2                	xor    %edx,%edx
    48d0:	eb 05                	jmp    48d7 <dm_copy_name_and_uuid+0x63>
    48d2:	ba fa ff ff ff       	mov    $0xfffffffa,%edx
    48d7:	b8 70 01 00 00       	mov    $0x170,%eax
			48d8: R_386_32	.data
    48dc:	89 14 24             	mov    %edx,(%esp)
    48df:	e8 fc ff ff ff       	call   48e0 <dm_copy_name_and_uuid+0x6c>
			48e0: R_386_PC32	mutex_unlock
    48e4:	8b 14 24             	mov    (%esp),%edx
    48e7:	89 d0                	mov    %edx,%eax
    48e9:	5a                   	pop    %edx
    48ea:	5b                   	pop    %ebx
    48eb:	5e                   	pop    %esi
    48ec:	5f                   	pop    %edi
    48ed:	5d                   	pop    %ebp
    48ee:	c3                   	ret    

000048ef <__get_uuid_cell>:
    48ef:	57                   	push   %edi
    48f0:	89 c2                	mov    %eax,%edx
    48f2:	56                   	push   %esi
    48f3:	89 c6                	mov    %eax,%esi
    48f5:	53                   	push   %ebx
    48f6:	31 c0                	xor    %eax,%eax
    48f8:	eb 0c                	jmp    4906 <__get_uuid_cell+0x17>
    48fa:	0f be c9             	movsbl %cl,%ecx
    48fd:	42                   	inc    %edx
    48fe:	01 c8                	add    %ecx,%eax
    4900:	69 c0 3b 78 37 9e    	imul   $0x9e37783b,%eax,%eax
    4906:	8a 0a                	mov    (%edx),%cl
    4908:	84 c9                	test   %cl,%cl
    490a:	75 ee                	jne    48fa <__get_uuid_cell+0xb>
    490c:	83 e0 3f             	and    $0x3f,%eax
    490f:	8d 3c c5 38 02 00 00 	lea    0x238(,%eax,8),%edi
			4912: R_386_32	.bss
    4916:	8b 1c c5 38 02 00 00 	mov    0x238(,%eax,8),%ebx
			4919: R_386_32	.bss
    491d:	eb 1b                	jmp    493a <__get_uuid_cell+0x4b>
    491f:	8b 43 14             	mov    0x14(%ebx),%eax
    4922:	89 f2                	mov    %esi,%edx
    4924:	e8 fc ff ff ff       	call   4925 <__get_uuid_cell+0x36>
			4925: R_386_PC32	strcmp
    4929:	85 c0                	test   %eax,%eax
    492b:	75 0a                	jne    4937 <__get_uuid_cell+0x48>
    492d:	8b 43 18             	mov    0x18(%ebx),%eax
    4930:	e8 fc ff ff ff       	call   4931 <__get_uuid_cell+0x42>
			4931: R_386_PC32	dm_get
    4935:	eb 16                	jmp    494d <__get_uuid_cell+0x5e>
    4937:	8b 5b 08             	mov    0x8(%ebx),%ebx
    493a:	83 eb 08             	sub    $0x8,%ebx
    493d:	8b 43 08             	mov    0x8(%ebx),%eax
    4940:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    4944:	8d 43 08             	lea    0x8(%ebx),%eax
    4947:	39 c7                	cmp    %eax,%edi
    4949:	75 d4                	jne    491f <__get_uuid_cell+0x30>
    494b:	31 db                	xor    %ebx,%ebx
    494d:	89 d8                	mov    %ebx,%eax
    494f:	5b                   	pop    %ebx
    4950:	5e                   	pop    %esi
    4951:	5f                   	pop    %edi
    4952:	c3                   	ret    

00004953 <__get_name_cell>:
    4953:	57                   	push   %edi
    4954:	89 c2                	mov    %eax,%edx
    4956:	56                   	push   %esi
    4957:	89 c6                	mov    %eax,%esi
    4959:	53                   	push   %ebx
    495a:	31 c0                	xor    %eax,%eax
    495c:	eb 0c                	jmp    496a <__get_name_cell+0x17>
    495e:	0f be c9             	movsbl %cl,%ecx
    4961:	42                   	inc    %edx
    4962:	01 c8                	add    %ecx,%eax
    4964:	69 c0 3b 78 37 9e    	imul   $0x9e37783b,%eax,%eax
    496a:	8a 0a                	mov    (%edx),%cl
    496c:	84 c9                	test   %cl,%cl
    496e:	75 ee                	jne    495e <__get_name_cell+0xb>
    4970:	83 e0 3f             	and    $0x3f,%eax
    4973:	8d 3c c5 38 00 00 00 	lea    0x38(,%eax,8),%edi
			4976: R_386_32	.bss
    497a:	8b 1c c5 38 00 00 00 	mov    0x38(,%eax,8),%ebx
			497d: R_386_32	.bss
    4981:	eb 1a                	jmp    499d <__get_name_cell+0x4a>
    4983:	8b 43 10             	mov    0x10(%ebx),%eax
    4986:	89 f2                	mov    %esi,%edx
    4988:	e8 fc ff ff ff       	call   4989 <__get_name_cell+0x36>
			4989: R_386_PC32	strcmp
    498d:	85 c0                	test   %eax,%eax
    498f:	75 0a                	jne    499b <__get_name_cell+0x48>
    4991:	8b 43 18             	mov    0x18(%ebx),%eax
    4994:	e8 fc ff ff ff       	call   4995 <__get_name_cell+0x42>
			4995: R_386_PC32	dm_get
    4999:	eb 0e                	jmp    49a9 <__get_name_cell+0x56>
    499b:	8b 1b                	mov    (%ebx),%ebx
    499d:	8b 03                	mov    (%ebx),%eax
    499f:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    49a3:	39 fb                	cmp    %edi,%ebx
    49a5:	75 dc                	jne    4983 <__get_name_cell+0x30>
    49a7:	31 db                	xor    %ebx,%ebx
    49a9:	89 d8                	mov    %ebx,%eax
    49ab:	5b                   	pop    %ebx
    49ac:	5e                   	pop    %esi
    49ad:	5f                   	pop    %edi
    49ae:	c3                   	ret    

000049af <__find_device_hash_cell>:
    49af:	56                   	push   %esi
    49b0:	53                   	push   %ebx
    49b1:	80 b8 b0 00 00 00 00 	cmpb   $0x0,0xb0(%eax)
    49b8:	74 0c                	je     49c6 <__find_device_hash_cell+0x17>
    49ba:	5b                   	pop    %ebx
    49bb:	05 b0 00 00 00       	add    $0xb0,%eax
    49c0:	5e                   	pop    %esi
    49c1:	e9 29 ff ff ff       	jmp    48ef <__get_uuid_cell>
    49c6:	80 78 30 00          	cmpb   $0x0,0x30(%eax)
    49ca:	74 07                	je     49d3 <__find_device_hash_cell+0x24>
    49cc:	5b                   	pop    %ebx
    49cd:	83 c0 30             	add    $0x30,%eax
    49d0:	5e                   	pop    %esi
    49d1:	eb 80                	jmp    4953 <__get_name_cell>
    49d3:	8b 50 28             	mov    0x28(%eax),%edx
    49d6:	31 db                	xor    %ebx,%ebx
    49d8:	89 d0                	mov    %edx,%eax
    49da:	0f b6 ca             	movzbl %dl,%ecx
    49dd:	c1 e8 0c             	shr    $0xc,%eax
    49e0:	81 e2 00 ff 0f 00    	and    $0xfff00,%edx
    49e6:	25 00 ff 0f 00       	and    $0xfff00,%eax
    49eb:	09 c8                	or     %ecx,%eax
    49ed:	c1 e2 0c             	shl    $0xc,%edx
    49f0:	09 d0                	or     %edx,%eax
    49f2:	e8 fc ff ff ff       	call   49f3 <__find_device_hash_cell+0x44>
			49f3: R_386_PC32	dm_get_md
    49f7:	85 c0                	test   %eax,%eax
    49f9:	89 c6                	mov    %eax,%esi
    49fb:	74 12                	je     4a0f <__find_device_hash_cell+0x60>
    49fd:	e8 fc ff ff ff       	call   49fe <__find_device_hash_cell+0x4f>
			49fe: R_386_PC32	dm_get_mdptr
    4a02:	85 c0                	test   %eax,%eax
    4a04:	89 c3                	mov    %eax,%ebx
    4a06:	75 07                	jne    4a0f <__find_device_hash_cell+0x60>
    4a08:	89 f0                	mov    %esi,%eax
    4a0a:	e8 fc ff ff ff       	call   4a0b <__find_device_hash_cell+0x5c>
			4a0b: R_386_PC32	dm_put
    4a0f:	89 d8                	mov    %ebx,%eax
    4a11:	5b                   	pop    %ebx
    4a12:	5e                   	pop    %esi
    4a13:	c3                   	ret    

00004a14 <find_device>:
    4a14:	57                   	push   %edi
    4a15:	31 ff                	xor    %edi,%edi
    4a17:	56                   	push   %esi
    4a18:	53                   	push   %ebx
    4a19:	89 c3                	mov    %eax,%ebx
    4a1b:	b8 a8 01 00 00       	mov    $0x1a8,%eax
			4a1c: R_386_32	.data
    4a20:	e8 fc ff ff ff       	call   4a21 <find_device+0xd>
			4a21: R_386_PC32	down_read
    4a25:	89 d8                	mov    %ebx,%eax
    4a27:	e8 83 ff ff ff       	call   49af <__find_device_hash_cell>
    4a2c:	85 c0                	test   %eax,%eax
    4a2e:	89 c6                	mov    %eax,%esi
    4a30:	74 43                	je     4a75 <find_device+0x61>
    4a32:	8b 50 10             	mov    0x10(%eax),%edx
    4a35:	b9 80 00 00 00       	mov    $0x80,%ecx
    4a3a:	8b 78 18             	mov    0x18(%eax),%edi
    4a3d:	8d 43 30             	lea    0x30(%ebx),%eax
    4a40:	e8 fc ff ff ff       	call   4a41 <find_device+0x2d>
			4a41: R_386_PC32	strncpy
    4a45:	8b 56 14             	mov    0x14(%esi),%edx
    4a48:	85 d2                	test   %edx,%edx
    4a4a:	74 12                	je     4a5e <find_device+0x4a>
    4a4c:	8d 83 b0 00 00 00    	lea    0xb0(%ebx),%eax
    4a52:	b9 80 00 00 00       	mov    $0x80,%ecx
    4a57:	e8 fc ff ff ff       	call   4a58 <find_device+0x44>
			4a58: R_386_PC32	strncpy
    4a5c:	eb 07                	jmp    4a65 <find_device+0x51>
    4a5e:	c6 83 b0 00 00 00 00 	movb   $0x0,0xb0(%ebx)
    4a65:	83 7e 1c 00          	cmpl   $0x0,0x1c(%esi)
    4a69:	74 06                	je     4a71 <find_device+0x5d>
    4a6b:	83 4b 1c 40          	orl    $0x40,0x1c(%ebx)
    4a6f:	eb 04                	jmp    4a75 <find_device+0x61>
    4a71:	83 63 1c bf          	andl   $0xffffffbf,0x1c(%ebx)
    4a75:	b8 a8 01 00 00       	mov    $0x1a8,%eax
			4a76: R_386_32	.data
    4a7a:	e8 fc ff ff ff       	call   4a7b <find_device+0x67>
			4a7b: R_386_PC32	up_read
    4a7f:	89 f8                	mov    %edi,%eax
    4a81:	5b                   	pop    %ebx
    4a82:	5e                   	pop    %esi
    4a83:	5f                   	pop    %edi
    4a84:	c3                   	ret    

00004a85 <__dev_status>:
    4a85:	57                   	push   %edi
    4a86:	56                   	push   %esi
    4a87:	89 d6                	mov    %edx,%esi
    4a89:	53                   	push   %ebx
    4a8a:	89 c3                	mov    %eax,%ebx
    4a8c:	e8 fc ff ff ff       	call   4a8d <__dev_status+0x8>
			4a8d: R_386_PC32	dm_disk
    4a91:	83 66 1c dc          	andl   $0xffffffdc,0x1c(%esi)
    4a95:	89 c7                	mov    %eax,%edi
    4a97:	89 d8                	mov    %ebx,%eax
    4a99:	e8 fc ff ff ff       	call   4a9a <__dev_status+0x15>
			4a9a: R_386_PC32	dm_suspended
    4a9e:	85 c0                	test   %eax,%eax
    4aa0:	74 04                	je     4aa6 <__dev_status+0x21>
    4aa2:	83 4e 1c 02          	orl    $0x2,0x1c(%esi)
    4aa6:	8b 97 40 01 00 00    	mov    0x140(%edi),%edx
    4aac:	c7 46 2c 00 00 00 00 	movl   $0x0,0x2c(%esi)
    4ab3:	89 d0                	mov    %edx,%eax
    4ab5:	0f b6 ca             	movzbl %dl,%ecx
    4ab8:	c1 e8 14             	shr    $0x14,%eax
    4abb:	81 e2 00 ff 0f 00    	and    $0xfff00,%edx
    4ac1:	c1 e0 08             	shl    $0x8,%eax
    4ac4:	09 c8                	or     %ecx,%eax
    4ac6:	c1 e2 0c             	shl    $0xc,%edx
    4ac9:	09 d0                	or     %edx,%eax
    4acb:	89 46 28             	mov    %eax,0x28(%esi)
    4ace:	89 d8                	mov    %ebx,%eax
    4ad0:	e8 fc ff ff ff       	call   4ad1 <__dev_status+0x4c>
			4ad1: R_386_PC32	dm_open_count
    4ad5:	89 46 18             	mov    %eax,0x18(%esi)
    4ad8:	83 bf 70 01 00 00 00 	cmpl   $0x0,0x170(%edi)
    4adf:	74 04                	je     4ae5 <__dev_status+0x60>
    4ae1:	83 4e 1c 01          	orl    $0x1,0x1c(%esi)
    4ae5:	89 d8                	mov    %ebx,%eax
    4ae7:	e8 fc ff ff ff       	call   4ae8 <__dev_status+0x63>
			4ae8: R_386_PC32	dm_get_event_nr
    4aec:	89 46 20             	mov    %eax,0x20(%esi)
    4aef:	89 d8                	mov    %ebx,%eax
    4af1:	e8 fc ff ff ff       	call   4af2 <__dev_status+0x6d>
			4af2: R_386_PC32	dm_get_table
    4af6:	85 c0                	test   %eax,%eax
    4af8:	89 c3                	mov    %eax,%ebx
    4afa:	74 15                	je     4b11 <__dev_status+0x8c>
    4afc:	83 4e 1c 20          	orl    $0x20,0x1c(%esi)
    4b00:	e8 fc ff ff ff       	call   4b01 <__dev_status+0x7c>
			4b01: R_386_PC32	dm_table_get_num_targets
    4b05:	89 46 14             	mov    %eax,0x14(%esi)
    4b08:	89 d8                	mov    %ebx,%eax
    4b0a:	e8 fc ff ff ff       	call   4b0b <__dev_status+0x86>
			4b0b: R_386_PC32	dm_table_put
    4b0f:	eb 07                	jmp    4b18 <__dev_status+0x93>
    4b11:	c7 46 14 00 00 00 00 	movl   $0x0,0x14(%esi)
    4b18:	31 c0                	xor    %eax,%eax
    4b1a:	5b                   	pop    %ebx
    4b1b:	5e                   	pop    %esi
    4b1c:	5f                   	pop    %edi
    4b1d:	c3                   	ret    

00004b1e <dev_set_geometry>:
    4b1e:	55                   	push   %ebp
    4b1f:	89 d5                	mov    %edx,%ebp
    4b21:	57                   	push   %edi
    4b22:	bf fa ff ff ff       	mov    $0xfffffffa,%edi
    4b27:	56                   	push   %esi
    4b28:	53                   	push   %ebx
    4b29:	89 c3                	mov    %eax,%ebx
    4b2b:	83 ec 1c             	sub    $0x1c,%esp
    4b2e:	8b 40 10             	mov    0x10(%eax),%eax
    4b31:	89 04 24             	mov    %eax,(%esp)
    4b34:	89 d8                	mov    %ebx,%eax
    4b36:	e8 d9 fe ff ff       	call   4a14 <find_device>
    4b3b:	85 c0                	test   %eax,%eax
    4b3d:	89 c6                	mov    %eax,%esi
    4b3f:	0f 84 ce 00 00 00    	je     4c13 <dev_set_geometry+0xf5>
    4b45:	8b 04 24             	mov    (%esp),%eax
    4b48:	8d 14 03             	lea    (%ebx,%eax,1),%edx
    4b4b:	8d 83 31 01 00 00    	lea    0x131(%ebx),%eax
    4b51:	39 c2                	cmp    %eax,%edx
    4b53:	72 3c                	jb     4b91 <dev_set_geometry+0x73>
    4b55:	8d 2c 2b             	lea    (%ebx,%ebp,1),%ebp
    4b58:	89 d0                	mov    %edx,%eax
    4b5a:	eb 06                	jmp    4b62 <dev_set_geometry+0x44>
    4b5c:	80 38 00             	cmpb   $0x0,(%eax)
    4b5f:	74 07                	je     4b68 <dev_set_geometry+0x4a>
    4b61:	40                   	inc    %eax
    4b62:	39 e8                	cmp    %ebp,%eax
    4b64:	72 f6                	jb     4b5c <dev_set_geometry+0x3e>
    4b66:	eb 29                	jmp    4b91 <dev_set_geometry+0x73>
    4b68:	8d 4c 24 10          	lea    0x10(%esp),%ecx
    4b6c:	8d 44 24 04          	lea    0x4(%esp),%eax
    4b70:	51                   	push   %ecx
    4b71:	8d 4c 24 10          	lea    0x10(%esp),%ecx
    4b75:	51                   	push   %ecx
    4b76:	8d 4c 24 10          	lea    0x10(%esp),%ecx
    4b7a:	51                   	push   %ecx
    4b7b:	50                   	push   %eax
    4b7c:	68 e4 0f 00 00       	push   $0xfe4
			4b7d: R_386_32	.rodata.str1.1
    4b81:	52                   	push   %edx
    4b82:	e8 fc ff ff ff       	call   4b83 <dev_set_geometry+0x65>
			4b83: R_386_PC32	sscanf
    4b87:	83 c4 18             	add    $0x18,%esp
    4b8a:	83 f8 04             	cmp    $0x4,%eax
    4b8d:	74 1b                	je     4baa <dev_set_geometry+0x8c>
    4b8f:	eb 07                	jmp    4b98 <dev_set_geometry+0x7a>
    4b91:	68 f4 0f 00 00       	push   $0xff4
			4b92: R_386_32	.rodata.str1.1
    4b96:	eb 05                	jmp    4b9d <dev_set_geometry+0x7f>
    4b98:	68 29 10 00 00       	push   $0x1029
			4b99: R_386_32	.rodata.str1.1
    4b9d:	e8 fc ff ff ff       	call   4b9e <dev_set_geometry+0x80>
			4b9e: R_386_PC32	printk
    4ba2:	bf ea ff ff ff       	mov    $0xffffffea,%edi
    4ba7:	59                   	pop    %ecx
    4ba8:	eb 62                	jmp    4c0c <dev_set_geometry+0xee>
    4baa:	8b 4c 24 04          	mov    0x4(%esp),%ecx
    4bae:	81 f9 ff ff 00 00    	cmp    $0xffff,%ecx
    4bb4:	77 17                	ja     4bcd <dev_set_geometry+0xaf>
    4bb6:	8b 54 24 08          	mov    0x8(%esp),%edx
    4bba:	81 fa ff 00 00 00    	cmp    $0xff,%edx
    4bc0:	77 0b                	ja     4bcd <dev_set_geometry+0xaf>
    4bc2:	8b 44 24 0c          	mov    0xc(%esp),%eax
    4bc6:	3d ff 00 00 00       	cmp    $0xff,%eax
    4bcb:	76 07                	jbe    4bd4 <dev_set_geometry+0xb6>
    4bcd:	68 6a 10 00 00       	push   $0x106a
			4bce: R_386_32	.rodata.str1.1
    4bd2:	eb c9                	jmp    4b9d <dev_set_geometry+0x7f>
    4bd4:	88 44 24 15          	mov    %al,0x15(%esp)
    4bd8:	8b 44 24 10          	mov    0x10(%esp),%eax
    4bdc:	88 54 24 14          	mov    %dl,0x14(%esp)
    4be0:	8d 54 24 14          	lea    0x14(%esp),%edx
    4be4:	66 89 4c 24 16       	mov    %cx,0x16(%esp)
    4be9:	89 44 24 18          	mov    %eax,0x18(%esp)
    4bed:	89 f0                	mov    %esi,%eax
    4bef:	e8 fc ff ff ff       	call   4bf0 <dev_set_geometry+0xd2>
			4bf0: R_386_PC32	dm_set_geometry
    4bf4:	85 c0                	test   %eax,%eax
    4bf6:	89 c7                	mov    %eax,%edi
    4bf8:	75 0b                	jne    4c05 <dev_set_geometry+0xe7>
    4bfa:	89 da                	mov    %ebx,%edx
    4bfc:	89 f0                	mov    %esi,%eax
    4bfe:	e8 82 fe ff ff       	call   4a85 <__dev_status>
    4c03:	89 c7                	mov    %eax,%edi
    4c05:	c7 43 0c 00 00 00 00 	movl   $0x0,0xc(%ebx)
    4c0c:	89 f0                	mov    %esi,%eax
    4c0e:	e8 fc ff ff ff       	call   4c0f <dev_set_geometry+0xf1>
			4c0f: R_386_PC32	dm_put
    4c13:	83 c4 1c             	add    $0x1c,%esp
    4c16:	89 f8                	mov    %edi,%eax
    4c18:	5b                   	pop    %ebx
    4c19:	5e                   	pop    %esi
    4c1a:	5f                   	pop    %edi
    4c1b:	5d                   	pop    %ebp
    4c1c:	c3                   	ret    

00004c1d <dev_status>:
    4c1d:	57                   	push   %edi
    4c1e:	89 c7                	mov    %eax,%edi
    4c20:	56                   	push   %esi
    4c21:	be fa ff ff ff       	mov    $0xfffffffa,%esi
    4c26:	53                   	push   %ebx
    4c27:	e8 e8 fd ff ff       	call   4a14 <find_device>
    4c2c:	85 c0                	test   %eax,%eax
    4c2e:	89 c3                	mov    %eax,%ebx
    4c30:	74 10                	je     4c42 <dev_status+0x25>
    4c32:	89 fa                	mov    %edi,%edx
    4c34:	e8 4c fe ff ff       	call   4a85 <__dev_status>
    4c39:	89 c6                	mov    %eax,%esi
    4c3b:	89 d8                	mov    %ebx,%eax
    4c3d:	e8 fc ff ff ff       	call   4c3e <dev_status+0x21>
			4c3e: R_386_PC32	dm_put
    4c42:	89 f0                	mov    %esi,%eax
    4c44:	5b                   	pop    %ebx
    4c45:	5e                   	pop    %esi
    4c46:	5f                   	pop    %edi
    4c47:	c3                   	ret    

00004c48 <target_message>:
    4c48:	55                   	push   %ebp
    4c49:	89 d5                	mov    %edx,%ebp
    4c4b:	57                   	push   %edi
    4c4c:	56                   	push   %esi
    4c4d:	53                   	push   %ebx
    4c4e:	89 c3                	mov    %eax,%ebx
    4c50:	83 ec 0c             	sub    $0xc,%esp
    4c53:	8b 78 10             	mov    0x10(%eax),%edi
    4c56:	e8 b9 fd ff ff       	call   4a14 <find_device>
    4c5b:	85 c0                	test   %eax,%eax
    4c5d:	89 c6                	mov    %eax,%esi
    4c5f:	c7 04 24 fa ff ff ff 	movl   $0xfffffffa,(%esp)
    4c66:	0f 84 d9 00 00 00    	je     4d45 <target_message+0xfd>
    4c6c:	89 da                	mov    %ebx,%edx
    4c6e:	e8 12 fe ff ff       	call   4a85 <__dev_status>
    4c73:	85 c0                	test   %eax,%eax
    4c75:	89 04 24             	mov    %eax,(%esp)
    4c78:	0f 85 b9 00 00 00    	jne    4d37 <target_message+0xef>
    4c7e:	8d 3c 3b             	lea    (%ebx,%edi,1),%edi
    4c81:	8d 83 31 01 00 00    	lea    0x131(%ebx),%eax
    4c87:	39 c7                	cmp    %eax,%edi
    4c89:	72 2c                	jb     4cb7 <target_message+0x6f>
    4c8b:	8d 4f 08             	lea    0x8(%edi),%ecx
    4c8e:	8d 2c 2b             	lea    (%ebx,%ebp,1),%ebp
    4c91:	89 c8                	mov    %ecx,%eax
    4c93:	eb 06                	jmp    4c9b <target_message+0x53>
    4c95:	80 38 00             	cmpb   $0x0,(%eax)
    4c98:	74 07                	je     4ca1 <target_message+0x59>
    4c9a:	40                   	inc    %eax
    4c9b:	39 e8                	cmp    %ebp,%eax
    4c9d:	72 f6                	jb     4c95 <target_message+0x4d>
    4c9f:	eb 16                	jmp    4cb7 <target_message+0x6f>
    4ca1:	8d 54 24 04          	lea    0x4(%esp),%edx
    4ca5:	8d 44 24 08          	lea    0x8(%esp),%eax
    4ca9:	e8 fc ff ff ff       	call   4caa <target_message+0x62>
			4caa: R_386_PC32	dm_split_args
    4cae:	85 c0                	test   %eax,%eax
    4cb0:	89 04 24             	mov    %eax,(%esp)
    4cb3:	74 23                	je     4cd8 <target_message+0x90>
    4cb5:	eb 14                	jmp    4ccb <target_message+0x83>
    4cb7:	68 a3 10 00 00       	push   $0x10a3
			4cb8: R_386_32	.rodata.str1.1
    4cbc:	e8 fc ff ff ff       	call   4cbd <target_message+0x75>
			4cbd: R_386_PC32	printk
    4cc1:	c7 44 24 04 ea ff ff 	movl   $0xffffffea,0x4(%esp)
    4cc8:	ff 
    4cc9:	eb 0a                	jmp    4cd5 <target_message+0x8d>
    4ccb:	68 e0 10 00 00       	push   $0x10e0
			4ccc: R_386_32	.rodata.str1.1
    4cd0:	e8 fc ff ff ff       	call   4cd1 <target_message+0x89>
			4cd1: R_386_PC32	printk
    4cd5:	5d                   	pop    %ebp
    4cd6:	eb 5f                	jmp    4d37 <target_message+0xef>
    4cd8:	89 f0                	mov    %esi,%eax
    4cda:	e8 fc ff ff ff       	call   4cdb <target_message+0x93>
			4cdb: R_386_PC32	dm_get_table
    4cdf:	85 c0                	test   %eax,%eax
    4ce1:	89 c5                	mov    %eax,%ebp
    4ce3:	74 49                	je     4d2e <target_message+0xe6>
    4ce5:	8b 17                	mov    (%edi),%edx
    4ce7:	8b 4f 04             	mov    0x4(%edi),%ecx
    4cea:	e8 fc ff ff ff       	call   4ceb <target_message+0xa3>
			4ceb: R_386_PC32	dm_table_find_target
    4cef:	83 38 00             	cmpl   $0x0,(%eax)
    4cf2:	75 07                	jne    4cfb <target_message+0xb3>
    4cf4:	68 24 11 00 00       	push   $0x1124
			4cf5: R_386_32	.rodata.str1.1
    4cf9:	eb 1e                	jmp    4d19 <target_message+0xd1>
    4cfb:	8b 50 04             	mov    0x4(%eax),%edx
    4cfe:	8b 7a 4c             	mov    0x4c(%edx),%edi
    4d01:	85 ff                	test   %edi,%edi
    4d03:	74 0f                	je     4d14 <target_message+0xcc>
    4d05:	8b 4c 24 04          	mov    0x4(%esp),%ecx
    4d09:	8b 54 24 08          	mov    0x8(%esp),%edx
    4d0d:	ff d7                	call   *%edi
    4d0f:	89 04 24             	mov    %eax,(%esp)
    4d12:	eb 13                	jmp    4d27 <target_message+0xdf>
    4d14:	68 64 11 00 00       	push   $0x1164
			4d15: R_386_32	.rodata.str1.1
    4d19:	e8 fc ff ff ff       	call   4d1a <target_message+0xd2>
			4d1a: R_386_PC32	printk
    4d1e:	c7 44 24 04 ea ff ff 	movl   $0xffffffea,0x4(%esp)
    4d25:	ff 
    4d26:	5f                   	pop    %edi
    4d27:	89 e8                	mov    %ebp,%eax
    4d29:	e8 fc ff ff ff       	call   4d2a <target_message+0xe2>
			4d2a: R_386_PC32	dm_table_put
    4d2e:	8b 44 24 04          	mov    0x4(%esp),%eax
    4d32:	e8 fc ff ff ff       	call   4d33 <target_message+0xeb>
			4d33: R_386_PC32	kfree
    4d37:	c7 43 0c 00 00 00 00 	movl   $0x0,0xc(%ebx)
    4d3e:	89 f0                	mov    %esi,%eax
    4d40:	e8 fc ff ff ff       	call   4d41 <target_message+0xf9>
			4d41: R_386_PC32	dm_put
    4d45:	8b 04 24             	mov    (%esp),%eax
    4d48:	83 c4 0c             	add    $0xc,%esp
    4d4b:	5b                   	pop    %ebx
    4d4c:	5e                   	pop    %esi
    4d4d:	5f                   	pop    %edi
    4d4e:	5d                   	pop    %ebp
    4d4f:	c3                   	ret    

00004d50 <free_cell>:
    4d50:	85 c0                	test   %eax,%eax
    4d52:	53                   	push   %ebx
    4d53:	89 c3                	mov    %eax,%ebx
    4d55:	74 18                	je     4d6f <free_cell+0x1f>
    4d57:	8b 40 10             	mov    0x10(%eax),%eax
    4d5a:	e8 fc ff ff ff       	call   4d5b <free_cell+0xb>
			4d5b: R_386_PC32	kfree
    4d5f:	8b 43 14             	mov    0x14(%ebx),%eax
    4d62:	e8 fc ff ff ff       	call   4d63 <free_cell+0x13>
			4d63: R_386_PC32	kfree
    4d67:	89 d8                	mov    %ebx,%eax
    4d69:	5b                   	pop    %ebx
    4d6a:	e9 fc ff ff ff       	jmp    4d6b <free_cell+0x1b>
			4d6b: R_386_PC32	kfree
    4d6f:	5b                   	pop    %ebx
    4d70:	c3                   	ret    

00004d71 <list_versions>:
    4d71:	57                   	push   %edi
    4d72:	56                   	push   %esi
    4d73:	89 d6                	mov    %edx,%esi
    4d75:	53                   	push   %ebx
    4d76:	89 c3                	mov    %eax,%ebx
    4d78:	83 ec 18             	sub    $0x18,%esp
    4d7b:	b8 83 4e 00 00       	mov    $0x4e83,%eax
			4d7c: R_386_32	.text
    4d80:	8d 54 24 14          	lea    0x14(%esp),%edx
    4d84:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
    4d8b:	00 
    4d8c:	e8 fc ff ff ff       	call   4d8d <list_versions+0x1c>
			4d8d: R_386_PC32	dm_target_iterate
    4d91:	8d 83 3f 01 00 00    	lea    0x13f(%ebx),%eax
    4d97:	89 f1                	mov    %esi,%ecx
    4d99:	83 e0 f8             	and    $0xfffffff8,%eax
    4d9c:	31 d2                	xor    %edx,%edx
    4d9e:	29 d8                	sub    %ebx,%eax
    4da0:	8b 7c 24 14          	mov    0x14(%esp),%edi
    4da4:	29 c1                	sub    %eax,%ecx
    4da6:	39 f0                	cmp    %esi,%eax
    4da8:	0f 42 d1             	cmovb  %ecx,%edx
    4dab:	89 43 10             	mov    %eax,0x10(%ebx)
    4dae:	39 fa                	cmp    %edi,%edx
    4db0:	73 09                	jae    4dbb <list_versions+0x4a>
    4db2:	81 4b 1c 00 01 00 00 	orl    $0x100,0x1c(%ebx)
    4db9:	eb 39                	jmp    4df4 <list_versions+0x83>
    4dbb:	8d 0c 03             	lea    (%ebx,%eax,1),%ecx
    4dbe:	01 f8                	add    %edi,%eax
    4dc0:	8d 14 11             	lea    (%ecx,%edx,1),%edx
    4dc3:	89 43 0c             	mov    %eax,0xc(%ebx)
    4dc6:	b8 fd 4d 00 00       	mov    $0x4dfd,%eax
			4dc7: R_386_32	.text
    4dcb:	89 54 24 0c          	mov    %edx,0xc(%esp)
    4dcf:	89 e2                	mov    %esp,%edx
    4dd1:	89 34 24             	mov    %esi,(%esp)
    4dd4:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)
    4ddb:	00 
    4ddc:	89 4c 24 04          	mov    %ecx,0x4(%esp)
    4de0:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
    4de7:	00 
    4de8:	e8 fc ff ff ff       	call   4de9 <list_versions+0x78>
			4de9: R_386_PC32	dm_target_iterate
    4ded:	8b 44 24 10          	mov    0x10(%esp),%eax
    4df1:	09 43 1c             	or     %eax,0x1c(%ebx)
    4df4:	83 c4 18             	add    $0x18,%esp
    4df7:	31 c0                	xor    %eax,%eax
    4df9:	5b                   	pop    %ebx
    4dfa:	5e                   	pop    %esi
    4dfb:	5f                   	pop    %edi
    4dfc:	c3                   	ret    

00004dfd <list_version_get_info>:
    4dfd:	57                   	push   %edi
    4dfe:	56                   	push   %esi
    4dff:	89 c6                	mov    %eax,%esi
    4e01:	53                   	push   %ebx
    4e02:	8b 40 08             	mov    0x8(%eax),%eax
    4e05:	89 d3                	mov    %edx,%ebx
    4e07:	8b 7a 04             	mov    0x4(%edx),%edi
    4e0a:	e8 fc ff ff ff       	call   4e0b <list_version_get_info+0xe>
			4e0b: R_386_PC32	strlen
    4e0f:	8d 44 07 0d          	lea    0xd(%edi,%eax,1),%eax
    4e13:	39 43 0c             	cmp    %eax,0xc(%ebx)
    4e16:	73 09                	jae    4e21 <list_version_get_info+0x24>
    4e18:	c7 43 10 00 01 00 00 	movl   $0x100,0x10(%ebx)
    4e1f:	eb 5e                	jmp    4e7f <list_version_get_info+0x82>
    4e21:	8b 43 08             	mov    0x8(%ebx),%eax
    4e24:	85 c0                	test   %eax,%eax
    4e26:	74 07                	je     4e2f <list_version_get_info+0x32>
    4e28:	8b 53 04             	mov    0x4(%ebx),%edx
    4e2b:	29 c2                	sub    %eax,%edx
    4e2d:	89 10                	mov    %edx,(%eax)
    4e2f:	8b 43 04             	mov    0x4(%ebx),%eax
    4e32:	8b 56 10             	mov    0x10(%esi),%edx
    4e35:	89 50 04             	mov    %edx,0x4(%eax)
    4e38:	8b 43 04             	mov    0x4(%ebx),%eax
    4e3b:	8b 56 14             	mov    0x14(%esi),%edx
    4e3e:	89 50 08             	mov    %edx,0x8(%eax)
    4e41:	8b 43 04             	mov    0x4(%ebx),%eax
    4e44:	8b 56 18             	mov    0x18(%esi),%edx
    4e47:	89 50 0c             	mov    %edx,0xc(%eax)
    4e4a:	8b 43 04             	mov    0x4(%ebx),%eax
    4e4d:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
    4e53:	8b 43 04             	mov    0x4(%ebx),%eax
    4e56:	8b 56 08             	mov    0x8(%esi),%edx
    4e59:	83 c0 10             	add    $0x10,%eax
    4e5c:	e8 fc ff ff ff       	call   4e5d <list_version_get_info+0x60>
			4e5d: R_386_PC32	strcpy
    4e61:	8b 7b 04             	mov    0x4(%ebx),%edi
    4e64:	89 7b 08             	mov    %edi,0x8(%ebx)
    4e67:	83 c7 10             	add    $0x10,%edi
    4e6a:	89 7b 04             	mov    %edi,0x4(%ebx)
    4e6d:	8b 46 08             	mov    0x8(%esi),%eax
    4e70:	e8 fc ff ff ff       	call   4e71 <list_version_get_info+0x74>
			4e71: R_386_PC32	strlen
    4e75:	8d 44 07 08          	lea    0x8(%edi,%eax,1),%eax
    4e79:	83 e0 f8             	and    $0xfffffff8,%eax
    4e7c:	89 43 04             	mov    %eax,0x4(%ebx)
    4e7f:	5b                   	pop    %ebx
    4e80:	5e                   	pop    %esi
    4e81:	5f                   	pop    %edi
    4e82:	c3                   	ret    

00004e83 <list_version_get_needed>:
    4e83:	56                   	push   %esi
    4e84:	53                   	push   %ebx
    4e85:	8b 32                	mov    (%edx),%esi
    4e87:	89 d3                	mov    %edx,%ebx
    4e89:	8d 56 10             	lea    0x10(%esi),%edx
    4e8c:	89 13                	mov    %edx,(%ebx)
    4e8e:	8b 40 08             	mov    0x8(%eax),%eax
    4e91:	e8 fc ff ff ff       	call   4e92 <list_version_get_needed+0xf>
			4e92: R_386_PC32	strlen
    4e96:	8d 44 30 17          	lea    0x17(%eax,%esi,1),%eax
    4e9a:	89 03                	mov    %eax,(%ebx)
    4e9c:	5b                   	pop    %ebx
    4e9d:	5e                   	pop    %esi
    4e9e:	c3                   	ret    

00004e9f <retrieve_status>:
    4e9f:	55                   	push   %ebp
    4ea0:	57                   	push   %edi
    4ea1:	56                   	push   %esi
    4ea2:	53                   	push   %ebx
    4ea3:	89 d3                	mov    %edx,%ebx
    4ea5:	83 ec 24             	sub    $0x24,%esp
    4ea8:	89 44 24 20          	mov    %eax,0x20(%esp)
    4eac:	8d 82 3f 01 00 00    	lea    0x13f(%edx),%eax
    4eb2:	83 e0 f8             	and    $0xfffffff8,%eax
    4eb5:	29 d0                	sub    %edx,%eax
    4eb7:	89 42 10             	mov    %eax,0x10(%edx)
    4eba:	89 ca                	mov    %ecx,%edx
    4ebc:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)
    4ec3:	00 
    4ec4:	29 c2                	sub    %eax,%edx
    4ec6:	39 c8                	cmp    %ecx,%eax
    4ec8:	0f 43 54 24 08       	cmovae 0x8(%esp),%edx
    4ecd:	31 ed                	xor    %ebp,%ebp
    4ecf:	8d 04 03             	lea    (%ebx,%eax,1),%eax
    4ed2:	89 44 24 0c          	mov    %eax,0xc(%esp)
    4ed6:	89 54 24 08          	mov    %edx,0x8(%esp)
    4eda:	8b 43 1c             	mov    0x1c(%ebx),%eax
    4edd:	c1 e8 04             	shr    $0x4,%eax
    4ee0:	83 e0 01             	and    $0x1,%eax
    4ee3:	89 44 24 04          	mov    %eax,0x4(%esp)
    4ee7:	8b 44 24 20          	mov    0x20(%esp),%eax
    4eeb:	e8 fc ff ff ff       	call   4eec <retrieve_status+0x4d>
			4eec: R_386_PC32	dm_table_get_num_targets
    4ef0:	8b 4c 24 0c          	mov    0xc(%esp),%ecx
    4ef4:	89 44 24 18          	mov    %eax,0x18(%esp)
    4ef8:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
    4eff:	00 
    4f00:	89 5c 24 10          	mov    %ebx,0x10(%esp)
    4f04:	e9 c1 00 00 00       	jmp    4fca <retrieve_status+0x12b>
    4f09:	8b 54 24 14          	mov    0x14(%esp),%edx
    4f0d:	8b 44 24 20          	mov    0x20(%esp),%eax
    4f11:	89 0c 24             	mov    %ecx,(%esp)
    4f14:	e8 fc ff ff ff       	call   4f15 <retrieve_status+0x76>
			4f15: R_386_PC32	dm_table_get_target
    4f19:	8b 0c 24             	mov    (%esp),%ecx
    4f1c:	89 c3                	mov    %eax,%ebx
    4f1e:	8b 44 24 0c          	mov    0xc(%esp),%eax
    4f22:	29 c8                	sub    %ecx,%eax
    4f24:	03 44 24 08          	add    0x8(%esp),%eax
    4f28:	83 f8 28             	cmp    $0x28,%eax
    4f2b:	76 62                	jbe    4f8f <retrieve_status+0xf0>
    4f2d:	c7 41 10 00 00 00 00 	movl   $0x0,0x10(%ecx)
    4f34:	8b 43 08             	mov    0x8(%ebx),%eax
    4f37:	89 ce                	mov    %ecx,%esi
    4f39:	8b 53 0c             	mov    0xc(%ebx),%edx
    4f3c:	8d 7e 28             	lea    0x28(%esi),%edi
    4f3f:	89 01                	mov    %eax,(%ecx)
    4f41:	89 51 04             	mov    %edx,0x4(%ecx)
    4f44:	8b 43 10             	mov    0x10(%ebx),%eax
    4f47:	8b 53 14             	mov    0x14(%ebx),%edx
    4f4a:	89 41 08             	mov    %eax,0x8(%ecx)
    4f4d:	89 51 0c             	mov    %edx,0xc(%ecx)
    4f50:	8b 43 04             	mov    0x4(%ebx),%eax
    4f53:	8b 50 08             	mov    0x8(%eax),%edx
    4f56:	8d 41 18             	lea    0x18(%ecx),%eax
    4f59:	b9 10 00 00 00       	mov    $0x10,%ecx
    4f5e:	e8 fc ff ff ff       	call   4f5f <retrieve_status+0xc0>
			4f5f: R_386_PC32	strncpy
    4f63:	8b 44 24 0c          	mov    0xc(%esp),%eax
    4f67:	29 f8                	sub    %edi,%eax
    4f69:	03 44 24 08          	add    0x8(%esp),%eax
    4f6d:	74 20                	je     4f8f <retrieve_status+0xf0>
    4f6f:	8b 53 04             	mov    0x4(%ebx),%edx
    4f72:	8b 52 48             	mov    0x48(%edx),%edx
    4f75:	85 d2                	test   %edx,%edx
    4f77:	89 54 24 1c          	mov    %edx,0x1c(%esp)
    4f7b:	74 1f                	je     4f9c <retrieve_status+0xfd>
    4f7d:	50                   	push   %eax
    4f7e:	8b 54 24 08          	mov    0x8(%esp),%edx
    4f82:	89 f9                	mov    %edi,%ecx
    4f84:	89 d8                	mov    %ebx,%eax
    4f86:	ff 54 24 20          	call   *0x20(%esp)
    4f8a:	5a                   	pop    %edx
    4f8b:	85 c0                	test   %eax,%eax
    4f8d:	74 10                	je     4f9f <retrieve_status+0x100>
    4f8f:	8b 5c 24 10          	mov    0x10(%esp),%ebx
    4f93:	81 4b 1c 00 01 00 00 	orl    $0x100,0x1c(%ebx)
    4f9a:	eb 40                	jmp    4fdc <retrieve_status+0x13d>
    4f9c:	c6 07 00             	movb   $0x0,(%edi)
    4f9f:	89 f8                	mov    %edi,%eax
    4fa1:	e8 fc ff ff ff       	call   4fa2 <retrieve_status+0x103>
			4fa2: R_386_PC32	strlen
    4fa6:	8d 4c 07 01          	lea    0x1(%edi,%eax,1),%ecx
    4faa:	8b 44 24 10          	mov    0x10(%esp),%eax
    4fae:	89 cd                	mov    %ecx,%ebp
    4fb0:	83 c1 07             	add    $0x7,%ecx
    4fb3:	83 e1 f8             	and    $0xfffffff8,%ecx
    4fb6:	2b 6c 24 0c          	sub    0xc(%esp),%ebp
    4fba:	03 68 10             	add    0x10(%eax),%ebp
    4fbd:	89 c8                	mov    %ecx,%eax
    4fbf:	2b 44 24 0c          	sub    0xc(%esp),%eax
    4fc3:	89 46 14             	mov    %eax,0x14(%esi)
    4fc6:	ff 44 24 14          	incl   0x14(%esp)
    4fca:	8b 44 24 18          	mov    0x18(%esp),%eax
    4fce:	39 44 24 14          	cmp    %eax,0x14(%esp)
    4fd2:	0f 82 31 ff ff ff    	jb     4f09 <retrieve_status+0x6a>
    4fd8:	8b 5c 24 10          	mov    0x10(%esp),%ebx
    4fdc:	85 ed                	test   %ebp,%ebp
    4fde:	74 03                	je     4fe3 <retrieve_status+0x144>
    4fe0:	89 6b 0c             	mov    %ebp,0xc(%ebx)
    4fe3:	8b 44 24 18          	mov    0x18(%esp),%eax
    4fe7:	89 43 14             	mov    %eax,0x14(%ebx)
    4fea:	83 c4 24             	add    $0x24,%esp
    4fed:	5b                   	pop    %ebx
    4fee:	5e                   	pop    %esi
    4fef:	5f                   	pop    %edi
    4ff0:	5d                   	pop    %ebp
    4ff1:	c3                   	ret    

00004ff2 <table_status>:
    4ff2:	55                   	push   %ebp
    4ff3:	89 c5                	mov    %eax,%ebp
    4ff5:	57                   	push   %edi
    4ff6:	bf fa ff ff ff       	mov    $0xfffffffa,%edi
    4ffb:	56                   	push   %esi
    4ffc:	53                   	push   %ebx
    4ffd:	83 ec 04             	sub    $0x4,%esp
    5000:	89 14 24             	mov    %edx,(%esp)
    5003:	e8 0c fa ff ff       	call   4a14 <find_device>
    5008:	85 c0                	test   %eax,%eax
    500a:	89 c6                	mov    %eax,%esi
    500c:	74 32                	je     5040 <table_status+0x4e>
    500e:	89 ea                	mov    %ebp,%edx
    5010:	e8 70 fa ff ff       	call   4a85 <__dev_status>
    5015:	85 c0                	test   %eax,%eax
    5017:	89 c7                	mov    %eax,%edi
    5019:	75 1e                	jne    5039 <table_status+0x47>
    501b:	89 f0                	mov    %esi,%eax
    501d:	e8 fc ff ff ff       	call   501e <table_status+0x2c>
			501e: R_386_PC32	dm_get_table
    5022:	85 c0                	test   %eax,%eax
    5024:	89 c3                	mov    %eax,%ebx
    5026:	74 11                	je     5039 <table_status+0x47>
    5028:	8b 0c 24             	mov    (%esp),%ecx
    502b:	89 ea                	mov    %ebp,%edx
    502d:	e8 6d fe ff ff       	call   4e9f <retrieve_status>
    5032:	89 d8                	mov    %ebx,%eax
    5034:	e8 fc ff ff ff       	call   5035 <table_status+0x43>
			5035: R_386_PC32	dm_table_put
    5039:	89 f0                	mov    %esi,%eax
    503b:	e8 fc ff ff ff       	call   503c <table_status+0x4a>
			503c: R_386_PC32	dm_put
    5040:	59                   	pop    %ecx
    5041:	89 f8                	mov    %edi,%eax
    5043:	5b                   	pop    %ebx
    5044:	5e                   	pop    %esi
    5045:	5f                   	pop    %edi
    5046:	5d                   	pop    %ebp
    5047:	c3                   	ret    

00005048 <table_deps>:
    5048:	55                   	push   %ebp
    5049:	89 d5                	mov    %edx,%ebp
    504b:	57                   	push   %edi
    504c:	56                   	push   %esi
    504d:	53                   	push   %ebx
    504e:	89 c3                	mov    %eax,%ebx
    5050:	83 ec 14             	sub    $0x14,%esp
    5053:	e8 bc f9 ff ff       	call   4a14 <find_device>
    5058:	85 c0                	test   %eax,%eax
    505a:	89 44 24 04          	mov    %eax,0x4(%esp)
    505e:	c7 44 24 08 fa ff ff 	movl   $0xfffffffa,0x8(%esp)
    5065:	ff 
    5066:	0f 84 ef 00 00 00    	je     515b <table_deps+0x113>
    506c:	89 da                	mov    %ebx,%edx
    506e:	e8 12 fa ff ff       	call   4a85 <__dev_status>
    5073:	85 c0                	test   %eax,%eax
    5075:	89 44 24 08          	mov    %eax,0x8(%esp)
    5079:	0f 85 d3 00 00 00    	jne    5152 <table_deps+0x10a>
    507f:	8b 44 24 04          	mov    0x4(%esp),%eax
    5083:	e8 fc ff ff ff       	call   5084 <table_deps+0x3c>
			5084: R_386_PC32	dm_get_table
    5088:	85 c0                	test   %eax,%eax
    508a:	89 c7                	mov    %eax,%edi
    508c:	0f 84 c0 00 00 00    	je     5152 <table_deps+0x10a>
    5092:	8d b3 3f 01 00 00    	lea    0x13f(%ebx),%esi
    5098:	89 e8                	mov    %ebp,%eax
    509a:	83 e6 f8             	and    $0xfffffff8,%esi
    509d:	29 de                	sub    %ebx,%esi
    509f:	29 f0                	sub    %esi,%eax
    50a1:	39 ee                	cmp    %ebp,%esi
    50a3:	0f 43 44 24 08       	cmovae 0x8(%esp),%eax
    50a8:	89 73 10             	mov    %esi,0x10(%ebx)
    50ab:	89 44 24 10          	mov    %eax,0x10(%esp)
    50af:	89 f8                	mov    %edi,%eax
    50b1:	e8 fc ff ff ff       	call   50b2 <table_deps+0x6a>
			50b2: R_386_PC32	dm_table_get_devices
    50b6:	31 d2                	xor    %edx,%edx
    50b8:	8b 28                	mov    (%eax),%ebp
    50ba:	eb 05                	jmp    50c1 <table_deps+0x79>
    50bc:	8b 6d 00             	mov    0x0(%ebp),%ebp
    50bf:	89 c2                	mov    %eax,%edx
    50c1:	8b 45 00             	mov    0x0(%ebp),%eax
    50c4:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    50c8:	89 f8                	mov    %edi,%eax
    50ca:	89 14 24             	mov    %edx,(%esp)
    50cd:	e8 fc ff ff ff       	call   50ce <table_deps+0x86>
			50ce: R_386_PC32	dm_table_get_devices
    50d2:	8b 14 24             	mov    (%esp),%edx
    50d5:	39 c5                	cmp    %eax,%ebp
    50d7:	8d 42 01             	lea    0x1(%edx),%eax
    50da:	75 e0                	jne    50bc <table_deps+0x74>
    50dc:	c1 e0 03             	shl    $0x3,%eax
    50df:	39 44 24 10          	cmp    %eax,0x10(%esp)
    50e3:	89 44 24 0c          	mov    %eax,0xc(%esp)
    50e7:	73 09                	jae    50f2 <table_deps+0xaa>
    50e9:	81 4b 1c 00 01 00 00 	orl    $0x100,0x1c(%ebx)
    50f0:	eb 59                	jmp    514b <table_deps+0x103>
    50f2:	8d 34 33             	lea    (%ebx,%esi,1),%esi
    50f5:	89 f8                	mov    %edi,%eax
    50f7:	89 16                	mov    %edx,(%esi)
    50f9:	e8 fc ff ff ff       	call   50fa <table_deps+0xb2>
			50fa: R_386_PC32	dm_table_get_devices
    50fe:	8b 28                	mov    (%eax),%ebp
    5100:	eb 2d                	jmp    512f <table_deps+0xe7>
    5102:	8b 45 0c             	mov    0xc(%ebp),%eax
    5105:	8b 10                	mov    (%eax),%edx
    5107:	c7 46 0c 00 00 00 00 	movl   $0x0,0xc(%esi)
    510e:	89 d0                	mov    %edx,%eax
    5110:	0f b6 ca             	movzbl %dl,%ecx
    5113:	c1 e8 14             	shr    $0x14,%eax
    5116:	81 e2 00 ff 0f 00    	and    $0xfff00,%edx
    511c:	c1 e0 08             	shl    $0x8,%eax
    511f:	09 c8                	or     %ecx,%eax
    5121:	c1 e2 0c             	shl    $0xc,%edx
    5124:	09 d0                	or     %edx,%eax
    5126:	89 46 08             	mov    %eax,0x8(%esi)
    5129:	8b 6d 00             	mov    0x0(%ebp),%ebp
    512c:	83 c6 08             	add    $0x8,%esi
    512f:	8b 45 00             	mov    0x0(%ebp),%eax
    5132:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    5136:	89 f8                	mov    %edi,%eax
    5138:	e8 fc ff ff ff       	call   5139 <table_deps+0xf1>
			5139: R_386_PC32	dm_table_get_devices
    513d:	39 c5                	cmp    %eax,%ebp
    513f:	75 c1                	jne    5102 <table_deps+0xba>
    5141:	8b 44 24 0c          	mov    0xc(%esp),%eax
    5145:	03 43 10             	add    0x10(%ebx),%eax
    5148:	89 43 0c             	mov    %eax,0xc(%ebx)
    514b:	89 f8                	mov    %edi,%eax
    514d:	e8 fc ff ff ff       	call   514e <table_deps+0x106>
			514e: R_386_PC32	dm_table_put
    5152:	8b 44 24 04          	mov    0x4(%esp),%eax
    5156:	e8 fc ff ff ff       	call   5157 <table_deps+0x10f>
			5157: R_386_PC32	dm_put
    515b:	8b 44 24 08          	mov    0x8(%esp),%eax
    515f:	83 c4 14             	add    $0x14,%esp
    5162:	5b                   	pop    %ebx
    5163:	5e                   	pop    %esi
    5164:	5f                   	pop    %edi
    5165:	5d                   	pop    %ebp
    5166:	c3                   	ret    

00005167 <list_devices>:
    5167:	55                   	push   %ebp
    5168:	31 ed                	xor    %ebp,%ebp
    516a:	57                   	push   %edi
    516b:	bf 38 00 00 00       	mov    $0x38,%edi
			516c: R_386_32	.bss
    5170:	56                   	push   %esi
    5171:	89 c6                	mov    %eax,%esi
    5173:	53                   	push   %ebx
    5174:	b8 a8 01 00 00       	mov    $0x1a8,%eax
			5175: R_386_32	.data
    5179:	83 ec 08             	sub    $0x8,%esp
    517c:	89 54 24 04          	mov    %edx,0x4(%esp)
    5180:	e8 fc ff ff ff       	call   5181 <list_devices+0x1a>
			5181: R_386_PC32	down_write
    5185:	89 fa                	mov    %edi,%edx
    5187:	8b 1a                	mov    (%edx),%ebx
    5189:	eb 14                	jmp    519f <list_devices+0x38>
    518b:	8b 43 10             	mov    0x10(%ebx),%eax
    518e:	89 14 24             	mov    %edx,(%esp)
    5191:	e8 fc ff ff ff       	call   5192 <list_devices+0x2b>
			5192: R_386_PC32	strlen
    5196:	8b 1b                	mov    (%ebx),%ebx
    5198:	8b 14 24             	mov    (%esp),%edx
    519b:	8d 6c 05 14          	lea    0x14(%ebp,%eax,1),%ebp
    519f:	8b 03                	mov    (%ebx),%eax
    51a1:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    51a5:	39 d3                	cmp    %edx,%ebx
    51a7:	75 e2                	jne    518b <list_devices+0x24>
    51a9:	8d 53 08             	lea    0x8(%ebx),%edx
    51ac:	81 fa 38 02 00 00    	cmp    $0x238,%edx
			51ae: R_386_32	.bss
    51b2:	75 d3                	jne    5187 <list_devices+0x20>
    51b4:	8d 86 3f 01 00 00    	lea    0x13f(%esi),%eax
    51ba:	31 d2                	xor    %edx,%edx
    51bc:	83 e0 f8             	and    $0xfffffff8,%eax
    51bf:	29 f0                	sub    %esi,%eax
    51c1:	89 46 10             	mov    %eax,0x10(%esi)
    51c4:	8b 4c 24 04          	mov    0x4(%esp),%ecx
    51c8:	29 c1                	sub    %eax,%ecx
    51ca:	3b 44 24 04          	cmp    0x4(%esp),%eax
    51ce:	0f 42 d1             	cmovb  %ecx,%edx
    51d1:	39 ea                	cmp    %ebp,%edx
    51d3:	73 0c                	jae    51e1 <list_devices+0x7a>
    51d5:	81 4e 1c 00 01 00 00 	orl    $0x100,0x1c(%esi)
    51dc:	e9 93 00 00 00       	jmp    5274 <list_devices+0x10d>
    51e1:	8d 1c 06             	lea    (%esi,%eax,1),%ebx
    51e4:	01 c5                	add    %eax,%ebp
    51e6:	89 6e 0c             	mov    %ebp,0xc(%esi)
    51e9:	31 c0                	xor    %eax,%eax
    51eb:	c7 03 00 00 00 00    	movl   $0x0,(%ebx)
    51f1:	c7 43 04 00 00 00 00 	movl   $0x0,0x4(%ebx)
    51f8:	8b 37                	mov    (%edi),%esi
    51fa:	eb 63                	jmp    525f <list_devices+0xf8>
    51fc:	85 c0                	test   %eax,%eax
    51fe:	74 07                	je     5207 <list_devices+0xa0>
    5200:	89 da                	mov    %ebx,%edx
    5202:	29 c2                	sub    %eax,%edx
    5204:	89 50 08             	mov    %edx,0x8(%eax)
    5207:	8b 46 18             	mov    0x18(%esi),%eax
    520a:	8d 6b 0c             	lea    0xc(%ebx),%ebp
    520d:	e8 fc ff ff ff       	call   520e <list_devices+0xa7>
			520e: R_386_PC32	dm_disk
    5212:	8b 90 40 01 00 00    	mov    0x140(%eax),%edx
    5218:	c7 43 04 00 00 00 00 	movl   $0x0,0x4(%ebx)
    521f:	c7 43 08 00 00 00 00 	movl   $0x0,0x8(%ebx)
    5226:	89 d0                	mov    %edx,%eax
    5228:	0f b6 ca             	movzbl %dl,%ecx
    522b:	c1 e8 14             	shr    $0x14,%eax
    522e:	81 e2 00 ff 0f 00    	and    $0xfff00,%edx
    5234:	c1 e0 08             	shl    $0x8,%eax
    5237:	09 c8                	or     %ecx,%eax
    5239:	c1 e2 0c             	shl    $0xc,%edx
    523c:	09 d0                	or     %edx,%eax
    523e:	89 03                	mov    %eax,(%ebx)
    5240:	8b 56 10             	mov    0x10(%esi),%edx
    5243:	89 e8                	mov    %ebp,%eax
    5245:	e8 fc ff ff ff       	call   5246 <list_devices+0xdf>
			5246: R_386_PC32	strcpy
    524a:	8b 46 10             	mov    0x10(%esi),%eax
    524d:	e8 fc ff ff ff       	call   524e <list_devices+0xe7>
			524e: R_386_PC32	strlen
    5252:	8b 36                	mov    (%esi),%esi
    5254:	8d 54 05 08          	lea    0x8(%ebp,%eax,1),%edx
    5258:	89 d8                	mov    %ebx,%eax
    525a:	89 d3                	mov    %edx,%ebx
    525c:	83 e3 f8             	and    $0xfffffff8,%ebx
    525f:	8b 16                	mov    (%esi),%edx
    5261:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    5265:	39 fe                	cmp    %edi,%esi
    5267:	75 93                	jne    51fc <list_devices+0x95>
    5269:	83 c7 08             	add    $0x8,%edi
    526c:	81 ff 38 02 00 00    	cmp    $0x238,%edi
			526e: R_386_32	.bss
    5272:	75 84                	jne    51f8 <list_devices+0x91>
    5274:	b8 a8 01 00 00       	mov    $0x1a8,%eax
			5275: R_386_32	.data
    5279:	e8 fc ff ff ff       	call   527a <list_devices+0x113>
			527a: R_386_PC32	up_write
    527e:	31 c0                	xor    %eax,%eax
    5280:	5b                   	pop    %ebx
    5281:	5e                   	pop    %esi
    5282:	5b                   	pop    %ebx
    5283:	5e                   	pop    %esi
    5284:	5f                   	pop    %edi
    5285:	5d                   	pop    %ebp
    5286:	c3                   	ret    

00005287 <table_clear>:
    5287:	56                   	push   %esi
    5288:	89 c6                	mov    %eax,%esi
    528a:	53                   	push   %ebx
    528b:	b8 a8 01 00 00       	mov    $0x1a8,%eax
			528c: R_386_32	.data
    5290:	e8 fc ff ff ff       	call   5291 <table_clear+0xa>
			5291: R_386_PC32	down_write
    5295:	89 f0                	mov    %esi,%eax
    5297:	e8 13 f7 ff ff       	call   49af <__find_device_hash_cell>
    529c:	85 c0                	test   %eax,%eax
    529e:	89 c3                	mov    %eax,%ebx
    52a0:	75 1c                	jne    52be <table_clear+0x37>
    52a2:	68 a4 11 00 00       	push   $0x11a4
			52a3: R_386_32	.rodata.str1.1
    52a7:	be fa ff ff ff       	mov    $0xfffffffa,%esi
    52ac:	e8 fc ff ff ff       	call   52ad <table_clear+0x26>
			52ad: R_386_PC32	printk
    52b1:	b8 a8 01 00 00       	mov    $0x1a8,%eax
			52b2: R_386_32	.data
    52b6:	e8 fc ff ff ff       	call   52b7 <table_clear+0x30>
			52b7: R_386_PC32	up_write
    52bb:	58                   	pop    %eax
    52bc:	eb 37                	jmp    52f5 <table_clear+0x6e>
    52be:	8b 40 1c             	mov    0x1c(%eax),%eax
    52c1:	85 c0                	test   %eax,%eax
    52c3:	74 0c                	je     52d1 <table_clear+0x4a>
    52c5:	e8 fc ff ff ff       	call   52c6 <table_clear+0x3f>
			52c6: R_386_PC32	dm_table_destroy
    52ca:	c7 43 1c 00 00 00 00 	movl   $0x0,0x1c(%ebx)
    52d1:	83 66 1c bf          	andl   $0xffffffbf,0x1c(%esi)
    52d5:	89 f2                	mov    %esi,%edx
    52d7:	8b 43 18             	mov    0x18(%ebx),%eax
    52da:	e8 a6 f7 ff ff       	call   4a85 <__dev_status>
    52df:	8b 5b 18             	mov    0x18(%ebx),%ebx
    52e2:	89 c6                	mov    %eax,%esi
    52e4:	b8 a8 01 00 00       	mov    $0x1a8,%eax
			52e5: R_386_32	.data
    52e9:	e8 fc ff ff ff       	call   52ea <table_clear+0x63>
			52ea: R_386_PC32	up_write
    52ee:	89 d8                	mov    %ebx,%eax
    52f0:	e8 fc ff ff ff       	call   52f1 <table_clear+0x6a>
			52f1: R_386_PC32	dm_put
    52f5:	89 f0                	mov    %esi,%eax
    52f7:	5b                   	pop    %ebx
    52f8:	5e                   	pop    %esi
    52f9:	c3                   	ret    

000052fa <table_load>:
    52fa:	55                   	push   %ebp
    52fb:	57                   	push   %edi
    52fc:	89 d7                	mov    %edx,%edi
    52fe:	56                   	push   %esi
    52ff:	53                   	push   %ebx
    5300:	89 c3                	mov    %eax,%ebx
    5302:	83 ec 10             	sub    $0x10,%esp
    5305:	e8 0a f7 ff ff       	call   4a14 <find_device>
    530a:	ba fa ff ff ff       	mov    $0xfffffffa,%edx
    530f:	85 c0                	test   %eax,%eax
    5311:	89 c6                	mov    %eax,%esi
    5313:	0f 84 d1 01 00 00    	je     54ea <table_load+0x1f0>
    5319:	8b 43 1c             	mov    0x1c(%ebx),%eax
    531c:	8b 4b 14             	mov    0x14(%ebx),%ecx
    531f:	83 e0 01             	and    $0x1,%eax
    5322:	83 f8 01             	cmp    $0x1,%eax
    5325:	19 d2                	sbb    %edx,%edx
    5327:	83 e2 02             	and    $0x2,%edx
    532a:	42                   	inc    %edx
    532b:	8d 44 24 0c          	lea    0xc(%esp),%eax
    532f:	56                   	push   %esi
    5330:	e8 fc ff ff ff       	call   5331 <table_load+0x37>
			5331: R_386_PC32	dm_table_create
    5335:	59                   	pop    %ecx
    5336:	85 c0                	test   %eax,%eax
    5338:	89 c2                	mov    %eax,%edx
    533a:	0f 85 9d 01 00 00    	jne    54dd <table_load+0x1e3>
    5340:	8b 44 24 0c          	mov    0xc(%esp),%eax
    5344:	8d 3c 3b             	lea    (%ebx,%edi,1),%edi
    5347:	89 44 24 04          	mov    %eax,0x4(%esp)
    534b:	8b 43 10             	mov    0x10(%ebx),%eax
    534e:	89 7c 24 08          	mov    %edi,0x8(%esp)
    5352:	83 7b 14 00          	cmpl   $0x0,0x14(%ebx)
    5356:	74 08                	je     5360 <table_load+0x66>
    5358:	89 da                	mov    %ebx,%edx
    535a:	31 ed                	xor    %ebp,%ebp
    535c:	89 f7                	mov    %esi,%edi
    535e:	eb 42                	jmp    53a2 <table_load+0xa8>
    5360:	68 f1 11 00 00       	push   $0x11f1
			5361: R_386_32	.rodata.str1.1
    5365:	eb 28                	jmp    538f <table_load+0x95>
    5367:	8d 34 02             	lea    (%edx,%eax,1),%esi
    536a:	83 c2 28             	add    $0x28,%edx
    536d:	39 d6                	cmp    %edx,%esi
    536f:	72 17                	jb     5388 <table_load+0x8e>
    5371:	8d 4e 28             	lea    0x28(%esi),%ecx
    5374:	89 c8                	mov    %ecx,%eax
    5376:	eb 0a                	jmp    5382 <table_load+0x88>
    5378:	80 38 00             	cmpb   $0x0,(%eax)
    537b:	0f 84 73 01 00 00    	je     54f4 <table_load+0x1fa>
    5381:	40                   	inc    %eax
    5382:	3b 44 24 08          	cmp    0x8(%esp),%eax
    5386:	72 f0                	jb     5378 <table_load+0x7e>
    5388:	89 fe                	mov    %edi,%esi
    538a:	68 30 12 00 00       	push   $0x1230
			538b: R_386_32	.rodata.str1.1
    538f:	e8 fc ff ff ff       	call   5390 <table_load+0x96>
			5390: R_386_PC32	printk
    5394:	ba ea ff ff ff       	mov    $0xffffffea,%edx
    5399:	58                   	pop    %eax
    539a:	eb 35                	jmp    53d1 <table_load+0xd7>
    539c:	8b 46 14             	mov    0x14(%esi),%eax
    539f:	45                   	inc    %ebp
    53a0:	89 f2                	mov    %esi,%edx
    53a2:	3b 6b 14             	cmp    0x14(%ebx),%ebp
    53a5:	72 c0                	jb     5367 <table_load+0x6d>
    53a7:	8b 44 24 04          	mov    0x4(%esp),%eax
    53ab:	89 fe                	mov    %edi,%esi
    53ad:	e8 fc ff ff ff       	call   53ae <table_load+0xb4>
			53ae: R_386_PC32	dm_table_set_type
    53b2:	85 c0                	test   %eax,%eax
    53b4:	89 c2                	mov    %eax,%edx
    53b6:	74 0a                	je     53c2 <table_load+0xc8>
    53b8:	68 97 12 00 00       	push   $0x1297
			53b9: R_386_32	.rodata.str1.1
    53bd:	e9 5e 01 00 00       	jmp    5520 <table_load+0x226>
    53c2:	8b 44 24 04          	mov    0x4(%esp),%eax
    53c6:	e8 fc ff ff ff       	call   53c7 <table_load+0xcd>
			53c7: R_386_PC32	dm_table_complete
    53cb:	85 c0                	test   %eax,%eax
    53cd:	89 c2                	mov    %eax,%edx
    53cf:	74 0e                	je     53df <table_load+0xe5>
    53d1:	8b 44 24 0c          	mov    0xc(%esp),%eax
    53d5:	89 14 24             	mov    %edx,(%esp)
    53d8:	e8 fc ff ff ff       	call   53d9 <table_load+0xdf>
			53d9: R_386_PC32	dm_table_destroy
    53dd:	eb 60                	jmp    543f <table_load+0x145>
    53df:	8b 44 24 0c          	mov    0xc(%esp),%eax
    53e3:	e8 fc ff ff ff       	call   53e4 <table_load+0xea>
			53e4: R_386_PC32	dm_table_get_devices
    53e8:	8b 10                	mov    (%eax),%edx
    53ea:	eb 27                	jmp    5413 <table_load+0x119>
    53ec:	8b 52 0c             	mov    0xc(%edx),%edx
    53ef:	8b 52 50             	mov    0x50(%edx),%edx
    53f2:	83 ba c0 01 00 00 00 	cmpl   $0x0,0x1c0(%edx)
    53f9:	74 16                	je     5411 <table_load+0x117>
    53fb:	89 f0                	mov    %esi,%eax
    53fd:	e8 fc ff ff ff       	call   53fe <table_load+0x104>
			53fe: R_386_PC32	dm_disk
    5402:	31 d2                	xor    %edx,%edx
    5404:	e8 fc ff ff ff       	call   5405 <table_load+0x10b>
			5405: R_386_PC32	blk_integrity_register
    5409:	85 c0                	test   %eax,%eax
    540b:	89 c2                	mov    %eax,%edx
    540d:	74 38                	je     5447 <table_load+0x14d>
    540f:	eb 0e                	jmp    541f <table_load+0x125>
    5411:	89 ca                	mov    %ecx,%edx
    5413:	8b 0a                	mov    (%edx),%ecx
    5415:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    5419:	39 c2                	cmp    %eax,%edx
    541b:	75 cf                	jne    53ec <table_load+0xf2>
    541d:	eb 28                	jmp    5447 <table_load+0x14d>
    541f:	89 f0                	mov    %esi,%eax
    5421:	89 14 24             	mov    %edx,(%esp)
    5424:	e8 fc ff ff ff       	call   5425 <table_load+0x12b>
			5425: R_386_PC32	dm_device_name
    5429:	50                   	push   %eax
    542a:	68 ca 12 00 00       	push   $0x12ca
			542b: R_386_32	.rodata.str1.1
    542f:	e8 fc ff ff ff       	call   5430 <table_load+0x136>
			5430: R_386_PC32	printk
    5434:	8b 44 24 14          	mov    0x14(%esp),%eax
    5438:	e8 fc ff ff ff       	call   5439 <table_load+0x13f>
			5439: R_386_PC32	dm_table_destroy
    543d:	5f                   	pop    %edi
    543e:	5d                   	pop    %ebp
    543f:	8b 14 24             	mov    (%esp),%edx
    5442:	e9 96 00 00 00       	jmp    54dd <table_load+0x1e3>
    5447:	8b 44 24 0c          	mov    0xc(%esp),%eax
    544b:	e8 fc ff ff ff       	call   544c <table_load+0x152>
			544c: R_386_PC32	dm_table_alloc_md_mempools
    5450:	85 c0                	test   %eax,%eax
    5452:	74 1a                	je     546e <table_load+0x174>
    5454:	68 0e 13 00 00       	push   $0x130e
			5455: R_386_32	.rodata.str1.1
    5459:	89 44 24 04          	mov    %eax,0x4(%esp)
    545d:	e8 fc ff ff ff       	call   545e <table_load+0x164>
			545e: R_386_PC32	printk
    5462:	8b 44 24 10          	mov    0x10(%esp),%eax
    5466:	e8 fc ff ff ff       	call   5467 <table_load+0x16d>
			5467: R_386_PC32	dm_table_destroy
    546b:	5b                   	pop    %ebx
    546c:	eb d1                	jmp    543f <table_load+0x145>
    546e:	b8 a8 01 00 00       	mov    $0x1a8,%eax
			546f: R_386_32	.data
    5473:	e8 fc ff ff ff       	call   5474 <table_load+0x17a>
			5474: R_386_PC32	down_write
    5478:	89 f0                	mov    %esi,%eax
    547a:	e8 fc ff ff ff       	call   547b <table_load+0x181>
			547b: R_386_PC32	dm_get_mdptr
    547f:	85 c0                	test   %eax,%eax
    5481:	89 c5                	mov    %eax,%ebp
    5483:	74 07                	je     548c <table_load+0x192>
    5485:	8b 78 18             	mov    0x18(%eax),%edi
    5488:	39 f7                	cmp    %esi,%edi
    548a:	74 25                	je     54b1 <table_load+0x1b7>
    548c:	68 53 13 00 00       	push   $0x1353
			548d: R_386_32	.rodata.str1.1
    5491:	e8 fc ff ff ff       	call   5492 <table_load+0x198>
			5492: R_386_PC32	printk
    5496:	8b 44 24 10          	mov    0x10(%esp),%eax
    549a:	e8 fc ff ff ff       	call   549b <table_load+0x1a1>
			549b: R_386_PC32	dm_table_destroy
    549f:	b8 a8 01 00 00       	mov    $0x1a8,%eax
			54a0: R_386_32	.data
    54a4:	e8 fc ff ff ff       	call   54a5 <table_load+0x1ab>
			54a5: R_386_PC32	up_write
    54a9:	ba fa ff ff ff       	mov    $0xfffffffa,%edx
    54ae:	59                   	pop    %ecx
    54af:	eb 2c                	jmp    54dd <table_load+0x1e3>
    54b1:	8b 40 1c             	mov    0x1c(%eax),%eax
    54b4:	85 c0                	test   %eax,%eax
    54b6:	74 05                	je     54bd <table_load+0x1c3>
    54b8:	e8 fc ff ff ff       	call   54b9 <table_load+0x1bf>
			54b9: R_386_PC32	dm_table_destroy
    54bd:	8b 44 24 0c          	mov    0xc(%esp),%eax
    54c1:	89 45 1c             	mov    %eax,0x1c(%ebp)
    54c4:	b8 a8 01 00 00       	mov    $0x1a8,%eax
			54c5: R_386_32	.data
    54c9:	e8 fc ff ff ff       	call   54ca <table_load+0x1d0>
			54ca: R_386_PC32	up_write
    54ce:	89 da                	mov    %ebx,%edx
    54d0:	89 f8                	mov    %edi,%eax
    54d2:	83 4b 1c 40          	orl    $0x40,0x1c(%ebx)
    54d6:	e8 aa f5 ff ff       	call   4a85 <__dev_status>
    54db:	89 c2                	mov    %eax,%edx
    54dd:	89 f0                	mov    %esi,%eax
    54df:	89 14 24             	mov    %edx,(%esp)
    54e2:	e8 fc ff ff ff       	call   54e3 <table_load+0x1e9>
			54e3: R_386_PC32	dm_put
    54e7:	8b 14 24             	mov    (%esp),%edx
    54ea:	83 c4 10             	add    $0x10,%esp
    54ed:	89 d0                	mov    %edx,%eax
    54ef:	5b                   	pop    %ebx
    54f0:	5e                   	pop    %esi
    54f1:	5f                   	pop    %edi
    54f2:	5d                   	pop    %ebp
    54f3:	c3                   	ret    
    54f4:	51                   	push   %ecx
    54f5:	ff 76 0c             	pushl  0xc(%esi)
    54f8:	ff 76 08             	pushl  0x8(%esi)
    54fb:	ff 76 04             	pushl  0x4(%esi)
    54fe:	ff 36                	pushl  (%esi)
    5500:	8b 44 24 18          	mov    0x18(%esp),%eax
    5504:	8d 56 18             	lea    0x18(%esi),%edx
    5507:	e8 fc ff ff ff       	call   5508 <table_load+0x20e>
			5508: R_386_PC32	dm_table_add_target
    550c:	83 c4 14             	add    $0x14,%esp
    550f:	85 c0                	test   %eax,%eax
    5511:	89 c2                	mov    %eax,%edx
    5513:	0f 84 83 fe ff ff    	je     539c <table_load+0xa2>
    5519:	89 fe                	mov    %edi,%esi
    551b:	68 60 12 00 00       	push   $0x1260
			551c: R_386_32	.rodata.str1.1
    5520:	89 54 24 04          	mov    %edx,0x4(%esp)
    5524:	e8 fc ff ff ff       	call   5525 <table_load+0x22b>
			5525: R_386_PC32	printk
    5529:	5a                   	pop    %edx
    552a:	8b 14 24             	mov    (%esp),%edx
    552d:	e9 9f fe ff ff       	jmp    53d1 <table_load+0xd7>

00005532 <dev_wait>:
    5532:	55                   	push   %ebp
    5533:	57                   	push   %edi
    5534:	bf fa ff ff ff       	mov    $0xfffffffa,%edi
    5539:	56                   	push   %esi
    553a:	89 c6                	mov    %eax,%esi
    553c:	53                   	push   %ebx
    553d:	83 ec 04             	sub    $0x4,%esp
    5540:	89 14 24             	mov    %edx,(%esp)
    5543:	e8 cc f4 ff ff       	call   4a14 <find_device>
    5548:	85 c0                	test   %eax,%eax
    554a:	89 c5                	mov    %eax,%ebp
    554c:	74 44                	je     5592 <dev_wait+0x60>
    554e:	8b 56 20             	mov    0x20(%esi),%edx
    5551:	66 bf 00 fe          	mov    $0xfe00,%di
    5555:	e8 fc ff ff ff       	call   5556 <dev_wait+0x24>
			5556: R_386_PC32	dm_wait_event
    555a:	85 c0                	test   %eax,%eax
    555c:	75 2d                	jne    558b <dev_wait+0x59>
    555e:	89 f2                	mov    %esi,%edx
    5560:	89 e8                	mov    %ebp,%eax
    5562:	e8 1e f5 ff ff       	call   4a85 <__dev_status>
    5567:	85 c0                	test   %eax,%eax
    5569:	89 c7                	mov    %eax,%edi
    556b:	75 1e                	jne    558b <dev_wait+0x59>
    556d:	89 e8                	mov    %ebp,%eax
    556f:	e8 fc ff ff ff       	call   5570 <dev_wait+0x3e>
			5570: R_386_PC32	dm_get_table
    5574:	85 c0                	test   %eax,%eax
    5576:	89 c3                	mov    %eax,%ebx
    5578:	74 11                	je     558b <dev_wait+0x59>
    557a:	8b 0c 24             	mov    (%esp),%ecx
    557d:	89 f2                	mov    %esi,%edx
    557f:	e8 1b f9 ff ff       	call   4e9f <retrieve_status>
    5584:	89 d8                	mov    %ebx,%eax
    5586:	e8 fc ff ff ff       	call   5587 <dev_wait+0x55>
			5587: R_386_PC32	dm_table_put
    558b:	89 e8                	mov    %ebp,%eax
    558d:	e8 fc ff ff ff       	call   558e <dev_wait+0x5c>
			558e: R_386_PC32	dm_put
    5592:	5b                   	pop    %ebx
    5593:	89 f8                	mov    %edi,%eax
    5595:	5b                   	pop    %ebx
    5596:	5e                   	pop    %esi
    5597:	5f                   	pop    %edi
    5598:	5d                   	pop    %ebp
    5599:	c3                   	ret    

0000559a <dev_suspend>:
    559a:	55                   	push   %ebp
    559b:	57                   	push   %edi
    559c:	56                   	push   %esi
    559d:	53                   	push   %ebx
    559e:	89 c3                	mov    %eax,%ebx
    55a0:	f6 40 1c 02          	testb  $0x2,0x1c(%eax)
    55a4:	74 54                	je     55fa <dev_suspend+0x60>
    55a6:	e8 69 f4 ff ff       	call   4a14 <find_device>
    55ab:	bd fa ff ff ff       	mov    $0xfffffffa,%ebp
    55b0:	85 c0                	test   %eax,%eax
    55b2:	89 c6                	mov    %eax,%esi
    55b4:	0f 84 38 01 00 00    	je     56f2 <dev_suspend+0x158>
    55ba:	8b 43 1c             	mov    0x1c(%ebx),%eax
    55bd:	89 c7                	mov    %eax,%edi
    55bf:	c1 ef 0a             	shr    $0xa,%edi
    55c2:	83 f7 01             	xor    $0x1,%edi
    55c5:	83 e7 01             	and    $0x1,%edi
    55c8:	89 fa                	mov    %edi,%edx
    55ca:	83 ca 02             	or     $0x2,%edx
    55cd:	f6 c4 08             	test   $0x8,%ah
    55d0:	89 f0                	mov    %esi,%eax
    55d2:	0f 45 fa             	cmovne %edx,%edi
    55d5:	e8 fc ff ff ff       	call   55d6 <dev_suspend+0x3c>
			55d6: R_386_PC32	dm_suspended
    55da:	85 c0                	test   %eax,%eax
    55dc:	0f 85 fe 00 00 00    	jne    56e0 <dev_suspend+0x146>
    55e2:	89 fa                	mov    %edi,%edx
    55e4:	89 f0                	mov    %esi,%eax
    55e6:	e8 fc ff ff ff       	call   55e7 <dev_suspend+0x4d>
			55e7: R_386_PC32	dm_suspend
    55eb:	85 c0                	test   %eax,%eax
    55ed:	89 c5                	mov    %eax,%ebp
    55ef:	0f 85 f6 00 00 00    	jne    56eb <dev_suspend+0x151>
    55f5:	e9 e6 00 00 00       	jmp    56e0 <dev_suspend+0x146>
    55fa:	b8 a8 01 00 00       	mov    $0x1a8,%eax
			55fb: R_386_32	.data
    55ff:	e8 fc ff ff ff       	call   5600 <dev_suspend+0x66>
			5600: R_386_PC32	down_write
    5604:	89 d8                	mov    %ebx,%eax
    5606:	e8 a4 f3 ff ff       	call   49af <__find_device_hash_cell>
    560b:	85 c0                	test   %eax,%eax
    560d:	75 1f                	jne    562e <dev_suspend+0x94>
    560f:	68 a4 11 00 00       	push   $0x11a4
			5610: R_386_32	.rodata.str1.1
    5614:	bd fa ff ff ff       	mov    $0xfffffffa,%ebp
    5619:	e8 fc ff ff ff       	call   561a <dev_suspend+0x80>
			561a: R_386_PC32	printk
    561e:	b8 a8 01 00 00       	mov    $0x1a8,%eax
			561f: R_386_32	.data
    5623:	e8 fc ff ff ff       	call   5624 <dev_suspend+0x8a>
			5624: R_386_PC32	up_write
    5628:	5e                   	pop    %esi
    5629:	e9 c4 00 00 00       	jmp    56f2 <dev_suspend+0x158>
    562e:	8b 78 1c             	mov    0x1c(%eax),%edi
    5631:	8b 70 18             	mov    0x18(%eax),%esi
    5634:	c7 40 1c 00 00 00 00 	movl   $0x0,0x1c(%eax)
    563b:	b8 a8 01 00 00       	mov    $0x1a8,%eax
			563c: R_386_32	.data
    5640:	83 63 1c bf          	andl   $0xffffffbf,0x1c(%ebx)
    5644:	e8 fc ff ff ff       	call   5645 <dev_suspend+0xab>
			5645: R_386_PC32	up_write
    5649:	85 ff                	test   %edi,%edi
    564b:	74 6c                	je     56b9 <dev_suspend+0x11f>
    564d:	8b 43 1c             	mov    0x1c(%ebx),%eax
    5650:	89 c5                	mov    %eax,%ebp
    5652:	c1 ed 0a             	shr    $0xa,%ebp
    5655:	83 f5 01             	xor    $0x1,%ebp
    5658:	83 e5 01             	and    $0x1,%ebp
    565b:	89 ea                	mov    %ebp,%edx
    565d:	83 ca 02             	or     $0x2,%edx
    5660:	f6 c4 08             	test   $0x8,%ah
    5663:	89 f0                	mov    %esi,%eax
    5665:	0f 45 ea             	cmovne %edx,%ebp
    5668:	e8 fc ff ff ff       	call   5669 <dev_suspend+0xcf>
			5669: R_386_PC32	dm_suspended
    566d:	85 c0                	test   %eax,%eax
    566f:	75 09                	jne    567a <dev_suspend+0xe0>
    5671:	89 ea                	mov    %ebp,%edx
    5673:	89 f0                	mov    %esi,%eax
    5675:	e8 fc ff ff ff       	call   5676 <dev_suspend+0xdc>
			5676: R_386_PC32	dm_suspend
    567a:	89 fa                	mov    %edi,%edx
    567c:	89 f0                	mov    %esi,%eax
    567e:	e8 fc ff ff ff       	call   567f <dev_suspend+0xe5>
			567f: R_386_PC32	dm_swap_table
    5683:	85 c0                	test   %eax,%eax
    5685:	89 c5                	mov    %eax,%ebp
    5687:	74 09                	je     5692 <dev_suspend+0xf8>
    5689:	89 f8                	mov    %edi,%eax
    568b:	e8 fc ff ff ff       	call   568c <dev_suspend+0xf2>
			568c: R_386_PC32	dm_table_destroy
    5690:	eb 59                	jmp    56eb <dev_suspend+0x151>
    5692:	89 f8                	mov    %edi,%eax
    5694:	e8 fc ff ff ff       	call   5695 <dev_suspend+0xfb>
			5695: R_386_PC32	dm_table_get_mode
    5699:	a8 02                	test   $0x2,%al
    569b:	74 0b                	je     56a8 <dev_suspend+0x10e>
    569d:	89 f0                	mov    %esi,%eax
    569f:	e8 fc ff ff ff       	call   56a0 <dev_suspend+0x106>
			56a0: R_386_PC32	dm_disk
    56a4:	31 d2                	xor    %edx,%edx
    56a6:	eb 0c                	jmp    56b4 <dev_suspend+0x11a>
    56a8:	89 f0                	mov    %esi,%eax
    56aa:	e8 fc ff ff ff       	call   56ab <dev_suspend+0x111>
			56ab: R_386_PC32	dm_disk
    56af:	ba 01 00 00 00       	mov    $0x1,%edx
    56b4:	e8 fc ff ff ff       	call   56b5 <dev_suspend+0x11b>
			56b5: R_386_PC32	set_disk_ro
    56b9:	89 f0                	mov    %esi,%eax
    56bb:	e8 fc ff ff ff       	call   56bc <dev_suspend+0x122>
			56bc: R_386_PC32	dm_suspended
    56c0:	85 c0                	test   %eax,%eax
    56c2:	74 0d                	je     56d1 <dev_suspend+0x137>
    56c4:	89 f0                	mov    %esi,%eax
    56c6:	e8 fc ff ff ff       	call   56c7 <dev_suspend+0x12d>
			56c7: R_386_PC32	dm_resume
    56cb:	85 c0                	test   %eax,%eax
    56cd:	89 c5                	mov    %eax,%ebp
    56cf:	75 1a                	jne    56eb <dev_suspend+0x151>
    56d1:	8b 4b 20             	mov    0x20(%ebx),%ecx
    56d4:	ba 02 00 00 00       	mov    $0x2,%edx
    56d9:	89 f0                	mov    %esi,%eax
    56db:	e8 fc ff ff ff       	call   56dc <dev_suspend+0x142>
			56dc: R_386_PC32	dm_kobject_uevent
    56e0:	89 da                	mov    %ebx,%edx
    56e2:	89 f0                	mov    %esi,%eax
    56e4:	e8 9c f3 ff ff       	call   4a85 <__dev_status>
    56e9:	89 c5                	mov    %eax,%ebp
    56eb:	89 f0                	mov    %esi,%eax
    56ed:	e8 fc ff ff ff       	call   56ee <dev_suspend+0x154>
			56ee: R_386_PC32	dm_put
    56f2:	89 e8                	mov    %ebp,%eax
    56f4:	5b                   	pop    %ebx
    56f5:	5e                   	pop    %esi
    56f6:	5f                   	pop    %edi
    56f7:	5d                   	pop    %ebp
    56f8:	c3                   	ret    

000056f9 <check_name>:
    56f9:	ba 2f 00 00 00       	mov    $0x2f,%edx
    56fe:	e8 fc ff ff ff       	call   56ff <check_name+0x6>
			56ff: R_386_PC32	strchr
    5703:	89 c2                	mov    %eax,%edx
    5705:	31 c0                	xor    %eax,%eax
    5707:	85 d2                	test   %edx,%edx
    5709:	74 10                	je     571b <check_name+0x22>
    570b:	68 9e 13 00 00       	push   $0x139e
			570c: R_386_32	.rodata.str1.1
    5710:	e8 fc ff ff ff       	call   5711 <check_name+0x18>
			5711: R_386_PC32	printk
    5715:	b8 ea ff ff ff       	mov    $0xffffffea,%eax
    571a:	5a                   	pop    %edx
    571b:	c3                   	ret    

0000571c <dev_rename>:
    571c:	55                   	push   %ebp
    571d:	57                   	push   %edi
    571e:	56                   	push   %esi
    571f:	53                   	push   %ebx
    5720:	89 c3                	mov    %eax,%ebx
    5722:	83 ec 08             	sub    $0x8,%esp
    5725:	8b 78 10             	mov    0x10(%eax),%edi
    5728:	01 c7                	add    %eax,%edi
    572a:	8d 80 31 01 00 00    	lea    0x131(%eax),%eax
    5730:	39 c7                	cmp    %eax,%edi
    5732:	72 1f                	jb     5753 <dev_rename+0x37>
    5734:	8d 14 13             	lea    (%ebx,%edx,1),%edx
    5737:	89 f8                	mov    %edi,%eax
    5739:	eb 06                	jmp    5741 <dev_rename+0x25>
    573b:	80 38 00             	cmpb   $0x0,(%eax)
    573e:	74 07                	je     5747 <dev_rename+0x2b>
    5740:	40                   	inc    %eax
    5741:	39 d0                	cmp    %edx,%eax
    5743:	72 f6                	jb     573b <dev_rename+0x1f>
    5745:	eb 0c                	jmp    5753 <dev_rename+0x37>
    5747:	89 f8                	mov    %edi,%eax
    5749:	e8 fc ff ff ff       	call   574a <dev_rename+0x2e>
			574a: R_386_PC32	strlen
    574e:	83 f8 7f             	cmp    $0x7f,%eax
    5751:	76 15                	jbe    5768 <dev_rename+0x4c>
    5753:	68 cc 13 00 00       	push   $0x13cc
			5754: R_386_32	.rodata.str1.1
    5758:	be ea ff ff ff       	mov    $0xffffffea,%esi
    575d:	e8 fc ff ff ff       	call   575e <dev_rename+0x42>
			575e: R_386_PC32	printk
    5762:	5f                   	pop    %edi
    5763:	e9 6e 01 00 00       	jmp    58d6 <dev_rename+0x1ba>
    5768:	89 f8                	mov    %edi,%eax
    576a:	e8 8a ff ff ff       	call   56f9 <check_name>
    576f:	85 c0                	test   %eax,%eax
    5771:	89 c6                	mov    %eax,%esi
    5773:	0f 85 5d 01 00 00    	jne    58d6 <dev_rename+0x1ba>
    5779:	8b 43 20             	mov    0x20(%ebx),%eax
    577c:	ba d0 00 00 00       	mov    $0xd0,%edx
    5781:	c7 43 0c 00 00 00 00 	movl   $0x0,0xc(%ebx)
    5788:	89 44 24 04          	mov    %eax,0x4(%esp)
    578c:	89 f8                	mov    %edi,%eax
    578e:	e8 fc ff ff ff       	call   578f <dev_rename+0x73>
			578f: R_386_PC32	kstrdup
    5793:	85 c0                	test   %eax,%eax
    5795:	89 c5                	mov    %eax,%ebp
    5797:	75 0a                	jne    57a3 <dev_rename+0x87>
    5799:	be f4 ff ff ff       	mov    $0xfffffff4,%esi
    579e:	e9 33 01 00 00       	jmp    58d6 <dev_rename+0x1ba>
    57a3:	83 c3 30             	add    $0x30,%ebx
    57a6:	b8 a8 01 00 00       	mov    $0x1a8,%eax
			57a7: R_386_32	.data
    57ab:	89 1c 24             	mov    %ebx,(%esp)
    57ae:	e8 fc ff ff ff       	call   57af <dev_rename+0x93>
			57af: R_386_PC32	down_write
    57b3:	89 f8                	mov    %edi,%eax
    57b5:	e8 99 f1 ff ff       	call   4953 <__get_name_cell>
    57ba:	85 c0                	test   %eax,%eax
    57bc:	89 c3                	mov    %eax,%ebx
    57be:	74 2f                	je     57ef <dev_rename+0xd3>
    57c0:	57                   	push   %edi
    57c1:	be f0 ff ff ff       	mov    $0xfffffff0,%esi
    57c6:	ff 74 24 04          	pushl  0x4(%esp)
    57ca:	68 10 14 00 00       	push   $0x1410
			57cb: R_386_32	.rodata.str1.1
    57cf:	e8 fc ff ff ff       	call   57d0 <dev_rename+0xb4>
			57d0: R_386_PC32	printk
    57d4:	8b 43 18             	mov    0x18(%ebx),%eax
    57d7:	e8 fc ff ff ff       	call   57d8 <dev_rename+0xbc>
			57d8: R_386_PC32	dm_put
    57dc:	b8 a8 01 00 00       	mov    $0x1a8,%eax
			57dd: R_386_32	.data
    57e1:	e8 fc ff ff ff       	call   57e2 <dev_rename+0xc6>
			57e2: R_386_PC32	up_write
    57e6:	89 e8                	mov    %ebp,%eax
    57e8:	e8 fc ff ff ff       	call   57e9 <dev_rename+0xcd>
			57e9: R_386_PC32	kfree
    57ed:	eb 33                	jmp    5822 <dev_rename+0x106>
    57ef:	8b 04 24             	mov    (%esp),%eax
    57f2:	e8 5c f1 ff ff       	call   4953 <__get_name_cell>
    57f7:	85 c0                	test   %eax,%eax
    57f9:	89 c3                	mov    %eax,%ebx
    57fb:	75 2d                	jne    582a <dev_rename+0x10e>
    57fd:	57                   	push   %edi
    57fe:	be fa ff ff ff       	mov    $0xfffffffa,%esi
    5803:	ff 74 24 04          	pushl  0x4(%esp)
    5807:	68 5f 14 00 00       	push   $0x145f
			5808: R_386_32	.rodata.str1.1
    580c:	e8 fc ff ff ff       	call   580d <dev_rename+0xf1>
			580d: R_386_PC32	printk
    5811:	b8 a8 01 00 00       	mov    $0x1a8,%eax
			5812: R_386_32	.data
    5816:	e8 fc ff ff ff       	call   5817 <dev_rename+0xfb>
			5817: R_386_PC32	up_write
    581b:	89 e8                	mov    %ebp,%eax
    581d:	e8 fc ff ff ff       	call   581e <dev_rename+0x102>
			581e: R_386_PC32	kfree
    5822:	83 c4 0c             	add    $0xc,%esp
    5825:	e9 ac 00 00 00       	jmp    58d6 <dev_rename+0x1ba>
    582a:	8b 10                	mov    (%eax),%edx
    582c:	8b 40 04             	mov    0x4(%eax),%eax
    582f:	89 42 04             	mov    %eax,0x4(%edx)
    5832:	89 10                	mov    %edx,(%eax)
    5834:	b8 70 01 00 00       	mov    $0x170,%eax
			5835: R_386_32	.data
    5839:	8b 7b 10             	mov    0x10(%ebx),%edi
    583c:	c7 03 00 01 10 00    	movl   $0x100100,(%ebx)
    5842:	c7 43 04 00 02 20 00 	movl   $0x200200,0x4(%ebx)
    5849:	e8 fc ff ff ff       	call   584a <dev_rename+0x12e>
			584a: R_386_PC32	mutex_lock
    584e:	b8 70 01 00 00       	mov    $0x170,%eax
			584f: R_386_32	.data
    5853:	89 6b 10             	mov    %ebp,0x10(%ebx)
    5856:	e8 fc ff ff ff       	call   5857 <dev_rename+0x13b>
			5857: R_386_PC32	mutex_unlock
    585b:	31 c0                	xor    %eax,%eax
    585d:	eb 0c                	jmp    586b <dev_rename+0x14f>
    585f:	0f be d2             	movsbl %dl,%edx
    5862:	45                   	inc    %ebp
    5863:	01 d0                	add    %edx,%eax
    5865:	69 c0 3b 78 37 9e    	imul   $0x9e37783b,%eax,%eax
    586b:	8a 55 00             	mov    0x0(%ebp),%dl
    586e:	84 d2                	test   %dl,%dl
    5870:	75 ed                	jne    585f <dev_rename+0x143>
    5872:	83 e0 3f             	and    $0x3f,%eax
    5875:	8b 14 c5 38 00 00 00 	mov    0x38(,%eax,8),%edx
			5878: R_386_32	.bss
    587c:	8d 0c c5 38 00 00 00 	lea    0x38(,%eax,8),%ecx
			587f: R_386_32	.bss
    5883:	89 5a 04             	mov    %ebx,0x4(%edx)
    5886:	89 13                	mov    %edx,(%ebx)
    5888:	89 4b 04             	mov    %ecx,0x4(%ebx)
    588b:	89 1c c5 38 00 00 00 	mov    %ebx,0x38(,%eax,8)
			588e: R_386_32	.bss
    5892:	8b 43 18             	mov    0x18(%ebx),%eax
    5895:	e8 fc ff ff ff       	call   5896 <dev_rename+0x17a>
			5896: R_386_PC32	dm_get_table
    589a:	85 c0                	test   %eax,%eax
    589c:	89 c5                	mov    %eax,%ebp
    589e:	74 0c                	je     58ac <dev_rename+0x190>
    58a0:	e8 fc ff ff ff       	call   58a1 <dev_rename+0x185>
			58a1: R_386_PC32	dm_table_event
    58a5:	89 e8                	mov    %ebp,%eax
    58a7:	e8 fc ff ff ff       	call   58a8 <dev_rename+0x18c>
			58a8: R_386_PC32	dm_table_put
    58ac:	8b 4c 24 04          	mov    0x4(%esp),%ecx
    58b0:	ba 02 00 00 00       	mov    $0x2,%edx
    58b5:	8b 43 18             	mov    0x18(%ebx),%eax
    58b8:	e8 fc ff ff ff       	call   58b9 <dev_rename+0x19d>
			58b9: R_386_PC32	dm_kobject_uevent
    58bd:	8b 43 18             	mov    0x18(%ebx),%eax
    58c0:	e8 fc ff ff ff       	call   58c1 <dev_rename+0x1a5>
			58c1: R_386_PC32	dm_put
    58c5:	b8 a8 01 00 00       	mov    $0x1a8,%eax
			58c6: R_386_32	.data
    58ca:	e8 fc ff ff ff       	call   58cb <dev_rename+0x1af>
			58cb: R_386_PC32	up_write
    58cf:	89 f8                	mov    %edi,%eax
    58d1:	e8 fc ff ff ff       	call   58d2 <dev_rename+0x1b6>
			58d2: R_386_PC32	kfree
    58d6:	59                   	pop    %ecx
    58d7:	89 f0                	mov    %esi,%eax
    58d9:	5b                   	pop    %ebx
    58da:	5b                   	pop    %ebx
    58db:	5e                   	pop    %esi
    58dc:	5f                   	pop    %edi
    58dd:	5d                   	pop    %ebp
    58de:	c3                   	ret    

000058df <__hash_remove>:
    58df:	56                   	push   %esi
    58e0:	53                   	push   %ebx
    58e1:	89 c3                	mov    %eax,%ebx
    58e3:	8b 50 08             	mov    0x8(%eax),%edx
    58e6:	8b 40 0c             	mov    0xc(%eax),%eax
    58e9:	89 42 04             	mov    %eax,0x4(%edx)
    58ec:	89 10                	mov    %edx,(%eax)
    58ee:	8b 13                	mov    (%ebx),%edx
    58f0:	8b 43 04             	mov    0x4(%ebx),%eax
    58f3:	c7 43 08 00 01 10 00 	movl   $0x100100,0x8(%ebx)
    58fa:	c7 43 0c 00 02 20 00 	movl   $0x200200,0xc(%ebx)
    5901:	89 42 04             	mov    %eax,0x4(%edx)
    5904:	89 10                	mov    %edx,(%eax)
    5906:	b8 70 01 00 00       	mov    $0x170,%eax
			5907: R_386_32	.data
    590b:	c7 03 00 01 10 00    	movl   $0x100100,(%ebx)
    5911:	c7 43 04 00 02 20 00 	movl   $0x200200,0x4(%ebx)
    5918:	e8 fc ff ff ff       	call   5919 <__hash_remove+0x3a>
			5919: R_386_PC32	mutex_lock
    591d:	8b 43 18             	mov    0x18(%ebx),%eax
    5920:	31 d2                	xor    %edx,%edx
    5922:	e8 fc ff ff ff       	call   5923 <__hash_remove+0x44>
			5923: R_386_PC32	dm_set_mdptr
    5927:	b8 70 01 00 00       	mov    $0x170,%eax
			5928: R_386_32	.data
    592c:	e8 fc ff ff ff       	call   592d <__hash_remove+0x4e>
			592d: R_386_PC32	mutex_unlock
    5931:	8b 43 18             	mov    0x18(%ebx),%eax
    5934:	e8 fc ff ff ff       	call   5935 <__hash_remove+0x56>
			5935: R_386_PC32	dm_get_table
    5939:	85 c0                	test   %eax,%eax
    593b:	89 c6                	mov    %eax,%esi
    593d:	74 0c                	je     594b <__hash_remove+0x6c>
    593f:	e8 fc ff ff ff       	call   5940 <__hash_remove+0x61>
			5940: R_386_PC32	dm_table_event
    5944:	89 f0                	mov    %esi,%eax
    5946:	e8 fc ff ff ff       	call   5947 <__hash_remove+0x68>
			5947: R_386_PC32	dm_table_put
    594b:	8b 43 1c             	mov    0x1c(%ebx),%eax
    594e:	85 c0                	test   %eax,%eax
    5950:	74 05                	je     5957 <__hash_remove+0x78>
    5952:	e8 fc ff ff ff       	call   5953 <__hash_remove+0x74>
			5953: R_386_PC32	dm_table_destroy
    5957:	8b 43 18             	mov    0x18(%ebx),%eax
    595a:	e8 fc ff ff ff       	call   595b <__hash_remove+0x7c>
			595b: R_386_PC32	dm_put
    595f:	89 d8                	mov    %ebx,%eax
    5961:	5b                   	pop    %ebx
    5962:	5e                   	pop    %esi
    5963:	e9 e8 f3 ff ff       	jmp    4d50 <free_cell>

00005968 <dev_remove>:
    5968:	55                   	push   %ebp
    5969:	57                   	push   %edi
    596a:	56                   	push   %esi
    596b:	53                   	push   %ebx
    596c:	89 c3                	mov    %eax,%ebx
    596e:	b8 a8 01 00 00       	mov    $0x1a8,%eax
			596f: R_386_32	.data
    5973:	e8 fc ff ff ff       	call   5974 <dev_remove+0xc>
			5974: R_386_PC32	down_write
    5978:	89 d8                	mov    %ebx,%eax
    597a:	e8 30 f0 ff ff       	call   49af <__find_device_hash_cell>
    597f:	85 c0                	test   %eax,%eax
    5981:	89 c5                	mov    %eax,%ebp
    5983:	75 1c                	jne    59a1 <dev_remove+0x39>
    5985:	68 a4 11 00 00       	push   $0x11a4
			5986: R_386_32	.rodata.str1.1
    598a:	be fa ff ff ff       	mov    $0xfffffffa,%esi
    598f:	e8 fc ff ff ff       	call   5990 <dev_remove+0x28>
			5990: R_386_PC32	printk
    5994:	b8 a8 01 00 00       	mov    $0x1a8,%eax
			5995: R_386_32	.data
    5999:	e8 fc ff ff ff       	call   599a <dev_remove+0x32>
			599a: R_386_PC32	up_write
    599e:	5a                   	pop    %edx
    599f:	eb 60                	jmp    5a01 <dev_remove+0x99>
    59a1:	8b 78 18             	mov    0x18(%eax),%edi
    59a4:	89 f8                	mov    %edi,%eax
    59a6:	e8 fc ff ff ff       	call   59a7 <dev_remove+0x3f>
			59a7: R_386_PC32	dm_lock_for_deletion
    59ab:	85 c0                	test   %eax,%eax
    59ad:	89 c6                	mov    %eax,%esi
    59af:	74 22                	je     59d3 <dev_remove+0x6b>
    59b1:	ff 75 10             	pushl  0x10(%ebp)
    59b4:	68 a8 14 00 00       	push   $0x14a8
			59b5: R_386_32	.rodata.str1.1
    59b9:	e8 fc ff ff ff       	call   59ba <dev_remove+0x52>
			59ba: R_386_PC32	printk
    59be:	b8 a8 01 00 00       	mov    $0x1a8,%eax
			59bf: R_386_32	.data
    59c3:	e8 fc ff ff ff       	call   59c4 <dev_remove+0x5c>
			59c4: R_386_PC32	up_write
    59c8:	89 f8                	mov    %edi,%eax
    59ca:	e8 fc ff ff ff       	call   59cb <dev_remove+0x63>
			59cb: R_386_PC32	dm_put
    59cf:	5d                   	pop    %ebp
    59d0:	58                   	pop    %eax
    59d1:	eb 2e                	jmp    5a01 <dev_remove+0x99>
    59d3:	89 e8                	mov    %ebp,%eax
    59d5:	e8 05 ff ff ff       	call   58df <__hash_remove>
    59da:	b8 a8 01 00 00       	mov    $0x1a8,%eax
			59db: R_386_32	.data
    59df:	e8 fc ff ff ff       	call   59e0 <dev_remove+0x78>
			59e0: R_386_PC32	up_write
    59e4:	8b 4b 20             	mov    0x20(%ebx),%ecx
    59e7:	ba 01 00 00 00       	mov    $0x1,%edx
    59ec:	89 f8                	mov    %edi,%eax
    59ee:	e8 fc ff ff ff       	call   59ef <dev_remove+0x87>
			59ef: R_386_PC32	dm_kobject_uevent
    59f3:	89 f8                	mov    %edi,%eax
    59f5:	e8 fc ff ff ff       	call   59f6 <dev_remove+0x8e>
			59f6: R_386_PC32	dm_put
    59fa:	c7 43 0c 00 00 00 00 	movl   $0x0,0xc(%ebx)
    5a01:	89 f0                	mov    %esi,%eax
    5a03:	5b                   	pop    %ebx
    5a04:	5e                   	pop    %esi
    5a05:	5f                   	pop    %edi
    5a06:	5d                   	pop    %ebp
    5a07:	c3                   	ret    

00005a08 <dm_hash_remove_all>:
    5a08:	55                   	push   %ebp
    5a09:	31 ed                	xor    %ebp,%ebp
    5a0b:	57                   	push   %edi
    5a0c:	56                   	push   %esi
    5a0d:	31 f6                	xor    %esi,%esi
    5a0f:	53                   	push   %ebx
    5a10:	31 db                	xor    %ebx,%ebx
    5a12:	83 ec 0c             	sub    $0xc,%esp
    5a15:	89 44 24 08          	mov    %eax,0x8(%esp)
    5a19:	b8 a8 01 00 00       	mov    $0x1a8,%eax
			5a1a: R_386_32	.data
    5a1e:	e8 fc ff ff ff       	call   5a1f <dm_hash_remove_all+0x17>
			5a1f: R_386_PC32	down_write
    5a23:	89 ea                	mov    %ebp,%edx
    5a25:	eb 4a                	jmp    5a71 <dm_hash_remove_all+0x69>
    5a27:	8b 3c dd 38 00 00 00 	mov    0x38(,%ebx,8),%edi
			5a2a: R_386_32	.bss
    5a2e:	8d 04 dd 38 00 00 00 	lea    0x38(,%ebx,8),%eax
			5a31: R_386_32	.bss
    5a35:	89 44 24 04          	mov    %eax,0x4(%esp)
    5a39:	8b 2f                	mov    (%edi),%ebp
    5a3b:	eb 2d                	jmp    5a6a <dm_hash_remove_all+0x62>
    5a3d:	83 7c 24 08 00       	cmpl   $0x0,0x8(%esp)
    5a42:	74 15                	je     5a59 <dm_hash_remove_all+0x51>
    5a44:	8b 47 18             	mov    0x18(%edi),%eax
    5a47:	89 14 24             	mov    %edx,(%esp)
    5a4a:	e8 fc ff ff ff       	call   5a4b <dm_hash_remove_all+0x43>
			5a4b: R_386_PC32	dm_lock_for_deletion
    5a4f:	8b 14 24             	mov    (%esp),%edx
    5a52:	85 c0                	test   %eax,%eax
    5a54:	74 03                	je     5a59 <dm_hash_remove_all+0x51>
    5a56:	46                   	inc    %esi
    5a57:	eb 0c                	jmp    5a65 <dm_hash_remove_all+0x5d>
    5a59:	89 f8                	mov    %edi,%eax
    5a5b:	e8 7f fe ff ff       	call   58df <__hash_remove>
    5a60:	ba 01 00 00 00       	mov    $0x1,%edx
    5a65:	89 ef                	mov    %ebp,%edi
    5a67:	8b 6d 00             	mov    0x0(%ebp),%ebp
    5a6a:	3b 7c 24 04          	cmp    0x4(%esp),%edi
    5a6e:	75 cd                	jne    5a3d <dm_hash_remove_all+0x35>
    5a70:	43                   	inc    %ebx
    5a71:	83 fb 3f             	cmp    $0x3f,%ebx
    5a74:	7e b1                	jle    5a27 <dm_hash_remove_all+0x1f>
    5a76:	85 f6                	test   %esi,%esi
    5a78:	74 19                	je     5a93 <dm_hash_remove_all+0x8b>
    5a7a:	85 d2                	test   %edx,%edx
    5a7c:	74 08                	je     5a86 <dm_hash_remove_all+0x7e>
    5a7e:	31 db                	xor    %ebx,%ebx
    5a80:	31 d2                	xor    %edx,%edx
    5a82:	31 f6                	xor    %esi,%esi
    5a84:	eb a1                	jmp    5a27 <dm_hash_remove_all+0x1f>
    5a86:	56                   	push   %esi
    5a87:	68 e2 14 00 00       	push   $0x14e2
			5a88: R_386_32	.rodata.str1.1
    5a8c:	e8 fc ff ff ff       	call   5a8d <dm_hash_remove_all+0x85>
			5a8d: R_386_PC32	printk
    5a91:	59                   	pop    %ecx
    5a92:	5b                   	pop    %ebx
    5a93:	83 c4 0c             	add    $0xc,%esp
    5a96:	b8 a8 01 00 00       	mov    $0x1a8,%eax
			5a97: R_386_32	.data
    5a9b:	5b                   	pop    %ebx
    5a9c:	5e                   	pop    %esi
    5a9d:	5f                   	pop    %edi
    5a9e:	5d                   	pop    %ebp
    5a9f:	e9 fc ff ff ff       	jmp    5aa0 <dm_hash_remove_all+0x98>
			5aa0: R_386_PC32	up_write

00005aa4 <remove_all>:
    5aa4:	53                   	push   %ebx
    5aa5:	89 c3                	mov    %eax,%ebx
    5aa7:	b8 01 00 00 00       	mov    $0x1,%eax
    5aac:	e8 57 ff ff ff       	call   5a08 <dm_hash_remove_all>
    5ab1:	31 c0                	xor    %eax,%eax
    5ab3:	c7 43 0c 00 00 00 00 	movl   $0x0,0xc(%ebx)
    5aba:	5b                   	pop    %ebx
    5abb:	c3                   	ret    

00005abc <dm_interface_exit>:
    5abc:	b8 84 01 00 00       	mov    $0x184,%eax
			5abd: R_386_32	.data
    5ac1:	e8 fc ff ff ff       	call   5ac2 <dm_interface_exit+0x6>
			5ac2: R_386_PC32	misc_deregister
    5ac6:	85 c0                	test   %eax,%eax
    5ac8:	79 0b                	jns    5ad5 <dm_interface_exit+0x19>
    5aca:	68 1e 15 00 00       	push   $0x151e
			5acb: R_386_32	.rodata.str1.1
    5acf:	e8 fc ff ff ff       	call   5ad0 <dm_interface_exit+0x14>
			5ad0: R_386_PC32	printk
    5ad4:	58                   	pop    %eax
    5ad5:	31 c0                	xor    %eax,%eax
    5ad7:	e9 2c ff ff ff       	jmp    5a08 <dm_hash_remove_all>

00005adc <copy_params>:
    5adc:	57                   	push   %edi
    5add:	b9 31 01 00 00       	mov    $0x131,%ecx
    5ae2:	56                   	push   %esi
    5ae3:	89 c6                	mov    %eax,%esi
    5ae5:	53                   	push   %ebx
    5ae6:	89 d7                	mov    %edx,%edi
    5ae8:	81 ec 3c 01 00 00    	sub    $0x13c,%esp
    5aee:	89 f2                	mov    %esi,%edx
    5af0:	65 a1 14 00 00 00    	mov    %gs:0x14,%eax
    5af6:	89 84 24 38 01 00 00 	mov    %eax,0x138(%esp)
    5afd:	31 c0                	xor    %eax,%eax
    5aff:	89 e0                	mov    %esp,%eax
    5b01:	e8 fc ff ff ff       	call   5b02 <copy_params+0x26>
			5b02: R_386_PC32	copy_from_user
    5b06:	ba f2 ff ff ff       	mov    $0xfffffff2,%edx
    5b0b:	85 c0                	test   %eax,%eax
    5b0d:	75 3e                	jne    5b4d <copy_params+0x71>
    5b0f:	8b 44 24 0c          	mov    0xc(%esp),%eax
    5b13:	b2 ea                	mov    $0xea,%dl
    5b15:	3d 30 01 00 00       	cmp    $0x130,%eax
    5b1a:	76 31                	jbe    5b4d <copy_params+0x71>
    5b1c:	e8 fc ff ff ff       	call   5b1d <copy_params+0x41>
			5b1d: R_386_PC32	vmalloc
    5b21:	ba f4 ff ff ff       	mov    $0xfffffff4,%edx
    5b26:	85 c0                	test   %eax,%eax
    5b28:	89 c3                	mov    %eax,%ebx
    5b2a:	74 21                	je     5b4d <copy_params+0x71>
    5b2c:	8b 4c 24 0c          	mov    0xc(%esp),%ecx
    5b30:	89 f2                	mov    %esi,%edx
    5b32:	e8 fc ff ff ff       	call   5b33 <copy_params+0x57>
			5b33: R_386_PC32	copy_from_user
    5b37:	85 c0                	test   %eax,%eax
    5b39:	74 0e                	je     5b49 <copy_params+0x6d>
    5b3b:	89 d8                	mov    %ebx,%eax
    5b3d:	e8 fc ff ff ff       	call   5b3e <copy_params+0x62>
			5b3e: R_386_PC32	vfree
    5b42:	ba f2 ff ff ff       	mov    $0xfffffff2,%edx
    5b47:	eb 04                	jmp    5b4d <copy_params+0x71>
    5b49:	89 1f                	mov    %ebx,(%edi)
    5b4b:	31 d2                	xor    %edx,%edx
    5b4d:	89 d0                	mov    %edx,%eax
    5b4f:	8b 94 24 38 01 00 00 	mov    0x138(%esp),%edx
    5b56:	65 33 15 14 00 00 00 	xor    %gs:0x14,%edx
    5b5d:	74 05                	je     5b64 <copy_params+0x88>
    5b5f:	e8 fc ff ff ff       	call   5b60 <copy_params+0x84>
			5b60: R_386_PC32	__stack_chk_fail
    5b64:	81 c4 3c 01 00 00    	add    $0x13c,%esp
    5b6a:	5b                   	pop    %ebx
    5b6b:	5e                   	pop    %esi
    5b6c:	5f                   	pop    %edi
    5b6d:	c3                   	ret    

00005b6e <dm_ctl_ioctl>:
    5b6e:	55                   	push   %ebp
    5b6f:	b8 15 00 00 00       	mov    $0x15,%eax
    5b74:	57                   	push   %edi
    5b75:	89 cd                	mov    %ecx,%ebp
    5b77:	56                   	push   %esi
    5b78:	89 d7                	mov    %edx,%edi
    5b7a:	53                   	push   %ebx
    5b7b:	bb f3 ff ff ff       	mov    $0xfffffff3,%ebx
    5b80:	83 ec 14             	sub    $0x14,%esp
    5b83:	e8 fc ff ff ff       	call   5b84 <dm_ctl_ioctl+0x16>
			5b84: R_386_PC32	capable
    5b88:	85 c0                	test   %eax,%eax
    5b8a:	0f 84 9b 01 00 00    	je     5d2b <dm_ctl_ioctl+0x1bd>
    5b90:	89 fa                	mov    %edi,%edx
    5b92:	b3 e7                	mov    $0xe7,%bl
    5b94:	0f b6 c6             	movzbl %dh,%eax
    5b97:	3d fd 00 00 00       	cmp    $0xfd,%eax
    5b9c:	0f 85 89 01 00 00    	jne    5d2b <dm_ctl_ioctl+0x1bd>
    5ba2:	8d 44 24 04          	lea    0x4(%esp),%eax
    5ba6:	b9 0c 00 00 00       	mov    $0xc,%ecx
    5bab:	89 ea                	mov    %ebp,%edx
    5bad:	e8 fc ff ff ff       	call   5bae <dm_ctl_ioctl+0x40>
			5bae: R_386_PC32	copy_from_user
    5bb2:	85 c0                	test   %eax,%eax
    5bb4:	0f 85 6c 01 00 00    	jne    5d26 <dm_ctl_ioctl+0x1b8>
    5bba:	8b 44 24 04          	mov    0x4(%esp),%eax
    5bbe:	89 fe                	mov    %edi,%esi
    5bc0:	81 e6 ff 00 00 00    	and    $0xff,%esi
    5bc6:	83 f8 04             	cmp    $0x4,%eax
    5bc9:	75 09                	jne    5bd4 <dm_ctl_ioctl+0x66>
    5bcb:	31 db                	xor    %ebx,%ebx
    5bcd:	83 7c 24 08 0f       	cmpl   $0xf,0x8(%esp)
    5bd2:	76 22                	jbe    5bf6 <dm_ctl_ioctl+0x88>
    5bd4:	56                   	push   %esi
    5bd5:	bb ea ff ff ff       	mov    $0xffffffea,%ebx
    5bda:	ff 74 24 10          	pushl  0x10(%esp)
    5bde:	ff 74 24 10          	pushl  0x10(%esp)
    5be2:	50                   	push   %eax
    5be3:	6a 00                	push   $0x0
    5be5:	6a 0f                	push   $0xf
    5be7:	6a 04                	push   $0x4
    5be9:	68 62 15 00 00       	push   $0x1562
			5bea: R_386_32	.rodata.str1.1
    5bee:	e8 fc ff ff ff       	call   5bef <dm_ctl_ioctl+0x81>
			5bef: R_386_PC32	printk
    5bf3:	83 c4 20             	add    $0x20,%esp
    5bf6:	8d 54 24 04          	lea    0x4(%esp),%edx
    5bfa:	b9 0c 00 00 00       	mov    $0xc,%ecx
    5bff:	89 e8                	mov    %ebp,%eax
    5c01:	c7 44 24 04 04 00 00 	movl   $0x4,0x4(%esp)
    5c08:	00 
    5c09:	c7 44 24 08 0f 00 00 	movl   $0xf,0x8(%esp)
    5c10:	00 
    5c11:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
    5c18:	00 
    5c19:	e8 fc ff ff ff       	call   5c1a <dm_ctl_ioctl+0xac>
			5c1a: R_386_PC32	copy_to_user
    5c1e:	85 c0                	test   %eax,%eax
    5c20:	0f 85 00 01 00 00    	jne    5d26 <dm_ctl_ioctl+0x1b8>
    5c26:	85 db                	test   %ebx,%ebx
    5c28:	0f 85 fd 00 00 00    	jne    5d2b <dm_ctl_ioctl+0x1bd>
    5c2e:	85 f6                	test   %esi,%esi
    5c30:	0f 84 f5 00 00 00    	je     5d2b <dm_ctl_ioctl+0x1bd>
    5c36:	83 fe 0f             	cmp    $0xf,%esi
    5c39:	77 0b                	ja     5c46 <dm_ctl_ioctl+0xd8>
    5c3b:	8b 0c f5 a8 00 00 00 	mov    0xa8(,%esi,8),%ecx
			5c3e: R_386_32	.rodata
    5c42:	85 c9                	test   %ecx,%ecx
    5c44:	75 17                	jne    5c5d <dm_ctl_ioctl+0xef>
    5c46:	57                   	push   %edi
    5c47:	bb e7 ff ff ff       	mov    $0xffffffe7,%ebx
    5c4c:	68 c0 15 00 00       	push   $0x15c0
			5c4d: R_386_32	.rodata.str1.1
    5c51:	e8 fc ff ff ff       	call   5c52 <dm_ctl_ioctl+0xe4>
			5c52: R_386_PC32	printk
    5c56:	5e                   	pop    %esi
    5c57:	5f                   	pop    %edi
    5c58:	e9 ce 00 00 00       	jmp    5d2b <dm_ctl_ioctl+0x1bd>
    5c5d:	64 8b 3d 00 00 00 00 	mov    %fs:0x0,%edi
			5c60: R_386_32	per_cpu__current_task
    5c64:	81 4f 0c 00 08 00 00 	orl    $0x800,0xc(%edi)
    5c6b:	89 e8                	mov    %ebp,%eax
    5c6d:	8d 54 24 10          	lea    0x10(%esp),%edx
    5c71:	89 0c 24             	mov    %ecx,(%esp)
    5c74:	e8 63 fe ff ff       	call   5adc <copy_params>
    5c79:	81 67 0c ff f7 ff ff 	andl   $0xfffff7ff,0xc(%edi)
    5c80:	8b 0c 24             	mov    (%esp),%ecx
    5c83:	85 c0                	test   %eax,%eax
    5c85:	89 c3                	mov    %eax,%ebx
    5c87:	0f 85 9e 00 00 00    	jne    5d2b <dm_ctl_ioctl+0x1bd>
    5c8d:	8b 44 24 10          	mov    0x10(%esp),%eax
    5c91:	8d 56 ff             	lea    -0x1(%esi),%edx
    5c94:	81 60 1c ff fe ff ff 	andl   $0xfffffeff,0x1c(%eax)
    5c9b:	83 fa 01             	cmp    $0x1,%edx
    5c9e:	76 49                	jbe    5ce9 <dm_ctl_ioctl+0x17b>
    5ca0:	83 fe 0d             	cmp    $0xd,%esi
    5ca3:	74 44                	je     5ce9 <dm_ctl_ioctl+0x17b>
    5ca5:	83 fe 03             	cmp    $0x3,%esi
    5ca8:	75 13                	jne    5cbd <dm_ctl_ioctl+0x14f>
    5caa:	80 78 30 00          	cmpb   $0x0,0x30(%eax)
    5cae:	75 2b                	jne    5cdb <dm_ctl_ioctl+0x16d>
    5cb0:	68 fd 15 00 00       	push   $0x15fd
			5cb1: R_386_32	.rodata.str1.1
    5cb5:	e8 fc ff ff ff       	call   5cb6 <dm_ctl_ioctl+0x148>
			5cb6: R_386_PC32	printk
    5cba:	5b                   	pop    %ebx
    5cbb:	eb 78                	jmp    5d35 <dm_ctl_ioctl+0x1c7>
    5cbd:	80 b8 b0 00 00 00 00 	cmpb   $0x0,0xb0(%eax)
    5cc4:	74 15                	je     5cdb <dm_ctl_ioctl+0x16d>
    5cc6:	80 78 30 00          	cmpb   $0x0,0x30(%eax)
    5cca:	74 0f                	je     5cdb <dm_ctl_ioctl+0x16d>
    5ccc:	56                   	push   %esi
    5ccd:	68 3e 16 00 00       	push   $0x163e
			5cce: R_386_32	.rodata.str1.1
    5cd2:	e8 fc ff ff ff       	call   5cd3 <dm_ctl_ioctl+0x165>
			5cd3: R_386_PC32	printk
    5cd7:	5a                   	pop    %edx
    5cd8:	59                   	pop    %ecx
    5cd9:	eb 5a                	jmp    5d35 <dm_ctl_ioctl+0x1c7>
    5cdb:	c6 80 af 00 00 00 00 	movb   $0x0,0xaf(%eax)
    5ce2:	c6 80 30 01 00 00 00 	movb   $0x0,0x130(%eax)
    5ce9:	8b 44 24 10          	mov    0x10(%esp),%eax
    5ced:	8b 50 0c             	mov    0xc(%eax),%edx
    5cf0:	c7 40 0c 38 01 00 00 	movl   $0x138,0xc(%eax)
    5cf7:	8b 44 24 10          	mov    0x10(%esp),%eax
    5cfb:	ff d1                	call   *%ecx
    5cfd:	85 c0                	test   %eax,%eax
    5cff:	89 c3                	mov    %eax,%ebx
    5d01:	75 18                	jne    5d1b <dm_ctl_ioctl+0x1ad>
    5d03:	8b 54 24 10          	mov    0x10(%esp),%edx
    5d07:	89 e8                	mov    %ebp,%eax
    5d09:	8b 4a 0c             	mov    0xc(%edx),%ecx
    5d0c:	e8 fc ff ff ff       	call   5d0d <dm_ctl_ioctl+0x19f>
			5d0d: R_386_PC32	copy_to_user
    5d11:	85 c0                	test   %eax,%eax
    5d13:	b8 f2 ff ff ff       	mov    $0xfffffff2,%eax
    5d18:	0f 45 d8             	cmovne %eax,%ebx
    5d1b:	8b 44 24 10          	mov    0x10(%esp),%eax
    5d1f:	e8 fc ff ff ff       	call   5d20 <dm_ctl_ioctl+0x1b2>
			5d20: R_386_PC32	vfree
    5d24:	eb 05                	jmp    5d2b <dm_ctl_ioctl+0x1bd>
    5d26:	bb f2 ff ff ff       	mov    $0xfffffff2,%ebx
    5d2b:	83 c4 14             	add    $0x14,%esp
    5d2e:	89 d8                	mov    %ebx,%eax
    5d30:	5b                   	pop    %ebx
    5d31:	5e                   	pop    %esi
    5d32:	5f                   	pop    %edi
    5d33:	5d                   	pop    %ebp
    5d34:	c3                   	ret    
    5d35:	bb ea ff ff ff       	mov    $0xffffffea,%ebx
    5d3a:	eb df                	jmp    5d1b <dm_ctl_ioctl+0x1ad>

00005d3c <dev_create>:
    5d3c:	55                   	push   %ebp
    5d3d:	57                   	push   %edi
    5d3e:	56                   	push   %esi
    5d3f:	89 c6                	mov    %eax,%esi
    5d41:	53                   	push   %ebx
    5d42:	83 ec 10             	sub    $0x10,%esp
    5d45:	8d 40 30             	lea    0x30(%eax),%eax
    5d48:	89 04 24             	mov    %eax,(%esp)
    5d4b:	e8 a9 f9 ff ff       	call   56f9 <check_name>
    5d50:	85 c0                	test   %eax,%eax
    5d52:	89 c3                	mov    %eax,%ebx
    5d54:	0f 85 24 02 00 00    	jne    5f7e <dev_create+0x242>
    5d5a:	83 c8 ff             	or     $0xffffffff,%eax
    5d5d:	f6 46 1c 08          	testb  $0x8,0x1c(%esi)
    5d61:	74 15                	je     5d78 <dev_create+0x3c>
    5d63:	8b 56 28             	mov    0x28(%esi),%edx
    5d66:	89 d0                	mov    %edx,%eax
    5d68:	81 e2 ff 00 00 00    	and    $0xff,%edx
    5d6e:	c1 e8 0c             	shr    $0xc,%eax
    5d71:	25 00 ff 0f 00       	and    $0xfff00,%eax
    5d76:	09 d0                	or     %edx,%eax
    5d78:	8d 54 24 0c          	lea    0xc(%esp),%edx
    5d7c:	e8 fc ff ff ff       	call   5d7d <dev_create+0x41>
			5d7d: R_386_PC32	dm_create
    5d81:	85 c0                	test   %eax,%eax
    5d83:	89 c3                	mov    %eax,%ebx
    5d85:	0f 85 f3 01 00 00    	jne    5f7e <dev_create+0x242>
    5d8b:	8b 44 24 0c          	mov    0xc(%esp),%eax
    5d8f:	8d be b0 00 00 00    	lea    0xb0(%esi),%edi
    5d95:	ba d0 00 00 00       	mov    $0xd0,%edx
    5d9a:	80 be b0 00 00 00 00 	cmpb   $0x0,0xb0(%esi)
    5da1:	89 44 24 04          	mov    %eax,0x4(%esp)
    5da5:	b8 14 05 00 00       	mov    $0x514,%eax
			5da6: R_386_32	kmalloc_caches
    5daa:	0f 44 fb             	cmove  %ebx,%edi
    5dad:	e8 fc ff ff ff       	call   5dae <dev_create+0x72>
			5dae: R_386_PC32	kmem_cache_alloc
    5db2:	83 3d 04 00 00 00 00 	cmpl   $0x0,0x4
			5db4: R_386_32	__tracepoint_kmalloc
    5db9:	89 c3                	mov    %eax,%ebx
    5dbb:	a1 18 05 00 00       	mov    0x518,%eax
			5dbc: R_386_32	kmalloc_caches
    5dc0:	89 44 24 08          	mov    %eax,0x8(%esp)
    5dc4:	74 2d                	je     5df3 <dev_create+0xb7>
    5dc6:	8b 2d 10 00 00 00    	mov    0x10,%ebp
			5dc8: R_386_32	__tracepoint_kmalloc
    5dcc:	85 ed                	test   %ebp,%ebp
    5dce:	74 23                	je     5df3 <dev_create+0xb7>
    5dd0:	68 d0 00 00 00       	push   $0xd0
    5dd5:	b9 20 00 00 00       	mov    $0x20,%ecx
    5dda:	ff 74 24 0c          	pushl  0xc(%esp)
    5dde:	89 da                	mov    %ebx,%edx
    5de0:	b8 8b 5d 00 00       	mov    $0x5d8b,%eax
			5de1: R_386_32	.text
    5de5:	ff 55 00             	call   *0x0(%ebp)
    5de8:	83 c5 04             	add    $0x4,%ebp
    5deb:	83 7d 00 00          	cmpl   $0x0,0x0(%ebp)
    5def:	5a                   	pop    %edx
    5df0:	59                   	pop    %ecx
    5df1:	eb db                	jmp    5dce <dev_create+0x92>
    5df3:	85 db                	test   %ebx,%ebx
    5df5:	74 7b                	je     5e72 <dev_create+0x136>
    5df7:	8b 04 24             	mov    (%esp),%eax
    5dfa:	ba d0 00 00 00       	mov    $0xd0,%edx
    5dff:	e8 fc ff ff ff       	call   5e00 <dev_create+0xc4>
			5e00: R_386_PC32	kstrdup
    5e04:	85 c0                	test   %eax,%eax
    5e06:	89 43 10             	mov    %eax,0x10(%ebx)
    5e09:	74 28                	je     5e33 <dev_create+0xf7>
    5e0b:	85 ff                	test   %edi,%edi
    5e0d:	75 09                	jne    5e18 <dev_create+0xdc>
    5e0f:	c7 43 14 00 00 00 00 	movl   $0x0,0x14(%ebx)
    5e16:	eb 24                	jmp    5e3c <dev_create+0x100>
    5e18:	ba d0 00 00 00       	mov    $0xd0,%edx
    5e1d:	89 f8                	mov    %edi,%eax
    5e1f:	e8 fc ff ff ff       	call   5e20 <dev_create+0xe4>
			5e20: R_386_PC32	kstrdup
    5e24:	85 c0                	test   %eax,%eax
    5e26:	89 43 14             	mov    %eax,0x14(%ebx)
    5e29:	75 11                	jne    5e3c <dev_create+0x100>
    5e2b:	8b 43 10             	mov    0x10(%ebx),%eax
    5e2e:	e8 fc ff ff ff       	call   5e2f <dev_create+0xf3>
			5e2f: R_386_PC32	kfree
    5e33:	89 d8                	mov    %ebx,%eax
    5e35:	e8 fc ff ff ff       	call   5e36 <dev_create+0xfa>
			5e36: R_386_PC32	kfree
    5e3a:	eb 36                	jmp    5e72 <dev_create+0x136>
    5e3c:	8d 6b 08             	lea    0x8(%ebx),%ebp
    5e3f:	89 1b                	mov    %ebx,(%ebx)
    5e41:	89 5b 04             	mov    %ebx,0x4(%ebx)
    5e44:	89 6b 08             	mov    %ebp,0x8(%ebx)
    5e47:	89 6b 0c             	mov    %ebp,0xc(%ebx)
    5e4a:	8b 44 24 04          	mov    0x4(%esp),%eax
    5e4e:	c7 43 1c 00 00 00 00 	movl   $0x0,0x1c(%ebx)
    5e55:	89 43 18             	mov    %eax,0x18(%ebx)
    5e58:	b8 a8 01 00 00       	mov    $0x1a8,%eax
			5e59: R_386_32	.data
    5e5d:	e8 fc ff ff ff       	call   5e5e <dev_create+0x122>
			5e5e: R_386_PC32	down_write
    5e62:	8b 04 24             	mov    (%esp),%eax
    5e65:	e8 e9 ea ff ff       	call   4953 <__get_name_cell>
    5e6a:	31 d2                	xor    %edx,%edx
    5e6c:	85 c0                	test   %eax,%eax
    5e6e:	74 1a                	je     5e8a <dev_create+0x14e>
    5e70:	eb 6b                	jmp    5edd <dev_create+0x1a1>
    5e72:	bb f4 ff ff ff       	mov    $0xfffffff4,%ebx
    5e77:	e9 f9 00 00 00       	jmp    5f75 <dev_create+0x239>
    5e7c:	0f be c9             	movsbl %cl,%ecx
    5e7f:	40                   	inc    %eax
    5e80:	01 ca                	add    %ecx,%edx
    5e82:	69 d2 3b 78 37 9e    	imul   $0x9e37783b,%edx,%edx
    5e88:	eb 03                	jmp    5e8d <dev_create+0x151>
    5e8a:	8b 04 24             	mov    (%esp),%eax
    5e8d:	8a 08                	mov    (%eax),%cl
    5e8f:	84 c9                	test   %cl,%cl
    5e91:	75 e9                	jne    5e7c <dev_create+0x140>
    5e93:	89 d0                	mov    %edx,%eax
    5e95:	83 e0 3f             	and    $0x3f,%eax
    5e98:	85 ff                	test   %edi,%edi
    5e9a:	8b 14 c5 38 00 00 00 	mov    0x38(,%eax,8),%edx
			5e9d: R_386_32	.bss
    5ea1:	8d 0c c5 38 00 00 00 	lea    0x38(,%eax,8),%ecx
			5ea4: R_386_32	.bss
    5ea8:	89 5a 04             	mov    %ebx,0x4(%edx)
    5eab:	89 13                	mov    %edx,(%ebx)
    5ead:	89 4b 04             	mov    %ecx,0x4(%ebx)
    5eb0:	89 1c c5 38 00 00 00 	mov    %ebx,0x38(,%eax,8)
			5eb3: R_386_32	.bss
    5eb7:	74 79                	je     5f32 <dev_create+0x1f6>
    5eb9:	89 f8                	mov    %edi,%eax
    5ebb:	e8 2f ea ff ff       	call   48ef <__get_uuid_cell>
    5ec0:	31 d2                	xor    %edx,%edx
    5ec2:	85 c0                	test   %eax,%eax
    5ec4:	74 43                	je     5f09 <dev_create+0x1cd>
    5ec6:	8b 0b                	mov    (%ebx),%ecx
    5ec8:	8b 53 04             	mov    0x4(%ebx),%edx
    5ecb:	89 51 04             	mov    %edx,0x4(%ecx)
    5ece:	89 0a                	mov    %ecx,(%edx)
    5ed0:	c7 03 00 01 10 00    	movl   $0x100100,(%ebx)
    5ed6:	c7 43 04 00 02 20 00 	movl   $0x200200,0x4(%ebx)
    5edd:	8b 40 18             	mov    0x18(%eax),%eax
    5ee0:	e8 fc ff ff ff       	call   5ee1 <dev_create+0x1a5>
			5ee1: R_386_PC32	dm_put
    5ee5:	b8 a8 01 00 00       	mov    $0x1a8,%eax
			5ee6: R_386_32	.data
    5eea:	e8 fc ff ff ff       	call   5eeb <dev_create+0x1af>
			5eeb: R_386_PC32	up_write
    5eef:	89 d8                	mov    %ebx,%eax
    5ef1:	bb f0 ff ff ff       	mov    $0xfffffff0,%ebx
    5ef6:	e8 55 ee ff ff       	call   4d50 <free_cell>
    5efb:	eb 78                	jmp    5f75 <dev_create+0x239>
    5efd:	0f be c0             	movsbl %al,%eax
    5f00:	47                   	inc    %edi
    5f01:	01 c2                	add    %eax,%edx
    5f03:	69 d2 3b 78 37 9e    	imul   $0x9e37783b,%edx,%edx
    5f09:	8a 07                	mov    (%edi),%al
    5f0b:	84 c0                	test   %al,%al
    5f0d:	75 ee                	jne    5efd <dev_create+0x1c1>
    5f0f:	89 d0                	mov    %edx,%eax
    5f11:	83 e0 3f             	and    $0x3f,%eax
    5f14:	8b 14 c5 38 02 00 00 	mov    0x238(,%eax,8),%edx
			5f17: R_386_32	.bss
    5f1b:	8d 0c c5 38 02 00 00 	lea    0x238(,%eax,8),%ecx
			5f1e: R_386_32	.bss
    5f22:	89 6a 04             	mov    %ebp,0x4(%edx)
    5f25:	89 53 08             	mov    %edx,0x8(%ebx)
    5f28:	89 4b 0c             	mov    %ecx,0xc(%ebx)
    5f2b:	89 2c c5 38 02 00 00 	mov    %ebp,0x238(,%eax,8)
			5f2e: R_386_32	.bss
    5f32:	8b 44 24 04          	mov    0x4(%esp),%eax
    5f36:	e8 fc ff ff ff       	call   5f37 <dev_create+0x1fb>
			5f37: R_386_PC32	dm_get
    5f3b:	b8 70 01 00 00       	mov    $0x170,%eax
			5f3c: R_386_32	.data
    5f40:	e8 fc ff ff ff       	call   5f41 <dev_create+0x205>
			5f41: R_386_PC32	mutex_lock
    5f45:	89 da                	mov    %ebx,%edx
    5f47:	8b 44 24 04          	mov    0x4(%esp),%eax
    5f4b:	e8 fc ff ff ff       	call   5f4c <dev_create+0x210>
			5f4c: R_386_PC32	dm_set_mdptr
    5f50:	b8 70 01 00 00       	mov    $0x170,%eax
			5f51: R_386_32	.data
    5f55:	e8 fc ff ff ff       	call   5f56 <dev_create+0x21a>
			5f56: R_386_PC32	mutex_unlock
    5f5a:	b8 a8 01 00 00       	mov    $0x1a8,%eax
			5f5b: R_386_32	.data
    5f5f:	e8 fc ff ff ff       	call   5f60 <dev_create+0x224>
			5f60: R_386_PC32	up_write
    5f64:	89 f2                	mov    %esi,%edx
    5f66:	83 66 1c bf          	andl   $0xffffffbf,0x1c(%esi)
    5f6a:	8b 44 24 0c          	mov    0xc(%esp),%eax
    5f6e:	e8 12 eb ff ff       	call   4a85 <__dev_status>
    5f73:	89 c3                	mov    %eax,%ebx
    5f75:	8b 44 24 0c          	mov    0xc(%esp),%eax
    5f79:	e8 fc ff ff ff       	call   5f7a <dev_create+0x23e>
			5f7a: R_386_PC32	dm_put
    5f7e:	83 c4 10             	add    $0x10,%esp
    5f81:	89 d8                	mov    %ebx,%eax
    5f83:	5b                   	pop    %ebx
    5f84:	5e                   	pop    %esi
    5f85:	5f                   	pop    %edi
    5f86:	5d                   	pop    %ebp
    5f87:	c3                   	ret    

00005f88 <list_get_page>:
    5f88:	53                   	push   %ebx
    5f89:	8b 58 08             	mov    0x8(%eax),%ebx
    5f8c:	8b 40 0c             	mov    0xc(%eax),%eax
    5f8f:	8b 40 04             	mov    0x4(%eax),%eax
    5f92:	89 02                	mov    %eax,(%edx)
    5f94:	b8 00 10 00 00       	mov    $0x1000,%eax
    5f99:	29 d8                	sub    %ebx,%eax
    5f9b:	89 01                	mov    %eax,(%ecx)
    5f9d:	8b 44 24 08          	mov    0x8(%esp),%eax
    5fa1:	89 18                	mov    %ebx,(%eax)
    5fa3:	5b                   	pop    %ebx
    5fa4:	c3                   	ret    

00005fa5 <list_next_page>:
    5fa5:	8b 50 0c             	mov    0xc(%eax),%edx
    5fa8:	8b 12                	mov    (%edx),%edx
    5faa:	c7 40 08 00 00 00 00 	movl   $0x0,0x8(%eax)
    5fb1:	89 50 0c             	mov    %edx,0xc(%eax)
    5fb4:	c3                   	ret    

00005fb5 <bvec_get_page>:
    5fb5:	53                   	push   %ebx
    5fb6:	8b 40 0c             	mov    0xc(%eax),%eax
    5fb9:	8b 18                	mov    (%eax),%ebx
    5fbb:	89 1a                	mov    %ebx,(%edx)
    5fbd:	8b 50 04             	mov    0x4(%eax),%edx
    5fc0:	89 11                	mov    %edx,(%ecx)
    5fc2:	8b 50 08             	mov    0x8(%eax),%edx
    5fc5:	8b 44 24 08          	mov    0x8(%esp),%eax
    5fc9:	89 10                	mov    %edx,(%eax)
    5fcb:	5b                   	pop    %ebx
    5fcc:	c3                   	ret    

00005fcd <bvec_next_page>:
    5fcd:	83 40 0c 0c          	addl   $0xc,0xc(%eax)
    5fd1:	c3                   	ret    

00005fd2 <vm_next_page>:
    5fd2:	ba 00 10 00 00       	mov    $0x1000,%edx
    5fd7:	2b 50 08             	sub    0x8(%eax),%edx
    5fda:	c7 40 08 00 00 00 00 	movl   $0x0,0x8(%eax)
    5fe1:	01 50 0c             	add    %edx,0xc(%eax)
    5fe4:	c3                   	ret    

00005fe5 <km_get_page>:
    5fe5:	53                   	push   %ebx
    5fe6:	8b 58 0c             	mov    0xc(%eax),%ebx
    5fe9:	81 c3 00 00 00 40    	add    $0x40000000,%ebx
    5fef:	c1 eb 0c             	shr    $0xc,%ebx
    5ff2:	c1 e3 05             	shl    $0x5,%ebx
    5ff5:	03 1d 00 00 00 00    	add    0x0,%ebx
			5ff7: R_386_32	mem_map
    5ffb:	89 1a                	mov    %ebx,(%edx)
    5ffd:	8b 58 08             	mov    0x8(%eax),%ebx
    6000:	8b 54 24 08          	mov    0x8(%esp),%edx
    6004:	89 1a                	mov    %ebx,(%edx)
    6006:	ba 00 10 00 00       	mov    $0x1000,%edx
    600b:	2b 50 08             	sub    0x8(%eax),%edx
    600e:	5b                   	pop    %ebx
    600f:	89 11                	mov    %edx,(%ecx)
    6011:	c3                   	ret    

00006012 <km_next_page>:
    6012:	ba 00 10 00 00       	mov    $0x1000,%edx
    6017:	2b 50 08             	sub    0x8(%eax),%edx
    601a:	c7 40 08 00 00 00 00 	movl   $0x0,0x8(%eax)
    6021:	01 50 0c             	add    %edx,0xc(%eax)
    6024:	c3                   	ret    

00006025 <vm_get_page>:
    6025:	57                   	push   %edi
    6026:	89 cf                	mov    %ecx,%edi
    6028:	56                   	push   %esi
    6029:	89 d6                	mov    %edx,%esi
    602b:	53                   	push   %ebx
    602c:	89 c3                	mov    %eax,%ebx
    602e:	8b 40 0c             	mov    0xc(%eax),%eax
    6031:	e8 fc ff ff ff       	call   6032 <vm_get_page+0xd>
			6032: R_386_PC32	vmalloc_to_page
    6036:	89 06                	mov    %eax,(%esi)
    6038:	8b 44 24 10          	mov    0x10(%esp),%eax
    603c:	8b 53 08             	mov    0x8(%ebx),%edx
    603f:	89 10                	mov    %edx,(%eax)
    6041:	b8 00 10 00 00       	mov    $0x1000,%eax
    6046:	2b 43 08             	sub    0x8(%ebx),%eax
    6049:	5b                   	pop    %ebx
    604a:	5e                   	pop    %esi
    604b:	89 07                	mov    %eax,(%edi)
    604d:	5f                   	pop    %edi
    604e:	c3                   	ret    

0000604f <dm_bio_destructor>:
    604f:	8b 50 40             	mov    0x40(%eax),%edx
    6052:	8b 52 10             	mov    0x10(%edx),%edx
    6055:	8b 52 04             	mov    0x4(%edx),%edx
    6058:	e9 fc ff ff ff       	jmp    6059 <dm_bio_destructor+0xa>
			6059: R_386_PC32	bio_free

0000605d <dec_count>:
    605d:	57                   	push   %edi
    605e:	85 c9                	test   %ecx,%ecx
    6060:	56                   	push   %esi
    6061:	53                   	push   %ebx
    6062:	74 0e                	je     6072 <dec_count+0x15>
    6064:	f0 0f ab 10          	lock bts %edx,(%eax)
    6068:	83 f9 a1             	cmp    $0xffffffa1,%ecx
    606b:	75 05                	jne    6072 <dec_count+0x15>
    606d:	f0 0f ab 50 04       	lock bts %edx,0x4(%eax)
    6072:	f0 ff 48 08          	lock decl 0x8(%eax)
    6076:	0f 94 c2             	sete   %dl
    6079:	84 d2                	test   %dl,%dl
    607b:	74 29                	je     60a6 <dec_count+0x49>
    607d:	8b 50 0c             	mov    0xc(%eax),%edx
    6080:	85 d2                	test   %edx,%edx
    6082:	74 0a                	je     608e <dec_count+0x31>
    6084:	5b                   	pop    %ebx
    6085:	89 d0                	mov    %edx,%eax
    6087:	5e                   	pop    %esi
    6088:	5f                   	pop    %edi
    6089:	e9 fc ff ff ff       	jmp    608a <dec_count+0x2d>
			608a: R_386_PC32	wake_up_process
    608e:	8b 50 10             	mov    0x10(%eax),%edx
    6091:	8b 70 18             	mov    0x18(%eax),%esi
    6094:	8b 18                	mov    (%eax),%ebx
    6096:	8b 78 14             	mov    0x14(%eax),%edi
    6099:	8b 12                	mov    (%edx),%edx
    609b:	e8 fc ff ff ff       	call   609c <dec_count+0x3f>
			609c: R_386_PC32	mempool_free
    60a0:	89 f2                	mov    %esi,%edx
    60a2:	89 d8                	mov    %ebx,%eax
    60a4:	ff d7                	call   *%edi
    60a6:	5b                   	pop    %ebx
    60a7:	5e                   	pop    %esi
    60a8:	5f                   	pop    %edi
    60a9:	c3                   	ret    

000060aa <dispatch_io>:
    60aa:	55                   	push   %ebp
    60ab:	89 cd                	mov    %ecx,%ebp
    60ad:	57                   	push   %edi
    60ae:	b9 04 00 00 00       	mov    $0x4,%ecx
    60b3:	56                   	push   %esi
    60b4:	53                   	push   %ebx
    60b5:	83 ec 30             	sub    $0x30,%esp
    60b8:	89 44 24 04          	mov    %eax,0x4(%esp)
    60bc:	0c c0                	or     $0xc0,%al
    60be:	8b 74 24 44          	mov    0x44(%esp),%esi
    60c2:	83 7c 24 4c 00       	cmpl   $0x0,0x4c(%esp)
    60c7:	0f 44 44 24 04       	cmove  0x4(%esp),%eax
    60cc:	89 54 24 10          	mov    %edx,0x10(%esp)
    60d0:	8d 7c 24 14          	lea    0x14(%esp),%edi
    60d4:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)
    60d6:	89 44 24 04          	mov    %eax,0x4(%esp)
    60da:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)
    60e1:	e9 5e 01 00 00       	jmp    6244 <dispatch_io+0x19a>
    60e6:	8b 7c 24 44          	mov    0x44(%esp),%edi
    60ea:	8d 74 24 14          	lea    0x14(%esp),%esi
    60ee:	b9 04 00 00 00       	mov    $0x4,%ecx
    60f3:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)
    60f5:	8b 7d 10             	mov    0x10(%ebp),%edi
    60f8:	8b 75 0c             	mov    0xc(%ebp),%esi
    60fb:	89 f8                	mov    %edi,%eax
    60fd:	09 f0                	or     %esi,%eax
    60ff:	0f 84 39 01 00 00    	je     623e <dispatch_io+0x194>
    6105:	89 f2                	mov    %esi,%edx
    6107:	89 f9                	mov    %edi,%ecx
    6109:	83 c2 07             	add    $0x7,%edx
    610c:	83 d1 00             	adc    $0x0,%ecx
    610f:	89 d0                	mov    %edx,%eax
    6111:	89 4c 24 0c          	mov    %ecx,0xc(%esp)
    6115:	89 ca                	mov    %ecx,%edx
    6117:	31 c9                	xor    %ecx,%ecx
    6119:	85 d2                	test   %edx,%edx
    611b:	89 d3                	mov    %edx,%ebx
    611d:	89 44 24 08          	mov    %eax,0x8(%esp)
    6121:	74 08                	je     612b <dispatch_io+0x81>
    6123:	89 d1                	mov    %edx,%ecx
    6125:	83 e3 07             	and    $0x7,%ebx
    6128:	c1 e9 03             	shr    $0x3,%ecx
    612b:	8b 44 24 08          	mov    0x8(%esp),%eax
    612f:	89 da                	mov    %ebx,%edx
    6131:	bb 08 00 00 00       	mov    $0x8,%ebx
    6136:	f7 f3                	div    %ebx
    6138:	89 ca                	mov    %ecx,%edx
    613a:	66 bb 00 01          	mov    $0x100,%bx
    613e:	89 54 24 0c          	mov    %edx,0xc(%esp)
    6142:	89 44 24 08          	mov    %eax,0x8(%esp)
    6146:	8b 45 00             	mov    0x0(%ebp),%eax
    6149:	e8 fc ff ff ff       	call   614a <dispatch_io+0xa0>
			614a: R_386_PC32	bio_get_nr_vecs
    614e:	8b 4c 24 48          	mov    0x48(%esp),%ecx
    6152:	89 c2                	mov    %eax,%edx
    6154:	8b 44 24 08          	mov    0x8(%esp),%eax
    6158:	39 d0                	cmp    %edx,%eax
    615a:	0f 4f c2             	cmovg  %edx,%eax
    615d:	8b 51 10             	mov    0x10(%ecx),%edx
    6160:	40                   	inc    %eax
    6161:	3d 00 01 00 00       	cmp    $0x100,%eax
    6166:	0f 46 d8             	cmovbe %eax,%ebx
    6169:	b8 10 00 00 00       	mov    $0x10,%eax
    616e:	8b 4a 04             	mov    0x4(%edx),%ecx
    6171:	89 da                	mov    %ebx,%edx
    6173:	e8 fc ff ff ff       	call   6174 <dispatch_io+0xca>
			6174: R_386_PC32	bio_alloc_bioset
    6178:	8b 55 10             	mov    0x10(%ebp),%edx
    617b:	89 c3                	mov    %eax,%ebx
    617d:	8b 45 0c             	mov    0xc(%ebp),%eax
    6180:	03 45 04             	add    0x4(%ebp),%eax
    6183:	13 55 08             	adc    0x8(%ebp),%edx
    6186:	29 f0                	sub    %esi,%eax
    6188:	19 fa                	sbb    %edi,%edx
    618a:	89 53 04             	mov    %edx,0x4(%ebx)
    618d:	8b 53 38             	mov    0x38(%ebx),%edx
    6190:	89 03                	mov    %eax,(%ebx)
    6192:	8b 45 00             	mov    0x0(%ebp),%eax
    6195:	c7 43 3c 66 62 00 00 	movl   $0x6266,0x3c(%ebx)
			6198: R_386_32	.text
    619c:	89 43 0c             	mov    %eax,0xc(%ebx)
    619f:	8b 44 24 48          	mov    0x48(%esp),%eax
    61a3:	c7 43 48 4f 60 00 00 	movl   $0x604f,0x48(%ebx)
			61a6: R_386_32	.text
    61aa:	89 43 40             	mov    %eax,0x40(%ebx)
    61ad:	8b 43 2c             	mov    0x2c(%ebx),%eax
    61b0:	48                   	dec    %eax
    61b1:	89 43 2c             	mov    %eax,0x2c(%ebx)
    61b4:	6b c0 0c             	imul   $0xc,%eax,%eax
    61b7:	8b 0c 24             	mov    (%esp),%ecx
    61ba:	89 4c 10 04          	mov    %ecx,0x4(%eax,%edx,1)
    61be:	89 6c 24 08          	mov    %ebp,0x8(%esp)
    61c2:	8d 6c 24 24          	lea    0x24(%esp),%ebp
    61c6:	55                   	push   %ebp
    61c7:	8b 44 24 48          	mov    0x48(%esp),%eax
    61cb:	8d 4c 24 2c          	lea    0x2c(%esp),%ecx
    61cf:	8d 54 24 30          	lea    0x30(%esp),%edx
    61d3:	ff 10                	call   *(%eax)
    61d5:	89 f1                	mov    %esi,%ecx
    61d7:	c1 e1 09             	shl    $0x9,%ecx
    61da:	8b 44 24 2c          	mov    0x2c(%esp),%eax
    61de:	5d                   	pop    %ebp
    61df:	39 c1                	cmp    %eax,%ecx
    61e1:	0f 47 c8             	cmova  %eax,%ecx
    61e4:	89 d8                	mov    %ebx,%eax
    61e6:	89 4c 24 28          	mov    %ecx,0x28(%esp)
    61ea:	ff 74 24 24          	pushl  0x24(%esp)
    61ee:	8b 54 24 30          	mov    0x30(%esp),%edx
    61f2:	e8 fc ff ff ff       	call   61f3 <dispatch_io+0x149>
			61f3: R_386_PC32	bio_add_page
    61f7:	5a                   	pop    %edx
    61f8:	85 c0                	test   %eax,%eax
    61fa:	74 22                	je     621e <dispatch_io+0x174>
    61fc:	8b 44 24 28          	mov    0x28(%esp),%eax
    6200:	31 d2                	xor    %edx,%edx
    6202:	c7 44 24 24 00 00 00 	movl   $0x0,0x24(%esp)
    6209:	00 
    620a:	c1 e8 09             	shr    $0x9,%eax
    620d:	29 c6                	sub    %eax,%esi
    620f:	8b 44 24 44          	mov    0x44(%esp),%eax
    6213:	19 d7                	sbb    %edx,%edi
    6215:	ff 50 04             	call   *0x4(%eax)
    6218:	89 f8                	mov    %edi,%eax
    621a:	09 f0                	or     %esi,%eax
    621c:	75 a4                	jne    61c2 <dispatch_io+0x118>
    621e:	8b 6c 24 08          	mov    0x8(%esp),%ebp
    6222:	8b 54 24 48          	mov    0x48(%esp),%edx
    6226:	f0 ff 42 08          	lock incl 0x8(%edx)
    622a:	8b 44 24 04          	mov    0x4(%esp),%eax
    622e:	89 da                	mov    %ebx,%edx
    6230:	e8 fc ff ff ff       	call   6231 <dispatch_io+0x187>
			6231: R_386_PC32	submit_bio
    6235:	89 f9                	mov    %edi,%ecx
    6237:	09 f1                	or     %esi,%ecx
    6239:	e9 c1 fe ff ff       	jmp    60ff <dispatch_io+0x55>
    623e:	ff 04 24             	incl   (%esp)
    6241:	83 c5 14             	add    $0x14,%ebp
    6244:	8b 44 24 10          	mov    0x10(%esp),%eax
    6248:	39 04 24             	cmp    %eax,(%esp)
    624b:	0f 82 95 fe ff ff    	jb     60e6 <dispatch_io+0x3c>
    6251:	8b 44 24 48          	mov    0x48(%esp),%eax
    6255:	31 c9                	xor    %ecx,%ecx
    6257:	31 d2                	xor    %edx,%edx
    6259:	e8 ff fd ff ff       	call   605d <dec_count>
    625e:	83 c4 30             	add    $0x30,%esp
    6261:	5b                   	pop    %ebx
    6262:	5e                   	pop    %esi
    6263:	5f                   	pop    %edi
    6264:	5d                   	pop    %ebp
    6265:	c3                   	ret    

00006266 <endio>:
    6266:	55                   	push   %ebp
    6267:	85 d2                	test   %edx,%edx
    6269:	57                   	push   %edi
    626a:	89 d5                	mov    %edx,%ebp
    626c:	56                   	push   %esi
    626d:	89 c6                	mov    %eax,%esi
    626f:	53                   	push   %ebx
    6270:	74 0b                	je     627d <endio+0x17>
    6272:	f6 40 14 01          	testb  $0x1,0x14(%eax)
    6276:	75 05                	jne    627d <endio+0x17>
    6278:	e8 fc ff ff ff       	call   6279 <endio+0x13>
			6279: R_386_PC32	zero_fill_bio
    627d:	8b 46 2c             	mov    0x2c(%esi),%eax
    6280:	8b 56 38             	mov    0x38(%esi),%edx
    6283:	8b 5e 40             	mov    0x40(%esi),%ebx
    6286:	6b c8 0c             	imul   $0xc,%eax,%ecx
    6289:	40                   	inc    %eax
    628a:	8b 7c 11 04          	mov    0x4(%ecx,%edx,1),%edi
    628e:	89 46 2c             	mov    %eax,0x2c(%esi)
    6291:	89 f0                	mov    %esi,%eax
    6293:	e8 fc ff ff ff       	call   6294 <endio+0x2e>
			6294: R_386_PC32	bio_put
    6298:	89 e9                	mov    %ebp,%ecx
    629a:	89 d8                	mov    %ebx,%eax
    629c:	89 fa                	mov    %edi,%edx
    629e:	5b                   	pop    %ebx
    629f:	5e                   	pop    %esi
    62a0:	5f                   	pop    %edi
    62a1:	5d                   	pop    %ebp
    62a2:	e9 b6 fd ff ff       	jmp    605d <dec_count>

000062a7 <dm_io>:
    62a7:	55                   	push   %ebp
    62a8:	57                   	push   %edi
    62a9:	56                   	push   %esi
    62aa:	53                   	push   %ebx
    62ab:	83 ec 38             	sub    $0x38,%esp
    62ae:	89 14 24             	mov    %edx,(%esp)
    62b1:	89 4c 24 04          	mov    %ecx,0x4(%esp)
    62b5:	8b 48 04             	mov    0x4(%eax),%ecx
    62b8:	83 f9 01             	cmp    $0x1,%ecx
    62bb:	74 2f                	je     62ec <dm_io+0x45>
    62bd:	72 15                	jb     62d4 <dm_io+0x2d>
    62bf:	83 f9 02             	cmp    $0x2,%ecx
    62c2:	74 3d                	je     6301 <dm_io+0x5a>
    62c4:	83 f9 03             	cmp    $0x3,%ecx
    62c7:	ba ea ff ff ff       	mov    $0xffffffea,%edx
    62cc:	0f 85 af 01 00 00    	jne    6481 <dm_io+0x1da>
    62d2:	eb 42                	jmp    6316 <dm_io+0x6f>
    62d4:	8b 48 0c             	mov    0xc(%eax),%ecx
    62d7:	8b 50 08             	mov    0x8(%eax),%edx
    62da:	c7 44 24 28 88 5f 00 	movl   $0x5f88,0x28(%esp)
    62e1:	00 
			62de: R_386_32	.text
    62e2:	c7 44 24 2c a5 5f 00 	movl   $0x5fa5,0x2c(%esp)
    62e9:	00 
			62e6: R_386_32	.text
    62ea:	eb 45                	jmp    6331 <dm_io+0x8a>
    62ec:	8b 50 08             	mov    0x8(%eax),%edx
    62ef:	c7 44 24 28 b5 5f 00 	movl   $0x5fb5,0x28(%esp)
    62f6:	00 
			62f3: R_386_32	.text
    62f7:	c7 44 24 2c cd 5f 00 	movl   $0x5fcd,0x2c(%esp)
    62fe:	00 
			62fb: R_386_32	.text
    62ff:	eb 34                	jmp    6335 <dm_io+0x8e>
    6301:	8b 50 08             	mov    0x8(%eax),%edx
    6304:	c7 44 24 28 25 60 00 	movl   $0x6025,0x28(%esp)
    630b:	00 
			6308: R_386_32	.text
    630c:	c7 44 24 2c d2 5f 00 	movl   $0x5fd2,0x2c(%esp)
    6313:	00 
			6310: R_386_32	.text
    6314:	eb 13                	jmp    6329 <dm_io+0x82>
    6316:	8b 50 08             	mov    0x8(%eax),%edx
    6319:	c7 44 24 28 e5 5f 00 	movl   $0x5fe5,0x28(%esp)
    6320:	00 
			631d: R_386_32	.text
    6321:	c7 44 24 2c 12 60 00 	movl   $0x6012,0x2c(%esp)
    6328:	00 
			6325: R_386_32	.text
    6329:	89 d1                	mov    %edx,%ecx
    632b:	81 e1 ff 0f 00 00    	and    $0xfff,%ecx
    6331:	89 4c 24 30          	mov    %ecx,0x30(%esp)
    6335:	89 54 24 34          	mov    %edx,0x34(%esp)
    6339:	8b 58 10             	mov    0x10(%eax),%ebx
    633c:	85 db                	test   %ebx,%ebx
    633e:	0f 85 bc 00 00 00    	jne    6400 <dm_io+0x159>
    6344:	83 3c 24 01          	cmpl   $0x1,(%esp)
    6348:	8b 18                	mov    (%eax),%ebx
    634a:	8b 78 18             	mov    0x18(%eax),%edi
    634d:	76 19                	jbe    6368 <dm_io+0xc1>
    634f:	f6 c3 01             	test   $0x1,%bl
    6352:	75 14                	jne    6368 <dm_io+0xc1>
    6354:	ba 6b 01 00 00       	mov    $0x16b,%edx
    6359:	b8 3d 17 00 00       	mov    $0x173d,%eax
			635a: R_386_32	.rodata.str1.1
    635e:	e8 fc ff ff ff       	call   635f <dm_io+0xb8>
			635f: R_386_PC32	warn_slowpath_null
    6363:	e9 c6 00 00 00       	jmp    642e <dm_io+0x187>
    6368:	64 8b 35 00 00 00 00 	mov    %fs:0x0,%esi
			636b: R_386_32	per_cpu__current_task
    636f:	8d 6c 24 0c          	lea    0xc(%esp),%ebp
    6373:	89 74 24 08          	mov    %esi,0x8(%esp)
    6377:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
    637e:	00 
    637f:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
    6386:	00 
    6387:	c7 44 24 14 01 00 00 	movl   $0x1,0x14(%esp)
    638e:	00 
    638f:	89 74 24 18          	mov    %esi,0x18(%esp)
    6393:	89 7c 24 1c          	mov    %edi,0x1c(%esp)
    6397:	6a 01                	push   $0x1
    6399:	55                   	push   %ebp
    639a:	8d 44 24 30          	lea    0x30(%esp),%eax
    639e:	50                   	push   %eax
    639f:	8b 4c 24 10          	mov    0x10(%esp),%ecx
    63a3:	89 d8                	mov    %ebx,%eax
    63a5:	8b 54 24 0c          	mov    0xc(%esp),%edx
    63a9:	e8 fc fc ff ff       	call   60aa <dispatch_io>
    63ae:	83 c4 0c             	add    $0xc,%esp
    63b1:	b8 02 00 00 00       	mov    $0x2,%eax
    63b6:	8b 54 24 08          	mov    0x8(%esp),%edx
    63ba:	87 02                	xchg   %eax,(%edx)
    63bc:	8b 44 24 14          	mov    0x14(%esp),%eax
    63c0:	85 c0                	test   %eax,%eax
    63c2:	74 07                	je     63cb <dm_io+0x124>
    63c4:	e8 fc ff ff ff       	call   63c5 <dm_io+0x11e>
			63c5: R_386_PC32	io_schedule
    63c9:	eb e6                	jmp    63b1 <dm_io+0x10a>
    63cb:	87 06                	xchg   %eax,(%esi)
    63cd:	83 7c 24 10 00       	cmpl   $0x0,0x10(%esp)
    63d2:	74 0a                	je     63de <dm_io+0x137>
    63d4:	f6 c3 20             	test   $0x20,%bl
    63d7:	74 05                	je     63de <dm_io+0x137>
    63d9:	83 e3 df             	and    $0xffffffdf,%ebx
    63dc:	eb 99                	jmp    6377 <dm_io+0xd0>
    63de:	83 7c 24 4c 00       	cmpl   $0x0,0x4c(%esp)
    63e3:	74 0a                	je     63ef <dm_io+0x148>
    63e5:	8b 44 24 0c          	mov    0xc(%esp),%eax
    63e9:	8b 54 24 4c          	mov    0x4c(%esp),%edx
    63ed:	89 02                	mov    %eax,(%edx)
    63ef:	83 7c 24 0c 01       	cmpl   $0x1,0xc(%esp)
    63f4:	19 d2                	sbb    %edx,%edx
    63f6:	f7 d2                	not    %edx
    63f8:	83 e2 fb             	and    $0xfffffffb,%edx
    63fb:	e9 81 00 00 00       	jmp    6481 <dm_io+0x1da>
    6400:	83 3c 24 01          	cmpl   $0x1,(%esp)
    6404:	8b 70 14             	mov    0x14(%eax),%esi
    6407:	8b 28                	mov    (%eax),%ebp
    6409:	8b 78 18             	mov    0x18(%eax),%edi
    640c:	76 27                	jbe    6435 <dm_io+0x18e>
    640e:	f7 c5 01 00 00 00    	test   $0x1,%ebp
    6414:	75 1f                	jne    6435 <dm_io+0x18e>
    6416:	ba 94 01 00 00       	mov    $0x194,%edx
    641b:	b8 3d 17 00 00       	mov    $0x173d,%eax
			641c: R_386_32	.rodata.str1.1
    6420:	e8 fc ff ff ff       	call   6421 <dm_io+0x17a>
			6421: R_386_PC32	warn_slowpath_null
    6425:	89 f2                	mov    %esi,%edx
    6427:	b8 01 00 00 00       	mov    $0x1,%eax
    642c:	ff d3                	call   *%ebx
    642e:	ba fb ff ff ff       	mov    $0xfffffffb,%edx
    6433:	eb 4c                	jmp    6481 <dm_io+0x1da>
    6435:	8b 07                	mov    (%edi),%eax
    6437:	ba 10 00 00 00       	mov    $0x10,%edx
    643c:	e8 fc ff ff ff       	call   643d <dm_io+0x196>
			643d: R_386_PC32	mempool_alloc
    6441:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
    6447:	c7 40 04 00 00 00 00 	movl   $0x0,0x4(%eax)
    644e:	c7 40 08 01 00 00 00 	movl   $0x1,0x8(%eax)
    6455:	c7 40 0c 00 00 00 00 	movl   $0x0,0xc(%eax)
    645c:	89 78 10             	mov    %edi,0x10(%eax)
    645f:	89 58 14             	mov    %ebx,0x14(%eax)
    6462:	89 70 18             	mov    %esi,0x18(%eax)
    6465:	6a 00                	push   $0x0
    6467:	50                   	push   %eax
    6468:	8d 44 24 30          	lea    0x30(%esp),%eax
    646c:	50                   	push   %eax
    646d:	8b 54 24 0c          	mov    0xc(%esp),%edx
    6471:	89 e8                	mov    %ebp,%eax
    6473:	8b 4c 24 10          	mov    0x10(%esp),%ecx
    6477:	e8 2e fc ff ff       	call   60aa <dispatch_io>
    647c:	31 d2                	xor    %edx,%edx
    647e:	83 c4 0c             	add    $0xc,%esp
    6481:	83 c4 38             	add    $0x38,%esp
    6484:	89 d0                	mov    %edx,%eax
    6486:	5b                   	pop    %ebx
    6487:	5e                   	pop    %esi
    6488:	5f                   	pop    %edi
    6489:	5d                   	pop    %ebp
    648a:	c3                   	ret    

0000648b <dm_io_client_destroy>:
    648b:	53                   	push   %ebx
    648c:	89 c3                	mov    %eax,%ebx
    648e:	8b 00                	mov    (%eax),%eax
    6490:	e8 fc ff ff ff       	call   6491 <dm_io_client_destroy+0x6>
			6491: R_386_PC32	mempool_destroy
    6495:	8b 43 04             	mov    0x4(%ebx),%eax
    6498:	e8 fc ff ff ff       	call   6499 <dm_io_client_destroy+0xe>
			6499: R_386_PC32	bioset_free
    649d:	89 d8                	mov    %ebx,%eax
    649f:	5b                   	pop    %ebx
    64a0:	e9 fc ff ff ff       	jmp    64a1 <dm_io_client_destroy+0x16>
			64a1: R_386_PC32	kfree

000064a5 <dm_io_client_resize>:
    64a5:	53                   	push   %ebx
    64a6:	89 d3                	mov    %edx,%ebx
    64a8:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
    64af:	8b 03                	mov    (%ebx),%eax
    64b1:	b9 d0 00 00 00       	mov    $0xd0,%ecx
    64b6:	5b                   	pop    %ebx
    64b7:	e9 fc ff ff ff       	jmp    64b8 <dm_io_client_resize+0x13>
			64b8: R_386_PC32	mempool_resize

000064bc <dm_io_client_create>:
    64bc:	55                   	push   %ebp
    64bd:	ba d0 00 00 00       	mov    $0xd0,%edx
    64c2:	57                   	push   %edi
    64c3:	89 c5                	mov    %eax,%ebp
    64c5:	56                   	push   %esi
    64c6:	b8 0c 03 00 00       	mov    $0x30c,%eax
			64c7: R_386_32	kmalloc_caches
    64cb:	53                   	push   %ebx
    64cc:	e8 fc ff ff ff       	call   64cd <dm_io_client_create+0x11>
			64cd: R_386_PC32	kmem_cache_alloc
    64d1:	8b 3d 10 03 00 00    	mov    0x310,%edi
			64d3: R_386_32	kmalloc_caches
    64d7:	83 3d 04 00 00 00 00 	cmpl   $0x0,0x4
			64d9: R_386_32	__tracepoint_kmalloc
    64de:	89 c3                	mov    %eax,%ebx
    64e0:	74 28                	je     650a <dm_io_client_create+0x4e>
    64e2:	8b 35 10 00 00 00    	mov    0x10,%esi
			64e4: R_386_32	__tracepoint_kmalloc
    64e8:	85 f6                	test   %esi,%esi
    64ea:	74 1e                	je     650a <dm_io_client_create+0x4e>
    64ec:	68 d0 00 00 00       	push   $0xd0
    64f1:	b9 08 00 00 00       	mov    $0x8,%ecx
    64f6:	b8 bc 64 00 00       	mov    $0x64bc,%eax
			64f7: R_386_32	.text
    64fb:	89 da                	mov    %ebx,%edx
    64fd:	57                   	push   %edi
    64fe:	ff 16                	call   *(%esi)
    6500:	83 c6 04             	add    $0x4,%esi
    6503:	83 3e 00             	cmpl   $0x0,(%esi)
    6506:	59                   	pop    %ecx
    6507:	58                   	pop    %eax
    6508:	eb e0                	jmp    64ea <dm_io_client_create+0x2e>
    650a:	85 db                	test   %ebx,%ebx
    650c:	89 de                	mov    %ebx,%esi
    650e:	74 44                	je     6554 <dm_io_client_create+0x98>
    6510:	ba 00 00 00 00       	mov    $0x0,%edx
			6511: R_386_32	mempool_kmalloc
    6515:	b9 00 00 00 00       	mov    $0x0,%ecx
			6516: R_386_32	mempool_kfree
    651a:	8d 04 ad 00 00 00 00 	lea    0x0(,%ebp,4),%eax
    6521:	6a 1c                	push   $0x1c
    6523:	e8 fc ff ff ff       	call   6524 <dm_io_client_create+0x68>
			6524: R_386_PC32	mempool_create
    6528:	85 c0                	test   %eax,%eax
    652a:	89 03                	mov    %eax,(%ebx)
    652c:	5a                   	pop    %edx
    652d:	74 13                	je     6542 <dm_io_client_create+0x86>
    652f:	31 d2                	xor    %edx,%edx
    6531:	b8 10 00 00 00       	mov    $0x10,%eax
    6536:	e8 fc ff ff ff       	call   6537 <dm_io_client_create+0x7b>
			6537: R_386_PC32	bioset_create
    653b:	85 c0                	test   %eax,%eax
    653d:	89 43 04             	mov    %eax,0x4(%ebx)
    6540:	75 17                	jne    6559 <dm_io_client_create+0x9d>
    6542:	8b 03                	mov    (%ebx),%eax
    6544:	85 c0                	test   %eax,%eax
    6546:	74 05                	je     654d <dm_io_client_create+0x91>
    6548:	e8 fc ff ff ff       	call   6549 <dm_io_client_create+0x8d>
			6549: R_386_PC32	mempool_destroy
    654d:	89 d8                	mov    %ebx,%eax
    654f:	e8 fc ff ff ff       	call   6550 <dm_io_client_create+0x94>
			6550: R_386_PC32	kfree
    6554:	be f4 ff ff ff       	mov    $0xfffffff4,%esi
    6559:	89 f0                	mov    %esi,%eax
    655b:	5b                   	pop    %ebx
    655c:	5e                   	pop    %esi
    655d:	5f                   	pop    %edi
    655e:	5d                   	pop    %ebp
    655f:	c3                   	ret    

00006560 <drop_pages>:
    6560:	56                   	push   %esi
    6561:	53                   	push   %ebx
    6562:	89 c3                	mov    %eax,%ebx
    6564:	eb 15                	jmp    657b <drop_pages+0x1b>
    6566:	8b 43 04             	mov    0x4(%ebx),%eax
    6569:	31 d2                	xor    %edx,%edx
    656b:	8b 33                	mov    (%ebx),%esi
    656d:	e8 fc ff ff ff       	call   656e <drop_pages+0xe>
			656e: R_386_PC32	__free_pages
    6572:	89 d8                	mov    %ebx,%eax
    6574:	89 f3                	mov    %esi,%ebx
    6576:	e8 fc ff ff ff       	call   6577 <drop_pages+0x17>
			6577: R_386_PC32	kfree
    657b:	85 db                	test   %ebx,%ebx
    657d:	75 e7                	jne    6566 <drop_pages+0x6>
    657f:	5b                   	pop    %ebx
    6580:	5e                   	pop    %esi
    6581:	c3                   	ret    

00006582 <dm_kcopyd_client_destroy>:
    6582:	57                   	push   %edi
    6583:	56                   	push   %esi
    6584:	53                   	push   %ebx
    6585:	89 c3                	mov    %eax,%ebx
    6587:	83 ec 14             	sub    $0x14,%esp
    658a:	8b 40 20             	mov    0x20(%eax),%eax
    658d:	85 c0                	test   %eax,%eax
    658f:	74 52                	je     65e3 <dm_kcopyd_client_destroy+0x61>
    6591:	31 c0                	xor    %eax,%eax
    6593:	89 e7                	mov    %esp,%edi
    6595:	b9 05 00 00 00       	mov    $0x5,%ecx
    659a:	f3 ab                	rep stos %eax,%es:(%edi)
    659c:	8d 44 24 0c          	lea    0xc(%esp),%eax
    65a0:	64 8b 15 00 00 00 00 	mov    %fs:0x0,%edx
			65a3: R_386_32	per_cpu__current_task
    65a7:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)
    65ae:	00 
			65ab: R_386_32	autoremove_wake_function
    65af:	8d 73 14             	lea    0x14(%ebx),%esi
    65b2:	89 54 24 04          	mov    %edx,0x4(%esp)
    65b6:	89 44 24 0c          	mov    %eax,0xc(%esp)
    65ba:	89 44 24 10          	mov    %eax,0x10(%esp)
    65be:	89 f0                	mov    %esi,%eax
    65c0:	b9 02 00 00 00       	mov    $0x2,%ecx
    65c5:	89 e2                	mov    %esp,%edx
    65c7:	e8 fc ff ff ff       	call   65c8 <dm_kcopyd_client_destroy+0x46>
			65c8: R_386_PC32	prepare_to_wait
    65cc:	8b 43 20             	mov    0x20(%ebx),%eax
    65cf:	85 c0                	test   %eax,%eax
    65d1:	74 07                	je     65da <dm_kcopyd_client_destroy+0x58>
    65d3:	e8 fc ff ff ff       	call   65d4 <dm_kcopyd_client_destroy+0x52>
			65d4: R_386_PC32	schedule
    65d8:	eb e4                	jmp    65be <dm_kcopyd_client_destroy+0x3c>
    65da:	89 e2                	mov    %esp,%edx
    65dc:	89 f0                	mov    %esi,%eax
    65de:	e8 fc ff ff ff       	call   65df <dm_kcopyd_client_destroy+0x5d>
			65df: R_386_PC32	finish_wait
    65e3:	8d 43 40             	lea    0x40(%ebx),%eax
    65e6:	39 43 40             	cmp    %eax,0x40(%ebx)
    65e9:	74 04                	je     65ef <dm_kcopyd_client_destroy+0x6d>
    65eb:	0f 0b                	ud2a   
    65ed:	eb fe                	jmp    65ed <dm_kcopyd_client_destroy+0x6b>
    65ef:	8d 43 48             	lea    0x48(%ebx),%eax
    65f2:	39 43 48             	cmp    %eax,0x48(%ebx)
    65f5:	74 04                	je     65fb <dm_kcopyd_client_destroy+0x79>
    65f7:	0f 0b                	ud2a   
    65f9:	eb fe                	jmp    65f9 <dm_kcopyd_client_destroy+0x77>
    65fb:	8d 43 50             	lea    0x50(%ebx),%eax
    65fe:	39 43 50             	cmp    %eax,0x50(%ebx)
    6601:	74 04                	je     6607 <dm_kcopyd_client_destroy+0x85>
    6603:	0f 0b                	ud2a   
    6605:	eb fe                	jmp    6605 <dm_kcopyd_client_destroy+0x83>
    6607:	8b 43 28             	mov    0x28(%ebx),%eax
    660a:	e8 fc ff ff ff       	call   660b <dm_kcopyd_client_destroy+0x89>
			660b: R_386_PC32	destroy_workqueue
    660f:	8b 43 10             	mov    0x10(%ebx),%eax
    6612:	e8 fc ff ff ff       	call   6613 <dm_kcopyd_client_destroy+0x91>
			6613: R_386_PC32	dm_io_client_destroy
    6617:	8b 43 0c             	mov    0xc(%ebx),%eax
    661a:	3b 43 08             	cmp    0x8(%ebx),%eax
    661d:	74 04                	je     6623 <dm_kcopyd_client_destroy+0xa1>
    661f:	0f 0b                	ud2a   
    6621:	eb fe                	jmp    6621 <dm_kcopyd_client_destroy+0x9f>
    6623:	8b 43 04             	mov    0x4(%ebx),%eax
    6626:	e8 35 ff ff ff       	call   6560 <drop_pages>
    662b:	8b 43 24             	mov    0x24(%ebx),%eax
    662e:	c7 43 04 00 00 00 00 	movl   $0x0,0x4(%ebx)
    6635:	c7 43 08 00 00 00 00 	movl   $0x0,0x8(%ebx)
    663c:	c7 43 0c 00 00 00 00 	movl   $0x0,0xc(%ebx)
    6643:	e8 fc ff ff ff       	call   6644 <dm_kcopyd_client_destroy+0xc2>
			6644: R_386_PC32	mempool_destroy
    6648:	89 d8                	mov    %ebx,%eax
    664a:	e8 fc ff ff ff       	call   664b <dm_kcopyd_client_destroy+0xc9>
			664b: R_386_PC32	kfree
    664f:	83 c4 14             	add    $0x14,%esp
    6652:	5b                   	pop    %ebx
    6653:	5e                   	pop    %esi
    6654:	5f                   	pop    %edi
    6655:	c3                   	ret    

00006656 <push>:
    6656:	55                   	push   %ebp
    6657:	57                   	push   %edi
    6658:	89 d7                	mov    %edx,%edi
    665a:	56                   	push   %esi
    665b:	53                   	push   %ebx
    665c:	8b 32                	mov    (%edx),%esi
    665e:	89 c3                	mov    %eax,%ebx
    6660:	8d 6f 04             	lea    0x4(%edi),%ebp
    6663:	83 c6 3c             	add    $0x3c,%esi
    6666:	89 f0                	mov    %esi,%eax
    6668:	e8 fc ff ff ff       	call   6669 <push+0x13>
			6669: R_386_PC32	_spin_lock_irqsave
    666d:	8b 4b 04             	mov    0x4(%ebx),%ecx
    6670:	89 6b 04             	mov    %ebp,0x4(%ebx)
    6673:	89 5f 04             	mov    %ebx,0x4(%edi)
    6676:	89 4f 08             	mov    %ecx,0x8(%edi)
    6679:	89 29                	mov    %ebp,(%ecx)
    667b:	89 c2                	mov    %eax,%edx
    667d:	89 f0                	mov    %esi,%eax
    667f:	5b                   	pop    %ebx
    6680:	5e                   	pop    %esi
    6681:	5f                   	pop    %edi
    6682:	5d                   	pop    %ebp
    6683:	e9 fc ff ff ff       	jmp    6684 <push+0x2e>
			6684: R_386_PC32	_spin_unlock_irqrestore

00006688 <run_pages_job>:
    6688:	57                   	push   %edi
    6689:	56                   	push   %esi
    668a:	89 c6                	mov    %eax,%esi
    668c:	53                   	push   %ebx
    668d:	8b 40 40             	mov    0x40(%eax),%eax
    6690:	03 86 d4 00 00 00    	add    0xd4(%esi),%eax
    6696:	8b 56 44             	mov    0x44(%esi),%edx
    6699:	13 96 d8 00 00 00    	adc    0xd8(%esi),%edx
    669f:	8b 1e                	mov    (%esi),%ebx
    66a1:	83 c0 07             	add    $0x7,%eax
    66a4:	83 d2 00             	adc    $0x0,%edx
    66a7:	0f ac d0 03          	shrd   $0x3,%edx,%eax
    66ab:	89 c7                	mov    %eax,%edi
    66ad:	89 86 dc 00 00 00    	mov    %eax,0xdc(%esi)
    66b3:	89 d8                	mov    %ebx,%eax
    66b5:	e8 fc ff ff ff       	call   66b6 <run_pages_job+0x2e>
			66b6: R_386_PC32	_spin_lock
    66ba:	8b 43 0c             	mov    0xc(%ebx),%eax
    66bd:	39 f8                	cmp    %edi,%eax
    66bf:	73 09                	jae    66ca <run_pages_job+0x42>
    66c1:	fe 03                	incb   (%ebx)
    66c3:	b8 01 00 00 00       	mov    $0x1,%eax
    66c8:	eb 30                	jmp    66fa <run_pages_job+0x72>
    66ca:	29 f8                	sub    %edi,%eax
    66cc:	89 43 0c             	mov    %eax,0xc(%ebx)
    66cf:	8b 43 04             	mov    0x4(%ebx),%eax
    66d2:	89 86 e0 00 00 00    	mov    %eax,0xe0(%esi)
    66d8:	eb 02                	jmp    66dc <run_pages_job+0x54>
    66da:	89 d0                	mov    %edx,%eax
    66dc:	4f                   	dec    %edi
    66dd:	8b 10                	mov    (%eax),%edx
    66df:	75 f9                	jne    66da <run_pages_job+0x52>
    66e1:	89 53 04             	mov    %edx,0x4(%ebx)
    66e4:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
    66ea:	fe 03                	incb   (%ebx)
    66ec:	8b 06                	mov    (%esi),%eax
    66ee:	89 f2                	mov    %esi,%edx
    66f0:	83 c0 48             	add    $0x48,%eax
    66f3:	e8 5e ff ff ff       	call   6656 <push>
    66f8:	31 c0                	xor    %eax,%eax
    66fa:	5b                   	pop    %ebx
    66fb:	5e                   	pop    %esi
    66fc:	5f                   	pop    %edi
    66fd:	c3                   	ret    

000066fe <process_jobs>:
    66fe:	55                   	push   %ebp
    66ff:	89 d5                	mov    %edx,%ebp
    6701:	57                   	push   %edi
    6702:	31 ff                	xor    %edi,%edi
    6704:	56                   	push   %esi
    6705:	53                   	push   %ebx
    6706:	89 c3                	mov    %eax,%ebx
    6708:	83 ec 08             	sub    $0x8,%esp
    670b:	8d 42 3c             	lea    0x3c(%edx),%eax
    670e:	89 4c 24 04          	mov    %ecx,0x4(%esp)
    6712:	89 04 24             	mov    %eax,(%esp)
    6715:	eb 57                	jmp    676e <process_jobs+0x70>
    6717:	89 f0                	mov    %esi,%eax
    6719:	ff 54 24 04          	call   *0x4(%esp)
    671d:	83 f8 00             	cmp    $0x0,%eax
    6720:	7d 22                	jge    6744 <process_jobs+0x46>
    6722:	83 7e 18 01          	cmpl   $0x1,0x18(%esi)
    6726:	75 09                	jne    6731 <process_jobs+0x33>
    6728:	c7 46 14 ff ff ff ff 	movl   $0xffffffff,0x14(%esi)
    672f:	eb 07                	jmp    6738 <process_jobs+0x3a>
    6731:	c7 46 10 01 00 00 00 	movl   $0x1,0x10(%esi)
    6738:	8d 45 40             	lea    0x40(%ebp),%eax
    673b:	89 f2                	mov    %esi,%edx
    673d:	e8 14 ff ff ff       	call   6656 <push>
    6742:	eb 68                	jmp    67ac <process_jobs+0xae>
    6744:	74 27                	je     676d <process_jobs+0x6f>
    6746:	8b 2e                	mov    (%esi),%ebp
    6748:	83 c5 3c             	add    $0x3c,%ebp
    674b:	89 e8                	mov    %ebp,%eax
    674d:	e8 fc ff ff ff       	call   674e <process_jobs+0x50>
			674e: R_386_PC32	_spin_lock_irqsave
    6752:	8d 4e 04             	lea    0x4(%esi),%ecx
    6755:	89 c2                	mov    %eax,%edx
    6757:	8b 03                	mov    (%ebx),%eax
    6759:	89 48 04             	mov    %ecx,0x4(%eax)
    675c:	89 46 04             	mov    %eax,0x4(%esi)
    675f:	89 e8                	mov    %ebp,%eax
    6761:	89 5e 08             	mov    %ebx,0x8(%esi)
    6764:	89 0b                	mov    %ecx,(%ebx)
    6766:	e8 fc ff ff ff       	call   6767 <process_jobs+0x69>
			6767: R_386_PC32	_spin_unlock_irqrestore
    676b:	eb 3f                	jmp    67ac <process_jobs+0xae>
    676d:	47                   	inc    %edi
    676e:	8b 04 24             	mov    (%esp),%eax
    6771:	31 f6                	xor    %esi,%esi
    6773:	e8 fc ff ff ff       	call   6774 <process_jobs+0x76>
			6774: R_386_PC32	_spin_lock_irqsave
    6778:	89 c2                	mov    %eax,%edx
    677a:	8b 03                	mov    (%ebx),%eax
    677c:	39 d8                	cmp    %ebx,%eax
    677e:	74 1c                	je     679c <process_jobs+0x9e>
    6780:	8d 70 fc             	lea    -0x4(%eax),%esi
    6783:	8b 46 04             	mov    0x4(%esi),%eax
    6786:	8b 4e 08             	mov    0x8(%esi),%ecx
    6789:	89 48 04             	mov    %ecx,0x4(%eax)
    678c:	89 01                	mov    %eax,(%ecx)
    678e:	c7 46 04 00 01 10 00 	movl   $0x100100,0x4(%esi)
    6795:	c7 46 08 00 02 20 00 	movl   $0x200200,0x8(%esi)
    679c:	8b 04 24             	mov    (%esp),%eax
    679f:	e8 fc ff ff ff       	call   67a0 <process_jobs+0xa2>
			67a0: R_386_PC32	_spin_unlock_irqrestore
    67a4:	85 f6                	test   %esi,%esi
    67a6:	0f 85 6b ff ff ff    	jne    6717 <process_jobs+0x19>
    67ac:	5b                   	pop    %ebx
    67ad:	89 f8                	mov    %edi,%eax
    67af:	5e                   	pop    %esi
    67b0:	5b                   	pop    %ebx
    67b1:	5e                   	pop    %esi
    67b2:	5f                   	pop    %edi
    67b3:	5d                   	pop    %ebp
    67b4:	c3                   	ret    

000067b5 <do_work>:
    67b5:	56                   	push   %esi
    67b6:	b9 bc 68 00 00       	mov    $0x68bc,%ecx
			67b7: R_386_32	.text
    67bb:	8d 70 d4             	lea    -0x2c(%eax),%esi
    67be:	89 f2                	mov    %esi,%edx
    67c0:	53                   	push   %ebx
    67c1:	89 c3                	mov    %eax,%ebx
    67c3:	8d 40 14             	lea    0x14(%eax),%eax
    67c6:	e8 33 ff ff ff       	call   66fe <process_jobs>
    67cb:	89 f2                	mov    %esi,%edx
    67cd:	b9 88 66 00 00       	mov    $0x6688,%ecx
			67ce: R_386_32	.text
    67d2:	8d 43 24             	lea    0x24(%ebx),%eax
    67d5:	e8 24 ff ff ff       	call   66fe <process_jobs>
    67da:	8d 43 1c             	lea    0x1c(%ebx),%eax
    67dd:	89 f2                	mov    %esi,%edx
    67df:	b9 eb 67 00 00       	mov    $0x67eb,%ecx
			67e0: R_386_32	.text
    67e4:	5b                   	pop    %ebx
    67e5:	5e                   	pop    %esi
    67e6:	e9 13 ff ff ff       	jmp    66fe <process_jobs>

000067eb <run_io_job>:
    67eb:	55                   	push   %ebp
    67ec:	89 c2                	mov    %eax,%edx
    67ee:	57                   	push   %edi
    67ef:	b9 07 00 00 00       	mov    $0x7,%ecx
    67f4:	56                   	push   %esi
    67f5:	53                   	push   %ebx
    67f6:	83 ec 1c             	sub    $0x1c,%esp
    67f9:	8b 58 18             	mov    0x18(%eax),%ebx
    67fc:	8b a8 e0 00 00 00    	mov    0xe0(%eax),%ebp
    6802:	89 e7                	mov    %esp,%edi
    6804:	8b 00                	mov    (%eax),%eax
    6806:	80 cb c0             	or     $0xc0,%bl
    6809:	8b 70 10             	mov    0x10(%eax),%esi
    680c:	31 c0                	xor    %eax,%eax
    680e:	f3 ab                	rep stos %eax,%es:(%edi)
    6810:	89 1c 24             	mov    %ebx,(%esp)
    6813:	89 6c 24 08          	mov    %ebp,0x8(%esp)
    6817:	8b 82 d4 00 00 00    	mov    0xd4(%edx),%eax
    681d:	c7 44 24 10 5a 68 00 	movl   $0x685a,0x10(%esp)
    6824:	00 
			6821: R_386_32	.text
    6825:	89 54 24 14          	mov    %edx,0x14(%esp)
    6829:	89 74 24 18          	mov    %esi,0x18(%esp)
    682d:	89 44 24 0c          	mov    %eax,0xc(%esp)
    6831:	89 e0                	mov    %esp,%eax
    6833:	83 7a 18 00          	cmpl   $0x0,0x18(%edx)
    6837:	75 0c                	jne    6845 <run_io_job+0x5a>
    6839:	8d 4a 1c             	lea    0x1c(%edx),%ecx
    683c:	ba 01 00 00 00       	mov    $0x1,%edx
    6841:	6a 00                	push   $0x0
    6843:	eb 08                	jmp    684d <run_io_job+0x62>
    6845:	8d 4a 34             	lea    0x34(%edx),%ecx
    6848:	8b 52 30             	mov    0x30(%edx),%edx
    684b:	6a 00                	push   $0x0
    684d:	e8 fc ff ff ff       	call   684e <run_io_job+0x63>
			684e: R_386_PC32	dm_io
    6852:	83 c4 20             	add    $0x20,%esp
    6855:	5b                   	pop    %ebx
    6856:	5e                   	pop    %esi
    6857:	5f                   	pop    %edi
    6858:	5d                   	pop    %ebp
    6859:	c3                   	ret    

0000685a <complete_io>:
    685a:	85 c0                	test   %eax,%eax
    685c:	53                   	push   %ebx
    685d:	8b 1a                	mov    (%edx),%ebx
    685f:	74 18                	je     6879 <complete_io+0x1f>
    6861:	83 7a 18 01          	cmpl   $0x1,0x18(%edx)
    6865:	75 05                	jne    686c <complete_io+0x12>
    6867:	09 42 14             	or     %eax,0x14(%edx)
    686a:	eb 07                	jmp    6873 <complete_io+0x19>
    686c:	c7 42 10 01 00 00 00 	movl   $0x1,0x10(%edx)
    6873:	f6 42 0c 02          	testb  $0x2,0xc(%edx)
    6877:	74 06                	je     687f <complete_io+0x25>
    6879:	83 7a 18 01          	cmpl   $0x1,0x18(%edx)
    687d:	75 05                	jne    6884 <complete_io+0x2a>
    687f:	8d 43 40             	lea    0x40(%ebx),%eax
    6882:	eb 0a                	jmp    688e <complete_io+0x34>
    6884:	c7 42 18 01 00 00 00 	movl   $0x1,0x18(%edx)
    688b:	8d 43 48             	lea    0x48(%ebx),%eax
    688e:	e8 c3 fd ff ff       	call   6656 <push>
    6893:	8b 43 28             	mov    0x28(%ebx),%eax
    6896:	8d 53 2c             	lea    0x2c(%ebx),%edx
    6899:	5b                   	pop    %ebx
    689a:	e9 fc ff ff ff       	jmp    689b <complete_io+0x41>
			689b: R_386_PC32	queue_work

0000689f <dispatch_job>:
    689f:	53                   	push   %ebx
    68a0:	89 c2                	mov    %eax,%edx
    68a2:	8b 18                	mov    (%eax),%ebx
    68a4:	f0 ff 43 20          	lock incl 0x20(%ebx)
    68a8:	8d 43 50             	lea    0x50(%ebx),%eax
    68ab:	e8 a6 fd ff ff       	call   6656 <push>
    68b0:	8b 43 28             	mov    0x28(%ebx),%eax
    68b3:	8d 53 2c             	lea    0x2c(%ebx),%edx
    68b6:	5b                   	pop    %ebx
    68b7:	e9 fc ff ff ff       	jmp    68b8 <dispatch_job+0x19>
			68b8: R_386_PC32	queue_work

000068bc <run_complete_job>:
    68bc:	55                   	push   %ebp
    68bd:	57                   	push   %edi
    68be:	56                   	push   %esi
    68bf:	89 c6                	mov    %eax,%esi
    68c1:	53                   	push   %ebx
    68c2:	83 ec 0c             	sub    $0xc,%esp
    68c5:	8b b8 e8 00 00 00    	mov    0xe8(%eax),%edi
    68cb:	8b 40 10             	mov    0x10(%eax),%eax
    68ce:	8b 96 e0 00 00 00    	mov    0xe0(%esi),%edx
    68d4:	8b 6e 14             	mov    0x14(%esi),%ebp
    68d7:	8b 1e                	mov    (%esi),%ebx
    68d9:	89 44 24 08          	mov    %eax,0x8(%esp)
    68dd:	8b 86 e4 00 00 00    	mov    0xe4(%esi),%eax
    68e3:	85 d2                	test   %edx,%edx
    68e5:	89 44 24 04          	mov    %eax,0x4(%esp)
    68e9:	74 28                	je     6913 <run_complete_job+0x57>
    68eb:	89 d8                	mov    %ebx,%eax
    68ed:	89 14 24             	mov    %edx,(%esp)
    68f0:	e8 fc ff ff ff       	call   68f1 <run_complete_job+0x35>
			68f1: R_386_PC32	_spin_lock
    68f5:	8b 14 24             	mov    (%esp),%edx
    68f8:	89 d0                	mov    %edx,%eax
    68fa:	eb 05                	jmp    6901 <run_complete_job+0x45>
    68fc:	ff 43 0c             	incl   0xc(%ebx)
    68ff:	8b 00                	mov    (%eax),%eax
    6901:	83 38 00             	cmpl   $0x0,(%eax)
    6904:	75 f6                	jne    68fc <run_complete_job+0x40>
    6906:	8b 4b 04             	mov    0x4(%ebx),%ecx
    6909:	ff 43 0c             	incl   0xc(%ebx)
    690c:	89 08                	mov    %ecx,(%eax)
    690e:	89 53 04             	mov    %edx,0x4(%ebx)
    6911:	fe 03                	incb   (%ebx)
    6913:	8b 53 24             	mov    0x24(%ebx),%edx
    6916:	89 f0                	mov    %esi,%eax
    6918:	e8 fc ff ff ff       	call   6919 <run_complete_job+0x5d>
			6919: R_386_PC32	mempool_free
    691d:	89 f9                	mov    %edi,%ecx
    691f:	89 ea                	mov    %ebp,%edx
    6921:	8b 44 24 08          	mov    0x8(%esp),%eax
    6925:	ff 54 24 04          	call   *0x4(%esp)
    6929:	f0 ff 4b 20          	lock decl 0x20(%ebx)
    692d:	0f 94 c0             	sete   %al
    6930:	84 c0                	test   %al,%al
    6932:	74 15                	je     6949 <run_complete_job+0x8d>
    6934:	8d 43 14             	lea    0x14(%ebx),%eax
    6937:	b9 01 00 00 00       	mov    $0x1,%ecx
    693c:	6a 00                	push   $0x0
    693e:	ba 03 00 00 00       	mov    $0x3,%edx
    6943:	e8 fc ff ff ff       	call   6944 <run_complete_job+0x88>
			6944: R_386_PC32	__wake_up
    6948:	5f                   	pop    %edi
    6949:	83 c4 0c             	add    $0xc,%esp
    694c:	31 c0                	xor    %eax,%eax
    694e:	5b                   	pop    %ebx
    694f:	5e                   	pop    %esi
    6950:	5f                   	pop    %edi
    6951:	5d                   	pop    %ebp
    6952:	c3                   	ret    

00006953 <segment_complete>:
    6953:	55                   	push   %ebp
    6954:	89 c5                	mov    %eax,%ebp
    6956:	57                   	push   %edi
    6957:	89 d7                	mov    %edx,%edi
    6959:	56                   	push   %esi
    695a:	53                   	push   %ebx
    695b:	89 cb                	mov    %ecx,%ebx
    695d:	83 ec 14             	sub    $0x14,%esp
    6960:	8b 31                	mov    (%ecx),%esi
    6962:	8d 89 ec 00 00 00    	lea    0xec(%ecx),%ecx
    6968:	89 c8                	mov    %ecx,%eax
    696a:	89 0c 24             	mov    %ecx,(%esp)
    696d:	e8 fc ff ff ff       	call   696e <segment_complete+0x1b>
			696e: R_386_PC32	mutex_lock
    6972:	85 ed                	test   %ebp,%ebp
    6974:	8b 0c 24             	mov    (%esp),%ecx
    6977:	74 07                	je     6980 <segment_complete+0x2d>
    6979:	c7 43 10 01 00 00 00 	movl   $0x1,0x10(%ebx)
    6980:	85 ff                	test   %edi,%edi
    6982:	74 03                	je     6987 <segment_complete+0x34>
    6984:	09 7b 14             	or     %edi,0x14(%ebx)
    6987:	83 7b 10 00          	cmpl   $0x0,0x10(%ebx)
    698b:	75 06                	jne    6993 <segment_complete+0x40>
    698d:	83 7b 14 00          	cmpl   $0x0,0x14(%ebx)
    6991:	74 28                	je     69bb <segment_complete+0x68>
    6993:	f6 43 0c 02          	testb  $0x2,0xc(%ebx)
    6997:	75 22                	jne    69bb <segment_complete+0x68>
    6999:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)
    69a0:	00 
    69a1:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)
    69a8:	00 
    69a9:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
    69b0:	00 
    69b1:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)
    69b8:	00 
    69b9:	eb 79                	jmp    6a34 <segment_complete+0xe1>
    69bb:	8b 83 04 01 00 00    	mov    0x104(%ebx),%eax
    69c1:	8b 93 08 01 00 00    	mov    0x108(%ebx),%edx
    69c7:	89 44 24 0c          	mov    %eax,0xc(%esp)
    69cb:	89 54 24 10          	mov    %edx,0x10(%esp)
    69cf:	8b 43 28             	mov    0x28(%ebx),%eax
    69d2:	8b 53 2c             	mov    0x2c(%ebx),%edx
    69d5:	89 44 24 04          	mov    %eax,0x4(%esp)
    69d9:	8b 44 24 0c          	mov    0xc(%esp),%eax
    69dd:	89 54 24 08          	mov    %edx,0x8(%esp)
    69e1:	8b 54 24 10          	mov    0x10(%esp),%edx
    69e5:	29 44 24 04          	sub    %eax,0x4(%esp)
    69e9:	19 54 24 08          	sbb    %edx,0x8(%esp)
    69ed:	8b 54 24 08          	mov    0x8(%esp),%edx
    69f1:	0b 54 24 04          	or     0x4(%esp),%edx
    69f5:	74 3d                	je     6a34 <segment_complete+0xe1>
    69f7:	83 7c 24 08 00       	cmpl   $0x0,0x8(%esp)
    69fc:	77 0a                	ja     6a08 <segment_complete+0xb5>
    69fe:	81 7c 24 04 80 00 00 	cmpl   $0x80,0x4(%esp)
    6a05:	00 
    6a06:	76 10                	jbe    6a18 <segment_complete+0xc5>
    6a08:	c7 44 24 04 80 00 00 	movl   $0x80,0x4(%esp)
    6a0f:	00 
    6a10:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)
    6a17:	00 
    6a18:	8b 44 24 04          	mov    0x4(%esp),%eax
    6a1c:	8b 54 24 08          	mov    0x8(%esp),%edx
    6a20:	03 44 24 0c          	add    0xc(%esp),%eax
    6a24:	13 54 24 10          	adc    0x10(%esp),%edx
    6a28:	89 83 04 01 00 00    	mov    %eax,0x104(%ebx)
    6a2e:	89 93 08 01 00 00    	mov    %edx,0x108(%ebx)
    6a34:	89 c8                	mov    %ecx,%eax
    6a36:	e8 fc ff ff ff       	call   6a37 <segment_complete+0xe4>
			6a37: R_386_PC32	mutex_unlock
    6a3b:	8b 4c 24 08          	mov    0x8(%esp),%ecx
    6a3f:	0b 4c 24 04          	or     0x4(%esp),%ecx
    6a43:	74 7b                	je     6ac0 <segment_complete+0x16d>
    6a45:	8b 46 24             	mov    0x24(%esi),%eax
    6a48:	ba 10 00 00 00       	mov    $0x10,%edx
    6a4d:	89 de                	mov    %ebx,%esi
    6a4f:	e8 fc ff ff ff       	call   6a50 <segment_complete+0xfd>
			6a50: R_386_PC32	mempool_alloc
    6a54:	b9 43 00 00 00       	mov    $0x43,%ecx
    6a59:	89 c7                	mov    %eax,%edi
    6a5b:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)
    6a5d:	8b 74 24 0c          	mov    0xc(%esp),%esi
    6a61:	8b 7c 24 10          	mov    0x10(%esp),%edi
    6a65:	01 70 20             	add    %esi,0x20(%eax)
    6a68:	11 78 24             	adc    %edi,0x24(%eax)
    6a6b:	8b 54 24 04          	mov    0x4(%esp),%edx
    6a6f:	8b 4c 24 08          	mov    0x8(%esp),%ecx
    6a73:	89 50 28             	mov    %edx,0x28(%eax)
    6a76:	89 c2                	mov    %eax,%edx
    6a78:	89 48 2c             	mov    %ecx,0x2c(%eax)
    6a7b:	31 c9                	xor    %ecx,%ecx
    6a7d:	eb 1d                	jmp    6a9c <segment_complete+0x149>
    6a7f:	8b 74 24 0c          	mov    0xc(%esp),%esi
    6a83:	8b 7c 24 10          	mov    0x10(%esp),%edi
    6a87:	01 72 24             	add    %esi,0x24(%edx)
    6a8a:	11 7a 28             	adc    %edi,0x28(%edx)
    6a8d:	41                   	inc    %ecx
    6a8e:	8b 74 24 04          	mov    0x4(%esp),%esi
    6a92:	8b 7c 24 08          	mov    0x8(%esp),%edi
    6a96:	89 72 2c             	mov    %esi,0x2c(%edx)
    6a99:	89 7a 30             	mov    %edi,0x30(%edx)
    6a9c:	83 c2 14             	add    $0x14,%edx
    6a9f:	3b 4b 30             	cmp    0x30(%ebx),%ecx
    6aa2:	72 db                	jb     6a7f <segment_complete+0x12c>
    6aa4:	c7 80 e4 00 00 00 53 	movl   $0x6953,0xe4(%eax)
    6aab:	69 00 00 
			6aaa: R_386_32	.text
    6aae:	89 98 e8 00 00 00    	mov    %ebx,0xe8(%eax)
    6ab4:	83 c4 14             	add    $0x14,%esp
    6ab7:	5b                   	pop    %ebx
    6ab8:	5e                   	pop    %esi
    6ab9:	5f                   	pop    %edi
    6aba:	5d                   	pop    %ebp
    6abb:	e9 df fd ff ff       	jmp    689f <dispatch_job>
    6ac0:	f0 ff 8b 00 01 00 00 	lock decl 0x100(%ebx)
    6ac7:	0f 94 c0             	sete   %al
    6aca:	84 c0                	test   %al,%al
    6acc:	74 1c                	je     6aea <segment_complete+0x197>
    6ace:	8d 46 40             	lea    0x40(%esi),%eax
    6ad1:	89 da                	mov    %ebx,%edx
    6ad3:	e8 7e fb ff ff       	call   6656 <push>
    6ad8:	8b 46 28             	mov    0x28(%esi),%eax
    6adb:	8d 56 2c             	lea    0x2c(%esi),%edx
    6ade:	83 c4 14             	add    $0x14,%esp
    6ae1:	5b                   	pop    %ebx
    6ae2:	5e                   	pop    %esi
    6ae3:	5f                   	pop    %edi
    6ae4:	5d                   	pop    %ebp
    6ae5:	e9 fc ff ff ff       	jmp    6ae6 <segment_complete+0x193>
			6ae6: R_386_PC32	queue_work
    6aea:	83 c4 14             	add    $0x14,%esp
    6aed:	5b                   	pop    %ebx
    6aee:	5e                   	pop    %esi
    6aef:	5f                   	pop    %edi
    6af0:	5d                   	pop    %ebp
    6af1:	c3                   	ret    

00006af2 <dm_kcopyd_copy>:
    6af2:	55                   	push   %ebp
    6af3:	89 cd                	mov    %ecx,%ebp
    6af5:	57                   	push   %edi
    6af6:	56                   	push   %esi
    6af7:	89 c6                	mov    %eax,%esi
    6af9:	53                   	push   %ebx
    6afa:	83 ec 04             	sub    $0x4,%esp
    6afd:	89 14 24             	mov    %edx,(%esp)
    6b00:	8b 40 24             	mov    0x24(%eax),%eax
    6b03:	ba 10 00 00 00       	mov    $0x10,%edx
    6b08:	e8 fc ff ff ff       	call   6b09 <dm_kcopyd_copy+0x17>
			6b09: R_386_PC32	mempool_alloc
    6b0d:	b9 05 00 00 00       	mov    $0x5,%ecx
    6b12:	89 30                	mov    %esi,(%eax)
    6b14:	89 c3                	mov    %eax,%ebx
    6b16:	8b 44 24 1c          	mov    0x1c(%esp),%eax
    6b1a:	c7 43 10 00 00 00 00 	movl   $0x0,0x10(%ebx)
    6b21:	8d 7b 1c             	lea    0x1c(%ebx),%edi
    6b24:	c7 43 14 00 00 00 00 	movl   $0x0,0x14(%ebx)
    6b2b:	c7 43 18 00 00 00 00 	movl   $0x0,0x18(%ebx)
    6b32:	89 43 0c             	mov    %eax,0xc(%ebx)
    6b35:	6b c5 14             	imul   $0x14,%ebp,%eax
    6b38:	8b 34 24             	mov    (%esp),%esi
    6b3b:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)
    6b3d:	8d 7b 34             	lea    0x34(%ebx),%edi
    6b40:	89 6b 30             	mov    %ebp,0x30(%ebx)
    6b43:	89 c1                	mov    %eax,%ecx
    6b45:	8b 74 24 18          	mov    0x18(%esp),%esi
    6b49:	c1 e9 02             	shr    $0x2,%ecx
    6b4c:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)
    6b4e:	89 c1                	mov    %eax,%ecx
    6b50:	83 e1 03             	and    $0x3,%ecx
    6b53:	74 02                	je     6b57 <dm_kcopyd_copy+0x65>
    6b55:	f3 a4                	rep movsb %ds:(%esi),%es:(%edi)
    6b57:	c7 83 d4 00 00 00 00 	movl   $0x0,0xd4(%ebx)
    6b5e:	00 00 00 
    6b61:	c7 83 d8 00 00 00 00 	movl   $0x0,0xd8(%ebx)
    6b68:	00 00 00 
    6b6b:	c7 83 dc 00 00 00 00 	movl   $0x0,0xdc(%ebx)
    6b72:	00 00 00 
    6b75:	c7 83 e0 00 00 00 00 	movl   $0x0,0xe0(%ebx)
    6b7c:	00 00 00 
    6b7f:	8b 44 24 20          	mov    0x20(%esp),%eax
    6b83:	83 7b 2c 00          	cmpl   $0x0,0x2c(%ebx)
    6b87:	89 83 e4 00 00 00    	mov    %eax,0xe4(%ebx)
    6b8d:	8b 44 24 24          	mov    0x24(%esp),%eax
    6b91:	89 83 e8 00 00 00    	mov    %eax,0xe8(%ebx)
    6b97:	77 0f                	ja     6ba8 <dm_kcopyd_copy+0xb6>
    6b99:	83 7b 28 7f          	cmpl   $0x7f,0x28(%ebx)
    6b9d:	77 09                	ja     6ba8 <dm_kcopyd_copy+0xb6>
    6b9f:	89 d8                	mov    %ebx,%eax
    6ba1:	e8 f9 fc ff ff       	call   689f <dispatch_job>
    6ba6:	eb 4c                	jmp    6bf4 <dm_kcopyd_copy+0x102>
    6ba8:	8d 83 ec 00 00 00    	lea    0xec(%ebx),%eax
    6bae:	b9 38 04 00 00       	mov    $0x438,%ecx
			6baf: R_386_32	.bss
    6bb3:	ba 67 17 00 00       	mov    $0x1767,%edx
			6bb4: R_386_32	.rodata.str1.1
    6bb8:	e8 fc ff ff ff       	call   6bb9 <dm_kcopyd_copy+0xc7>
			6bb9: R_386_PC32	__mutex_init
    6bbd:	8b 03                	mov    (%ebx),%eax
    6bbf:	c7 83 04 01 00 00 00 	movl   $0x0,0x104(%ebx)
    6bc6:	00 00 00 
    6bc9:	c7 83 08 01 00 00 00 	movl   $0x0,0x108(%ebx)
    6bd0:	00 00 00 
    6bd3:	f0 ff 40 20          	lock incl 0x20(%eax)
    6bd7:	31 f6                	xor    %esi,%esi
    6bd9:	c7 83 00 01 00 00 08 	movl   $0x8,0x100(%ebx)
    6be0:	00 00 00 
    6be3:	31 d2                	xor    %edx,%edx
    6be5:	31 c0                	xor    %eax,%eax
    6be7:	89 d9                	mov    %ebx,%ecx
    6be9:	46                   	inc    %esi
    6bea:	e8 64 fd ff ff       	call   6953 <segment_complete>
    6bef:	83 fe 08             	cmp    $0x8,%esi
    6bf2:	75 ef                	jne    6be3 <dm_kcopyd_copy+0xf1>
    6bf4:	5d                   	pop    %ebp
    6bf5:	31 c0                	xor    %eax,%eax
    6bf7:	5b                   	pop    %ebx
    6bf8:	5e                   	pop    %esi
    6bf9:	5f                   	pop    %edi
    6bfa:	5d                   	pop    %ebp
    6bfb:	c3                   	ret    

00006bfc <dm_kcopyd_exit>:
    6bfc:	a1 38 04 00 00       	mov    0x438,%eax
			6bfd: R_386_32	.bss
    6c01:	e8 fc ff ff ff       	call   6c02 <dm_kcopyd_exit+0x6>
			6c02: R_386_PC32	kmem_cache_destroy
    6c06:	c7 05 38 04 00 00 00 	movl   $0x0,0x438
    6c0d:	00 00 00 
			6c08: R_386_32	.bss
    6c10:	c3                   	ret    

00006c11 <dm_kcopyd_client_create>:
    6c11:	55                   	push   %ebp
    6c12:	57                   	push   %edi
    6c13:	56                   	push   %esi
    6c14:	53                   	push   %ebx
    6c15:	83 ec 10             	sub    $0x10,%esp
    6c18:	89 44 24 04          	mov    %eax,0x4(%esp)
    6c1c:	b8 04 01 00 00       	mov    $0x104,%eax
			6c1d: R_386_32	kmalloc_caches
    6c21:	89 54 24 0c          	mov    %edx,0xc(%esp)
    6c25:	ba d0 00 00 00       	mov    $0xd0,%edx
    6c2a:	e8 fc ff ff ff       	call   6c2b <dm_kcopyd_client_create+0x1a>
			6c2b: R_386_PC32	kmem_cache_alloc
    6c2f:	8b 3d 08 01 00 00    	mov    0x108,%edi
			6c31: R_386_32	kmalloc_caches
    6c35:	83 3d 04 00 00 00 00 	cmpl   $0x0,0x4
			6c37: R_386_32	__tracepoint_kmalloc
    6c3c:	89 c3                	mov    %eax,%ebx
    6c3e:	74 28                	je     6c68 <dm_kcopyd_client_create+0x57>
    6c40:	8b 35 10 00 00 00    	mov    0x10,%esi
			6c42: R_386_32	__tracepoint_kmalloc
    6c46:	85 f6                	test   %esi,%esi
    6c48:	74 1e                	je     6c68 <dm_kcopyd_client_create+0x57>
    6c4a:	68 d0 00 00 00       	push   $0xd0
    6c4f:	b8 11 6c 00 00       	mov    $0x6c11,%eax
			6c50: R_386_32	.text
    6c54:	57                   	push   %edi
    6c55:	b9 58 00 00 00       	mov    $0x58,%ecx
    6c5a:	89 da                	mov    %ebx,%edx
    6c5c:	ff 16                	call   *(%esi)
    6c5e:	83 c6 04             	add    $0x4,%esi
    6c61:	83 3e 00             	cmpl   $0x0,(%esi)
    6c64:	5d                   	pop    %ebp
    6c65:	58                   	pop    %eax
    6c66:	eb e0                	jmp    6c48 <dm_kcopyd_client_create+0x37>
    6c68:	85 db                	test   %ebx,%ebx
    6c6a:	be f4 ff ff ff       	mov    $0xfffffff4,%esi
    6c6f:	0f 84 f0 01 00 00    	je     6e65 <dm_kcopyd_client_create+0x254>
    6c75:	8d 43 40             	lea    0x40(%ebx),%eax
    6c78:	b9 00 00 00 00       	mov    $0x0,%ecx
			6c79: R_386_32	mempool_free_slab
    6c7d:	89 43 40             	mov    %eax,0x40(%ebx)
    6c80:	ba 00 00 00 00       	mov    $0x0,%edx
			6c81: R_386_32	mempool_alloc_slab
    6c85:	89 43 44             	mov    %eax,0x44(%ebx)
    6c88:	8d 43 48             	lea    0x48(%ebx),%eax
    6c8b:	89 43 48             	mov    %eax,0x48(%ebx)
    6c8e:	89 43 4c             	mov    %eax,0x4c(%ebx)
    6c91:	8d 43 50             	lea    0x50(%ebx),%eax
    6c94:	89 43 50             	mov    %eax,0x50(%ebx)
    6c97:	89 43 54             	mov    %eax,0x54(%ebx)
    6c9a:	b8 00 02 00 00       	mov    $0x200,%eax
    6c9f:	c7 03 00 00 00 00    	movl   $0x0,(%ebx)
    6ca5:	c7 43 3c 00 00 00 00 	movl   $0x0,0x3c(%ebx)
    6cac:	ff 35 38 04 00 00    	pushl  0x438
			6cae: R_386_32	.bss
    6cb2:	e8 fc ff ff ff       	call   6cb3 <dm_kcopyd_client_create+0xa2>
			6cb3: R_386_PC32	mempool_create
    6cb7:	85 c0                	test   %eax,%eax
    6cb9:	89 43 24             	mov    %eax,0x24(%ebx)
    6cbc:	59                   	pop    %ecx
    6cbd:	0f 84 9b 01 00 00    	je     6e5e <dm_kcopyd_client_create+0x24d>
    6cc3:	8d 43 30             	lea    0x30(%ebx),%eax
    6cc6:	31 c9                	xor    %ecx,%ecx
    6cc8:	89 43 30             	mov    %eax,0x30(%ebx)
    6ccb:	ba 01 00 00 00       	mov    $0x1,%edx
    6cd0:	89 43 34             	mov    %eax,0x34(%ebx)
    6cd3:	b8 7d 17 00 00       	mov    $0x177d,%eax
			6cd4: R_386_32	.rodata.str1.1
    6cd8:	c7 43 2c 00 00 00 00 	movl   $0x0,0x2c(%ebx)
    6cdf:	c7 43 38 b5 67 00 00 	movl   $0x67b5,0x38(%ebx)
			6ce2: R_386_32	.text
    6ce6:	6a 00                	push   $0x0
    6ce8:	6a 00                	push   $0x0
    6cea:	6a 00                	push   $0x0
    6cec:	e8 fc ff ff ff       	call   6ced <dm_kcopyd_client_create+0xdc>
			6ced: R_386_PC32	__create_workqueue_key
    6cf1:	83 c4 0c             	add    $0xc,%esp
    6cf4:	85 c0                	test   %eax,%eax
    6cf6:	89 43 28             	mov    %eax,0x28(%ebx)
    6cf9:	0f 84 57 01 00 00    	je     6e56 <dm_kcopyd_client_create+0x245>
    6cff:	c7 43 04 00 00 00 00 	movl   $0x0,0x4(%ebx)
    6d06:	31 f6                	xor    %esi,%esi
    6d08:	89 dd                	mov    %ebx,%ebp
    6d0a:	c7 43 0c 00 00 00 00 	movl   $0x0,0xc(%ebx)
    6d11:	c7 43 08 00 00 00 00 	movl   $0x0,0x8(%ebx)
    6d18:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)
    6d1f:	e9 8b 00 00 00       	jmp    6daf <dm_kcopyd_client_create+0x19e>
    6d24:	ba d0 00 00 00       	mov    $0xd0,%edx
    6d29:	b8 0c 03 00 00       	mov    $0x30c,%eax
			6d2a: R_386_32	kmalloc_caches
    6d2e:	e8 fc ff ff ff       	call   6d2f <dm_kcopyd_client_create+0x11e>
			6d2f: R_386_PC32	kmem_cache_alloc
    6d33:	83 3d 04 00 00 00 00 	cmpl   $0x0,0x4
			6d35: R_386_32	__tracepoint_kmalloc
    6d3a:	89 c7                	mov    %eax,%edi
    6d3c:	a1 10 03 00 00       	mov    0x310,%eax
			6d3d: R_386_32	kmalloc_caches
    6d41:	89 44 24 08          	mov    %eax,0x8(%esp)
    6d45:	74 2b                	je     6d72 <dm_kcopyd_client_create+0x161>
    6d47:	8b 1d 10 00 00 00    	mov    0x10,%ebx
			6d49: R_386_32	__tracepoint_kmalloc
    6d4d:	85 db                	test   %ebx,%ebx
    6d4f:	74 21                	je     6d72 <dm_kcopyd_client_create+0x161>
    6d51:	68 d0 00 00 00       	push   $0xd0
    6d56:	89 fa                	mov    %edi,%edx
    6d58:	ff 74 24 0c          	pushl  0xc(%esp)
    6d5c:	b8 24 6d 00 00       	mov    $0x6d24,%eax
			6d5d: R_386_32	.text
    6d61:	b9 08 00 00 00       	mov    $0x8,%ecx
    6d66:	ff 13                	call   *(%ebx)
    6d68:	83 c3 04             	add    $0x4,%ebx
    6d6b:	83 3b 00             	cmpl   $0x0,(%ebx)
    6d6e:	58                   	pop    %eax
    6d6f:	5a                   	pop    %edx
    6d70:	eb dd                	jmp    6d4f <dm_kcopyd_client_create+0x13e>
    6d72:	85 ff                	test   %edi,%edi
    6d74:	74 2a                	je     6da0 <dm_kcopyd_client_create+0x18f>
    6d76:	31 d2                	xor    %edx,%edx
    6d78:	b9 00 2c 00 00       	mov    $0x2c00,%ecx
			6d79: R_386_32	contig_page_data
    6d7d:	6a 00                	push   $0x0
    6d7f:	b8 d0 00 00 00       	mov    $0xd0,%eax
    6d84:	e8 fc ff ff ff       	call   6d85 <dm_kcopyd_client_create+0x174>
			6d85: R_386_PC32	__alloc_pages_nodemask
    6d89:	85 c0                	test   %eax,%eax
    6d8b:	89 47 04             	mov    %eax,0x4(%edi)
    6d8e:	5b                   	pop    %ebx
    6d8f:	0f 85 da 00 00 00    	jne    6e6f <dm_kcopyd_client_create+0x25e>
    6d95:	89 f8                	mov    %edi,%eax
    6d97:	89 eb                	mov    %ebp,%ebx
    6d99:	e8 fc ff ff ff       	call   6d9a <dm_kcopyd_client_create+0x189>
			6d9a: R_386_PC32	kfree
    6d9e:	eb 02                	jmp    6da2 <dm_kcopyd_client_create+0x191>
    6da0:	89 eb                	mov    %ebp,%ebx
    6da2:	85 f6                	test   %esi,%esi
    6da4:	74 56                	je     6dfc <dm_kcopyd_client_create+0x1eb>
    6da6:	89 f0                	mov    %esi,%eax
    6da8:	e8 b3 f7 ff ff       	call   6560 <drop_pages>
    6dad:	eb 4d                	jmp    6dfc <dm_kcopyd_client_create+0x1eb>
    6daf:	8b 44 24 04          	mov    0x4(%esp),%eax
    6db3:	39 04 24             	cmp    %eax,(%esp)
    6db6:	0f 82 68 ff ff ff    	jb     6d24 <dm_kcopyd_client_create+0x113>
    6dbc:	89 e8                	mov    %ebp,%eax
    6dbe:	89 eb                	mov    %ebp,%ebx
    6dc0:	89 f7                	mov    %esi,%edi
    6dc2:	e8 fc ff ff ff       	call   6dc3 <dm_kcopyd_client_create+0x1b2>
			6dc3: R_386_PC32	_spin_lock
    6dc7:	eb 05                	jmp    6dce <dm_kcopyd_client_create+0x1bd>
    6dc9:	ff 43 0c             	incl   0xc(%ebx)
    6dcc:	8b 36                	mov    (%esi),%esi
    6dce:	83 3e 00             	cmpl   $0x0,(%esi)
    6dd1:	75 f6                	jne    6dc9 <dm_kcopyd_client_create+0x1b8>
    6dd3:	8b 43 04             	mov    0x4(%ebx),%eax
    6dd6:	ff 43 0c             	incl   0xc(%ebx)
    6dd9:	89 06                	mov    %eax,(%esi)
    6ddb:	89 7b 04             	mov    %edi,0x4(%ebx)
    6dde:	fe 03                	incb   (%ebx)
    6de0:	8b 44 24 04          	mov    0x4(%esp),%eax
    6de4:	01 43 08             	add    %eax,0x8(%ebx)
    6de7:	8b 44 24 04          	mov    0x4(%esp),%eax
    6deb:	e8 fc ff ff ff       	call   6dec <dm_kcopyd_client_create+0x1db>
			6dec: R_386_PC32	dm_io_client_create
    6df0:	3d 00 f0 ff ff       	cmp    $0xfffff000,%eax
    6df5:	89 43 10             	mov    %eax,0x10(%ebx)
    6df8:	76 13                	jbe    6e0d <dm_kcopyd_client_create+0x1fc>
    6dfa:	eb 07                	jmp    6e03 <dm_kcopyd_client_create+0x1f2>
    6dfc:	be f4 ff ff ff       	mov    $0xfffffff4,%esi
    6e01:	eb 4b                	jmp    6e4e <dm_kcopyd_client_create+0x23d>
    6e03:	8b 53 0c             	mov    0xc(%ebx),%edx
    6e06:	3b 53 08             	cmp    0x8(%ebx),%edx
    6e09:	74 24                	je     6e2f <dm_kcopyd_client_create+0x21e>
    6e0b:	eb 1e                	jmp    6e2b <dm_kcopyd_client_create+0x21a>
    6e0d:	8d 43 14             	lea    0x14(%ebx),%eax
    6e10:	ba 38 04 00 00       	mov    $0x438,%edx
			6e11: R_386_32	.bss
    6e15:	e8 fc ff ff ff       	call   6e16 <dm_kcopyd_client_create+0x205>
			6e16: R_386_PC32	__init_waitqueue_head
    6e1a:	31 f6                	xor    %esi,%esi
    6e1c:	c7 43 20 00 00 00 00 	movl   $0x0,0x20(%ebx)
    6e23:	8b 44 24 0c          	mov    0xc(%esp),%eax
    6e27:	89 18                	mov    %ebx,(%eax)
    6e29:	eb 3a                	jmp    6e65 <dm_kcopyd_client_create+0x254>
    6e2b:	0f 0b                	ud2a   
    6e2d:	eb fe                	jmp    6e2d <dm_kcopyd_client_create+0x21c>
    6e2f:	89 c6                	mov    %eax,%esi
    6e31:	8b 43 04             	mov    0x4(%ebx),%eax
    6e34:	e8 27 f7 ff ff       	call   6560 <drop_pages>
    6e39:	c7 43 04 00 00 00 00 	movl   $0x0,0x4(%ebx)
    6e40:	c7 43 08 00 00 00 00 	movl   $0x0,0x8(%ebx)
    6e47:	c7 43 0c 00 00 00 00 	movl   $0x0,0xc(%ebx)
    6e4e:	8b 43 28             	mov    0x28(%ebx),%eax
    6e51:	e8 fc ff ff ff       	call   6e52 <dm_kcopyd_client_create+0x241>
			6e52: R_386_PC32	destroy_workqueue
    6e56:	8b 43 24             	mov    0x24(%ebx),%eax
    6e59:	e8 fc ff ff ff       	call   6e5a <dm_kcopyd_client_create+0x249>
			6e5a: R_386_PC32	mempool_destroy
    6e5e:	89 d8                	mov    %ebx,%eax
    6e60:	e8 fc ff ff ff       	call   6e61 <dm_kcopyd_client_create+0x250>
			6e61: R_386_PC32	kfree
    6e65:	83 c4 10             	add    $0x10,%esp
    6e68:	89 f0                	mov    %esi,%eax
    6e6a:	5b                   	pop    %ebx
    6e6b:	5e                   	pop    %esi
    6e6c:	5f                   	pop    %edi
    6e6d:	5d                   	pop    %ebp
    6e6e:	c3                   	ret    
    6e6f:	89 37                	mov    %esi,(%edi)
    6e71:	89 fe                	mov    %edi,%esi
    6e73:	ff 04 24             	incl   (%esp)
    6e76:	e9 34 ff ff ff       	jmp    6daf <dm_kcopyd_client_create+0x19e>
    6e7b:	90                   	nop

00006e7c <dm_sysfs_exit>:
    6e7c:	e8 fc ff ff ff       	call   6e7d <dm_sysfs_exit+0x1>
			6e7d: R_386_PC32	dm_kobject
    6e81:	e9 fc ff ff ff       	jmp    6e82 <dm_sysfs_exit+0x6>
			6e82: R_386_PC32	kobject_put

00006e86 <dm_sysfs_init>:
    6e86:	56                   	push   %esi
    6e87:	53                   	push   %ebx
    6e88:	89 c3                	mov    %eax,%ebx
    6e8a:	e8 fc ff ff ff       	call   6e8b <dm_sysfs_init+0x5>
			6e8b: R_386_PC32	dm_disk
    6e8f:	89 c6                	mov    %eax,%esi
    6e91:	89 d8                	mov    %ebx,%eax
    6e93:	e8 fc ff ff ff       	call   6e94 <dm_sysfs_init+0xe>
			6e94: R_386_PC32	dm_kobject
    6e98:	83 c6 54             	add    $0x54,%esi
    6e9b:	68 84 17 00 00       	push   $0x1784
			6e9c: R_386_32	.rodata.str1.1
    6ea0:	68 87 17 00 00       	push   $0x1787
			6ea1: R_386_32	.rodata.str1.1
    6ea5:	56                   	push   %esi
    6ea6:	68 b8 01 00 00       	push   $0x1b8
			6ea7: R_386_32	.data
    6eab:	50                   	push   %eax
    6eac:	e8 fc ff ff ff       	call   6ead <dm_sysfs_init+0x27>
			6ead: R_386_PC32	kobject_init_and_add
    6eb1:	83 c4 14             	add    $0x14,%esp
    6eb4:	5b                   	pop    %ebx
    6eb5:	5e                   	pop    %esi
    6eb6:	c3                   	ret    

00006eb7 <dm_attr_suspended_show>:
    6eb7:	53                   	push   %ebx
    6eb8:	89 d3                	mov    %edx,%ebx
    6eba:	e8 fc ff ff ff       	call   6ebb <dm_attr_suspended_show+0x4>
			6ebb: R_386_PC32	dm_suspended
    6ebf:	50                   	push   %eax
    6ec0:	68 8a 17 00 00       	push   $0x178a
			6ec1: R_386_32	.rodata.str1.1
    6ec5:	53                   	push   %ebx
    6ec6:	e8 fc ff ff ff       	call   6ec7 <dm_attr_suspended_show+0x10>
			6ec7: R_386_PC32	sprintf
    6ecb:	89 d8                	mov    %ebx,%eax
    6ecd:	83 c4 0c             	add    $0xc,%esp
    6ed0:	5b                   	pop    %ebx
    6ed1:	e9 fc ff ff ff       	jmp    6ed2 <dm_attr_suspended_show+0x1b>
			6ed2: R_386_PC32	strlen

00006ed6 <dm_attr_uuid_show>:
    6ed6:	53                   	push   %ebx
    6ed7:	89 d1                	mov    %edx,%ecx
    6ed9:	89 d3                	mov    %edx,%ebx
    6edb:	31 d2                	xor    %edx,%edx
    6edd:	e8 fc ff ff ff       	call   6ede <dm_attr_uuid_show+0x8>
			6ede: R_386_PC32	dm_copy_name_and_uuid
    6ee2:	85 c0                	test   %eax,%eax
    6ee4:	74 07                	je     6eed <dm_attr_uuid_show+0x17>
    6ee6:	b8 fb ff ff ff       	mov    $0xfffffffb,%eax
    6eeb:	5b                   	pop    %ebx
    6eec:	c3                   	ret    
    6eed:	89 d8                	mov    %ebx,%eax
    6eef:	ba 8e 17 00 00       	mov    $0x178e,%edx
			6ef0: R_386_32	.rodata.str1.1
    6ef4:	e8 fc ff ff ff       	call   6ef5 <dm_attr_uuid_show+0x1f>
			6ef5: R_386_PC32	strcat
    6ef9:	89 d8                	mov    %ebx,%eax
    6efb:	5b                   	pop    %ebx
    6efc:	e9 fc ff ff ff       	jmp    6efd <dm_attr_uuid_show+0x27>
			6efd: R_386_PC32	strlen

00006f01 <dm_attr_name_show>:
    6f01:	53                   	push   %ebx
    6f02:	31 c9                	xor    %ecx,%ecx
    6f04:	89 d3                	mov    %edx,%ebx
    6f06:	e8 fc ff ff ff       	call   6f07 <dm_attr_name_show+0x6>
			6f07: R_386_PC32	dm_copy_name_and_uuid
    6f0b:	85 c0                	test   %eax,%eax
    6f0d:	74 07                	je     6f16 <dm_attr_name_show+0x15>
    6f0f:	b8 fb ff ff ff       	mov    $0xfffffffb,%eax
    6f14:	5b                   	pop    %ebx
    6f15:	c3                   	ret    
    6f16:	89 d8                	mov    %ebx,%eax
    6f18:	ba 8e 17 00 00       	mov    $0x178e,%edx
			6f19: R_386_32	.rodata.str1.1
    6f1d:	e8 fc ff ff ff       	call   6f1e <dm_attr_name_show+0x1d>
			6f1e: R_386_PC32	strcat
    6f22:	89 d8                	mov    %ebx,%eax
    6f24:	5b                   	pop    %ebx
    6f25:	e9 fc ff ff ff       	jmp    6f26 <dm_attr_name_show+0x25>
			6f26: R_386_PC32	strlen

00006f2a <dm_attr_show>:
    6f2a:	55                   	push   %ebp
    6f2b:	89 cd                	mov    %ecx,%ebp
    6f2d:	57                   	push   %edi
    6f2e:	bf fb ff ff ff       	mov    $0xfffffffb,%edi
    6f33:	56                   	push   %esi
    6f34:	53                   	push   %ebx
    6f35:	89 d3                	mov    %edx,%ebx
    6f37:	83 7a 0c 00          	cmpl   $0x0,0xc(%edx)
    6f3b:	74 1d                	je     6f5a <dm_attr_show+0x30>
    6f3d:	e8 fc ff ff ff       	call   6f3e <dm_attr_show+0x14>
			6f3e: R_386_PC32	dm_get_from_kobject
    6f42:	66 bf ea ff          	mov    $0xffea,%di
    6f46:	85 c0                	test   %eax,%eax
    6f48:	89 c6                	mov    %eax,%esi
    6f4a:	74 0e                	je     6f5a <dm_attr_show+0x30>
    6f4c:	89 ea                	mov    %ebp,%edx
    6f4e:	ff 53 0c             	call   *0xc(%ebx)
    6f51:	89 c7                	mov    %eax,%edi
    6f53:	89 f0                	mov    %esi,%eax
    6f55:	e8 fc ff ff ff       	call   6f56 <dm_attr_show+0x2c>
			6f56: R_386_PC32	dm_put
    6f5a:	89 f8                	mov    %edi,%eax
    6f5c:	5b                   	pop    %ebx
    6f5d:	5e                   	pop    %esi
    6f5e:	5f                   	pop    %edi
    6f5f:	5d                   	pop    %ebp
    6f60:	c3                   	ret    
    6f61:	00 00                	add    %al,(%eax)
	...

Disassembly of section .init.text:

00000000 <init_module>:
   0:	56                   	push   %esi
   1:	53                   	push   %ebx
   2:	31 db                	xor    %ebx,%ebx
   4:	83 ec 04             	sub    $0x4,%esp
   7:	ff 14 9d 00 00 00 00 	call   *0x0(,%ebx,4)
			a: R_386_32	.init.data
   e:	85 c0                	test   %eax,%eax
  10:	74 09                	je     1b <init_module+0x1b>
  12:	8d 34 9d 4c 00 00 00 	lea    0x4c(,%ebx,4),%esi
			15: R_386_32	.rodata
  19:	eb 14                	jmp    2f <init_module+0x2f>
  1b:	43                   	inc    %ebx
  1c:	83 fb 06             	cmp    $0x6,%ebx
  1f:	75 e6                	jne    7 <init_module+0x7>
  21:	eb 10                	jmp    33 <init_module+0x33>
  23:	89 04 24             	mov    %eax,(%esp)
  26:	4b                   	dec    %ebx
  27:	ff 16                	call   *(%esi)
  29:	83 ee 04             	sub    $0x4,%esi
  2c:	8b 04 24             	mov    (%esp),%eax
  2f:	85 db                	test   %ebx,%ebx
  31:	75 f0                	jne    23 <init_module+0x23>
  33:	5a                   	pop    %edx
  34:	5b                   	pop    %ebx
  35:	5e                   	pop    %esi
  36:	c3                   	ret    

00000037 <local_init>:
  37:	56                   	push   %esi
  38:	b9 04 00 00 00       	mov    $0x4,%ecx
  3d:	53                   	push   %ebx
  3e:	ba 18 00 00 00       	mov    $0x18,%edx
  43:	6a 00                	push   $0x0
  45:	b8 e7 03 00 00       	mov    $0x3e7,%eax
			46: R_386_32	.rodata.str1.1
  4a:	6a 00                	push   $0x0
  4c:	e8 fc ff ff ff       	call   4d <local_init+0x16>
			4d: R_386_PC32	kmem_cache_create
  51:	5b                   	pop    %ebx
  52:	bb f4 ff ff ff       	mov    $0xfffffff4,%ebx
  57:	5e                   	pop    %esi
  58:	85 c0                	test   %eax,%eax
  5a:	a3 24 00 00 00       	mov    %eax,0x24
			5b: R_386_32	.bss
  5f:	0f 84 d4 00 00 00    	je     139 <local_init+0x102>
  65:	6a 00                	push   $0x0
  67:	b9 04 00 00 00       	mov    $0x4,%ecx
  6c:	ba 10 00 00 00       	mov    $0x10,%edx
  71:	b8 ed 03 00 00       	mov    $0x3ed,%eax
			72: R_386_32	.rodata.str1.1
  76:	6a 00                	push   $0x0
  78:	e8 fc ff ff ff       	call   79 <local_init+0x42>
			79: R_386_PC32	kmem_cache_create
  7d:	5a                   	pop    %edx
  7e:	59                   	pop    %ecx
  7f:	85 c0                	test   %eax,%eax
  81:	a3 28 00 00 00       	mov    %eax,0x28
			82: R_386_32	.bss
  86:	0f 84 a3 00 00 00    	je     12f <local_init+0xf8>
  8c:	6a 00                	push   $0x0
  8e:	b9 04 00 00 00       	mov    $0x4,%ecx
  93:	6a 00                	push   $0x0
  95:	ba e0 00 00 00       	mov    $0xe0,%edx
  9a:	b8 fa 03 00 00       	mov    $0x3fa,%eax
			9b: R_386_32	.rodata.str1.1
  9f:	e8 fc ff ff ff       	call   a0 <local_init+0x69>
			a0: R_386_PC32	kmem_cache_create
  a4:	59                   	pop    %ecx
  a5:	5e                   	pop    %esi
  a6:	85 c0                	test   %eax,%eax
  a8:	a3 2c 00 00 00       	mov    %eax,0x2c
			a9: R_386_32	.bss
  ad:	74 76                	je     125 <local_init+0xee>
  af:	6a 00                	push   $0x0
  b1:	ba 08 00 00 00       	mov    $0x8,%edx
  b6:	6a 00                	push   $0x0
  b8:	b9 04 00 00 00       	mov    $0x4,%ecx
  bd:	b8 0a 04 00 00       	mov    $0x40a,%eax
			be: R_386_32	.rodata.str1.1
  c2:	e8 fc ff ff ff       	call   c3 <local_init+0x8c>
			c3: R_386_PC32	kmem_cache_create
  c7:	5e                   	pop    %esi
  c8:	5a                   	pop    %edx
  c9:	85 c0                	test   %eax,%eax
  cb:	a3 30 00 00 00       	mov    %eax,0x30
			cc: R_386_32	.bss
  d0:	74 49                	je     11b <local_init+0xe4>
  d2:	e8 fc ff ff ff       	call   d3 <local_init+0x9c>
			d3: R_386_PC32	dm_uevent_init
  d7:	85 c0                	test   %eax,%eax
  d9:	89 c3                	mov    %eax,%ebx
  db:	89 c6                	mov    %eax,%esi
  dd:	75 30                	jne    10f <local_init+0xd8>
  df:	a1 04 00 00 00       	mov    0x4,%eax
			e0: R_386_32	.bss
  e4:	8b 15 68 00 00 00    	mov    0x68,%edx
			e6: R_386_32	.rodata
  ea:	a3 08 00 00 00       	mov    %eax,0x8
			eb: R_386_32	.bss
  ef:	e8 fc ff ff ff       	call   f0 <local_init+0xb9>
			f0: R_386_PC32	register_blkdev
  f4:	85 c0                	test   %eax,%eax
  f6:	89 c6                	mov    %eax,%esi
  f8:	78 10                	js     10a <local_init+0xd3>
  fa:	83 3d 08 00 00 00 00 	cmpl   $0x0,0x8
			fc: R_386_32	.bss
 101:	75 36                	jne    139 <local_init+0x102>
 103:	a3 08 00 00 00       	mov    %eax,0x8
			104: R_386_32	.bss
 108:	eb 2f                	jmp    139 <local_init+0x102>
 10a:	e8 fc ff ff ff       	call   10b <local_init+0xd4>
			10b: R_386_PC32	dm_uevent_exit
 10f:	a1 30 00 00 00       	mov    0x30,%eax
			110: R_386_32	.bss
 114:	89 f3                	mov    %esi,%ebx
 116:	e8 fc ff ff ff       	call   117 <local_init+0xe0>
			117: R_386_PC32	kmem_cache_destroy
 11b:	a1 2c 00 00 00       	mov    0x2c,%eax
			11c: R_386_32	.bss
 120:	e8 fc ff ff ff       	call   121 <local_init+0xea>
			121: R_386_PC32	kmem_cache_destroy
 125:	a1 28 00 00 00       	mov    0x28,%eax
			126: R_386_32	.bss
 12a:	e8 fc ff ff ff       	call   12b <local_init+0xf4>
			12b: R_386_PC32	kmem_cache_destroy
 12f:	a1 24 00 00 00       	mov    0x24,%eax
			130: R_386_32	.bss
 134:	e8 fc ff ff ff       	call   135 <local_init+0xfe>
			135: R_386_PC32	kmem_cache_destroy
 139:	89 d8                	mov    %ebx,%eax
 13b:	5b                   	pop    %ebx
 13c:	5e                   	pop    %esi
 13d:	c3                   	ret    

0000013e <dm_target_init>:
 13e:	b8 14 00 00 00       	mov    $0x14,%eax
			13f: R_386_32	.data
 143:	e9 fc ff ff ff       	jmp    144 <dm_target_init+0x6>
			144: R_386_PC32	dm_register_target

00000148 <dm_linear_init>:
 148:	53                   	push   %ebx
 149:	b8 98 00 00 00       	mov    $0x98,%eax
			14a: R_386_32	.data
 14e:	e8 fc ff ff ff       	call   14f <dm_linear_init+0x7>
			14f: R_386_PC32	dm_register_target
 153:	85 c0                	test   %eax,%eax
 155:	89 c3                	mov    %eax,%ebx
 157:	79 0d                	jns    166 <dm_linear_init+0x1e>
 159:	50                   	push   %eax
 15a:	68 43 0d 00 00       	push   $0xd43
			15b: R_386_32	.rodata.str1.1
 15f:	e8 fc ff ff ff       	call   160 <dm_linear_init+0x18>
			160: R_386_PC32	printk
 164:	59                   	pop    %ecx
 165:	58                   	pop    %eax
 166:	89 d8                	mov    %ebx,%eax
 168:	5b                   	pop    %ebx
 169:	c3                   	ret    

0000016a <dm_stripe_init>:
 16a:	53                   	push   %ebx
 16b:	b8 04 01 00 00       	mov    $0x104,%eax
			16c: R_386_32	.data
 170:	e8 fc ff ff ff       	call   171 <dm_stripe_init+0x7>
			171: R_386_PC32	dm_register_target
 175:	85 c0                	test   %eax,%eax
 177:	89 c3                	mov    %eax,%ebx
 179:	79 0c                	jns    187 <dm_stripe_init+0x1d>
 17b:	68 3a 0e 00 00       	push   $0xe3a
			17c: R_386_32	.rodata.str1.1
 180:	e8 fc ff ff ff       	call   181 <dm_stripe_init+0x17>
			181: R_386_PC32	printk
 185:	eb 3c                	jmp    1c3 <dm_stripe_init+0x59>
 187:	6a 00                	push   $0x0
 189:	31 c9                	xor    %ecx,%ecx
 18b:	6a 00                	push   $0x0
 18d:	ba 01 00 00 00       	mov    $0x1,%edx
 192:	6a 00                	push   $0x0
 194:	b8 71 0e 00 00       	mov    $0xe71,%eax
			195: R_386_32	.rodata.str1.1
 199:	e8 fc ff ff ff       	call   19a <dm_stripe_init+0x30>
			19a: R_386_PC32	__create_workqueue_key
 19e:	83 c4 0c             	add    $0xc,%esp
 1a1:	85 c0                	test   %eax,%eax
 1a3:	a3 34 00 00 00       	mov    %eax,0x34
			1a4: R_386_32	.bss
 1a8:	75 1a                	jne    1c4 <dm_stripe_init+0x5a>
 1aa:	68 7a 0e 00 00       	push   $0xe7a
			1ab: R_386_32	.rodata.str1.1
 1af:	bb f4 ff ff ff       	mov    $0xfffffff4,%ebx
 1b4:	e8 fc ff ff ff       	call   1b5 <dm_stripe_init+0x4b>
			1b5: R_386_PC32	printk
 1b9:	b8 04 01 00 00       	mov    $0x104,%eax
			1ba: R_386_32	.data
 1be:	e8 fc ff ff ff       	call   1bf <dm_stripe_init+0x55>
			1bf: R_386_PC32	dm_unregister_target
 1c3:	5a                   	pop    %edx
 1c4:	89 d8                	mov    %ebx,%eax
 1c6:	5b                   	pop    %ebx
 1c7:	c3                   	ret    

000001c8 <dm_interface_init>:
 1c8:	53                   	push   %ebx
 1c9:	b8 38 00 00 00       	mov    $0x38,%eax
			1ca: R_386_32	.bss
 1ce:	89 00                	mov    %eax,(%eax)
 1d0:	89 40 04             	mov    %eax,0x4(%eax)
 1d3:	83 c0 08             	add    $0x8,%eax
 1d6:	3d 38 02 00 00       	cmp    $0x238,%eax
			1d7: R_386_32	.bss
 1db:	75 f1                	jne    1ce <dm_interface_init+0x6>
 1dd:	b8 38 02 00 00       	mov    $0x238,%eax
			1de: R_386_32	.bss
 1e2:	89 00                	mov    %eax,(%eax)
 1e4:	89 40 04             	mov    %eax,0x4(%eax)
 1e7:	83 c0 08             	add    $0x8,%eax
 1ea:	3d 38 04 00 00       	cmp    $0x438,%eax
			1eb: R_386_32	.bss
 1ef:	75 f1                	jne    1e2 <dm_interface_init+0x1a>
 1f1:	b8 84 01 00 00       	mov    $0x184,%eax
			1f2: R_386_32	.data
 1f6:	e8 fc ff ff ff       	call   1f7 <dm_interface_init+0x2f>
			1f7: R_386_PC32	misc_register
 1fb:	85 c0                	test   %eax,%eax
 1fd:	89 c3                	mov    %eax,%ebx
 1ff:	74 14                	je     215 <dm_interface_init+0x4d>
 201:	68 81 16 00 00       	push   $0x1681
			202: R_386_32	.rodata.str1.1
 206:	e8 fc ff ff ff       	call   207 <dm_interface_init+0x3f>
			207: R_386_PC32	printk
 20b:	31 c0                	xor    %eax,%eax
 20d:	e8 04 5a 00 00       	call   5c16 <dm_ctl_ioctl+0xa8>
			20e: R_386_PC32	.text
 212:	58                   	pop    %eax
 213:	eb 1d                	jmp    232 <dm_interface_init+0x6a>
 215:	68 c3 16 00 00       	push   $0x16c3
			216: R_386_32	.rodata.str1.1
 21a:	68 d7 16 00 00       	push   $0x16d7
			21b: R_386_32	.rodata.str1.1
 21f:	6a 00                	push   $0x0
 221:	6a 0f                	push   $0xf
 223:	6a 04                	push   $0x4
 225:	68 eb 16 00 00       	push   $0x16eb
			226: R_386_32	.rodata.str1.1
 22a:	e8 fc ff ff ff       	call   22b <dm_interface_init+0x63>
			22b: R_386_PC32	printk
 22f:	83 c4 18             	add    $0x18,%esp
 232:	89 d8                	mov    %ebx,%eax
 234:	5b                   	pop    %ebx
 235:	c3                   	ret    

00000236 <dm_kcopyd_init>:
 236:	6a 00                	push   $0x0
 238:	b9 04 00 00 00       	mov    $0x4,%ecx
 23d:	ba 0c 01 00 00       	mov    $0x10c,%edx
 242:	b8 72 17 00 00       	mov    $0x1772,%eax
			243: R_386_32	.rodata.str1.1
 247:	6a 00                	push   $0x0
 249:	e8 fc ff ff ff       	call   24a <dm_kcopyd_init+0x14>
			24a: R_386_PC32	kmem_cache_create
 24e:	5a                   	pop    %edx
 24f:	59                   	pop    %ecx
 250:	83 f8 01             	cmp    $0x1,%eax
 253:	a3 38 04 00 00       	mov    %eax,0x438
			254: R_386_32	.bss
 258:	19 c0                	sbb    %eax,%eax
 25a:	83 e0 f4             	and    $0xfffffff4,%eax
 25d:	c3                   	ret    

Disassembly of section .exit.text:

00000000 <cleanup_module>:
   0:	53                   	push   %ebx
   1:	bb 06 00 00 00       	mov    $0x6,%ebx
   6:	4b                   	dec    %ebx
   7:	ff 14 9d 50 00 00 00 	call   *0x50(,%ebx,4)
			a: R_386_32	.rodata
   e:	85 db                	test   %ebx,%ebx
  10:	75 f4                	jne    6 <cleanup_module+0x6>
  12:	5b                   	pop    %ebx
  13:	c3                   	ret    

Disassembly of section .altinstr_replacement:

00000000 <.altinstr_replacement>:
   0:	0f ae f0             	mfence 
   3:	0f 18 00             	prefetchnta (%eax)
   6:	0f 18 00             	prefetchnta (%eax)
   9:	0f 18 01             	prefetchnta (%ecx)
   c:	0f 18 00             	prefetchnta (%eax)
   f:	0f ae f0             	mfence 
  12:	0f 18 00             	prefetchnta (%eax)
  15:	0f ae f0             	mfence 
  18:	0f 18 00             	prefetchnta (%eax)
  1b:	0f 18 00             	prefetchnta (%eax)
  1e:	0f 18 00             	prefetchnta (%eax)
  21:	0f 18 00             	prefetchnta (%eax)
  24:	0f 18 00             	prefetchnta (%eax)
  27:	0f 18 00             	prefetchnta (%eax)
  2a:	0f 18 00             	prefetchnta (%eax)
  2d:	0f 18 02             	prefetchnta (%edx)
  30:	0f 18 01             	prefetchnta (%ecx)
