
/lib/modules/2.6.32.8/kernel/drivers/ide/ide-core.ko:     file format elf32-i386


Disassembly of section .text:

00000000 <ide_bus_match>:
       0:	b8 01 00 00 00       	mov    $0x1,%eax
       5:	c3                   	ret    

00000006 <generic_ide_probe>:
       6:	89 c1                	mov    %eax,%ecx
       8:	8b 40 48             	mov    0x48(%eax),%eax
       b:	8b 50 34             	mov    0x34(%eax),%edx
       e:	b8 ed ff ff ff       	mov    $0xffffffed,%eax
      13:	85 d2                	test   %edx,%edx
      15:	74 08                	je     1f <generic_ide_probe+0x19>
      17:	8d 81 74 ff ff ff    	lea    -0x8c(%ecx),%eax
      1d:	ff d2                	call   *%edx
      1f:	c3                   	ret    

00000020 <generic_ide_remove>:
      20:	8b 50 48             	mov    0x48(%eax),%edx
      23:	8b 52 38             	mov    0x38(%edx),%edx
      26:	85 d2                	test   %edx,%edx
      28:	74 07                	je     31 <generic_ide_remove+0x11>
      2a:	2d 8c 00 00 00       	sub    $0x8c,%eax
      2f:	ff d2                	call   *%edx
      31:	31 c0                	xor    %eax,%eax
      33:	c3                   	ret    

00000034 <generic_ide_shutdown>:
      34:	8b 50 48             	mov    0x48(%eax),%edx
      37:	85 d2                	test   %edx,%edx
      39:	74 0e                	je     49 <generic_ide_shutdown+0x15>
      3b:	8b 52 40             	mov    0x40(%edx),%edx
      3e:	85 d2                	test   %edx,%edx
      40:	74 07                	je     49 <generic_ide_shutdown+0x15>
      42:	2d 8c 00 00 00       	sub    $0x8c,%eax
      47:	ff d2                	call   *%edx
      49:	c3                   	ret    

0000004a <ide_set_dev_param_mask>:
      4a:	55                   	push   %ebp
      4b:	57                   	push   %edi
      4c:	56                   	push   %esi
      4d:	89 c6                	mov    %eax,%esi
      4f:	53                   	push   %ebx
      50:	83 ec 0c             	sub    $0xc,%esp
      53:	8b 5a 10             	mov    0x10(%edx),%ebx
      56:	89 e0                	mov    %esp,%eax
      58:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)
      5f:	50                   	push   %eax
      60:	8d 6c 24 08          	lea    0x8(%esp),%ebp
      64:	55                   	push   %ebp
      65:	8d 7c 24 10          	lea    0x10(%esp),%edi
      69:	57                   	push   %edi
      6a:	68 00 00 00 00       	push   $0x0
			6b: R_386_32	.rodata.str1.1
      6f:	56                   	push   %esi
      70:	e8 fc ff ff ff       	call   71 <ide_set_dev_param_mask+0x27>
			71: R_386_PC32	sscanf
      75:	83 c4 14             	add    $0x14,%esp
      78:	83 f8 03             	cmp    $0x3,%eax
      7b:	74 15                	je     92 <ide_set_dev_param_mask+0x48>
      7d:	55                   	push   %ebp
      7e:	57                   	push   %edi
      7f:	68 09 00 00 00       	push   $0x9
			80: R_386_32	.rodata.str1.1
      84:	56                   	push   %esi
      85:	e8 fc ff ff ff       	call   86 <ide_set_dev_param_mask+0x3c>
			86: R_386_PC32	sscanf
      8a:	83 c4 10             	add    $0x10,%esp
      8d:	83 f8 02             	cmp    $0x2,%eax
      90:	75 37                	jne    c9 <ide_set_dev_param_mask+0x7f>
      92:	8b 4c 24 08          	mov    0x8(%esp),%ecx
      96:	01 c9                	add    %ecx,%ecx
      98:	03 4c 24 04          	add    0x4(%esp),%ecx
      9c:	83 f9 13             	cmp    $0x13,%ecx
      9f:	7f 28                	jg     c9 <ide_set_dev_param_mask+0x7f>
      a1:	8b 04 24             	mov    (%esp),%eax
      a4:	85 c0                	test   %eax,%eax
      a6:	78 21                	js     c9 <ide_set_dev_param_mask+0x7f>
      a8:	83 f8 01             	cmp    $0x1,%eax
      ab:	7f 1c                	jg     c9 <ide_set_dev_param_mask+0x7f>
      ad:	85 c0                	test   %eax,%eax
      af:	74 0b                	je     bc <ide_set_dev_param_mask+0x72>
      b1:	b8 01 00 00 00       	mov    $0x1,%eax
      b6:	d3 e0                	shl    %cl,%eax
      b8:	09 03                	or     %eax,(%ebx)
      ba:	eb 09                	jmp    c5 <ide_set_dev_param_mask+0x7b>
      bc:	b8 fe ff ff ff       	mov    $0xfffffffe,%eax
      c1:	d3 c0                	rol    %cl,%eax
      c3:	21 03                	and    %eax,(%ebx)
      c5:	31 c0                	xor    %eax,%eax
      c7:	eb 05                	jmp    ce <ide_set_dev_param_mask+0x84>
      c9:	b8 ea ff ff ff       	mov    $0xffffffea,%eax
      ce:	83 c4 0c             	add    $0xc,%esp
      d1:	5b                   	pop    %ebx
      d2:	5e                   	pop    %esi
      d3:	5f                   	pop    %edi
      d4:	5d                   	pop    %ebp
      d5:	c3                   	ret    

000000d6 <ide_set_disk_chs>:
      d6:	57                   	push   %edi
      d7:	56                   	push   %esi
      d8:	53                   	push   %ebx
      d9:	89 c3                	mov    %eax,%ebx
      db:	83 ec 18             	sub    $0x18,%esp
      de:	8d 44 24 04          	lea    0x4(%esp),%eax
      e2:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
      e9:	00 
      ea:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)
      f1:	00 
      f2:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)
      f9:	00 
      fa:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)
     101:	50                   	push   %eax
     102:	8d 44 24 0c          	lea    0xc(%esp),%eax
     106:	50                   	push   %eax
     107:	8d 44 24 14          	lea    0x14(%esp),%eax
     10b:	50                   	push   %eax
     10c:	8d 7c 24 1c          	lea    0x1c(%esp),%edi
     110:	57                   	push   %edi
     111:	8d 74 24 24          	lea    0x24(%esp),%esi
     115:	56                   	push   %esi
     116:	68 0f 00 00 00       	push   $0xf
			117: R_386_32	.rodata.str1.1
     11b:	53                   	push   %ebx
     11c:	e8 fc ff ff ff       	call   11d <ide_set_disk_chs+0x47>
			11d: R_386_PC32	sscanf
     121:	83 c4 1c             	add    $0x1c,%esp
     124:	83 f8 05             	cmp    $0x5,%eax
     127:	74 18                	je     141 <ide_set_disk_chs+0x6b>
     129:	89 e0                	mov    %esp,%eax
     12b:	50                   	push   %eax
     12c:	57                   	push   %edi
     12d:	56                   	push   %esi
     12e:	68 00 00 00 00       	push   $0x0
			12f: R_386_32	.rodata.str1.1
     133:	53                   	push   %ebx
     134:	e8 fc ff ff ff       	call   135 <ide_set_disk_chs+0x5f>
			135: R_386_PC32	sscanf
     139:	83 c4 14             	add    $0x14,%esp
     13c:	83 f8 03             	cmp    $0x3,%eax
     13f:	75 70                	jne    1b1 <ide_set_disk_chs+0xdb>
     141:	8b 4c 24 14          	mov    0x14(%esp),%ecx
     145:	01 c9                	add    %ecx,%ecx
     147:	03 4c 24 10          	add    0x10(%esp),%ecx
     14b:	83 f9 13             	cmp    $0x13,%ecx
     14e:	7f 61                	jg     1b1 <ide_set_disk_chs+0xdb>
     150:	8b 04 24             	mov    (%esp),%eax
     153:	85 c0                	test   %eax,%eax
     155:	78 5a                	js     1b1 <ide_set_disk_chs+0xdb>
     157:	83 f8 01             	cmp    $0x1,%eax
     15a:	7f 55                	jg     1b1 <ide_set_disk_chs+0xdb>
     15c:	8b 5c 24 08          	mov    0x8(%esp),%ebx
     160:	81 fb ff 00 00 00    	cmp    $0xff,%ebx
     166:	7f 49                	jg     1b1 <ide_set_disk_chs+0xdb>
     168:	8b 54 24 04          	mov    0x4(%esp),%edx
     16c:	81 fa ff 00 00 00    	cmp    $0xff,%edx
     172:	7f 3d                	jg     1b1 <ide_set_disk_chs+0xdb>
     174:	85 c0                	test   %eax,%eax
     176:	74 0f                	je     187 <ide_set_disk_chs+0xb1>
     178:	b8 01 00 00 00       	mov    $0x1,%eax
     17d:	d3 e0                	shl    %cl,%eax
     17f:	09 05 24 00 00 00    	or     %eax,0x24
			181: R_386_32	.bss
     185:	eb 0d                	jmp    194 <ide_set_disk_chs+0xbe>
     187:	b8 fe ff ff ff       	mov    $0xfffffffe,%eax
     18c:	d3 c0                	rol    %cl,%eax
     18e:	21 05 24 00 00 00    	and    %eax,0x24
			190: R_386_32	.bss
     194:	8b 44 24 0c          	mov    0xc(%esp),%eax
     198:	88 1c cd 2c 00 00 00 	mov    %bl,0x2c(,%ecx,8)
			19b: R_386_32	.bss
     19f:	88 14 cd 2d 00 00 00 	mov    %dl,0x2d(,%ecx,8)
			1a2: R_386_32	.bss
     1a6:	89 04 cd 28 00 00 00 	mov    %eax,0x28(,%ecx,8)
			1a9: R_386_32	.bss
     1ad:	31 c0                	xor    %eax,%eax
     1af:	eb 05                	jmp    1b6 <ide_set_disk_chs+0xe0>
     1b1:	b8 ea ff ff ff       	mov    $0xffffffea,%eax
     1b6:	83 c4 18             	add    $0x18,%esp
     1b9:	5b                   	pop    %ebx
     1ba:	5e                   	pop    %esi
     1bb:	5f                   	pop    %edi
     1bc:	c3                   	ret    

000001bd <ide_set_ignore_cable>:
     1bd:	56                   	push   %esi
     1be:	53                   	push   %ebx
     1bf:	89 c3                	mov    %eax,%ebx
     1c1:	83 ec 08             	sub    $0x8,%esp
     1c4:	89 e0                	mov    %esp,%eax
     1c6:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)
     1cd:	50                   	push   %eax
     1ce:	8d 74 24 08          	lea    0x8(%esp),%esi
     1d2:	56                   	push   %esi
     1d3:	68 1e 00 00 00       	push   $0x1e
			1d4: R_386_32	.rodata.str1.1
     1d8:	53                   	push   %ebx
     1d9:	e8 fc ff ff ff       	call   1da <ide_set_ignore_cable+0x1d>
			1da: R_386_PC32	sscanf
     1de:	83 c4 10             	add    $0x10,%esp
     1e1:	83 f8 02             	cmp    $0x2,%eax
     1e4:	74 12                	je     1f8 <ide_set_ignore_cable+0x3b>
     1e6:	56                   	push   %esi
     1e7:	68 24 00 00 00       	push   $0x24
			1e8: R_386_32	.rodata.str1.1
     1ec:	53                   	push   %ebx
     1ed:	e8 fc ff ff ff       	call   1ee <ide_set_ignore_cable+0x31>
			1ee: R_386_PC32	sscanf
     1f2:	83 c4 0c             	add    $0xc,%esp
     1f5:	48                   	dec    %eax
     1f6:	75 39                	jne    231 <ide_set_ignore_cable+0x74>
     1f8:	8b 4c 24 04          	mov    0x4(%esp),%ecx
     1fc:	83 f9 09             	cmp    $0x9,%ecx
     1ff:	7f 30                	jg     231 <ide_set_ignore_cable+0x74>
     201:	8b 04 24             	mov    (%esp),%eax
     204:	85 c0                	test   %eax,%eax
     206:	78 29                	js     231 <ide_set_ignore_cable+0x74>
     208:	83 f8 01             	cmp    $0x1,%eax
     20b:	7f 24                	jg     231 <ide_set_ignore_cable+0x74>
     20d:	85 c0                	test   %eax,%eax
     20f:	74 0f                	je     220 <ide_set_ignore_cable+0x63>
     211:	b8 01 00 00 00       	mov    $0x1,%eax
     216:	d3 e0                	shl    %cl,%eax
     218:	09 05 c8 00 00 00    	or     %eax,0xc8
			21a: R_386_32	.bss
     21e:	eb 0d                	jmp    22d <ide_set_ignore_cable+0x70>
     220:	b8 fe ff ff ff       	mov    $0xfffffffe,%eax
     225:	d3 c0                	rol    %cl,%eax
     227:	21 05 c8 00 00 00    	and    %eax,0xc8
			229: R_386_32	.bss
     22d:	31 c0                	xor    %eax,%eax
     22f:	eb 05                	jmp    236 <ide_set_ignore_cable+0x79>
     231:	b8 ea ff ff ff       	mov    $0xffffffea,%eax
     236:	5a                   	pop    %edx
     237:	59                   	pop    %ecx
     238:	5b                   	pop    %ebx
     239:	5e                   	pop    %esi
     23a:	c3                   	ret    

0000023b <ide_uevent>:
     23b:	56                   	push   %esi
     23c:	8d b0 74 ff ff ff    	lea    -0x8c(%eax),%esi
     242:	53                   	push   %ebx
     243:	89 f0                	mov    %esi,%eax
     245:	89 d3                	mov    %edx,%ebx
     247:	e8 fc ff ff ff       	call   248 <ide_uevent+0xd>
			248: R_386_PC32	ide_media_string
     24c:	50                   	push   %eax
     24d:	68 27 00 00 00       	push   $0x27
			24e: R_386_32	.rodata.str1.1
     252:	53                   	push   %ebx
     253:	e8 fc ff ff ff       	call   254 <ide_uevent+0x19>
			254: R_386_PC32	add_uevent_var
     258:	56                   	push   %esi
     259:	68 30 00 00 00       	push   $0x30
			25a: R_386_32	.rodata.str1.1
     25e:	53                   	push   %ebx
     25f:	e8 fc ff ff ff       	call   260 <ide_uevent+0x25>
			260: R_386_PC32	add_uevent_var
     264:	89 f0                	mov    %esi,%eax
     266:	e8 fc ff ff ff       	call   267 <ide_uevent+0x2c>
			267: R_386_PC32	ide_media_string
     26b:	50                   	push   %eax
     26c:	68 3d 00 00 00       	push   $0x3d
			26d: R_386_32	.rodata.str1.1
     271:	53                   	push   %ebx
     272:	e8 fc ff ff ff       	call   273 <ide_uevent+0x38>
			273: R_386_PC32	add_uevent_var
     277:	31 c0                	xor    %eax,%eax
     279:	83 c4 24             	add    $0x24,%esp
     27c:	5b                   	pop    %ebx
     27d:	5e                   	pop    %esi
     27e:	c3                   	ret    

0000027f <ide_port_apply_params>:
     27f:	55                   	push   %ebp
     280:	57                   	push   %edi
     281:	89 c7                	mov    %eax,%edi
     283:	56                   	push   %esi
     284:	53                   	push   %ebx
     285:	83 ec 04             	sub    $0x4,%esp
     288:	0f b6 48 59          	movzbl 0x59(%eax),%ecx
     28c:	b8 01 00 00 00       	mov    $0x1,%eax
     291:	d3 e0                	shl    %cl,%eax
     293:	85 05 c8 00 00 00    	test   %eax,0xc8
			295: R_386_32	.bss
     299:	74 14                	je     2af <ide_port_apply_params+0x30>
     29b:	8d 47 0c             	lea    0xc(%edi),%eax
     29e:	50                   	push   %eax
     29f:	68 4f 00 00 00       	push   $0x4f
			2a0: R_386_32	.rodata.str1.1
     2a4:	e8 fc ff ff ff       	call   2a5 <ide_port_apply_params+0x26>
			2a5: R_386_PC32	printk
     2a9:	c6 47 64 03          	movb   $0x3,0x64(%edi)
     2ad:	5b                   	pop    %ebx
     2ae:	5e                   	pop    %esi
     2af:	31 f6                	xor    %esi,%esi
     2b1:	e9 17 01 00 00       	jmp    3cd <ide_port_apply_params+0x14e>
     2b6:	8b 43 28             	mov    0x28(%ebx),%eax
     2b9:	bd 01 00 00 00       	mov    $0x1,%ebp
     2be:	0f b6 40 59          	movzbl 0x59(%eax),%eax
     2c2:	8d 04 46             	lea    (%esi,%eax,2),%eax
     2c5:	89 04 24             	mov    %eax,(%esp)
     2c8:	8a 0c 24             	mov    (%esp),%cl
     2cb:	d3 e5                	shl    %cl,%ebp
     2cd:	85 2d 0c 00 00 00    	test   %ebp,0xc
			2cf: R_386_32	.bss
     2d3:	74 14                	je     2e9 <ide_port_apply_params+0x6a>
     2d5:	53                   	push   %ebx
     2d6:	68 78 00 00 00       	push   $0x78
			2d7: R_386_32	.rodata.str1.1
     2db:	e8 fc ff ff ff       	call   2dc <ide_port_apply_params+0x5d>
			2dc: R_386_PC32	printk
     2e0:	81 4b 30 00 00 01 00 	orl    $0x10000,0x30(%ebx)
     2e7:	5a                   	pop    %edx
     2e8:	59                   	pop    %ecx
     2e9:	85 2d 10 00 00 00    	test   %ebp,0x10
			2eb: R_386_32	.bss
     2ef:	74 11                	je     302 <ide_port_apply_params+0x83>
     2f1:	53                   	push   %ebx
     2f2:	68 98 00 00 00       	push   $0x98
			2f3: R_386_32	.rodata.str1.1
     2f7:	e8 fc ff ff ff       	call   2f8 <ide_port_apply_params+0x79>
			2f8: R_386_PC32	printk
     2fc:	83 4b 30 08          	orl    $0x8,0x30(%ebx)
     300:	59                   	pop    %ecx
     301:	58                   	pop    %eax
     302:	85 2d 14 00 00 00    	test   %ebp,0x14
			304: R_386_32	.bss
     308:	74 14                	je     31e <ide_port_apply_params+0x9f>
     30a:	53                   	push   %ebx
     30b:	68 c1 00 00 00       	push   $0xc1
			30c: R_386_32	.rodata.str1.1
     310:	e8 fc ff ff ff       	call   311 <ide_port_apply_params+0x92>
			311: R_386_PC32	printk
     315:	81 4b 30 80 00 00 00 	orl    $0x80,0x30(%ebx)
     31c:	58                   	pop    %eax
     31d:	5a                   	pop    %edx
     31e:	85 2d 18 00 00 00    	test   %ebp,0x18
			320: R_386_32	.bss
     324:	74 14                	je     33a <ide_port_apply_params+0xbb>
     326:	53                   	push   %ebx
     327:	68 ef 00 00 00       	push   $0xef
			328: R_386_32	.rodata.str1.1
     32c:	e8 fc ff ff ff       	call   32d <ide_port_apply_params+0xae>
			32d: R_386_PC32	printk
     331:	81 4b 30 00 02 00 00 	orl    $0x200,0x30(%ebx)
     338:	5a                   	pop    %edx
     339:	59                   	pop    %ecx
     33a:	85 2d 1c 00 00 00    	test   %ebp,0x1c
			33c: R_386_32	.bss
     340:	74 11                	je     353 <ide_port_apply_params+0xd4>
     342:	53                   	push   %ebx
     343:	68 0e 01 00 00       	push   $0x10e
			344: R_386_32	.rodata.str1.1
     348:	e8 fc ff ff ff       	call   349 <ide_port_apply_params+0xca>
			349: R_386_PC32	printk
     34d:	c6 43 4b 81          	movb   $0x81,0x4b(%ebx)
     351:	59                   	pop    %ecx
     352:	58                   	pop    %eax
     353:	85 2d 20 00 00 00    	test   %ebp,0x20
			355: R_386_32	.bss
     359:	74 19                	je     374 <ide_port_apply_params+0xf5>
     35b:	53                   	push   %ebx
     35c:	68 36 01 00 00       	push   $0x136
			35d: R_386_32	.rodata.str1.1
     361:	e8 fc ff ff ff       	call   362 <ide_port_apply_params+0xe3>
			362: R_386_PC32	printk
     366:	83 4b 30 40          	orl    $0x40,0x30(%ebx)
     36a:	c6 43 46 05          	movb   $0x5,0x46(%ebx)
     36e:	c6 43 47 00          	movb   $0x0,0x47(%ebx)
     372:	58                   	pop    %eax
     373:	5a                   	pop    %edx
     374:	85 2d 24 00 00 00    	test   %ebp,0x24
			376: R_386_32	.bss
     37a:	74 50                	je     3cc <ide_port_apply_params+0x14d>
     37c:	8b 2c 24             	mov    (%esp),%ebp
     37f:	8b 04 ed 28 00 00 00 	mov    0x28(,%ebp,8),%eax
			382: R_386_32	.bss
     386:	89 43 54             	mov    %eax,0x54(%ebx)
     389:	89 43 58             	mov    %eax,0x58(%ebx)
     38c:	8a 14 ed 2c 00 00 00 	mov    0x2c(,%ebp,8),%dl
			38f: R_386_32	.bss
     393:	88 53 4e             	mov    %dl,0x4e(%ebx)
     396:	88 53 4c             	mov    %dl,0x4c(%ebx)
     399:	8a 0c ed 2d 00 00 00 	mov    0x2d(,%ebp,8),%cl
			39c: R_386_32	.bss
     3a0:	0f b6 d2             	movzbl %dl,%edx
     3a3:	88 4b 4f             	mov    %cl,0x4f(%ebx)
     3a6:	88 4b 4d             	mov    %cl,0x4d(%ebx)
     3a9:	0f b6 c9             	movzbl %cl,%ecx
     3ac:	51                   	push   %ecx
     3ad:	52                   	push   %edx
     3ae:	50                   	push   %eax
     3af:	53                   	push   %ebx
     3b0:	68 56 01 00 00       	push   $0x156
			3b1: R_386_32	.rodata.str1.1
     3b5:	e8 fc ff ff ff       	call   3b6 <ide_port_apply_params+0x137>
			3b6: R_386_PC32	printk
     3ba:	81 4b 30 40 10 00 00 	orl    $0x1040,0x30(%ebx)
     3c1:	c6 43 46 20          	movb   $0x20,0x46(%ebx)
     3c5:	c6 43 47 40          	movb   $0x40,0x47(%ebx)
     3c9:	83 c4 14             	add    $0x14,%esp
     3cc:	46                   	inc    %esi
     3cd:	8b 5c b7 48          	mov    0x48(%edi,%esi,4),%ebx
     3d1:	85 db                	test   %ebx,%ebx
     3d3:	0f 85 dd fe ff ff    	jne    2b6 <ide_port_apply_params+0x37>
     3d9:	83 fe 01             	cmp    $0x1,%esi
     3dc:	0f 8e d4 fe ff ff    	jle    2b6 <ide_port_apply_params+0x37>
     3e2:	5b                   	pop    %ebx
     3e3:	5b                   	pop    %ebx
     3e4:	5e                   	pop    %esi
     3e5:	5f                   	pop    %edi
     3e6:	5d                   	pop    %ebp
     3e7:	c3                   	ret    

000003e8 <ide_device_put>:
     3e8:	53                   	push   %ebx
     3e9:	89 c3                	mov    %eax,%ebx
     3eb:	8b 40 28             	mov    0x28(%eax),%eax
     3ee:	8b 40 08             	mov    0x8(%eax),%eax
     3f1:	8b 40 18             	mov    0x18(%eax),%eax
     3f4:	85 c0                	test   %eax,%eax
     3f6:	74 0f                	je     407 <ide_device_put+0x1f>
     3f8:	8b 40 48             	mov    0x48(%eax),%eax
     3fb:	8b 40 08             	mov    0x8(%eax),%eax
     3fe:	85 c0                	test   %eax,%eax
     400:	74 05                	je     407 <ide_device_put+0x1f>
     402:	e8 fc ff ff ff       	call   403 <ide_device_put+0x1b>
			403: R_386_PC32	module_put
     407:	8d 83 8c 00 00 00    	lea    0x8c(%ebx),%eax
     40d:	5b                   	pop    %ebx
     40e:	e9 fc ff ff ff       	jmp    40f <ide_device_put+0x27>
			40f: R_386_PC32	put_device

00000413 <ide_device_get>:
     413:	57                   	push   %edi
     414:	56                   	push   %esi
     415:	8d b0 8c 00 00 00    	lea    0x8c(%eax),%esi
     41b:	53                   	push   %ebx
     41c:	89 c3                	mov    %eax,%ebx
     41e:	89 f0                	mov    %esi,%eax
     420:	e8 fc ff ff ff       	call   421 <ide_device_get+0xe>
			421: R_386_PC32	get_device
     425:	89 c2                	mov    %eax,%edx
     427:	b8 fa ff ff ff       	mov    $0xfffffffa,%eax
     42c:	85 d2                	test   %edx,%edx
     42e:	74 69                	je     499 <ide_device_get+0x86>
     430:	8b 43 28             	mov    0x28(%ebx),%eax
     433:	8b 40 08             	mov    0x8(%eax),%eax
     436:	8b 40 18             	mov    0x18(%eax),%eax
     439:	85 c0                	test   %eax,%eax
     43b:	74 5a                	je     497 <ide_device_get+0x84>
     43d:	8b 40 48             	mov    0x48(%eax),%eax
     440:	8b 58 08             	mov    0x8(%eax),%ebx
     443:	85 db                	test   %ebx,%ebx
     445:	74 50                	je     497 <ide_device_get+0x84>
     447:	64 8b 15 00 00 00 00 	mov    %fs:0x0,%edx
			44a: R_386_32	per_cpu__cpu_number
     44e:	83 3b 02             	cmpl   $0x2,(%ebx)
     451:	74 4a                	je     49d <ide_device_get+0x8a>
     453:	8b 83 54 01 00 00    	mov    0x154(%ebx),%eax
     459:	03 04 95 00 00 00 00 	add    0x0(,%edx,4),%eax
			45c: R_386_32	__per_cpu_offset
     460:	ff 00                	incl   (%eax)
     462:	8b 83 54 01 00 00    	mov    0x154(%ebx),%eax
     468:	03 04 95 00 00 00 00 	add    0x0(,%edx,4),%eax
			46b: R_386_32	__per_cpu_offset
     46f:	83 3d 04 00 00 00 00 	cmpl   $0x0,0x4
			471: R_386_32	__tracepoint_module_get
     476:	8b 38                	mov    (%eax),%edi
     478:	74 1d                	je     497 <ide_device_get+0x84>
     47a:	8b 35 10 00 00 00    	mov    0x10,%esi
			47c: R_386_32	__tracepoint_module_get
     480:	85 f6                	test   %esi,%esi
     482:	74 13                	je     497 <ide_device_get+0x84>
     484:	89 f9                	mov    %edi,%ecx
     486:	ba 53 04 00 00       	mov    $0x453,%edx
			487: R_386_32	.text
     48b:	89 d8                	mov    %ebx,%eax
     48d:	ff 16                	call   *(%esi)
     48f:	83 c6 04             	add    $0x4,%esi
     492:	83 3e 00             	cmpl   $0x0,(%esi)
     495:	eb eb                	jmp    482 <ide_device_get+0x6f>
     497:	31 c0                	xor    %eax,%eax
     499:	5b                   	pop    %ebx
     49a:	5e                   	pop    %esi
     49b:	5f                   	pop    %edi
     49c:	c3                   	ret    
     49d:	89 f0                	mov    %esi,%eax
     49f:	e8 fc ff ff ff       	call   4a0 <ide_device_get+0x8d>
			4a0: R_386_PC32	put_device
     4a4:	b8 fa ff ff ff       	mov    $0xfffffffa,%eax
     4a9:	eb ee                	jmp    499 <ide_device_get+0x86>
     4ab:	90                   	nop

000004ac <trace_kmalloc>:
     4ac:	55                   	push   %ebp
     4ad:	89 c5                	mov    %eax,%ebp
     4af:	83 3d 04 00 00 00 00 	cmpl   $0x0,0x4
			4b1: R_386_32	__tracepoint_kmalloc
     4b6:	57                   	push   %edi
     4b7:	89 d7                	mov    %edx,%edi
     4b9:	56                   	push   %esi
     4ba:	89 ce                	mov    %ecx,%esi
     4bc:	53                   	push   %ebx
     4bd:	74 24                	je     4e3 <trace_kmalloc+0x37>
     4bf:	8b 1d 10 00 00 00    	mov    0x10,%ebx
			4c1: R_386_32	__tracepoint_kmalloc
     4c5:	85 db                	test   %ebx,%ebx
     4c7:	74 1a                	je     4e3 <trace_kmalloc+0x37>
     4c9:	ff 74 24 18          	pushl  0x18(%esp)
     4cd:	89 fa                	mov    %edi,%edx
     4cf:	ff 74 24 18          	pushl  0x18(%esp)
     4d3:	89 e8                	mov    %ebp,%eax
     4d5:	89 f1                	mov    %esi,%ecx
     4d7:	ff 13                	call   *(%ebx)
     4d9:	83 c3 04             	add    $0x4,%ebx
     4dc:	83 3b 00             	cmpl   $0x0,(%ebx)
     4df:	58                   	pop    %eax
     4e0:	5a                   	pop    %edx
     4e1:	eb e4                	jmp    4c7 <trace_kmalloc+0x1b>
     4e3:	5b                   	pop    %ebx
     4e4:	5e                   	pop    %esi
     4e5:	5f                   	pop    %edi
     4e6:	5d                   	pop    %ebp
     4e7:	c3                   	ret    

000004e8 <ide_cmd_ioctl>:
     4e8:	55                   	push   %ebp
     4e9:	89 c5                	mov    %eax,%ebp
     4eb:	57                   	push   %edi
     4ec:	56                   	push   %esi
     4ed:	53                   	push   %ebx
     4ee:	83 ec 48             	sub    $0x48,%esp
     4f1:	85 d2                	test   %edx,%edx
     4f3:	89 14 24             	mov    %edx,(%esp)
     4f6:	75 33                	jne    52b <ide_cmd_ioctl+0x43>
     4f8:	8b 40 10             	mov    0x10(%eax),%eax
     4fb:	b9 10 00 00 00       	mov    $0x10,%ecx
     500:	e8 fc ff ff ff       	call   501 <ide_cmd_ioctl+0x19>
			501: R_386_PC32	blk_get_request
     505:	31 d2                	xor    %edx,%edx
     507:	89 c6                	mov    %eax,%esi
     509:	c7 40 28 09 00 00 00 	movl   $0x9,0x28(%eax)
     510:	8b 45 10             	mov    0x10(%ebp),%eax
     513:	89 f1                	mov    %esi,%ecx
     515:	6a 00                	push   $0x0
     517:	e8 fc ff ff ff       	call   518 <ide_cmd_ioctl+0x30>
			518: R_386_PC32	blk_execute_rq
     51c:	89 c3                	mov    %eax,%ebx
     51e:	89 f0                	mov    %esi,%eax
     520:	e8 fc ff ff ff       	call   521 <ide_cmd_ioctl+0x39>
			521: R_386_PC32	blk_put_request
     525:	5e                   	pop    %esi
     526:	e9 48 01 00 00       	jmp    673 <ide_cmd_ioctl+0x18b>
     52b:	8b 14 24             	mov    (%esp),%edx
     52e:	8d 44 24 44          	lea    0x44(%esp),%eax
     532:	b9 04 00 00 00       	mov    $0x4,%ecx
     537:	bb f2 ff ff ff       	mov    $0xfffffff2,%ebx
     53c:	e8 fc ff ff ff       	call   53d <ide_cmd_ioctl+0x55>
			53d: R_386_PC32	copy_from_user
     541:	85 c0                	test   %eax,%eax
     543:	0f 85 2a 01 00 00    	jne    673 <ide_cmd_ioctl+0x18b>
     549:	8d 7c 24 04          	lea    0x4(%esp),%edi
     54d:	b9 10 00 00 00       	mov    $0x10,%ecx
     552:	f3 ab                	rep stos %eax,%es:(%edi)
     554:	8a 4c 24 44          	mov    0x44(%esp),%cl
     558:	8a 44 24 46          	mov    0x46(%esp),%al
     55c:	80 f9 b0             	cmp    $0xb0,%cl
     55f:	88 44 24 05          	mov    %al,0x5(%esp)
     563:	8a 44 24 45          	mov    0x45(%esp),%al
     567:	75 1d                	jne    586 <ide_cmd_ioctl+0x9e>
     569:	8a 54 24 47          	mov    0x47(%esp),%dl
     56d:	88 44 24 07          	mov    %al,0x7(%esp)
     571:	c6 44 24 08 4f       	movb   $0x4f,0x8(%esp)
     576:	c6 44 24 09 c2       	movb   $0xc2,0x9(%esp)
     57b:	88 54 24 06          	mov    %dl,0x6(%esp)
     57f:	c6 44 24 14 3e       	movb   $0x3e,0x14(%esp)
     584:	eb 09                	jmp    58f <ide_cmd_ioctl+0xa7>
     586:	88 44 24 06          	mov    %al,0x6(%esp)
     58a:	c6 44 24 14 06       	movb   $0x6,0x14(%esp)
     58f:	8a 44 24 47          	mov    0x47(%esp),%al
     593:	c6 44 24 16 04       	movb   $0x4,0x16(%esp)
     598:	88 4c 24 0b          	mov    %cl,0xb(%esp)
     59c:	3c 01                	cmp    $0x1,%al
     59e:	19 d2                	sbb    %edx,%edx
     5a0:	83 c2 02             	add    $0x2,%edx
     5a3:	84 c0                	test   %al,%al
     5a5:	89 54 24 1c          	mov    %edx,0x1c(%esp)
     5a9:	75 06                	jne    5b1 <ide_cmd_ioctl+0xc9>
     5ab:	31 ff                	xor    %edi,%edi
     5ad:	31 f6                	xor    %esi,%esi
     5af:	eb 27                	jmp    5d8 <ide_cmd_ioctl+0xf0>
     5b1:	0f b6 f8             	movzbl %al,%edi
     5b4:	ba d0 80 00 00       	mov    $0x80d0,%edx
     5b9:	c1 e7 09             	shl    $0x9,%edi
     5bc:	bb f4 ff ff ff       	mov    $0xfffffff4,%ebx
     5c1:	89 f8                	mov    %edi,%eax
     5c3:	66 83 4c 24 18 10    	orw    $0x10,0x18(%esp)
     5c9:	e8 fc ff ff ff       	call   5ca <ide_cmd_ioctl+0xe2>
			5ca: R_386_PC32	__kmalloc
     5ce:	85 c0                	test   %eax,%eax
     5d0:	89 c6                	mov    %eax,%esi
     5d2:	0f 84 9b 00 00 00    	je     673 <ide_cmd_ioctl+0x18b>
     5d8:	80 7c 24 0b ef       	cmpb   $0xef,0xb(%esp)
     5dd:	75 2c                	jne    60b <ide_cmd_ioctl+0x123>
     5df:	80 7c 24 05 03       	cmpb   $0x3,0x5(%esp)
     5e4:	75 25                	jne    60b <ide_cmd_ioctl+0x123>
     5e6:	8a 54 24 06          	mov    0x6(%esp),%dl
     5ea:	80 fa 0f             	cmp    $0xf,%dl
     5ed:	76 1c                	jbe    60b <ide_cmd_ioctl+0x123>
     5ef:	0f b6 d2             	movzbl %dl,%edx
     5f2:	89 e8                	mov    %ebp,%eax
     5f4:	e8 fc ff ff ff       	call   5f5 <ide_cmd_ioctl+0x10d>
			5f5: R_386_PC32	ide_find_dma_mode
     5f9:	bb ea ff ff ff       	mov    $0xffffffea,%ebx
     5fe:	3a 44 24 06          	cmp    0x6(%esp),%al
     602:	75 35                	jne    639 <ide_cmd_ioctl+0x151>
     604:	66 81 4c 24 18 00 01 	orw    $0x100,0x18(%esp)
     60b:	0f b6 44 24 47       	movzbl 0x47(%esp),%eax
     610:	8d 54 24 04          	lea    0x4(%esp),%edx
     614:	89 f1                	mov    %esi,%ecx
     616:	50                   	push   %eax
     617:	89 e8                	mov    %ebp,%eax
     619:	e8 fc ff ff ff       	call   61a <ide_cmd_ioctl+0x132>
			61a: R_386_PC32	ide_raw_taskfile
     61e:	89 c3                	mov    %eax,%ebx
     620:	8a 44 24 0f          	mov    0xf(%esp),%al
     624:	88 44 24 48          	mov    %al,0x48(%esp)
     628:	8a 44 24 09          	mov    0x9(%esp),%al
     62c:	88 44 24 49          	mov    %al,0x49(%esp)
     630:	8a 44 24 0a          	mov    0xa(%esp),%al
     634:	88 44 24 4a          	mov    %al,0x4a(%esp)
     638:	59                   	pop    %ecx
     639:	8b 04 24             	mov    (%esp),%eax
     63c:	8d 54 24 44          	lea    0x44(%esp),%edx
     640:	b9 04 00 00 00       	mov    $0x4,%ecx
     645:	bd f2 ff ff ff       	mov    $0xfffffff2,%ebp
     64a:	e8 fc ff ff ff       	call   64b <ide_cmd_ioctl+0x163>
			64b: R_386_PC32	copy_to_user
     64f:	85 c0                	test   %eax,%eax
     651:	0f 45 dd             	cmovne %ebp,%ebx
     654:	85 f6                	test   %esi,%esi
     656:	74 1b                	je     673 <ide_cmd_ioctl+0x18b>
     658:	8b 04 24             	mov    (%esp),%eax
     65b:	89 f9                	mov    %edi,%ecx
     65d:	89 f2                	mov    %esi,%edx
     65f:	83 c0 04             	add    $0x4,%eax
     662:	e8 fc ff ff ff       	call   663 <ide_cmd_ioctl+0x17b>
			663: R_386_PC32	copy_to_user
     667:	85 c0                	test   %eax,%eax
     669:	89 f0                	mov    %esi,%eax
     66b:	0f 45 dd             	cmovne %ebp,%ebx
     66e:	e8 fc ff ff ff       	call   66f <ide_cmd_ioctl+0x187>
			66f: R_386_PC32	kfree
     673:	83 c4 48             	add    $0x48,%esp
     676:	89 d8                	mov    %ebx,%eax
     678:	5b                   	pop    %ebx
     679:	5e                   	pop    %esi
     67a:	5f                   	pop    %edi
     67b:	5d                   	pop    %ebp
     67c:	c3                   	ret    

0000067d <ide_setting_ioctl>:
     67d:	55                   	push   %ebp
     67e:	57                   	push   %edi
     67f:	56                   	push   %esi
     680:	53                   	push   %ebx
     681:	89 c3                	mov    %eax,%ebx
     683:	8b 6c 24 14          	mov    0x14(%esp),%ebp
     687:	8b 44 24 18          	mov    0x18(%esp),%eax
     68b:	eb 17                	jmp    6a4 <ide_setting_ioctl+0x27>
     68d:	83 3f 00             	cmpl   $0x0,(%edi)
     690:	74 04                	je     696 <ide_setting_ioctl+0x19>
     692:	39 08                	cmp    %ecx,(%eax)
     694:	74 1c                	je     6b2 <ide_setting_ioctl+0x35>
     696:	83 7f 04 00          	cmpl   $0x0,0x4(%edi)
     69a:	74 05                	je     6a1 <ide_setting_ioctl+0x24>
     69c:	39 48 04             	cmp    %ecx,0x4(%eax)
     69f:	74 41                	je     6e2 <ide_setting_ioctl+0x65>
     6a1:	83 c0 0c             	add    $0xc,%eax
     6a4:	8b 78 08             	mov    0x8(%eax),%edi
     6a7:	85 ff                	test   %edi,%edi
     6a9:	75 e2                	jne    68d <ide_setting_ioctl+0x10>
     6ab:	be a1 ff ff ff       	mov    $0xffffffa1,%esi
     6b0:	eb 6d                	jmp    71f <ide_setting_ioctl+0xa2>
     6b2:	b8 00 00 00 00       	mov    $0x0,%eax
			6b3: R_386_32	ide_setting_mtx
     6b7:	e8 fc ff ff ff       	call   6b8 <ide_setting_ioctl+0x3b>
			6b8: R_386_PC32	mutex_lock
     6bc:	89 d8                	mov    %ebx,%eax
     6be:	ff 17                	call   *(%edi)
     6c0:	89 c6                	mov    %eax,%esi
     6c2:	b8 00 00 00 00       	mov    $0x0,%eax
			6c3: R_386_32	ide_setting_mtx
     6c7:	e8 fc ff ff ff       	call   6c8 <ide_setting_ioctl+0x4b>
			6c8: R_386_PC32	mutex_unlock
     6cc:	85 f6                	test   %esi,%esi
     6ce:	78 4f                	js     71f <ide_setting_ioctl+0xa2>
     6d0:	e8 fc ff ff ff       	call   6d1 <ide_setting_ioctl+0x54>
			6d1: R_386_PC32	_cond_resched
     6d5:	89 f0                	mov    %esi,%eax
     6d7:	89 e9                	mov    %ebp,%ecx
     6d9:	e8 fc ff ff ff       	call   6da <ide_setting_ioctl+0x5d>
			6da: R_386_PC32	__put_user_4
     6de:	89 c6                	mov    %eax,%esi
     6e0:	eb 3d                	jmp    71f <ide_setting_ioctl+0xa2>
     6e2:	3b 52 3c             	cmp    0x3c(%edx),%edx
     6e5:	be ea ff ff ff       	mov    $0xffffffea,%esi
     6ea:	75 33                	jne    71f <ide_setting_ioctl+0xa2>
     6ec:	b8 15 00 00 00       	mov    $0x15,%eax
     6f1:	66 be f3 ff          	mov    $0xfff3,%si
     6f5:	e8 fc ff ff ff       	call   6f6 <ide_setting_ioctl+0x79>
			6f6: R_386_PC32	capable
     6fa:	85 c0                	test   %eax,%eax
     6fc:	74 21                	je     71f <ide_setting_ioctl+0xa2>
     6fe:	b8 00 00 00 00       	mov    $0x0,%eax
			6ff: R_386_32	ide_setting_mtx
     703:	e8 fc ff ff ff       	call   704 <ide_setting_ioctl+0x87>
			704: R_386_PC32	mutex_lock
     708:	89 e9                	mov    %ebp,%ecx
     70a:	89 fa                	mov    %edi,%edx
     70c:	89 d8                	mov    %ebx,%eax
     70e:	e8 fc ff ff ff       	call   70f <ide_setting_ioctl+0x92>
			70f: R_386_PC32	ide_devset_execute
     713:	89 c6                	mov    %eax,%esi
     715:	b8 00 00 00 00       	mov    $0x0,%eax
			716: R_386_32	ide_setting_mtx
     71a:	e8 fc ff ff ff       	call   71b <ide_setting_ioctl+0x9e>
			71b: R_386_PC32	mutex_unlock
     71f:	89 f0                	mov    %esi,%eax
     721:	5b                   	pop    %ebx
     722:	5e                   	pop    %esi
     723:	5f                   	pop    %edi
     724:	5d                   	pop    %ebp
     725:	c3                   	ret    

00000726 <generic_ide_ioctl>:
     726:	55                   	push   %ebp
     727:	89 d5                	mov    %edx,%ebp
     729:	57                   	push   %edi
     72a:	89 cf                	mov    %ecx,%edi
     72c:	56                   	push   %esi
     72d:	53                   	push   %ebx
     72e:	89 c3                	mov    %eax,%ebx
     730:	83 ec 4c             	sub    $0x4c,%esp
     733:	68 5c 00 00 00       	push   $0x5c
			734: R_386_32	.rodata
     738:	ff 74 24 64          	pushl  0x64(%esp)
     73c:	e8 fc ff ff ff       	call   73d <generic_ide_ioctl+0x17>
			73d: R_386_PC32	ide_setting_ioctl
     741:	59                   	pop    %ecx
     742:	89 c6                	mov    %eax,%esi
     744:	83 fe a1             	cmp    $0xffffffa1,%esi
     747:	58                   	pop    %eax
     748:	0f 85 11 03 00 00    	jne    a5f <generic_ide_ioctl+0x339>
     74e:	81 ff 1c 03 00 00    	cmp    $0x31c,%edi
     754:	0f 84 57 02 00 00    	je     9b1 <generic_ide_ioctl+0x28b>
     75a:	77 35                	ja     791 <generic_ide_ioctl+0x6b>
     75c:	81 ff 0c 03 00 00    	cmp    $0x30c,%edi
     762:	0f 84 0c 01 00 00    	je     874 <generic_ide_ioctl+0x14e>
     768:	77 0e                	ja     778 <generic_ide_ioctl+0x52>
     76a:	81 ff 07 03 00 00    	cmp    $0x307,%edi
     770:	0f 85 d1 02 00 00    	jne    a47 <generic_ide_ioctl+0x321>
     776:	eb 55                	jmp    7cd <generic_ide_ioctl+0xa7>
     778:	81 ff 0d 03 00 00    	cmp    $0x30d,%edi
     77e:	74 4d                	je     7cd <generic_ide_ioctl+0xa7>
     780:	81 ff 1a 03 00 00    	cmp    $0x31a,%edi
     786:	0f 85 bb 02 00 00    	jne    a47 <generic_ide_ioctl+0x321>
     78c:	e9 7d 02 00 00       	jmp    a0e <generic_ide_ioctl+0x2e8>
     791:	81 ff 1f 03 00 00    	cmp    $0x31f,%edi
     797:	0f 84 59 01 00 00    	je     8f6 <generic_ide_ioctl+0x1d0>
     79d:	77 11                	ja     7b0 <generic_ide_ioctl+0x8a>
     79f:	81 ff 1e 03 00 00    	cmp    $0x31e,%edi
     7a5:	0f 85 9c 02 00 00    	jne    a47 <generic_ide_ioctl+0x321>
     7ab:	e9 6a 01 00 00       	jmp    91a <generic_ide_ioctl+0x1f4>
     7b0:	81 ff 29 03 00 00    	cmp    $0x329,%edi
     7b6:	0f 84 e4 00 00 00    	je     8a0 <generic_ide_ioctl+0x17a>
     7bc:	81 ff 2d 03 00 00    	cmp    $0x32d,%edi
     7c2:	0f 85 7f 02 00 00    	jne    a47 <generic_ide_ioctl+0x321>
     7c8:	e9 6a 02 00 00       	jmp    a37 <generic_ide_ioctl+0x311>
     7cd:	3b 6d 3c             	cmp    0x3c(%ebp),%ebp
     7d0:	0f 85 71 02 00 00    	jne    a47 <generic_ide_ioctl+0x321>
     7d6:	c7 04 24 8e 00 00 00 	movl   $0x8e,(%esp)
     7dd:	81 ff 0d 03 00 00    	cmp    $0x30d,%edi
     7e3:	b8 00 02 00 00       	mov    $0x200,%eax
     7e8:	0f 45 04 24          	cmovne (%esp),%eax
     7ec:	be d6 ff ff ff       	mov    $0xffffffd6,%esi
     7f1:	89 04 24             	mov    %eax,(%esp)
     7f4:	f6 43 31 01          	testb  $0x1,0x31(%ebx)
     7f8:	0f 84 61 02 00 00    	je     a5f <generic_ide_ioctl+0x339>
     7fe:	ba d0 00 00 00       	mov    $0xd0,%edx
     803:	b8 24 09 00 00       	mov    $0x924,%eax
			804: R_386_32	kmalloc_caches
     808:	e8 fc ff ff ff       	call   809 <generic_ide_ioctl+0xe3>
			809: R_386_PC32	kmem_cache_alloc
     80d:	b9 00 02 00 00       	mov    $0x200,%ecx
     812:	66 be f4 ff          	mov    $0xfff4,%si
     816:	68 d0 00 00 00       	push   $0xd0
     81b:	89 c2                	mov    %eax,%edx
     81d:	ff 35 28 09 00 00    	pushl  0x928
			81f: R_386_32	kmalloc_caches
     823:	89 c5                	mov    %eax,%ebp
     825:	b8 fe 07 00 00       	mov    $0x7fe,%eax
			826: R_386_32	.text
     82a:	e8 7d fc ff ff       	call   4ac <trace_kmalloc>
     82f:	85 ed                	test   %ebp,%ebp
     831:	58                   	pop    %eax
     832:	5a                   	pop    %edx
     833:	0f 84 26 02 00 00    	je     a5f <generic_ide_ioctl+0x339>
     839:	8b 0c 24             	mov    (%esp),%ecx
     83c:	89 ef                	mov    %ebp,%edi
     83e:	8b 73 1c             	mov    0x1c(%ebx),%esi
     841:	c1 e9 02             	shr    $0x2,%ecx
     844:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)
     846:	8b 0c 24             	mov    (%esp),%ecx
     849:	83 e1 03             	and    $0x3,%ecx
     84c:	74 02                	je     850 <generic_ide_ioctl+0x12a>
     84e:	f3 a4                	rep movsb %ds:(%esi),%es:(%edi)
     850:	8b 0c 24             	mov    (%esp),%ecx
     853:	89 ea                	mov    %ebp,%edx
     855:	8b 44 24 60          	mov    0x60(%esp),%eax
     859:	e8 fc ff ff ff       	call   85a <generic_ide_ioctl+0x134>
			85a: R_386_PC32	copy_to_user
     85e:	83 f8 01             	cmp    $0x1,%eax
     861:	89 e8                	mov    %ebp,%eax
     863:	19 f6                	sbb    %esi,%esi
     865:	f7 d6                	not    %esi
     867:	83 e6 f2             	and    $0xfffffff2,%esi
     86a:	e8 fc ff ff ff       	call   86b <generic_ide_ioctl+0x145>
			86b: R_386_PC32	kfree
     86f:	e9 eb 01 00 00       	jmp    a5f <generic_ide_ioctl+0x339>
     874:	e8 fc ff ff ff       	call   875 <generic_ide_ioctl+0x14f>
			875: R_386_PC32	_cond_resched
     879:	8b 43 30             	mov    0x30(%ebx),%eax
     87c:	8b 4c 24 60          	mov    0x60(%esp),%ecx
     880:	89 c2                	mov    %eax,%edx
     882:	83 e2 20             	and    $0x20,%edx
     885:	83 fa 01             	cmp    $0x1,%edx
     888:	19 f6                	sbb    %esi,%esi
     88a:	f7 d6                	not    %esi
     88c:	c1 e8 04             	shr    $0x4,%eax
     88f:	83 e6 08             	and    $0x8,%esi
     892:	83 e0 01             	and    $0x1,%eax
     895:	09 c6                	or     %eax,%esi
     897:	89 f0                	mov    %esi,%eax
     899:	e8 fc ff ff ff       	call   89a <generic_ide_ioctl+0x174>
			89a: R_386_PC32	__put_user_4
     89e:	eb 73                	jmp    913 <generic_ide_ioctl+0x1ed>
     8a0:	b8 15 00 00 00       	mov    $0x15,%eax
     8a5:	e8 fc ff ff ff       	call   8a6 <generic_ide_ioctl+0x180>
			8a6: R_386_PC32	capable
     8aa:	85 c0                	test   %eax,%eax
     8ac:	0f 84 9c 01 00 00    	je     a4e <generic_ide_ioctl+0x328>
     8b2:	8b 44 24 60          	mov    0x60(%esp),%eax
     8b6:	83 e0 09             	and    $0x9,%eax
     8b9:	39 44 24 60          	cmp    %eax,0x60(%esp)
     8bd:	0f 85 92 01 00 00    	jne    a55 <generic_ide_ioctl+0x32f>
     8c3:	f6 44 24 60 01       	testb  $0x1,0x60(%esp)
     8c8:	74 10                	je     8da <generic_ide_ioctl+0x1b4>
     8ca:	80 7b 46 01          	cmpb   $0x1,0x46(%ebx)
     8ce:	0f 85 81 01 00 00    	jne    a55 <generic_ide_ioctl+0x32f>
     8d4:	83 4b 30 10          	orl    $0x10,0x30(%ebx)
     8d8:	eb 04                	jmp    8de <generic_ide_ioctl+0x1b8>
     8da:	83 63 30 ef          	andl   $0xffffffef,0x30(%ebx)
     8de:	f6 44 24 60 08       	testb  $0x8,0x60(%esp)
     8e3:	74 06                	je     8eb <generic_ide_ioctl+0x1c5>
     8e5:	83 4b 30 20          	orl    $0x20,0x30(%ebx)
     8e9:	eb 04                	jmp    8ef <generic_ide_ioctl+0x1c9>
     8eb:	83 63 30 df          	andl   $0xffffffdf,0x30(%ebx)
     8ef:	31 f6                	xor    %esi,%esi
     8f1:	e9 69 01 00 00       	jmp    a5f <generic_ide_ioctl+0x339>
     8f6:	b8 11 00 00 00       	mov    $0x11,%eax
     8fb:	e8 fc ff ff ff       	call   8fc <generic_ide_ioctl+0x1d6>
			8fc: R_386_PC32	capable
     900:	85 c0                	test   %eax,%eax
     902:	0f 84 46 01 00 00    	je     a4e <generic_ide_ioctl+0x328>
     908:	8b 54 24 60          	mov    0x60(%esp),%edx
     90c:	89 d8                	mov    %ebx,%eax
     90e:	e8 d5 fb ff ff       	call   4e8 <ide_cmd_ioctl>
     913:	89 c6                	mov    %eax,%esi
     915:	e9 45 01 00 00       	jmp    a5f <generic_ide_ioctl+0x339>
     91a:	b8 11 00 00 00       	mov    $0x11,%eax
     91f:	e8 fc ff ff ff       	call   920 <generic_ide_ioctl+0x1fa>
			920: R_386_PC32	capable
     924:	85 c0                	test   %eax,%eax
     926:	0f 84 22 01 00 00    	je     a4e <generic_ide_ioctl+0x328>
     92c:	8b 54 24 60          	mov    0x60(%esp),%edx
     930:	8d 6c 24 45          	lea    0x45(%esp),%ebp
     934:	b9 07 00 00 00       	mov    $0x7,%ecx
     939:	89 e8                	mov    %ebp,%eax
     93b:	e8 fc ff ff ff       	call   93c <generic_ide_ioctl+0x216>
			93c: R_386_PC32	copy_from_user
     940:	85 c0                	test   %eax,%eax
     942:	0f 85 12 01 00 00    	jne    a5a <generic_ide_ioctl+0x334>
     948:	8d 54 24 04          	lea    0x4(%esp),%edx
     94c:	b9 10 00 00 00       	mov    $0x10,%ecx
     951:	89 d7                	mov    %edx,%edi
     953:	f3 ab                	rep stos %eax,%es:(%edi)
     955:	8b 44 24 46          	mov    0x46(%esp),%eax
     959:	c6 44 24 14 7e       	movb   $0x7e,0x14(%esp)
     95e:	c6 44 24 16 7c       	movb   $0x7c,0x16(%esp)
     963:	89 44 24 05          	mov    %eax,0x5(%esp)
     967:	66 8b 44 24 4a       	mov    0x4a(%esp),%ax
     96c:	66 89 44 24 09       	mov    %ax,0x9(%esp)
     971:	8a 44 24 45          	mov    0x45(%esp),%al
     975:	88 44 24 0b          	mov    %al,0xb(%esp)
     979:	89 d8                	mov    %ebx,%eax
     97b:	e8 fc ff ff ff       	call   97c <generic_ide_ioctl+0x256>
			97c: R_386_PC32	ide_no_data_taskfile
     980:	b9 07 00 00 00       	mov    $0x7,%ecx
     985:	89 ea                	mov    %ebp,%edx
     987:	89 c6                	mov    %eax,%esi
     989:	8a 44 24 0b          	mov    0xb(%esp),%al
     98d:	88 44 24 45          	mov    %al,0x45(%esp)
     991:	8b 44 24 05          	mov    0x5(%esp),%eax
     995:	89 44 24 46          	mov    %eax,0x46(%esp)
     999:	66 8b 44 24 09       	mov    0x9(%esp),%ax
     99e:	66 89 44 24 4a       	mov    %ax,0x4a(%esp)
     9a3:	8b 44 24 60          	mov    0x60(%esp),%eax
     9a7:	e8 fc ff ff ff       	call   9a8 <generic_ide_ioctl+0x282>
			9a8: R_386_PC32	copy_to_user
     9ac:	e9 80 00 00 00       	jmp    a31 <generic_ide_ioctl+0x30b>
     9b1:	b8 15 00 00 00       	mov    $0x15,%eax
     9b6:	e8 fc ff ff ff       	call   9b7 <generic_ide_ioctl+0x291>
			9b7: R_386_PC32	capable
     9bb:	85 c0                	test   %eax,%eax
     9bd:	0f 84 8b 00 00 00    	je     a4e <generic_ide_ioctl+0x328>
     9c3:	8b 43 10             	mov    0x10(%ebx),%eax
     9c6:	31 d2                	xor    %edx,%edx
     9c8:	b9 10 00 00 00       	mov    $0x10,%ecx
     9cd:	31 f6                	xor    %esi,%esi
     9cf:	e8 fc ff ff ff       	call   9d0 <generic_ide_ioctl+0x2aa>
			9d0: R_386_PC32	blk_get_request
     9d4:	31 d2                	xor    %edx,%edx
     9d6:	c7 40 28 07 00 00 00 	movl   $0x7,0x28(%eax)
     9dd:	89 c7                	mov    %eax,%edi
     9df:	66 c7 80 80 00 00 00 	movw   $0x1,0x80(%eax)
     9e6:	01 00 
     9e8:	8b 80 94 00 00 00    	mov    0x94(%eax),%eax
     9ee:	89 f9                	mov    %edi,%ecx
     9f0:	c6 00 20             	movb   $0x20,(%eax)
     9f3:	8b 43 10             	mov    0x10(%ebx),%eax
     9f6:	6a 01                	push   $0x1
     9f8:	e8 fc ff ff ff       	call   9f9 <generic_ide_ioctl+0x2d3>
			9f9: R_386_PC32	blk_execute_rq
     9fd:	5d                   	pop    %ebp
     9fe:	85 c0                	test   %eax,%eax
     a00:	74 03                	je     a05 <generic_ide_ioctl+0x2df>
     a02:	8b 77 78             	mov    0x78(%edi),%esi
     a05:	89 f8                	mov    %edi,%eax
     a07:	e8 fc ff ff ff       	call   a08 <generic_ide_ioctl+0x2e2>
			a08: R_386_PC32	blk_put_request
     a0c:	eb 51                	jmp    a5f <generic_ide_ioctl+0x339>
     a0e:	b8 15 00 00 00       	mov    $0x15,%eax
     a13:	e8 fc ff ff ff       	call   a14 <generic_ide_ioctl+0x2ee>
			a14: R_386_PC32	capable
     a18:	85 c0                	test   %eax,%eax
     a1a:	74 32                	je     a4e <generic_ide_ioctl+0x328>
     a1c:	e8 fc ff ff ff       	call   a1d <generic_ide_ioctl+0x2f7>
			a1d: R_386_PC32	_cond_resched
     a21:	b8 01 00 00 00       	mov    $0x1,%eax
     a26:	8b 4c 24 60          	mov    0x60(%esp),%ecx
     a2a:	e8 fc ff ff ff       	call   a2b <generic_ide_ioctl+0x305>
			a2b: R_386_PC32	__put_user_4
     a2f:	31 f6                	xor    %esi,%esi
     a31:	85 c0                	test   %eax,%eax
     a33:	75 25                	jne    a5a <generic_ide_ioctl+0x334>
     a35:	eb 28                	jmp    a5f <generic_ide_ioctl+0x339>
     a37:	b8 15 00 00 00       	mov    $0x15,%eax
     a3c:	e8 fc ff ff ff       	call   a3d <generic_ide_ioctl+0x317>
			a3d: R_386_PC32	capable
     a41:	85 c0                	test   %eax,%eax
     a43:	74 09                	je     a4e <generic_ide_ioctl+0x328>
     a45:	eb 18                	jmp    a5f <generic_ide_ioctl+0x339>
     a47:	be ea ff ff ff       	mov    $0xffffffea,%esi
     a4c:	eb 11                	jmp    a5f <generic_ide_ioctl+0x339>
     a4e:	be f3 ff ff ff       	mov    $0xfffffff3,%esi
     a53:	eb 0a                	jmp    a5f <generic_ide_ioctl+0x339>
     a55:	83 ce ff             	or     $0xffffffff,%esi
     a58:	eb 05                	jmp    a5f <generic_ide_ioctl+0x339>
     a5a:	be f2 ff ff ff       	mov    $0xfffffff2,%esi
     a5f:	83 c4 4c             	add    $0x4c,%esp
     a62:	89 f0                	mov    %esi,%eax
     a64:	5b                   	pop    %ebx
     a65:	5e                   	pop    %esi
     a66:	5f                   	pop    %edi
     a67:	5d                   	pop    %ebp
     a68:	c3                   	ret    
     a69:	90                   	nop
     a6a:	90                   	nop
     a6b:	90                   	nop

00000a6c <ide_init_sg_cmd>:
     a6c:	89 50 2c             	mov    %edx,0x2c(%eax)
     a6f:	89 50 28             	mov    %edx,0x28(%eax)
     a72:	c7 40 38 00 00 00 00 	movl   $0x0,0x38(%eax)
     a79:	c7 40 34 00 00 00 00 	movl   $0x0,0x34(%eax)
     a80:	c3                   	ret    

00000a81 <ide_stall_queue>:
     a81:	53                   	push   %ebx
     a82:	8b 1d 00 00 00 00    	mov    0x0,%ebx
			a84: R_386_32	jiffies
     a88:	81 fa 4c 1d 00 00    	cmp    $0x1d4c,%edx
     a8e:	b9 4c 1d 00 00       	mov    $0x1d4c,%ecx
     a93:	0f 46 ca             	cmovbe %edx,%ecx
     a96:	81 48 30 00 00 04 00 	orl    $0x40000,0x30(%eax)
     a9d:	01 d9                	add    %ebx,%ecx
     a9f:	89 48 34             	mov    %ecx,0x34(%eax)
     aa2:	5b                   	pop    %ebx
     aa3:	c3                   	ret    

00000aa4 <ide_unlock_host>:
     aa4:	53                   	push   %ebx
     aa5:	89 c3                	mov    %eax,%ebx
     aa7:	f6 40 32 10          	testb  $0x10,0x32(%eax)
     aab:	74 0e                	je     abb <ide_unlock_host+0x17>
     aad:	8b 40 28             	mov    0x28(%eax),%eax
     ab0:	85 c0                	test   %eax,%eax
     ab2:	74 02                	je     ab6 <ide_unlock_host+0x12>
     ab4:	ff d0                	call   *%eax
     ab6:	f0 80 63 40 fe       	lock andb $0xfe,0x40(%ebx)
     abb:	5b                   	pop    %ebx
     abc:	c3                   	ret    

00000abd <drive_is_ready>:
     abd:	89 c1                	mov    %eax,%ecx
     abf:	8b 40 28             	mov    0x28(%eax),%eax
     ac2:	80 79 3f 00          	cmpb   $0x0,0x3f(%ecx)
     ac6:	74 09                	je     ad1 <drive_is_ready+0x14>
     ac8:	8b 50 78             	mov    0x78(%eax),%edx
     acb:	89 c8                	mov    %ecx,%eax
     acd:	ff 52 10             	call   *0x10(%edx)
     ad0:	c3                   	ret    
     ad1:	83 78 34 00          	cmpl   $0x0,0x34(%eax)
     ad5:	74 0e                	je     ae5 <drive_is_ready+0x28>
     ad7:	f6 40 5f 04          	testb  $0x4,0x5f(%eax)
     adb:	75 08                	jne    ae5 <drive_is_ready+0x28>
     add:	8b 50 70             	mov    0x70(%eax),%edx
     ae0:	ff 52 08             	call   *0x8(%edx)
     ae3:	eb 06                	jmp    aeb <drive_is_ready+0x2e>
     ae5:	8b 50 70             	mov    0x70(%eax),%edx
     ae8:	ff 52 04             	call   *0x4(%edx)
     aeb:	0f be c0             	movsbl %al,%eax
     aee:	f7 d0                	not    %eax
     af0:	c1 e8 1f             	shr    $0x1f,%eax
     af3:	c3                   	ret    

00000af4 <ide_pad_transfer>:
     af4:	55                   	push   %ebp
     af5:	89 d5                	mov    %edx,%ebp
     af7:	57                   	push   %edi
     af8:	89 c7                	mov    %eax,%edi
     afa:	56                   	push   %esi
     afb:	53                   	push   %ebx
     afc:	89 cb                	mov    %ecx,%ebx
     afe:	83 ec 08             	sub    $0x8,%esp
     b01:	8b 40 28             	mov    0x28(%eax),%eax
     b04:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)
     b0b:	00 
     b0c:	89 04 24             	mov    %eax,(%esp)
     b0f:	eb 3e                	jmp    b4f <ide_pad_transfer+0x5b>
     b11:	8b 04 24             	mov    (%esp),%eax
     b14:	85 ed                	test   %ebp,%ebp
     b16:	8b 70 70             	mov    0x70(%eax),%esi
     b19:	74 19                	je     b34 <ide_pad_transfer+0x40>
     b1b:	83 fb 04             	cmp    $0x4,%ebx
     b1e:	b8 04 00 00 00       	mov    $0x4,%eax
     b23:	0f 4e c3             	cmovle %ebx,%eax
     b26:	31 d2                	xor    %edx,%edx
     b28:	50                   	push   %eax
     b29:	89 f8                	mov    %edi,%eax
     b2b:	8d 4c 24 08          	lea    0x8(%esp),%ecx
     b2f:	ff 56 20             	call   *0x20(%esi)
     b32:	eb 17                	jmp    b4b <ide_pad_transfer+0x57>
     b34:	83 fb 04             	cmp    $0x4,%ebx
     b37:	b8 04 00 00 00       	mov    $0x4,%eax
     b3c:	0f 4e c3             	cmovle %ebx,%eax
     b3f:	31 d2                	xor    %edx,%edx
     b41:	50                   	push   %eax
     b42:	89 f8                	mov    %edi,%eax
     b44:	8d 4c 24 08          	lea    0x8(%esp),%ecx
     b48:	ff 56 1c             	call   *0x1c(%esi)
     b4b:	59                   	pop    %ecx
     b4c:	83 eb 04             	sub    $0x4,%ebx
     b4f:	85 db                	test   %ebx,%ebx
     b51:	7f be                	jg     b11 <ide_pad_transfer+0x1d>
     b53:	58                   	pop    %eax
     b54:	5a                   	pop    %edx
     b55:	5b                   	pop    %ebx
     b56:	5e                   	pop    %esi
     b57:	5f                   	pop    %edi
     b58:	5d                   	pop    %ebp
     b59:	c3                   	ret    

00000b5a <ide_requeue_and_plug>:
     b5a:	56                   	push   %esi
     b5b:	53                   	push   %ebx
     b5c:	83 ec 04             	sub    $0x4,%esp
     b5f:	8b 58 10             	mov    0x10(%eax),%ebx
     b62:	8b 83 b8 01 00 00    	mov    0x1b8(%ebx),%eax
     b68:	89 14 24             	mov    %edx,(%esp)
     b6b:	e8 fc ff ff ff       	call   b6c <ide_requeue_and_plug+0x12>
			b6c: R_386_PC32	_spin_lock_irqsave
     b70:	8b 14 24             	mov    (%esp),%edx
     b73:	89 c6                	mov    %eax,%esi
     b75:	85 d2                	test   %edx,%edx
     b77:	74 07                	je     b80 <ide_requeue_and_plug+0x26>
     b79:	89 d8                	mov    %ebx,%eax
     b7b:	e8 fc ff ff ff       	call   b7c <ide_requeue_and_plug+0x22>
			b7c: R_386_PC32	blk_requeue_request
     b80:	89 d8                	mov    %ebx,%eax
     b82:	e8 fc ff ff ff       	call   b83 <ide_requeue_and_plug+0x29>
			b83: R_386_PC32	elv_queue_empty
     b87:	85 c0                	test   %eax,%eax
     b89:	75 07                	jne    b92 <ide_requeue_and_plug+0x38>
     b8b:	89 d8                	mov    %ebx,%eax
     b8d:	e8 fc ff ff ff       	call   b8e <ide_requeue_and_plug+0x34>
			b8e: R_386_PC32	blk_plug_device
     b92:	8b 83 b8 01 00 00    	mov    0x1b8(%ebx),%eax
     b98:	89 f2                	mov    %esi,%edx
     b9a:	5b                   	pop    %ebx
     b9b:	5b                   	pop    %ebx
     b9c:	5e                   	pop    %esi
     b9d:	e9 fc ff ff ff       	jmp    b9e <ide_requeue_and_plug+0x44>
			b9e: R_386_PC32	_spin_unlock_irqrestore

00000ba2 <ide_intr>:
     ba2:	55                   	push   %ebp
     ba3:	57                   	push   %edi
     ba4:	56                   	push   %esi
     ba5:	53                   	push   %ebx
     ba6:	89 d3                	mov    %edx,%ebx
     ba8:	83 ec 0c             	sub    $0xc,%esp
     bab:	8b 7a 08             	mov    0x8(%edx),%edi
     bae:	f6 47 32 10          	testb  $0x10,0x32(%edi)
     bb2:	74 0b                	je     bbf <ide_intr+0x1d>
     bb4:	31 f6                	xor    %esi,%esi
     bb6:	3b 57 3c             	cmp    0x3c(%edi),%edx
     bb9:	0f 85 92 01 00 00    	jne    d51 <ide_intr+0x1af>
     bbf:	8d 83 7c 02 00 00    	lea    0x27c(%ebx),%eax
     bc5:	89 04 24             	mov    %eax,(%esp)
     bc8:	e8 fc ff ff ff       	call   bc9 <ide_intr+0x27>
			bc9: R_386_PC32	_spin_lock_irqsave
     bcd:	89 44 24 08          	mov    %eax,0x8(%esp)
     bd1:	8b 43 74             	mov    0x74(%ebx),%eax
     bd4:	85 c0                	test   %eax,%eax
     bd6:	74 13                	je     beb <ide_intr+0x49>
     bd8:	8b 50 24             	mov    0x24(%eax),%edx
     bdb:	85 d2                	test   %edx,%edx
     bdd:	74 0c                	je     beb <ide_intr+0x49>
     bdf:	89 d8                	mov    %ebx,%eax
     be1:	ff d2                	call   *%edx
     be3:	85 c0                	test   %eax,%eax
     be5:	0f 84 36 01 00 00    	je     d21 <ide_intr+0x17f>
     beb:	8b b3 2c 02 00 00    	mov    0x22c(%ebx),%esi
     bf1:	85 f6                	test   %esi,%esi
     bf3:	74 09                	je     bfe <ide_intr+0x5c>
     bf5:	f6 83 30 02 00 00 01 	testb  $0x1,0x230(%ebx)
     bfc:	74 7b                	je     c79 <ide_intr+0xd7>
     bfe:	80 7f 34 00          	cmpb   $0x0,0x34(%edi)
     c02:	8b 53 70             	mov    0x70(%ebx),%edx
     c05:	78 68                	js     c6f <ide_intr+0xcd>
     c07:	89 d8                	mov    %ebx,%eax
     c09:	ff 52 04             	call   *0x4(%edx)
     c0c:	0f b6 c0             	movzbl %al,%eax
     c0f:	89 c2                	mov    %eax,%edx
     c11:	81 e2 c9 00 00 00    	and    $0xc9,%edx
     c17:	83 fa 40             	cmp    $0x40,%edx
     c1a:	0f 84 01 01 00 00    	je     d21 <ide_intr+0x17f>
     c20:	8b 35 d0 00 00 00    	mov    0xd0,%esi
			c22: R_386_32	.bss
     c26:	8b 15 cc 00 00 00    	mov    0xcc,%edx
			c28: R_386_32	.bss
     c2c:	8b 0d 00 00 00 00    	mov    0x0,%ecx
			c2e: R_386_32	jiffies
     c32:	81 c6 fa 00 00 00    	add    $0xfa,%esi
     c38:	42                   	inc    %edx
     c39:	39 ce                	cmp    %ecx,%esi
     c3b:	89 15 cc 00 00 00    	mov    %edx,0xcc
			c3d: R_386_32	.bss
     c41:	0f 89 da 00 00 00    	jns    d21 <ide_intr+0x17f>
     c47:	52                   	push   %edx
     c48:	8b 0d 00 00 00 00    	mov    0x0,%ecx
			c4a: R_386_32	jiffies
     c4e:	31 ff                	xor    %edi,%edi
     c50:	50                   	push   %eax
     c51:	31 f6                	xor    %esi,%esi
     c53:	8d 43 0c             	lea    0xc(%ebx),%eax
     c56:	50                   	push   %eax
     c57:	68 d4 01 00 00       	push   $0x1d4
			c58: R_386_32	.rodata.str1.1
     c5c:	89 0d d0 00 00 00    	mov    %ecx,0xd0
			c5e: R_386_32	.bss
     c62:	e8 fc ff ff ff       	call   c63 <ide_intr+0xc1>
			c63: R_386_PC32	printk
     c67:	83 c4 10             	add    $0x10,%esp
     c6a:	e9 bf 00 00 00       	jmp    d2e <ide_intr+0x18c>
     c6f:	89 d8                	mov    %ebx,%eax
     c71:	ff 52 04             	call   *0x4(%edx)
     c74:	e9 a8 00 00 00       	jmp    d21 <ide_intr+0x17f>
     c79:	8b ab 34 02 00 00    	mov    0x234(%ebx),%ebp
     c7f:	89 e8                	mov    %ebp,%eax
     c81:	e8 37 fe ff ff       	call   abd <drive_is_ready>
     c86:	85 c0                	test   %eax,%eax
     c88:	0f 84 93 00 00 00    	je     d21 <ide_intr+0x17f>
     c8e:	ff 83 74 02 00 00    	incl   0x274(%ebx)
     c94:	8d 83 3c 02 00 00    	lea    0x23c(%ebx),%eax
     c9a:	c7 83 2c 02 00 00 00 	movl   $0x0,0x22c(%ebx)
     ca1:	00 00 00 
     ca4:	c7 83 70 02 00 00 00 	movl   $0x0,0x270(%ebx)
     cab:	00 00 00 
     cae:	e8 fc ff ff ff       	call   caf <ide_intr+0x10d>
			caf: R_386_PC32	del_timer
     cb3:	fe 83 7c 02 00 00    	incb   0x27c(%ebx)
     cb9:	8b 43 74             	mov    0x74(%ebx),%eax
     cbc:	85 c0                	test   %eax,%eax
     cbe:	74 0b                	je     ccb <ide_intr+0x129>
     cc0:	8b 50 20             	mov    0x20(%eax),%edx
     cc3:	85 d2                	test   %edx,%edx
     cc5:	74 04                	je     ccb <ide_intr+0x129>
     cc7:	89 e8                	mov    %ebp,%eax
     cc9:	ff d2                	call   *%edx
     ccb:	f6 45 30 04          	testb  $0x4,0x30(%ebp)
     ccf:	74 06                	je     cd7 <ide_intr+0x135>
     cd1:	ff 15 0c 00 00 00    	call   *0xc
			cd3: R_386_32	pv_irq_ops
     cd7:	89 e8                	mov    %ebp,%eax
     cd9:	ff d6                	call   *%esi
     cdb:	89 c6                	mov    %eax,%esi
     cdd:	8b 04 24             	mov    (%esp),%eax
     ce0:	e8 fc ff ff ff       	call   ce1 <ide_intr+0x13f>
			ce1: R_386_PC32	_spin_lock_irq
     ce5:	85 f6                	test   %esi,%esi
     ce7:	75 3e                	jne    d27 <ide_intr+0x185>
     ce9:	f6 83 30 02 00 00 01 	testb  $0x1,0x230(%ebx)
     cf0:	75 35                	jne    d27 <ide_intr+0x185>
     cf2:	83 bb 2c 02 00 00 00 	cmpl   $0x0,0x22c(%ebx)
     cf9:	74 04                	je     cff <ide_intr+0x15d>
     cfb:	0f 0b                	ud2a   
     cfd:	eb fe                	jmp    cfd <ide_intr+0x15b>
     cff:	8b 83 38 02 00 00    	mov    0x238(%ebx),%eax
     d05:	bf 01 00 00 00       	mov    $0x1,%edi
     d0a:	c7 83 38 02 00 00 00 	movl   $0x0,0x238(%ebx)
     d11:	00 00 00 
     d14:	80 a3 f0 00 00 00 fd 	andb   $0xfd,0xf0(%ebx)
     d1b:	89 44 24 04          	mov    %eax,0x4(%esp)
     d1f:	eb 08                	jmp    d29 <ide_intr+0x187>
     d21:	31 ff                	xor    %edi,%edi
     d23:	31 f6                	xor    %esi,%esi
     d25:	eb 07                	jmp    d2e <ide_intr+0x18c>
     d27:	31 ff                	xor    %edi,%edi
     d29:	be 01 00 00 00       	mov    $0x1,%esi
     d2e:	8b 54 24 08          	mov    0x8(%esp),%edx
     d32:	8b 04 24             	mov    (%esp),%eax
     d35:	e8 fc ff ff ff       	call   d36 <ide_intr+0x194>
			d36: R_386_PC32	_spin_unlock_irqrestore
     d3a:	85 ff                	test   %edi,%edi
     d3c:	74 13                	je     d51 <ide_intr+0x1af>
     d3e:	8b 43 08             	mov    0x8(%ebx),%eax
     d41:	e8 5e fd ff ff       	call   aa4 <ide_unlock_host>
     d46:	89 e8                	mov    %ebp,%eax
     d48:	8b 54 24 04          	mov    0x4(%esp),%edx
     d4c:	e8 09 fe ff ff       	call   b5a <ide_requeue_and_plug>
     d51:	83 c4 0c             	add    $0xc,%esp
     d54:	89 f0                	mov    %esi,%eax
     d56:	5b                   	pop    %ebx
     d57:	5e                   	pop    %esi
     d58:	5f                   	pop    %edi
     d59:	5d                   	pop    %ebp
     d5a:	c3                   	ret    

00000d5b <ide_timer_expiry>:
     d5b:	55                   	push   %ebp
     d5c:	57                   	push   %edi
     d5d:	56                   	push   %esi
     d5e:	53                   	push   %ebx
     d5f:	89 c3                	mov    %eax,%ebx
     d61:	83 ec 0c             	sub    $0xc,%esp
     d64:	8d 80 7c 02 00 00    	lea    0x27c(%eax),%eax
     d6a:	89 04 24             	mov    %eax,(%esp)
     d6d:	e8 fc ff ff ff       	call   d6e <ide_timer_expiry+0x13>
			d6e: R_386_PC32	_spin_lock_irqsave
     d72:	89 44 24 04          	mov    %eax,0x4(%esp)
     d76:	8b ab 2c 02 00 00    	mov    0x22c(%ebx),%ebp
     d7c:	85 ed                	test   %ebp,%ebp
     d7e:	0f 84 4b 01 00 00    	je     ecf <ide_timer_expiry+0x174>
     d84:	8b 83 74 02 00 00    	mov    0x274(%ebx),%eax
     d8a:	3b 83 78 02 00 00    	cmp    0x278(%ebx),%eax
     d90:	0f 85 39 01 00 00    	jne    ecf <ide_timer_expiry+0x174>
     d96:	8b 93 70 02 00 00    	mov    0x270(%ebx),%edx
     d9c:	8b b3 34 02 00 00    	mov    0x234(%ebx),%esi
     da2:	85 d2                	test   %edx,%edx
     da4:	74 41                	je     de7 <ide_timer_expiry+0x8c>
     da6:	89 f0                	mov    %esi,%eax
     da8:	ff d2                	call   *%edx
     daa:	85 c0                	test   %eax,%eax
     dac:	89 c7                	mov    %eax,%edi
     dae:	7e 3a                	jle    dea <ide_timer_expiry+0x8f>
     db0:	a1 00 00 00 00       	mov    0x0,%eax
			db1: R_386_32	jiffies
     db5:	01 c7                	add    %eax,%edi
     db7:	8b 83 74 02 00 00    	mov    0x274(%ebx),%eax
     dbd:	89 bb 44 02 00 00    	mov    %edi,0x244(%ebx)
     dc3:	89 83 78 02 00 00    	mov    %eax,0x278(%ebx)
     dc9:	8d 83 3c 02 00 00    	lea    0x23c(%ebx),%eax
     dcf:	e8 fc ff ff ff       	call   dd0 <ide_timer_expiry+0x75>
			dd0: R_386_PC32	add_timer
     dd4:	8b 54 24 04          	mov    0x4(%esp),%edx
     dd8:	8b 04 24             	mov    (%esp),%eax
     ddb:	83 c4 0c             	add    $0xc,%esp
     dde:	5b                   	pop    %ebx
     ddf:	5e                   	pop    %esi
     de0:	5f                   	pop    %edi
     de1:	5d                   	pop    %ebp
     de2:	e9 fc ff ff ff       	jmp    de3 <ide_timer_expiry+0x88>
			de3: R_386_PC32	_spin_unlock_irqrestore
     de7:	83 cf ff             	or     $0xffffffff,%edi
     dea:	c7 83 2c 02 00 00 00 	movl   $0x0,0x22c(%ebx)
     df1:	00 00 00 
     df4:	c7 83 70 02 00 00 00 	movl   $0x0,0x270(%ebx)
     dfb:	00 00 00 
     dfe:	fe 83 7c 02 00 00    	incb   0x27c(%ebx)
     e04:	8b 83 d8 00 00 00    	mov    0xd8(%ebx),%eax
     e0a:	e8 fc ff ff ff       	call   e0b <ide_timer_expiry+0xb0>
			e0b: R_386_PC32	disable_irq
     e0f:	ff 15 08 00 00 00    	call   *0x8
			e11: R_386_32	pv_irq_ops
     e15:	f6 83 30 02 00 00 01 	testb  $0x1,0x230(%ebx)
     e1c:	74 06                	je     e24 <ide_timer_expiry+0xc9>
     e1e:	89 f0                	mov    %esi,%eax
     e20:	ff d5                	call   *%ebp
     e22:	eb 68                	jmp    e8c <ide_timer_expiry+0x131>
     e24:	89 f0                	mov    %esi,%eax
     e26:	e8 92 fc ff ff       	call   abd <drive_is_ready>
     e2b:	85 c0                	test   %eax,%eax
     e2d:	74 35                	je     e64 <ide_timer_expiry+0x109>
     e2f:	80 7e 3f 00          	cmpb   $0x0,0x3f(%esi)
     e33:	74 08                	je     e3d <ide_timer_expiry+0xe2>
     e35:	8b 53 78             	mov    0x78(%ebx),%edx
     e38:	89 f0                	mov    %esi,%eax
     e3a:	ff 52 14             	call   *0x14(%edx)
     e3d:	8b 43 74             	mov    0x74(%ebx),%eax
     e40:	85 c0                	test   %eax,%eax
     e42:	74 0b                	je     e4f <ide_timer_expiry+0xf4>
     e44:	8b 50 20             	mov    0x20(%eax),%edx
     e47:	85 d2                	test   %edx,%edx
     e49:	74 04                	je     e4f <ide_timer_expiry+0xf4>
     e4b:	89 f0                	mov    %esi,%eax
     e4d:	ff d2                	call   *%edx
     e4f:	56                   	push   %esi
     e50:	68 20 02 00 00       	push   $0x220
			e51: R_386_32	.rodata.str1.1
     e55:	e8 fc ff ff ff       	call   e56 <ide_timer_expiry+0xfb>
			e56: R_386_PC32	printk
     e5a:	89 f0                	mov    %esi,%eax
     e5c:	ff d5                	call   *%ebp
     e5e:	5d                   	pop    %ebp
     e5f:	89 c7                	mov    %eax,%edi
     e61:	58                   	pop    %eax
     e62:	eb 2a                	jmp    e8e <ide_timer_expiry+0x133>
     e64:	80 7e 3f 00          	cmpb   $0x0,0x3f(%esi)
     e68:	74 0b                	je     e75 <ide_timer_expiry+0x11a>
     e6a:	89 fa                	mov    %edi,%edx
     e6c:	89 f0                	mov    %esi,%eax
     e6e:	e8 fc ff ff ff       	call   e6f <ide_timer_expiry+0x114>
			e6f: R_386_PC32	ide_dma_timeout_retry
     e73:	eb 17                	jmp    e8c <ide_timer_expiry+0x131>
     e75:	8b 53 70             	mov    0x70(%ebx),%edx
     e78:	89 d8                	mov    %ebx,%eax
     e7a:	ff 52 04             	call   *0x4(%edx)
     e7d:	ba 37 02 00 00       	mov    $0x237,%edx
			e7e: R_386_32	.rodata.str1.1
     e82:	0f b6 c8             	movzbl %al,%ecx
     e85:	89 f0                	mov    %esi,%eax
     e87:	e8 fc ff ff ff       	call   e88 <ide_timer_expiry+0x12d>
			e88: R_386_PC32	ide_error
     e8c:	89 c7                	mov    %eax,%edi
     e8e:	8b 04 24             	mov    (%esp),%eax
     e91:	e8 fc ff ff ff       	call   e92 <ide_timer_expiry+0x137>
			e92: R_386_PC32	_spin_lock_irq
     e96:	8b 83 d8 00 00 00    	mov    0xd8(%ebx),%eax
     e9c:	e8 fc ff ff ff       	call   e9d <ide_timer_expiry+0x142>
			e9d: R_386_PC32	enable_irq
     ea1:	85 ff                	test   %edi,%edi
     ea3:	75 2a                	jne    ecf <ide_timer_expiry+0x174>
     ea5:	f6 83 30 02 00 00 01 	testb  $0x1,0x230(%ebx)
     eac:	75 21                	jne    ecf <ide_timer_expiry+0x174>
     eae:	8b 83 38 02 00 00    	mov    0x238(%ebx),%eax
     eb4:	66 bf 01 00          	mov    $0x1,%di
     eb8:	89 44 24 08          	mov    %eax,0x8(%esp)
     ebc:	c7 83 38 02 00 00 00 	movl   $0x0,0x238(%ebx)
     ec3:	00 00 00 
     ec6:	80 a3 f0 00 00 00 fd 	andb   $0xfd,0xf0(%ebx)
     ecd:	eb 02                	jmp    ed1 <ide_timer_expiry+0x176>
     ecf:	31 ff                	xor    %edi,%edi
     ed1:	8b 54 24 04          	mov    0x4(%esp),%edx
     ed5:	8b 04 24             	mov    (%esp),%eax
     ed8:	e8 fc ff ff ff       	call   ed9 <ide_timer_expiry+0x17e>
			ed9: R_386_PC32	_spin_unlock_irqrestore
     edd:	85 ff                	test   %edi,%edi
     edf:	74 1a                	je     efb <ide_timer_expiry+0x1a0>
     ee1:	8b 43 08             	mov    0x8(%ebx),%eax
     ee4:	e8 bb fb ff ff       	call   aa4 <ide_unlock_host>
     ee9:	89 f0                	mov    %esi,%eax
     eeb:	8b 54 24 08          	mov    0x8(%esp),%edx
     eef:	83 c4 0c             	add    $0xc,%esp
     ef2:	5b                   	pop    %ebx
     ef3:	5e                   	pop    %esi
     ef4:	5f                   	pop    %edi
     ef5:	5d                   	pop    %ebp
     ef6:	e9 5f fc ff ff       	jmp    b5a <ide_requeue_and_plug>
     efb:	83 c4 0c             	add    $0xc,%esp
     efe:	5b                   	pop    %ebx
     eff:	5e                   	pop    %esi
     f00:	5f                   	pop    %edi
     f01:	5d                   	pop    %ebp
     f02:	c3                   	ret    

00000f03 <ide_map_sg>:
     f03:	53                   	push   %ebx
     f04:	89 d3                	mov    %edx,%ebx
     f06:	8b 50 28             	mov    0x28(%eax),%edx
     f09:	8b 40 10             	mov    0x10(%eax),%eax
     f0c:	8b 8a 8c 00 00 00    	mov    0x8c(%edx),%ecx
     f12:	8b 53 3c             	mov    0x3c(%ebx),%edx
     f15:	e8 fc ff ff ff       	call   f16 <ide_map_sg+0x13>
			f16: R_386_PC32	blk_rq_map_sg
     f1a:	89 43 1c             	mov    %eax,0x1c(%ebx)
     f1d:	5b                   	pop    %ebx
     f1e:	c3                   	ret    

00000f1f <ide_complete_cmd>:
     f1f:	55                   	push   %ebp
     f20:	57                   	push   %edi
     f21:	56                   	push   %esi
     f22:	89 d6                	mov    %edx,%esi
     f24:	53                   	push   %ebx
     f25:	89 c3                	mov    %eax,%ebx
     f27:	83 ec 08             	sub    $0x8,%esp
     f2a:	8b 40 28             	mov    0x28(%eax),%eax
     f2d:	8b 7a 3c             	mov    0x3c(%edx),%edi
     f30:	8b 68 70             	mov    0x70(%eax),%ebp
     f33:	8a 42 07             	mov    0x7(%edx),%al
     f36:	88 44 24 03          	mov    %al,0x3(%esp)
     f3a:	8b 44 24 1c          	mov    0x1c(%esp),%eax
     f3e:	f6 42 16 08          	testb  $0x8,0x16(%edx)
     f42:	88 4a 07             	mov    %cl,0x7(%edx)
     f45:	88 42 01             	mov    %al,0x1(%edx)
     f48:	74 19                	je     f63 <ide_complete_cmd+0x44>
     f4a:	8d 4c 24 06          	lea    0x6(%esp),%ecx
     f4e:	89 d8                	mov    %ebx,%eax
     f50:	6a 02                	push   $0x2
     f52:	ff 55 1c             	call   *0x1c(%ebp)
     f55:	8a 44 24 0a          	mov    0xa(%esp),%al
     f59:	88 06                	mov    %al,(%esi)
     f5b:	8a 44 24 0b          	mov    0xb(%esp),%al
     f5f:	88 46 08             	mov    %al,0x8(%esi)
     f62:	58                   	pop    %eax
     f63:	89 f2                	mov    %esi,%edx
     f65:	89 d8                	mov    %ebx,%eax
     f67:	e8 fc ff ff ff       	call   f68 <ide_complete_cmd+0x49>
			f68: R_386_PC32	ide_tf_readback
     f6c:	f6 46 14 04          	testb  $0x4,0x14(%esi)
     f70:	74 2c                	je     f9e <ide_complete_cmd+0x7f>
     f72:	80 7c 24 03 e1       	cmpb   $0xe1,0x3(%esp)
     f77:	75 25                	jne    f9e <ide_complete_cmd+0x7f>
     f79:	80 7e 03 c4          	cmpb   $0xc4,0x3(%esi)
     f7d:	74 18                	je     f97 <ide_complete_cmd+0x78>
     f7f:	53                   	push   %ebx
     f80:	68 43 02 00 00       	push   $0x243
			f81: R_386_32	.rodata.str1.1
     f85:	e8 fc ff ff ff       	call   f86 <ide_complete_cmd+0x67>
			f86: R_386_PC32	printk
     f8a:	89 d8                	mov    %ebx,%eax
     f8c:	89 f2                	mov    %esi,%edx
     f8e:	e8 fc ff ff ff       	call   f8f <ide_complete_cmd+0x70>
			f8f: R_386_PC32	ide_tf_dump
     f93:	5b                   	pop    %ebx
     f94:	5d                   	pop    %ebp
     f95:	eb 07                	jmp    f9e <ide_complete_cmd+0x7f>
     f97:	81 4b 30 00 00 00 08 	orl    $0x8000000,0x30(%ebx)
     f9e:	85 ff                	test   %edi,%edi
     fa0:	74 1f                	je     fc1 <ide_complete_cmd+0xa2>
     fa2:	83 7f 28 09          	cmpl   $0x9,0x28(%edi)
     fa6:	75 19                	jne    fc1 <ide_complete_cmd+0xa2>
     fa8:	f6 46 14 20          	testb  $0x20,0x14(%esi)
     fac:	8b 47 6c             	mov    0x6c(%edi),%eax
     faf:	74 07                	je     fb8 <ide_complete_cmd+0x99>
     fb1:	e8 fc ff ff ff       	call   fb2 <ide_complete_cmd+0x93>
			fb2: R_386_PC32	kfree
     fb6:	eb 09                	jmp    fc1 <ide_complete_cmd+0xa2>
     fb8:	b9 10 00 00 00       	mov    $0x10,%ecx
     fbd:	89 c7                	mov    %eax,%edi
     fbf:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)
     fc1:	5a                   	pop    %edx
     fc2:	59                   	pop    %ecx
     fc3:	5b                   	pop    %ebx
     fc4:	5e                   	pop    %esi
     fc5:	5f                   	pop    %edi
     fc6:	5d                   	pop    %ebp
     fc7:	c3                   	ret    

00000fc8 <ide_end_rq>:
     fc8:	56                   	push   %esi
     fc9:	89 ce                	mov    %ecx,%esi
     fcb:	53                   	push   %ebx
     fcc:	89 d3                	mov    %edx,%ebx
     fce:	8b 50 30             	mov    0x30(%eax),%edx
     fd1:	f7 c2 00 00 00 01    	test   $0x1000000,%edx
     fd7:	74 14                	je     fed <ide_end_rq+0x25>
     fd9:	80 78 3e 03          	cmpb   $0x3,0x3e(%eax)
     fdd:	77 0e                	ja     fed <ide_end_rq+0x25>
     fdf:	81 e2 ff ff ff fe    	and    $0xfeffffff,%edx
     fe5:	89 50 30             	mov    %edx,0x30(%eax)
     fe8:	e8 fc ff ff ff       	call   fe9 <ide_end_rq+0x21>
			fe9: R_386_PC32	ide_dma_on
     fed:	8b 4c 24 0c          	mov    0xc(%esp),%ecx
     ff1:	89 f2                	mov    %esi,%edx
     ff3:	89 d8                	mov    %ebx,%eax
     ff5:	e8 fc ff ff ff       	call   ff6 <ide_end_rq+0x2e>
			ff6: R_386_PC32	blk_end_request
     ffa:	5b                   	pop    %ebx
     ffb:	5e                   	pop    %esi
     ffc:	0f b6 c0             	movzbl %al,%eax
     fff:	c3                   	ret    

00001000 <ide_complete_rq>:
    1000:	56                   	push   %esi
    1001:	89 d6                	mov    %edx,%esi
    1003:	53                   	push   %ebx
    1004:	8b 58 28             	mov    0x28(%eax),%ebx
    1007:	85 f6                	test   %esi,%esi
    1009:	8b 93 38 02 00 00    	mov    0x238(%ebx),%edx
    100f:	7f 0f                	jg     1020 <ide_complete_rq+0x20>
    1011:	f6 42 24 0e          	testb  $0xe,0x24(%edx)
    1015:	74 09                	je     1020 <ide_complete_rq+0x20>
    1017:	8b 4a 38             	mov    0x38(%edx),%ecx
    101a:	81 e1 00 fe ff ff    	and    $0xfffffe00,%ecx
    1020:	51                   	push   %ecx
    1021:	89 f1                	mov    %esi,%ecx
    1023:	e8 fc ff ff ff       	call   1024 <ide_complete_rq+0x24>
			1024: R_386_PC32	ide_end_rq
    1028:	5a                   	pop    %edx
    1029:	85 c0                	test   %eax,%eax
    102b:	75 0a                	jne    1037 <ide_complete_rq+0x37>
    102d:	c7 83 38 02 00 00 00 	movl   $0x0,0x238(%ebx)
    1034:	00 00 00 
    1037:	5b                   	pop    %ebx
    1038:	5e                   	pop    %esi
    1039:	c3                   	ret    

0000103a <ide_kill_rq>:
    103a:	53                   	push   %ebx
    103b:	31 db                	xor    %ebx,%ebx
    103d:	83 7a 28 07          	cmpl   $0x7,0x28(%edx)
    1041:	75 09                	jne    104c <ide_kill_rq+0x12>
    1043:	31 db                	xor    %ebx,%ebx
    1045:	83 7a 60 00          	cmpl   $0x0,0x60(%edx)
    1049:	0f 95 c3             	setne  %bl
    104c:	85 db                	test   %ebx,%ebx
    104e:	8a 48 46             	mov    0x46(%eax),%cl
    1051:	c7 80 c0 01 00 00 00 	movl   $0x0,0x1c0(%eax)
    1058:	00 00 00 
    105b:	74 0e                	je     106b <ide_kill_rq+0x31>
    105d:	80 f9 01             	cmp    $0x1,%cl
    1060:	77 09                	ja     106b <ide_kill_rq+0x31>
    1062:	c7 42 78 00 00 00 00 	movl   $0x0,0x78(%edx)
    1069:	eb 20                	jmp    108b <ide_kill_rq+0x51>
    106b:	fe c9                	dec    %cl
    106d:	75 09                	jne    1078 <ide_kill_rq+0x3e>
    106f:	c7 42 78 65 00 00 00 	movl   $0x65,0x78(%edx)
    1076:	eb 13                	jmp    108b <ide_kill_rq+0x51>
    1078:	83 7a 28 01          	cmpl   $0x1,0x28(%edx)
    107c:	74 0d                	je     108b <ide_kill_rq+0x51>
    107e:	83 7a 78 00          	cmpl   $0x0,0x78(%edx)
    1082:	75 07                	jne    108b <ide_kill_rq+0x51>
    1084:	c7 42 78 fb ff ff ff 	movl   $0xfffffffb,0x78(%edx)
    108b:	8b 4a 38             	mov    0x38(%edx),%ecx
    108e:	ba fb ff ff ff       	mov    $0xfffffffb,%edx
    1093:	5b                   	pop    %ebx
    1094:	e9 fc ff ff ff       	jmp    1095 <ide_kill_rq+0x5b>
			1095: R_386_PC32	ide_complete_rq

00001099 <do_ide_request>:
    1099:	55                   	push   %ebp
    109a:	57                   	push   %edi
    109b:	56                   	push   %esi
    109c:	53                   	push   %ebx
    109d:	83 ec 54             	sub    $0x54,%esp
    10a0:	89 04 24             	mov    %eax,(%esp)
    10a3:	8b 98 a8 01 00 00    	mov    0x1a8(%eax),%ebx
    10a9:	8b 14 24             	mov    (%esp),%edx
    10ac:	8b 6b 28             	mov    0x28(%ebx),%ebp
    10af:	8b 45 08             	mov    0x8(%ebp),%eax
    10b2:	89 44 24 04          	mov    %eax,0x4(%esp)
    10b6:	83 ba 9c 02 00 00 00 	cmpl   $0x0,0x29c(%edx)
    10bd:	74 07                	je     10c6 <do_ide_request+0x2d>
    10bf:	89 d0                	mov    %edx,%eax
    10c1:	e8 fc ff ff ff       	call   10c2 <do_ide_request+0x29>
			10c2: R_386_PC32	blk_remove_plug
    10c6:	8b 14 24             	mov    (%esp),%edx
    10c9:	8b 82 b8 01 00 00    	mov    0x1b8(%edx),%eax
    10cf:	fe 00                	incb   (%eax)
    10d1:	ff 15 0c 00 00 00    	call   *0xc
			10d3: R_386_32	pv_irq_ops
    10d7:	e8 fc ff ff ff       	call   10d8 <do_ide_request+0x3f>
			10d8: R_386_PC32	_cond_resched
    10dc:	8b 44 24 04          	mov    0x4(%esp),%eax
    10e0:	f6 40 32 10          	testb  $0x10,0x32(%eax)
    10e4:	74 26                	je     110c <do_ide_request+0x73>
    10e6:	f0 0f ba 68 40 00    	lock btsl $0x0,0x40(%eax)
    10ec:	19 c0                	sbb    %eax,%eax
    10ee:	31 f6                	xor    %esi,%esi
    10f0:	85 c0                	test   %eax,%eax
    10f2:	0f 85 05 04 00 00    	jne    14fd <do_ide_request+0x464>
    10f8:	8b 54 24 04          	mov    0x4(%esp),%edx
    10fc:	8b 4a 24             	mov    0x24(%edx),%ecx
    10ff:	85 c9                	test   %ecx,%ecx
    1101:	74 09                	je     110c <do_ide_request+0x73>
    1103:	89 ea                	mov    %ebp,%edx
    1105:	b8 00 00 00 00       	mov    $0x0,%eax
			1106: R_386_32	ide_intr
    110a:	ff d1                	call   *%ecx
    110c:	8d 85 7c 02 00 00    	lea    0x27c(%ebp),%eax
    1112:	31 f6                	xor    %esi,%esi
    1114:	89 44 24 0c          	mov    %eax,0xc(%esp)
    1118:	e8 fc ff ff ff       	call   1119 <do_ide_request+0x80>
			1119: R_386_PC32	_spin_lock_irq
    111d:	8a 85 f0 00 00 00    	mov    0xf0(%ebp),%al
    1123:	a8 02                	test   $0x2,%al
    1125:	0f 85 bd 03 00 00    	jne    14e8 <do_ide_request+0x44f>
    112b:	83 c8 02             	or     $0x2,%eax
    112e:	83 bd 38 02 00 00 00 	cmpl   $0x0,0x238(%ebp)
    1135:	88 85 f0 00 00 00    	mov    %al,0xf0(%ebp)
    113b:	74 22                	je     115f <do_ide_request+0xc6>
    113d:	83 3d d4 00 00 00 00 	cmpl   $0x0,0xd4
			113f: R_386_32	.bss
    1144:	75 19                	jne    115f <do_ide_request+0xc6>
    1146:	ba d6 01 00 00       	mov    $0x1d6,%edx
    114b:	b8 0b 02 00 00       	mov    $0x20b,%eax
			114c: R_386_32	.rodata.str1.1
    1150:	e8 fc ff ff ff       	call   1151 <do_ide_request+0xb8>
			1151: R_386_PC32	warn_slowpath_null
    1155:	c7 05 d4 00 00 00 01 	movl   $0x1,0xd4
    115c:	00 00 00 
			1157: R_386_32	.bss
    115f:	8d 95 7c 02 00 00    	lea    0x27c(%ebp),%edx
    1165:	31 f6                	xor    %esi,%esi
    1167:	89 54 24 08          	mov    %edx,0x8(%esp)
    116b:	8b 55 08             	mov    0x8(%ebp),%edx
    116e:	f6 43 32 04          	testb  $0x4,0x32(%ebx)
    1172:	8b 42 3c             	mov    0x3c(%edx),%eax
    1175:	74 0f                	je     1186 <do_ide_request+0xed>
    1177:	8b 0d 00 00 00 00    	mov    0x0,%ecx
			1179: R_386_32	jiffies
    117d:	3b 4b 34             	cmp    0x34(%ebx),%ecx
    1180:	0f 88 a5 00 00 00    	js     122b <do_ide_request+0x192>
    1186:	f6 42 32 10          	testb  $0x10,0x32(%edx)
    118a:	74 29                	je     11b5 <do_ide_request+0x11c>
    118c:	39 c5                	cmp    %eax,%ebp
    118e:	74 25                	je     11b5 <do_ide_request+0x11c>
    1190:	85 c0                	test   %eax,%eax
    1192:	74 1b                	je     11af <do_ide_request+0x116>
    1194:	8b 90 34 02 00 00    	mov    0x234(%eax),%edx
    119a:	85 d2                	test   %edx,%edx
    119c:	74 11                	je     11af <do_ide_request+0x116>
    119e:	83 7a 30 00          	cmpl   $0x0,0x30(%edx)
    11a2:	78 0b                	js     11af <do_ide_request+0x116>
    11a4:	8b 48 70             	mov    0x70(%eax),%ecx
    11a7:	ba 0a 00 00 00       	mov    $0xa,%edx
    11ac:	ff 51 0c             	call   *0xc(%ecx)
    11af:	8b 45 08             	mov    0x8(%ebp),%eax
    11b2:	89 68 3c             	mov    %ebp,0x3c(%eax)
    11b5:	89 9d 34 02 00 00    	mov    %ebx,0x234(%ebp)
    11bb:	81 63 30 ff ff fb f7 	andl   $0xf7fbffff,0x30(%ebx)
    11c2:	8b 44 24 08          	mov    0x8(%esp),%eax
    11c6:	fe 00                	incb   (%eax)
    11c8:	ff 15 0c 00 00 00    	call   *0xc
			11ca: R_386_32	pv_irq_ops
    11ce:	8b 14 24             	mov    (%esp),%edx
    11d1:	8b 82 b8 01 00 00    	mov    0x1b8(%edx),%eax
    11d7:	e8 fc ff ff ff       	call   11d8 <do_ide_request+0x13f>
			11d8: R_386_PC32	_spin_lock_irq
    11dc:	85 f6                	test   %esi,%esi
    11de:	75 0a                	jne    11ea <do_ide_request+0x151>
    11e0:	8b 43 10             	mov    0x10(%ebx),%eax
    11e3:	e8 fc ff ff ff       	call   11e4 <do_ide_request+0x14b>
			11e4: R_386_PC32	blk_fetch_request
    11e8:	89 c6                	mov    %eax,%esi
    11ea:	8b 14 24             	mov    (%esp),%edx
    11ed:	8b 82 b8 01 00 00    	mov    0x1b8(%edx),%eax
    11f3:	fe 00                	incb   (%eax)
    11f5:	ff 15 0c 00 00 00    	call   *0xc
			11f7: R_386_32	pv_irq_ops
    11fb:	8b 44 24 0c          	mov    0xc(%esp),%eax
    11ff:	e8 fc ff ff ff       	call   1200 <do_ide_request+0x167>
			1200: R_386_PC32	_spin_lock_irq
    1204:	85 f6                	test   %esi,%esi
    1206:	75 0c                	jne    1214 <do_ide_request+0x17b>
    1208:	80 a5 f0 00 00 00 fd 	andb   $0xfd,0xf0(%ebp)
    120f:	e9 ab 02 00 00       	jmp    14bf <do_ide_request+0x426>
    1214:	f6 43 32 02          	testb  $0x2,0x32(%ebx)
    1218:	74 1d                	je     1237 <do_ide_request+0x19e>
    121a:	8b 46 28             	mov    0x28(%esi),%eax
    121d:	83 e8 04             	sub    $0x4,%eax
    1220:	83 f8 01             	cmp    $0x1,%eax
    1223:	76 12                	jbe    1237 <do_ide_request+0x19e>
    1225:	f6 46 26 01          	testb  $0x1,0x26(%esi)
    1229:	75 0c                	jne    1237 <do_ide_request+0x19e>
    122b:	80 a5 f0 00 00 00 fd 	andb   $0xfd,0xf0(%ebp)
    1232:	e9 b1 02 00 00       	jmp    14e8 <do_ide_request+0x44f>
    1237:	89 b5 38 02 00 00    	mov    %esi,0x238(%ebp)
    123d:	8b 44 24 08          	mov    0x8(%esp),%eax
    1241:	fe 00                	incb   (%eax)
    1243:	ff 15 0c 00 00 00    	call   *0xc
			1245: R_386_32	pv_irq_ops
    1249:	8b 46 24             	mov    0x24(%esi),%eax
    124c:	f6 c4 04             	test   $0x4,%ah
    124f:	75 04                	jne    1255 <do_ide_request+0x1bc>
    1251:	0f 0b                	ud2a   
    1253:	eb fe                	jmp    1253 <do_ide_request+0x1ba>
    1255:	8b 53 64             	mov    0x64(%ebx),%edx
    1258:	85 d2                	test   %edx,%edx
    125a:	74 19                	je     1275 <do_ide_request+0x1dc>
    125c:	39 53 60             	cmp    %edx,0x60(%ebx)
    125f:	76 14                	jbe    1275 <do_ide_request+0x1dc>
    1261:	80 cc 40             	or     $0x40,%ah
    1264:	89 f2                	mov    %esi,%edx
    1266:	89 46 24             	mov    %eax,0x24(%esi)
    1269:	89 d8                	mov    %ebx,%eax
    126b:	e8 fc ff ff ff       	call   126c <do_ide_request+0x1d3>
			126c: R_386_PC32	ide_kill_rq
    1270:	e9 c5 00 00 00       	jmp    133a <do_ide_request+0x2a1>
    1275:	8b 46 28             	mov    0x28(%esi),%eax
    1278:	83 e8 04             	sub    $0x4,%eax
    127b:	83 f8 01             	cmp    $0x1,%eax
    127e:	77 09                	ja     1289 <do_ide_request+0x1f0>
    1280:	89 f2                	mov    %esi,%edx
    1282:	89 d8                	mov    %ebx,%eax
    1284:	e8 fc ff ff ff       	call   1285 <do_ide_request+0x1ec>
			1285: R_386_PC32	ide_check_pm_state
    1289:	8b 43 28             	mov    0x28(%ebx),%eax
    128c:	8b 50 70             	mov    0x70(%eax),%edx
    128f:	89 d8                	mov    %ebx,%eax
    1291:	ff 52 10             	call   *0x10(%edx)
    1294:	0f b6 4b 47          	movzbl 0x47(%ebx),%ecx
    1298:	89 da                	mov    %ebx,%edx
    129a:	68 e2 04 00 00       	push   $0x4e2
    129f:	68 88 00 00 00       	push   $0x88
    12a4:	8d 44 24 58          	lea    0x58(%esp),%eax
    12a8:	e8 fc ff ff ff       	call   12a9 <do_ide_request+0x210>
			12a9: R_386_PC32	ide_wait_stat
    12ad:	5a                   	pop    %edx
    12ae:	59                   	pop    %ecx
    12af:	85 c0                	test   %eax,%eax
    12b1:	74 14                	je     12c7 <do_ide_request+0x22e>
    12b3:	53                   	push   %ebx
    12b4:	68 5f 02 00 00       	push   $0x25f
			12b5: R_386_32	.rodata.str1.1
    12b9:	e8 fc ff ff ff       	call   12ba <do_ide_request+0x221>
			12ba: R_386_PC32	printk
    12be:	8b 7c 24 58          	mov    0x58(%esp),%edi
    12c2:	e9 10 01 00 00       	jmp    13d7 <do_ide_request+0x33e>
    12c7:	80 7b 3c 00          	cmpb   $0x0,0x3c(%ebx)
    12cb:	0f 85 0d 01 00 00    	jne    13de <do_ide_request+0x345>
    12d1:	80 7b 42 ff          	cmpb   $0xff,0x42(%ebx)
    12d5:	75 0b                	jne    12e2 <do_ide_request+0x249>
    12d7:	0f b6 53 43          	movzbl 0x43(%ebx),%edx
    12db:	89 d8                	mov    %ebx,%eax
    12dd:	e8 fc ff ff ff       	call   12de <do_ide_request+0x245>
			12de: R_386_PC32	ide_config_drive_speed
    12e2:	8b 46 28             	mov    0x28(%esi),%eax
    12e5:	83 f8 09             	cmp    $0x9,%eax
    12e8:	75 57                	jne    1341 <do_ide_request+0x2a8>
    12ea:	8b 7e 6c             	mov    0x6c(%esi),%edi
    12ed:	85 ff                	test   %edi,%edi
    12ef:	74 36                	je     1327 <do_ide_request+0x28e>
    12f1:	83 7f 18 02          	cmpl   $0x2,0x18(%edi)
    12f5:	75 25                	jne    131c <do_ide_request+0x283>
    12f7:	8b 46 38             	mov    0x38(%esi),%eax
    12fa:	89 fa                	mov    %edi,%edx
    12fc:	c7 47 38 00 00 00 00 	movl   $0x0,0x38(%edi)
    1303:	c7 47 34 00 00 00 00 	movl   $0x0,0x34(%edi)
    130a:	25 00 fe ff ff       	and    $0xfffffe00,%eax
    130f:	89 47 2c             	mov    %eax,0x2c(%edi)
    1312:	89 47 28             	mov    %eax,0x28(%edi)
    1315:	89 d8                	mov    %ebx,%eax
    1317:	e8 fc ff ff ff       	call   1318 <do_ide_request+0x27f>
			1318: R_386_PC32	ide_map_sg
    131c:	89 fa                	mov    %edi,%edx
    131e:	89 d8                	mov    %ebx,%eax
    1320:	e8 fc ff ff ff       	call   1321 <do_ide_request+0x288>
			1321: R_386_PC32	do_rw_taskfile
    1325:	eb 7a                	jmp    13a1 <do_ide_request+0x308>
    1327:	8b 4e 38             	mov    0x38(%esi),%ecx
    132a:	31 d2                	xor    %edx,%edx
    132c:	89 d8                	mov    %ebx,%eax
    132e:	c7 46 78 00 00 00 00 	movl   $0x0,0x78(%esi)
    1335:	e8 fc ff ff ff       	call   1336 <do_ide_request+0x29d>
			1336: R_386_PC32	ide_complete_rq
    133a:	31 ff                	xor    %edi,%edi
    133c:	e9 5c 01 00 00       	jmp    149d <do_ide_request+0x404>
    1341:	8d 50 fc             	lea    -0x4(%eax),%edx
    1344:	83 fa 01             	cmp    $0x1,%edx
    1347:	77 2b                	ja     1374 <do_ide_request+0x2db>
    1349:	89 f2                	mov    %esi,%edx
    134b:	89 d8                	mov    %ebx,%eax
    134d:	8b 7e 6c             	mov    0x6c(%esi),%edi
    1350:	e8 fc ff ff ff       	call   1351 <do_ide_request+0x2b8>
			1351: R_386_PC32	ide_start_power_step
    1355:	85 c0                	test   %eax,%eax
    1357:	89 44 24 50          	mov    %eax,0x50(%esp)
    135b:	75 0e                	jne    136b <do_ide_request+0x2d2>
    135d:	83 3f 05             	cmpl   $0x5,(%edi)
    1360:	75 09                	jne    136b <do_ide_request+0x2d2>
    1362:	89 f2                	mov    %esi,%edx
    1364:	89 d8                	mov    %ebx,%eax
    1366:	e8 fc ff ff ff       	call   1367 <do_ide_request+0x2ce>
			1367: R_386_PC32	ide_complete_pm_rq
    136b:	8b 7c 24 50          	mov    0x50(%esp),%edi
    136f:	e9 29 01 00 00       	jmp    149d <do_ide_request+0x404>
    1374:	8b 56 60             	mov    0x60(%esi),%edx
    1377:	85 d2                	test   %edx,%edx
    1379:	75 45                	jne    13c0 <do_ide_request+0x327>
    137b:	83 f8 07             	cmp    $0x7,%eax
    137e:	75 40                	jne    13c0 <do_ide_request+0x327>
    1380:	8b 86 94 00 00 00    	mov    0x94(%esi),%eax
    1386:	8a 00                	mov    (%eax),%al
    1388:	3c 21                	cmp    $0x21,%al
    138a:	74 1c                	je     13a8 <do_ide_request+0x30f>
    138c:	77 06                	ja     1394 <do_ide_request+0x2fb>
    138e:	3c 20                	cmp    $0x20,%al
    1390:	75 2a                	jne    13bc <do_ide_request+0x323>
    1392:	eb 1f                	jmp    13b3 <do_ide_request+0x31a>
    1394:	3c 23                	cmp    $0x23,%al
    1396:	77 24                	ja     13bc <do_ide_request+0x323>
    1398:	89 f2                	mov    %esi,%edx
    139a:	89 d8                	mov    %ebx,%eax
    139c:	e8 fc ff ff ff       	call   139d <do_ide_request+0x304>
			139d: R_386_PC32	ide_do_park_unpark
    13a1:	89 c7                	mov    %eax,%edi
    13a3:	e9 f5 00 00 00       	jmp    149d <do_ide_request+0x404>
    13a8:	89 f2                	mov    %esi,%edx
    13aa:	89 d8                	mov    %ebx,%eax
    13ac:	e8 fc ff ff ff       	call   13ad <do_ide_request+0x314>
			13ad: R_386_PC32	ide_do_devset
    13b1:	eb ee                	jmp    13a1 <do_ide_request+0x308>
    13b3:	89 d8                	mov    %ebx,%eax
    13b5:	e8 fc ff ff ff       	call   13b6 <do_ide_request+0x31d>
			13b6: R_386_PC32	ide_do_reset
    13ba:	eb e5                	jmp    13a1 <do_ide_request+0x308>
    13bc:	0f 0b                	ud2a   
    13be:	eb fe                	jmp    13be <do_ide_request+0x325>
    13c0:	8b 82 98 01 00 00    	mov    0x198(%edx),%eax
    13c6:	89 f2                	mov    %esi,%edx
    13c8:	8b 08                	mov    (%eax),%ecx
    13ca:	89 d8                	mov    %ebx,%eax
    13cc:	ff 76 34             	pushl  0x34(%esi)
    13cf:	ff 76 30             	pushl  0x30(%esi)
    13d2:	ff 51 04             	call   *0x4(%ecx)
    13d5:	89 c7                	mov    %eax,%edi
    13d7:	59                   	pop    %ecx
    13d8:	58                   	pop    %eax
    13d9:	e9 bf 00 00 00       	jmp    149d <do_ide_request+0x404>
    13de:	80 7b 46 20          	cmpb   $0x20,0x46(%ebx)
    13e2:	74 0d                	je     13f1 <do_ide_request+0x358>
    13e4:	c6 43 3c 00          	movb   $0x0,0x3c(%ebx)
    13e8:	c6 43 49 00          	movb   $0x0,0x49(%ebx)
    13ec:	e9 49 ff ff ff       	jmp    133a <do_ide_request+0x2a1>
    13f1:	b9 10 00 00 00       	mov    $0x10,%ecx
    13f6:	8d 7c 24 10          	lea    0x10(%esp),%edi
    13fa:	f3 ab                	rep stos %eax,%es:(%edi)
    13fc:	c7 44 24 28 01 00 00 	movl   $0x1,0x28(%esp)
    1403:	00 
    1404:	8a 43 3c             	mov    0x3c(%ebx),%al
    1407:	0f b6 d0             	movzbl %al,%edx
    140a:	f6 c2 01             	test   $0x1,%dl
    140d:	74 37                	je     1446 <do_ide_request+0x3ad>
    140f:	83 e0 fe             	and    $0xfffffffe,%eax
    1412:	88 43 3c             	mov    %al,0x3c(%ebx)
    1415:	8a 43 4d             	mov    0x4d(%ebx),%al
    1418:	88 44 24 12          	mov    %al,0x12(%esp)
    141c:	8a 43 4d             	mov    0x4d(%ebx),%al
    141f:	88 44 24 13          	mov    %al,0x13(%esp)
    1423:	8b 43 58             	mov    0x58(%ebx),%eax
    1426:	88 44 24 14          	mov    %al,0x14(%esp)
    142a:	8b 43 58             	mov    0x58(%ebx),%eax
    142d:	c1 e8 08             	shr    $0x8,%eax
    1430:	88 44 24 15          	mov    %al,0x15(%esp)
    1434:	8a 43 4c             	mov    0x4c(%ebx),%al
    1437:	48                   	dec    %eax
    1438:	0a 43 3d             	or     0x3d(%ebx),%al
    143b:	c6 44 24 17 91       	movb   $0x91,0x17(%esp)
    1440:	88 44 24 16          	mov    %al,0x16(%esp)
    1444:	eb 36                	jmp    147c <do_ide_request+0x3e3>
    1446:	f6 c2 02             	test   $0x2,%dl
    1449:	74 14                	je     145f <do_ide_request+0x3c6>
    144b:	83 e0 fd             	and    $0xfffffffd,%eax
    144e:	88 43 3c             	mov    %al,0x3c(%ebx)
    1451:	8a 43 4d             	mov    0x4d(%ebx),%al
    1454:	c6 44 24 17 10       	movb   $0x10,0x17(%esp)
    1459:	88 44 24 12          	mov    %al,0x12(%esp)
    145d:	eb 1d                	jmp    147c <do_ide_request+0x3e3>
    145f:	80 e2 04             	and    $0x4,%dl
    1462:	74 14                	je     1478 <do_ide_request+0x3df>
    1464:	83 e0 fb             	and    $0xfffffffb,%eax
    1467:	88 43 3c             	mov    %al,0x3c(%ebx)
    146a:	8a 43 49             	mov    0x49(%ebx),%al
    146d:	c6 44 24 17 c6       	movb   $0xc6,0x17(%esp)
    1472:	88 44 24 12          	mov    %al,0x12(%esp)
    1476:	eb 04                	jmp    147c <do_ide_request+0x3e3>
    1478:	0f 0b                	ud2a   
    147a:	eb fe                	jmp    147a <do_ide_request+0x3e1>
    147c:	8d 54 24 10          	lea    0x10(%esp),%edx
    1480:	89 d8                	mov    %ebx,%eax
    1482:	c6 44 24 20 7e       	movb   $0x7e,0x20(%esp)
    1487:	bf 01 00 00 00       	mov    $0x1,%edi
    148c:	c6 44 24 22 7c       	movb   $0x7c,0x22(%esp)
    1491:	66 c7 44 24 24 04 00 	movw   $0x4,0x24(%esp)
    1498:	e8 fc ff ff ff       	call   1499 <do_ide_request+0x400>
			1499: R_386_PC32	do_rw_taskfile
    149d:	8b 44 24 0c          	mov    0xc(%esp),%eax
    14a1:	e8 fc ff ff ff       	call   14a2 <do_ide_request+0x409>
			14a2: R_386_PC32	_spin_lock_irq
    14a6:	85 ff                	test   %edi,%edi
    14a8:	75 15                	jne    14bf <do_ide_request+0x426>
    14aa:	8b b5 38 02 00 00    	mov    0x238(%ebp),%esi
    14b0:	c7 85 38 02 00 00 00 	movl   $0x0,0x238(%ebp)
    14b7:	00 00 00 
    14ba:	e9 ac fc ff ff       	jmp    116b <do_ide_request+0xd2>
    14bf:	fe 85 7c 02 00 00    	incb   0x27c(%ebp)
    14c5:	ff 15 0c 00 00 00    	call   *0xc
			14c7: R_386_32	pv_irq_ops
    14cb:	85 f6                	test   %esi,%esi
    14cd:	75 09                	jne    14d8 <do_ide_request+0x43f>
    14cf:	8b 44 24 04          	mov    0x4(%esp),%eax
    14d3:	e8 cc f5 ff ff       	call   aa4 <ide_unlock_host>
    14d8:	8b 14 24             	mov    (%esp),%edx
    14db:	8b 82 b8 01 00 00    	mov    0x1b8(%edx),%eax
    14e1:	e8 fc ff ff ff       	call   14e2 <do_ide_request+0x449>
			14e2: R_386_PC32	_spin_lock_irq
    14e6:	eb 45                	jmp    152d <do_ide_request+0x494>
    14e8:	fe 85 7c 02 00 00    	incb   0x27c(%ebp)
    14ee:	ff 15 0c 00 00 00    	call   *0xc
			14f0: R_386_32	pv_irq_ops
    14f4:	8b 44 24 04          	mov    0x4(%esp),%eax
    14f8:	e8 a7 f5 ff ff       	call   aa4 <ide_unlock_host>
    14fd:	8b 14 24             	mov    (%esp),%edx
    1500:	8b 82 b8 01 00 00    	mov    0x1b8(%edx),%eax
    1506:	e8 fc ff ff ff       	call   1507 <do_ide_request+0x46e>
			1507: R_386_PC32	_spin_lock_irq
    150b:	85 f6                	test   %esi,%esi
    150d:	74 0a                	je     1519 <do_ide_request+0x480>
    150f:	8b 04 24             	mov    (%esp),%eax
    1512:	89 f2                	mov    %esi,%edx
    1514:	e8 fc ff ff ff       	call   1515 <do_ide_request+0x47c>
			1515: R_386_PC32	blk_requeue_request
    1519:	8b 04 24             	mov    (%esp),%eax
    151c:	e8 fc ff ff ff       	call   151d <do_ide_request+0x484>
			151d: R_386_PC32	elv_queue_empty
    1521:	85 c0                	test   %eax,%eax
    1523:	75 08                	jne    152d <do_ide_request+0x494>
    1525:	8b 04 24             	mov    (%esp),%eax
    1528:	e8 fc ff ff ff       	call   1529 <do_ide_request+0x490>
			1529: R_386_PC32	blk_plug_device
    152d:	83 c4 54             	add    $0x54,%esp
    1530:	5b                   	pop    %ebx
    1531:	5e                   	pop    %esi
    1532:	5f                   	pop    %edi
    1533:	5d                   	pop    %ebp
    1534:	c3                   	ret    
    1535:	90                   	nop
    1536:	90                   	nop
    1537:	90                   	nop

00001538 <SELECT_MASK>:
    1538:	8b 48 28             	mov    0x28(%eax),%ecx
    153b:	8b 49 74             	mov    0x74(%ecx),%ecx
    153e:	85 c9                	test   %ecx,%ecx
    1540:	74 09                	je     154b <SELECT_MASK+0x13>
    1542:	8b 49 18             	mov    0x18(%ecx),%ecx
    1545:	85 c9                	test   %ecx,%ecx
    1547:	74 02                	je     154b <SELECT_MASK+0x13>
    1549:	ff d1                	call   *%ecx
    154b:	c3                   	ret    

0000154c <ide_read_error>:
    154c:	53                   	push   %ebx
    154d:	b9 02 00 00 00       	mov    $0x2,%ecx
    1552:	83 ec 08             	sub    $0x8,%esp
    1555:	8b 50 28             	mov    0x28(%eax),%edx
    1558:	8b 5a 70             	mov    0x70(%edx),%ebx
    155b:	89 e2                	mov    %esp,%edx
    155d:	ff 53 18             	call   *0x18(%ebx)
    1560:	8a 44 24 01          	mov    0x1(%esp),%al
    1564:	5a                   	pop    %edx
    1565:	59                   	pop    %ecx
    1566:	5b                   	pop    %ebx
    1567:	c3                   	ret    

00001568 <ide_fix_driveid>:
    1568:	c3                   	ret    

00001569 <__ide_wait_stat>:
    1569:	55                   	push   %ebp
    156a:	57                   	push   %edi
    156b:	56                   	push   %esi
    156c:	53                   	push   %ebx
    156d:	83 ec 08             	sub    $0x8,%esp
    1570:	88 54 24 03          	mov    %dl,0x3(%esp)
    1574:	8b 7c 24 20          	mov    0x20(%esp),%edi
    1578:	88 4c 24 02          	mov    %cl,0x2(%esp)
    157c:	8b 58 28             	mov    0x28(%eax),%ebx
    157f:	b8 c7 10 00 00       	mov    $0x10c7,%eax
    1584:	8b 73 70             	mov    0x70(%ebx),%esi
    1587:	e8 fc ff ff ff       	call   1588 <__ide_wait_stat+0x1f>
			1588: R_386_PC32	__const_udelay
    158c:	89 d8                	mov    %ebx,%eax
    158e:	ff 56 04             	call   *0x4(%esi)
    1591:	84 c0                	test   %al,%al
    1593:	79 55                	jns    15ea <__ide_wait_stat+0x81>
    1595:	ff 15 00 00 00 00    	call   *0x0
			1597: R_386_32	pv_irq_ops
    159b:	89 c5                	mov    %eax,%ebp
    159d:	ff 15 0c 00 00 00    	call   *0xc
			159f: R_386_32	pv_irq_ops
    15a3:	a1 00 00 00 00       	mov    0x0,%eax
			15a4: R_386_32	jiffies
    15a8:	03 44 24 1c          	add    0x1c(%esp),%eax
    15ac:	89 44 24 04          	mov    %eax,0x4(%esp)
    15b0:	eb 27                	jmp    15d9 <__ide_wait_stat+0x70>
    15b2:	a1 00 00 00 00       	mov    0x0,%eax
			15b3: R_386_32	jiffies
    15b7:	39 44 24 04          	cmp    %eax,0x4(%esp)
    15bb:	79 1c                	jns    15d9 <__ide_wait_stat+0x70>
    15bd:	89 d8                	mov    %ebx,%eax
    15bf:	ff 56 04             	call   *0x4(%esi)
    15c2:	84 c0                	test   %al,%al
    15c4:	88 c1                	mov    %al,%cl
    15c6:	79 1a                	jns    15e2 <__ide_wait_stat+0x79>
    15c8:	89 e8                	mov    %ebp,%eax
    15ca:	ff 15 04 00 00 00    	call   *0x4
			15cc: R_386_32	pv_irq_ops
    15d0:	b8 f0 ff ff ff       	mov    $0xfffffff0,%eax
    15d5:	88 0f                	mov    %cl,(%edi)
    15d7:	eb 4d                	jmp    1626 <__ide_wait_stat+0xbd>
    15d9:	89 d8                	mov    %ebx,%eax
    15db:	ff 56 04             	call   *0x4(%esi)
    15de:	84 c0                	test   %al,%al
    15e0:	78 d0                	js     15b2 <__ide_wait_stat+0x49>
    15e2:	89 e8                	mov    %ebp,%eax
    15e4:	ff 15 04 00 00 00    	call   *0x4
			15e6: R_386_32	pv_irq_ops
    15ea:	8a 44 24 02          	mov    0x2(%esp),%al
    15ee:	31 ed                	xor    %ebp,%ebp
    15f0:	0a 44 24 03          	or     0x3(%esp),%al
    15f4:	88 44 24 02          	mov    %al,0x2(%esp)
    15f8:	b8 c7 10 00 00       	mov    $0x10c7,%eax
    15fd:	e8 fc ff ff ff       	call   15fe <__ide_wait_stat+0x95>
			15fe: R_386_PC32	__const_udelay
    1602:	89 d8                	mov    %ebx,%eax
    1604:	ff 56 04             	call   *0x4(%esi)
    1607:	8a 54 24 02          	mov    0x2(%esp),%dl
    160b:	21 c2                	and    %eax,%edx
    160d:	3a 54 24 03          	cmp    0x3(%esp),%dl
    1611:	75 06                	jne    1619 <__ide_wait_stat+0xb0>
    1613:	88 07                	mov    %al,(%edi)
    1615:	31 c0                	xor    %eax,%eax
    1617:	eb 0d                	jmp    1626 <__ide_wait_stat+0xbd>
    1619:	45                   	inc    %ebp
    161a:	83 fd 0a             	cmp    $0xa,%ebp
    161d:	75 d9                	jne    15f8 <__ide_wait_stat+0x8f>
    161f:	88 07                	mov    %al,(%edi)
    1621:	b8 f2 ff ff ff       	mov    $0xfffffff2,%eax
    1626:	5b                   	pop    %ebx
    1627:	5e                   	pop    %esi
    1628:	5b                   	pop    %ebx
    1629:	5e                   	pop    %esi
    162a:	5f                   	pop    %edi
    162b:	5d                   	pop    %ebp
    162c:	c3                   	ret    

0000162d <ide_wait_not_busy>:
    162d:	56                   	push   %esi
    162e:	89 d6                	mov    %edx,%esi
    1630:	53                   	push   %ebx
    1631:	89 c3                	mov    %eax,%ebx
    1633:	eb 30                	jmp    1665 <ide_wait_not_busy+0x38>
    1635:	b8 58 89 41 00       	mov    $0x418958,%eax
    163a:	e8 fc ff ff ff       	call   163b <ide_wait_not_busy+0xe>
			163b: R_386_PC32	__const_udelay
    163f:	8b 53 70             	mov    0x70(%ebx),%edx
    1642:	89 d8                	mov    %ebx,%eax
    1644:	ff 52 04             	call   *0x4(%edx)
    1647:	84 c0                	test   %al,%al
    1649:	78 04                	js     164f <ide_wait_not_busy+0x22>
    164b:	31 c0                	xor    %eax,%eax
    164d:	eb 1f                	jmp    166e <ide_wait_not_busy+0x41>
    164f:	4e                   	dec    %esi
    1650:	fe c0                	inc    %al
    1652:	75 07                	jne    165b <ide_wait_not_busy+0x2e>
    1654:	b8 ed ff ff ff       	mov    $0xffffffed,%eax
    1659:	eb 13                	jmp    166e <ide_wait_not_busy+0x41>
    165b:	e8 fc ff ff ff       	call   165c <ide_wait_not_busy+0x2f>
			165c: R_386_PC32	touch_softlockup_watchdog
    1660:	e8 fc ff ff ff       	call   1661 <ide_wait_not_busy+0x34>
			1661: R_386_PC32	touch_nmi_watchdog
    1665:	85 f6                	test   %esi,%esi
    1667:	75 cc                	jne    1635 <ide_wait_not_busy+0x8>
    1669:	b8 f0 ff ff ff       	mov    $0xfffffff0,%eax
    166e:	5b                   	pop    %ebx
    166f:	5e                   	pop    %esi
    1670:	c3                   	ret    

00001671 <__ide_set_handler>:
    1671:	8b 40 28             	mov    0x28(%eax),%eax
    1674:	83 b8 2c 02 00 00 00 	cmpl   $0x0,0x22c(%eax)
    167b:	74 04                	je     1681 <__ide_set_handler+0x10>
    167d:	0f 0b                	ud2a   
    167f:	eb fe                	jmp    167f <__ide_set_handler+0xe>
    1681:	89 90 2c 02 00 00    	mov    %edx,0x22c(%eax)
    1687:	8b 15 00 00 00 00    	mov    0x0,%edx
			1689: R_386_32	jiffies
    168d:	01 d1                	add    %edx,%ecx
    168f:	8b 90 74 02 00 00    	mov    0x274(%eax),%edx
    1695:	89 88 44 02 00 00    	mov    %ecx,0x244(%eax)
    169b:	89 90 78 02 00 00    	mov    %edx,0x278(%eax)
    16a1:	05 3c 02 00 00       	add    $0x23c,%eax
    16a6:	e9 fc ff ff ff       	jmp    16a7 <__ide_set_handler+0x36>
			16a7: R_386_PC32	add_timer

000016ab <ide_execute_command>:
    16ab:	55                   	push   %ebp
    16ac:	57                   	push   %edi
    16ad:	56                   	push   %esi
    16ae:	89 d6                	mov    %edx,%esi
    16b0:	53                   	push   %ebx
    16b1:	89 ca                	mov    %ecx,%edx
    16b3:	83 ec 0c             	sub    $0xc,%esp
    16b6:	8b 78 28             	mov    0x28(%eax),%edi
    16b9:	89 c3                	mov    %eax,%ebx
    16bb:	8b 4c 24 20          	mov    0x20(%esp),%ecx
    16bf:	89 54 24 04          	mov    %edx,0x4(%esp)
    16c3:	8d af 7c 02 00 00    	lea    0x27c(%edi),%ebp
    16c9:	89 e8                	mov    %ebp,%eax
    16cb:	89 0c 24             	mov    %ecx,(%esp)
    16ce:	e8 fc ff ff ff       	call   16cf <ide_execute_command+0x24>
			16cf: R_386_PC32	_spin_lock_irqsave
    16d3:	8b 54 24 04          	mov    0x4(%esp),%edx
    16d7:	8b 0c 24             	mov    (%esp),%ecx
    16da:	89 44 24 08          	mov    %eax,0x8(%esp)
    16de:	8b 46 18             	mov    0x18(%esi),%eax
    16e1:	83 e8 06             	sub    $0x6,%eax
    16e4:	83 f8 01             	cmp    $0x1,%eax
    16e7:	77 09                	ja     16f2 <ide_execute_command+0x47>
    16e9:	f6 83 cc 01 00 00 01 	testb  $0x1,0x1cc(%ebx)
    16f0:	74 07                	je     16f9 <ide_execute_command+0x4e>
    16f2:	89 d8                	mov    %ebx,%eax
    16f4:	e8 fc ff ff ff       	call   16f5 <ide_execute_command+0x4a>
			16f5: R_386_PC32	__ide_set_handler
    16f9:	8b 4f 70             	mov    0x70(%edi),%ecx
    16fc:	89 f8                	mov    %edi,%eax
    16fe:	0f b6 56 07          	movzbl 0x7(%esi),%edx
    1702:	ff 11                	call   *(%ecx)
    1704:	b8 d0 07 00 00       	mov    $0x7d0,%eax
    1709:	e8 fc ff ff ff       	call   170a <ide_execute_command+0x5f>
			170a: R_386_PC32	__const_udelay
    170e:	89 e8                	mov    %ebp,%eax
    1710:	8b 54 24 08          	mov    0x8(%esp),%edx
    1714:	83 c4 0c             	add    $0xc,%esp
    1717:	5b                   	pop    %ebx
    1718:	5e                   	pop    %esi
    1719:	5f                   	pop    %edi
    171a:	5d                   	pop    %ebp
    171b:	e9 fc ff ff ff       	jmp    171c <ide_execute_command+0x71>
			171c: R_386_PC32	_spin_unlock_irqrestore

00001720 <ide_set_handler>:
    1720:	57                   	push   %edi
    1721:	56                   	push   %esi
    1722:	53                   	push   %ebx
    1723:	89 c3                	mov    %eax,%ebx
    1725:	83 ec 08             	sub    $0x8,%esp
    1728:	8b 70 28             	mov    0x28(%eax),%esi
    172b:	89 54 24 04          	mov    %edx,0x4(%esp)
    172f:	89 0c 24             	mov    %ecx,(%esp)
    1732:	81 c6 7c 02 00 00    	add    $0x27c,%esi
    1738:	89 f0                	mov    %esi,%eax
    173a:	e8 fc ff ff ff       	call   173b <ide_set_handler+0x1b>
			173b: R_386_PC32	_spin_lock_irqsave
    173f:	8b 0c 24             	mov    (%esp),%ecx
    1742:	8b 54 24 04          	mov    0x4(%esp),%edx
    1746:	89 c7                	mov    %eax,%edi
    1748:	89 d8                	mov    %ebx,%eax
    174a:	e8 fc ff ff ff       	call   174b <ide_set_handler+0x2b>
			174b: R_386_PC32	__ide_set_handler
    174f:	89 fa                	mov    %edi,%edx
    1751:	89 f0                	mov    %esi,%eax
    1753:	5f                   	pop    %edi
    1754:	59                   	pop    %ecx
    1755:	5b                   	pop    %ebx
    1756:	5e                   	pop    %esi
    1757:	5f                   	pop    %edi
    1758:	e9 fc ff ff ff       	jmp    1759 <ide_set_handler+0x39>
			1759: R_386_PC32	_spin_unlock_irqrestore

0000175d <ide_config_drive_speed>:
    175d:	55                   	push   %ebp
    175e:	57                   	push   %edi
    175f:	56                   	push   %esi
    1760:	89 c6                	mov    %eax,%esi
    1762:	53                   	push   %ebx
    1763:	83 ec 24             	sub    $0x24,%esp
    1766:	8b 5e 1c             	mov    0x1c(%esi),%ebx
    1769:	88 14 24             	mov    %dl,(%esp)
    176c:	8b 68 28             	mov    0x28(%eax),%ebp
    176f:	8b 45 70             	mov    0x70(%ebp),%eax
    1772:	89 44 24 10          	mov    %eax,0x10(%esp)
    1776:	8b 4d 78             	mov    0x78(%ebp),%ecx
    1779:	85 c9                	test   %ecx,%ecx
    177b:	74 06                	je     1783 <ide_config_drive_speed+0x26>
    177d:	31 d2                	xor    %edx,%edx
    177f:	89 f0                	mov    %esi,%eax
    1781:	ff 11                	call   *(%ecx)
    1783:	0f b6 14 24          	movzbl (%esp),%edx
    1787:	89 d0                	mov    %edx,%eax
    1789:	25 f8 00 00 00       	and    $0xf8,%eax
    178e:	83 f8 08             	cmp    $0x8,%eax
    1791:	89 54 24 14          	mov    %edx,0x14(%esp)
    1795:	75 0d                	jne    17a4 <ide_config_drive_speed+0x47>
    1797:	8b 46 1c             	mov    0x1c(%esi),%eax
    179a:	f6 40 63 08          	testb  $0x8,0x63(%eax)
    179e:	0f 84 21 01 00 00    	je     18c5 <ide_config_drive_speed+0x168>
    17a4:	b8 c7 10 00 00       	mov    $0x10c7,%eax
    17a9:	e8 fc ff ff ff       	call   17aa <ide_config_drive_speed+0x4d>
			17aa: R_386_PC32	__const_udelay
    17ae:	89 f0                	mov    %esi,%eax
    17b0:	8b 4c 24 10          	mov    0x10(%esp),%ecx
    17b4:	ff 51 10             	call   *0x10(%ecx)
    17b7:	ba 01 00 00 00       	mov    $0x1,%edx
    17bc:	89 f0                	mov    %esi,%eax
    17be:	e8 fc ff ff ff       	call   17bf <ide_config_drive_speed+0x62>
			17bf: R_386_PC32	SELECT_MASK
    17c3:	b8 c7 10 00 00       	mov    $0x10c7,%eax
    17c8:	e8 fc ff ff ff       	call   17c9 <ide_config_drive_speed+0x6c>
			17c9: R_386_PC32	__const_udelay
    17cd:	89 e8                	mov    %ebp,%eax
    17cf:	ba 0a 00 00 00       	mov    $0xa,%edx
    17d4:	8b 7c 24 10          	mov    0x10(%esp),%edi
    17d8:	ff 57 0c             	call   *0xc(%edi)
    17db:	b9 02 00 00 00       	mov    $0x2,%ecx
    17e0:	31 c0                	xor    %eax,%eax
    17e2:	8d 54 24 1b          	lea    0x1b(%esp),%edx
    17e6:	89 d7                	mov    %edx,%edi
    17e8:	f3 ab                	rep stos %eax,%es:(%edi)
    17ea:	8a 04 24             	mov    (%esp),%al
    17ed:	b9 06 00 00 00       	mov    $0x6,%ecx
    17f2:	8b 7c 24 10          	mov    0x10(%esp),%edi
    17f6:	c6 44 24 1c 03       	movb   $0x3,0x1c(%esp)
    17fb:	88 44 24 1d          	mov    %al,0x1d(%esp)
    17ff:	89 f0                	mov    %esi,%eax
    1801:	ff 57 14             	call   *0x14(%edi)
    1804:	ba ef 00 00 00       	mov    $0xef,%edx
    1809:	89 e8                	mov    %ebp,%eax
    180b:	ff 17                	call   *(%edi)
    180d:	83 7e 30 00          	cmpl   $0x0,0x30(%esi)
    1811:	79 0a                	jns    181d <ide_config_drive_speed+0xc0>
    1813:	ba 08 00 00 00       	mov    $0x8,%edx
    1818:	89 e8                	mov    %ebp,%eax
    181a:	ff 57 0c             	call   *0xc(%edi)
    181d:	0f b6 56 47          	movzbl 0x47(%esi),%edx
    1821:	8d 44 24 23          	lea    0x23(%esp),%eax
    1825:	b9 89 00 00 00       	mov    $0x89,%ecx
    182a:	50                   	push   %eax
    182b:	89 f0                	mov    %esi,%eax
    182d:	68 c4 09 00 00       	push   $0x9c4
    1832:	e8 fc ff ff ff       	call   1833 <ide_config_drive_speed+0xd6>
			1833: R_386_PC32	__ide_wait_stat
    1837:	31 d2                	xor    %edx,%edx
    1839:	89 c7                	mov    %eax,%edi
    183b:	89 f0                	mov    %esi,%eax
    183d:	e8 fc ff ff ff       	call   183e <ide_config_drive_speed+0xe1>
			183e: R_386_PC32	SELECT_MASK
    1842:	85 ff                	test   %edi,%edi
    1844:	58                   	pop    %eax
    1845:	5a                   	pop    %edx
    1846:	74 16                	je     185e <ide_config_drive_speed+0x101>
    1848:	0f b6 4c 24 23       	movzbl 0x23(%esp),%ecx
    184d:	ba 9a 02 00 00       	mov    $0x29a,%edx
			184e: R_386_32	.rodata.str1.1
    1852:	89 f0                	mov    %esi,%eax
    1854:	e8 fc ff ff ff       	call   1855 <ide_config_drive_speed+0xf8>
			1855: R_386_PC32	ide_dump_status
    1859:	e9 7a 01 00 00       	jmp    19d8 <ide_config_drive_speed+0x27b>
    185e:	80 3c 24 0f          	cmpb   $0xf,(%esp)
    1862:	76 3c                	jbe    18a0 <ide_config_drive_speed+0x143>
    1864:	8d 83 b0 00 00 00    	lea    0xb0(%ebx),%eax
    186a:	66 81 20 ff 00       	andw   $0xff,(%eax)
    186f:	66 81 63 7e ff f8    	andw   $0xf8ff,0x7e(%ebx)
    1875:	66 81 63 7c ff f8    	andw   $0xf8ff,0x7c(%ebx)
    187b:	66 81 3b 8a 84       	cmpw   $0x848a,(%ebx)
    1880:	74 13                	je     1895 <ide_config_drive_speed+0x138>
    1882:	0f b7 83 a6 00 00 00 	movzwl 0xa6(%ebx),%eax
    1889:	25 04 c0 00 00       	and    $0xc004,%eax
    188e:	3d 04 40 00 00       	cmp    $0x4004,%eax
    1893:	75 36                	jne    18cb <ide_config_drive_speed+0x16e>
    1895:	66 81 a3 46 01 00 00 	andw   $0xf1ff,0x146(%ebx)
    189c:	ff f1 
    189e:	eb 2b                	jmp    18cb <ide_config_drive_speed+0x16e>
    18a0:	66 81 3b 8a 84       	cmpw   $0x848a,(%ebx)
    18a5:	74 13                	je     18ba <ide_config_drive_speed+0x15d>
    18a7:	0f b7 83 a6 00 00 00 	movzwl 0xa6(%ebx),%eax
    18ae:	25 04 c0 00 00       	and    $0xc004,%eax
    18b3:	3d 04 40 00 00       	cmp    $0x4004,%eax
    18b8:	75 25                	jne    18df <ide_config_drive_speed+0x182>
    18ba:	66 81 a3 46 01 00 00 	andw   $0xfe3f,0x146(%ebx)
    18c1:	3f fe 
    18c3:	eb 1a                	jmp    18df <ide_config_drive_speed+0x182>
    18c5:	80 3c 24 0f          	cmpb   $0xf,(%esp)
    18c9:	76 14                	jbe    18df <ide_config_drive_speed+0x182>
    18cb:	f6 46 30 02          	testb  $0x2,0x30(%esi)
    18cf:	74 0e                	je     18df <ide_config_drive_speed+0x182>
    18d1:	8b 4d 78             	mov    0x78(%ebp),%ecx
    18d4:	ba 01 00 00 00       	mov    $0x1,%edx
    18d9:	89 f0                	mov    %esi,%eax
    18db:	ff 11                	call   *(%ecx)
    18dd:	eb 0d                	jmp    18ec <ide_config_drive_speed+0x18f>
    18df:	83 7d 78 00          	cmpl   $0x0,0x78(%ebp)
    18e3:	74 07                	je     18ec <ide_config_drive_speed+0x18f>
    18e5:	89 f0                	mov    %esi,%eax
    18e7:	e8 fc ff ff ff       	call   18e8 <ide_config_drive_speed+0x18b>
			18e8: R_386_PC32	ide_dma_off_quietly
    18ec:	80 3c 24 3f          	cmpb   $0x3f,(%esp)
    18f0:	76 28                	jbe    191a <ide_config_drive_speed+0x1bd>
    18f2:	8b 4c 24 14          	mov    0x14(%esp),%ecx
    18f6:	b8 01 00 00 00       	mov    $0x1,%eax
    18fb:	83 e9 40             	sub    $0x40,%ecx
    18fe:	d3 e0                	shl    %cl,%eax
    1900:	89 c2                	mov    %eax,%edx
    1902:	66 0b 93 b0 00 00 00 	or     0xb0(%ebx),%dx
    1909:	c1 e0 08             	shl    $0x8,%eax
    190c:	09 d0                	or     %edx,%eax
    190e:	66 89 83 b0 00 00 00 	mov    %ax,0xb0(%ebx)
    1915:	e9 aa 00 00 00       	jmp    19c4 <ide_config_drive_speed+0x267>
    191a:	66 8b 13             	mov    (%ebx),%dx
    191d:	66 81 fa 8a 84       	cmp    $0x848a,%dx
    1922:	74 13                	je     1937 <ide_config_drive_speed+0x1da>
    1924:	0f b7 83 a6 00 00 00 	movzwl 0xa6(%ebx),%eax
    192b:	25 04 c0 00 00       	and    $0xc004,%eax
    1930:	3d 04 40 00 00       	cmp    $0x4004,%eax
    1935:	75 12                	jne    1949 <ide_config_drive_speed+0x1ec>
    1937:	80 3c 24 22          	cmpb   $0x22,(%esp)
    193b:	76 0c                	jbe    1949 <ide_config_drive_speed+0x1ec>
    193d:	8a 04 24             	mov    (%esp),%al
    1940:	c1 e0 09             	shl    $0x9,%eax
    1943:	66 2d 00 44          	sub    $0x4400,%ax
    1947:	eb 74                	jmp    19bd <ide_config_drive_speed+0x260>
    1949:	80 3c 24 1f          	cmpb   $0x1f,(%esp)
    194d:	76 1f                	jbe    196e <ide_config_drive_speed+0x211>
    194f:	8b 4c 24 14          	mov    0x14(%esp),%ecx
    1953:	b8 01 00 00 00       	mov    $0x1,%eax
    1958:	83 e9 20             	sub    $0x20,%ecx
    195b:	d3 e0                	shl    %cl,%eax
    195d:	89 c2                	mov    %eax,%edx
    195f:	66 0b 53 7e          	or     0x7e(%ebx),%dx
    1963:	c1 e0 08             	shl    $0x8,%eax
    1966:	09 d0                	or     %edx,%eax
    1968:	66 89 43 7e          	mov    %ax,0x7e(%ebx)
    196c:	eb 56                	jmp    19c4 <ide_config_drive_speed+0x267>
    196e:	80 3c 24 0f          	cmpb   $0xf,(%esp)
    1972:	76 1f                	jbe    1993 <ide_config_drive_speed+0x236>
    1974:	8b 4c 24 14          	mov    0x14(%esp),%ecx
    1978:	b8 01 00 00 00       	mov    $0x1,%eax
    197d:	83 e9 10             	sub    $0x10,%ecx
    1980:	d3 e0                	shl    %cl,%eax
    1982:	89 c2                	mov    %eax,%edx
    1984:	66 0b 53 7c          	or     0x7c(%ebx),%dx
    1988:	c1 e0 08             	shl    $0x8,%eax
    198b:	09 d0                	or     %edx,%eax
    198d:	66 89 43 7c          	mov    %ax,0x7c(%ebx)
    1991:	eb 31                	jmp    19c4 <ide_config_drive_speed+0x267>
    1993:	66 81 fa 8a 84       	cmp    $0x848a,%dx
    1998:	74 13                	je     19ad <ide_config_drive_speed+0x250>
    199a:	0f b7 83 a6 00 00 00 	movzwl 0xa6(%ebx),%eax
    19a1:	25 04 c0 00 00       	and    $0xc004,%eax
    19a6:	3d 04 40 00 00       	cmp    $0x4004,%eax
    19ab:	75 17                	jne    19c4 <ide_config_drive_speed+0x267>
    19ad:	80 3c 24 0c          	cmpb   $0xc,(%esp)
    19b1:	76 11                	jbe    19c4 <ide_config_drive_speed+0x267>
    19b3:	0f b6 04 24          	movzbl (%esp),%eax
    19b7:	83 e8 0c             	sub    $0xc,%eax
    19ba:	c1 e0 06             	shl    $0x6,%eax
    19bd:	66 09 83 46 01 00 00 	or     %ax,0x146(%ebx)
    19c4:	80 7e 41 00          	cmpb   $0x0,0x41(%esi)
    19c8:	75 06                	jne    19d0 <ide_config_drive_speed+0x273>
    19ca:	8a 04 24             	mov    (%esp),%al
    19cd:	88 46 41             	mov    %al,0x41(%esi)
    19d0:	8a 14 24             	mov    (%esp),%dl
    19d3:	31 ff                	xor    %edi,%edi
    19d5:	88 56 42             	mov    %dl,0x42(%esi)
    19d8:	83 c4 24             	add    $0x24,%esp
    19db:	89 f8                	mov    %edi,%eax
    19dd:	5b                   	pop    %ebx
    19de:	5e                   	pop    %esi
    19df:	5f                   	pop    %edi
    19e0:	5d                   	pop    %ebp
    19e1:	c3                   	ret    

000019e2 <ide_fixstring>:
    19e2:	56                   	push   %esi
    19e3:	83 e2 fe             	and    $0xfffffffe,%edx
    19e6:	53                   	push   %ebx
    19e7:	89 c3                	mov    %eax,%ebx
    19e9:	83 ec 04             	sub    $0x4,%esp
    19ec:	85 c9                	test   %ecx,%ecx
    19ee:	8d 34 10             	lea    (%eax,%edx,1),%esi
    19f1:	75 09                	jne    19fc <ide_fixstring+0x1a>
    19f3:	eb 0b                	jmp    1a00 <ide_fixstring+0x1e>
    19f5:	66 c1 03 08          	rolw   $0x8,(%ebx)
    19f9:	83 c3 02             	add    $0x2,%ebx
    19fc:	39 f3                	cmp    %esi,%ebx
    19fe:	75 f5                	jne    19f5 <ide_fixstring+0x13>
    1a00:	89 c1                	mov    %eax,%ecx
    1a02:	eb 01                	jmp    1a05 <ide_fixstring+0x23>
    1a04:	41                   	inc    %ecx
    1a05:	39 f1                	cmp    %esi,%ecx
    1a07:	74 23                	je     1a2c <ide_fixstring+0x4a>
    1a09:	80 39 20             	cmpb   $0x20,(%ecx)
    1a0c:	74 f6                	je     1a04 <ide_fixstring+0x22>
    1a0e:	eb 1c                	jmp    1a2c <ide_fixstring+0x4a>
    1a10:	41                   	inc    %ecx
    1a11:	80 fb 20             	cmp    $0x20,%bl
    1a14:	75 13                	jne    1a29 <ide_fixstring+0x47>
    1a16:	39 f1                	cmp    %esi,%ecx
    1a18:	74 22                	je     1a3c <ide_fixstring+0x5a>
    1a1a:	8a 11                	mov    (%ecx),%dl
    1a1c:	84 d2                	test   %dl,%dl
    1a1e:	88 54 24 03          	mov    %dl,0x3(%esp)
    1a22:	74 08                	je     1a2c <ide_fixstring+0x4a>
    1a24:	80 fa 20             	cmp    $0x20,%dl
    1a27:	74 03                	je     1a2c <ide_fixstring+0x4a>
    1a29:	88 18                	mov    %bl,(%eax)
    1a2b:	40                   	inc    %eax
    1a2c:	39 f1                	cmp    %esi,%ecx
    1a2e:	74 0c                	je     1a3c <ide_fixstring+0x5a>
    1a30:	8a 19                	mov    (%ecx),%bl
    1a32:	84 db                	test   %bl,%bl
    1a34:	75 da                	jne    1a10 <ide_fixstring+0x2e>
    1a36:	eb 04                	jmp    1a3c <ide_fixstring+0x5a>
    1a38:	c6 00 00             	movb   $0x0,(%eax)
    1a3b:	40                   	inc    %eax
    1a3c:	39 f0                	cmp    %esi,%eax
    1a3e:	75 f8                	jne    1a38 <ide_fixstring+0x56>
    1a40:	59                   	pop    %ecx
    1a41:	5b                   	pop    %ebx
    1a42:	5e                   	pop    %esi
    1a43:	c3                   	ret    

00001a44 <ide_check_nien_quirk_list>:
    1a44:	57                   	push   %edi
    1a45:	56                   	push   %esi
    1a46:	be 34 00 00 00       	mov    $0x34,%esi
			1a47: R_386_32	.data
    1a4b:	53                   	push   %ebx
    1a4c:	8b 78 1c             	mov    0x1c(%eax),%edi
    1a4f:	89 c3                	mov    %eax,%ebx
    1a51:	83 c7 36             	add    $0x36,%edi
    1a54:	eb 17                	jmp    1a6d <ide_check_nien_quirk_list+0x29>
    1a56:	89 f8                	mov    %edi,%eax
    1a58:	e8 fc ff ff ff       	call   1a59 <ide_check_nien_quirk_list+0x15>
			1a59: R_386_PC32	strstr
    1a5d:	85 c0                	test   %eax,%eax
    1a5f:	74 09                	je     1a6a <ide_check_nien_quirk_list+0x26>
    1a61:	81 4b 30 00 00 00 80 	orl    $0x80000000,0x30(%ebx)
    1a68:	eb 09                	jmp    1a73 <ide_check_nien_quirk_list+0x2f>
    1a6a:	83 c6 04             	add    $0x4,%esi
    1a6d:	8b 16                	mov    (%esi),%edx
    1a6f:	85 d2                	test   %edx,%edx
    1a71:	75 e3                	jne    1a56 <ide_check_nien_quirk_list+0x12>
    1a73:	5b                   	pop    %ebx
    1a74:	5e                   	pop    %esi
    1a75:	5f                   	pop    %edi
    1a76:	c3                   	ret    

00001a77 <ide_in_drive_list>:
    1a77:	57                   	push   %edi
    1a78:	56                   	push   %esi
    1a79:	53                   	push   %ebx
    1a7a:	89 d3                	mov    %edx,%ebx
    1a7c:	8d 78 36             	lea    0x36(%eax),%edi
    1a7f:	8d 70 2e             	lea    0x2e(%eax),%esi
    1a82:	eb 20                	jmp    1aa4 <ide_in_drive_list+0x2d>
    1a84:	89 fa                	mov    %edi,%edx
    1a86:	e8 fc ff ff ff       	call   1a87 <ide_in_drive_list+0x10>
			1a87: R_386_PC32	strcmp
    1a8b:	85 c0                	test   %eax,%eax
    1a8d:	75 12                	jne    1aa1 <ide_in_drive_list+0x2a>
    1a8f:	8b 53 04             	mov    0x4(%ebx),%edx
    1a92:	85 d2                	test   %edx,%edx
    1a94:	74 16                	je     1aac <ide_in_drive_list+0x35>
    1a96:	89 f0                	mov    %esi,%eax
    1a98:	e8 fc ff ff ff       	call   1a99 <ide_in_drive_list+0x22>
			1a99: R_386_PC32	strstr
    1a9d:	85 c0                	test   %eax,%eax
    1a9f:	75 0b                	jne    1aac <ide_in_drive_list+0x35>
    1aa1:	83 c3 08             	add    $0x8,%ebx
    1aa4:	8b 03                	mov    (%ebx),%eax
    1aa6:	85 c0                	test   %eax,%eax
    1aa8:	75 da                	jne    1a84 <ide_in_drive_list+0xd>
    1aaa:	eb 05                	jmp    1ab1 <ide_in_drive_list+0x3a>
    1aac:	b8 01 00 00 00       	mov    $0x1,%eax
    1ab1:	5b                   	pop    %ebx
    1ab2:	5e                   	pop    %esi
    1ab3:	5f                   	pop    %edi
    1ab4:	c3                   	ret    

00001ab5 <eighty_ninty_three>:
    1ab5:	55                   	push   %ebp
    1ab6:	ba b8 00 00 00       	mov    $0xb8,%edx
			1ab7: R_386_32	.rodata
    1abb:	57                   	push   %edi
    1abc:	56                   	push   %esi
    1abd:	53                   	push   %ebx
    1abe:	8b 70 1c             	mov    0x1c(%eax),%esi
    1ac1:	89 c3                	mov    %eax,%ebx
    1ac3:	8b 78 28             	mov    0x28(%eax),%edi
    1ac6:	89 f0                	mov    %esi,%eax
    1ac8:	e8 fc ff ff ff       	call   1ac9 <eighty_ninty_three+0x14>
			1ac9: R_386_PC32	ide_in_drive_list
    1acd:	80 7f 64 03          	cmpb   $0x3,0x64(%edi)
    1ad1:	89 c5                	mov    %eax,%ebp
    1ad3:	0f 84 95 00 00 00    	je     1b6e <eighty_ninty_three+0xb9>
    1ad9:	85 c0                	test   %eax,%eax
    1adb:	74 0d                	je     1aea <eighty_ninty_three+0x35>
    1add:	53                   	push   %ebx
    1ade:	68 b1 02 00 00       	push   $0x2b1
			1adf: R_386_32	.rodata.str1.1
    1ae3:	e8 fc ff ff ff       	call   1ae4 <eighty_ninty_three+0x2f>
			1ae4: R_386_PC32	printk
    1ae8:	58                   	pop    %eax
    1ae9:	5a                   	pop    %edx
    1aea:	66 8b 86 ba 00 00 00 	mov    0xba(%esi),%ax
    1af1:	66 85 c0             	test   %ax,%ax
    1af4:	75 10                	jne    1b06 <eighty_ninty_three+0x51>
    1af6:	66 83 be a0 00 00 00 	cmpw   $0x1f,0xa0(%esi)
    1afd:	1f 
    1afe:	7e 06                	jle    1b06 <eighty_ninty_three+0x51>
    1b00:	85 ed                	test   %ebp,%ebp
    1b02:	75 0c                	jne    1b10 <eighty_ninty_three+0x5b>
    1b04:	eb 68                	jmp    1b6e <eighty_ninty_three+0xb9>
    1b06:	85 ed                	test   %ebp,%ebp
    1b08:	75 06                	jne    1b10 <eighty_ninty_three+0x5b>
    1b0a:	80 7f 64 02          	cmpb   $0x2,0x64(%edi)
    1b0e:	75 2b                	jne    1b3b <eighty_ninty_three+0x86>
    1b10:	f6 c4 40             	test   $0x40,%ah
    1b13:	75 59                	jne    1b6e <eighty_ninty_three+0xb9>
    1b15:	85 ed                	test   %ebp,%ebp
    1b17:	74 22                	je     1b3b <eighty_ninty_three+0x86>
    1b19:	8d 46 36             	lea    0x36(%esi),%eax
    1b1c:	ba d9 02 00 00       	mov    $0x2d9,%edx
			1b1d: R_386_32	.rodata.str1.1
    1b21:	e8 fc ff ff ff       	call   1b22 <eighty_ninty_three+0x6d>
			1b22: R_386_PC32	strstr
    1b26:	85 c0                	test   %eax,%eax
    1b28:	74 08                	je     1b32 <eighty_ninty_three+0x7d>
    1b2a:	80 7f 64 02          	cmpb   $0x2,0x64(%edi)
    1b2e:	75 0b                	jne    1b3b <eighty_ninty_three+0x86>
    1b30:	eb 3c                	jmp    1b6e <eighty_ninty_three+0xb9>
    1b32:	f6 86 bb 00 00 00 20 	testb  $0x20,0xbb(%esi)
    1b39:	75 33                	jne    1b6e <eighty_ninty_three+0xb9>
    1b3b:	31 c0                	xor    %eax,%eax
    1b3d:	f6 43 32 10          	testb  $0x10,0x32(%ebx)
    1b41:	75 2d                	jne    1b70 <eighty_ninty_three+0xbb>
    1b43:	80 7f 64 02          	cmpb   $0x2,0x64(%edi)
    1b47:	ba f6 02 00 00       	mov    $0x2f6,%edx
			1b48: R_386_32	.rodata.str1.1
    1b4c:	b8 f1 02 00 00       	mov    $0x2f1,%eax
			1b4d: R_386_32	.rodata.str1.1
    1b51:	0f 44 c2             	cmove  %edx,%eax
    1b54:	50                   	push   %eax
    1b55:	53                   	push   %ebx
    1b56:	68 fc 02 00 00       	push   $0x2fc
			1b57: R_386_32	.rodata.str1.1
    1b5b:	e8 fc ff ff ff       	call   1b5c <eighty_ninty_three+0xa7>
			1b5c: R_386_PC32	printk
    1b60:	31 c0                	xor    %eax,%eax
    1b62:	81 4b 30 00 00 10 00 	orl    $0x100000,0x30(%ebx)
    1b69:	83 c4 0c             	add    $0xc,%esp
    1b6c:	eb 02                	jmp    1b70 <eighty_ninty_three+0xbb>
    1b6e:	b0 01                	mov    $0x1,%al
    1b70:	5b                   	pop    %ebx
    1b71:	5e                   	pop    %esi
    1b72:	5f                   	pop    %edi
    1b73:	5d                   	pop    %ebp
    1b74:	c3                   	ret    

00001b75 <ide_wait_stat>:
    1b75:	57                   	push   %edi
    1b76:	89 c7                	mov    %eax,%edi
    1b78:	56                   	push   %esi
    1b79:	89 d6                	mov    %edx,%esi
    1b7b:	53                   	push   %ebx
    1b7c:	88 ca                	mov    %cl,%dl
    1b7e:	83 ec 04             	sub    $0x4,%esp
    1b81:	8b 46 64             	mov    0x64(%esi),%eax
    1b84:	8a 4c 24 14          	mov    0x14(%esp),%cl
    1b88:	85 c0                	test   %eax,%eax
    1b8a:	74 12                	je     1b9e <ide_wait_stat+0x29>
    1b8c:	39 46 60             	cmp    %eax,0x60(%esi)
    1b8f:	76 0d                	jbe    1b9e <ide_wait_stat+0x29>
    1b91:	c7 07 00 00 00 00    	movl   $0x0,(%edi)
    1b97:	bb 01 00 00 00       	mov    $0x1,%ebx
    1b9c:	eb 3c                	jmp    1bda <ide_wait_stat+0x65>
    1b9e:	8d 44 24 03          	lea    0x3(%esp),%eax
    1ba2:	0f b6 d2             	movzbl %dl,%edx
    1ba5:	50                   	push   %eax
    1ba6:	0f b6 c9             	movzbl %cl,%ecx
    1ba9:	ff 74 24 1c          	pushl  0x1c(%esp)
    1bad:	89 f0                	mov    %esi,%eax
    1baf:	e8 fc ff ff ff       	call   1bb0 <ide_wait_stat+0x3b>
			1bb0: R_386_PC32	__ide_wait_stat
    1bb4:	89 c3                	mov    %eax,%ebx
    1bb6:	85 db                	test   %ebx,%ebx
    1bb8:	58                   	pop    %eax
    1bb9:	5a                   	pop    %edx
    1bba:	74 1e                	je     1bda <ide_wait_stat+0x65>
    1bbc:	0f b6 4c 24 03       	movzbl 0x3(%esp),%ecx
    1bc1:	83 fb f0             	cmp    $0xfffffff0,%ebx
    1bc4:	b8 56 03 00 00       	mov    $0x356,%eax
			1bc5: R_386_32	.rodata.str1.1
    1bc9:	ba 49 03 00 00       	mov    $0x349,%edx
			1bca: R_386_32	.rodata.str1.1
    1bce:	0f 44 d0             	cmove  %eax,%edx
    1bd1:	89 f0                	mov    %esi,%eax
    1bd3:	e8 fc ff ff ff       	call   1bd4 <ide_wait_stat+0x5f>
			1bd4: R_386_PC32	ide_error
    1bd8:	89 07                	mov    %eax,(%edi)
    1bda:	59                   	pop    %ecx
    1bdb:	89 d8                	mov    %ebx,%eax
    1bdd:	5b                   	pop    %ebx
    1bde:	5e                   	pop    %esi
    1bdf:	5f                   	pop    %edi
    1be0:	c3                   	ret    

00001be1 <ide_driveid_update>:
    1be1:	55                   	push   %ebp
    1be2:	ba 20 00 00 00       	mov    $0x20,%edx
    1be7:	57                   	push   %edi
    1be8:	56                   	push   %esi
    1be9:	89 c6                	mov    %eax,%esi
    1beb:	53                   	push   %ebx
    1bec:	b8 24 09 00 00       	mov    $0x924,%eax
			1bed: R_386_32	kmalloc_caches
    1bf1:	e8 fc ff ff ff       	call   1bf2 <ide_driveid_update+0x11>
			1bf2: R_386_PC32	kmem_cache_alloc
    1bf6:	8b 2d 28 09 00 00    	mov    0x928,%ebp
			1bf8: R_386_32	kmalloc_caches
    1bfc:	83 3d 04 00 00 00 00 	cmpl   $0x0,0x4
			1bfe: R_386_32	__tracepoint_kmalloc
    1c03:	89 c3                	mov    %eax,%ebx
    1c05:	74 25                	je     1c2c <ide_driveid_update+0x4b>
    1c07:	8b 3d 10 00 00 00    	mov    0x10,%edi
			1c09: R_386_32	__tracepoint_kmalloc
    1c0d:	85 ff                	test   %edi,%edi
    1c0f:	74 1b                	je     1c2c <ide_driveid_update+0x4b>
    1c11:	6a 20                	push   $0x20
    1c13:	89 da                	mov    %ebx,%edx
    1c15:	b8 e1 1b 00 00       	mov    $0x1be1,%eax
			1c16: R_386_32	.text
    1c1a:	b9 00 02 00 00       	mov    $0x200,%ecx
    1c1f:	55                   	push   %ebp
    1c20:	ff 17                	call   *(%edi)
    1c22:	83 c7 04             	add    $0x4,%edi
    1c25:	83 3f 00             	cmpl   $0x0,(%edi)
    1c28:	58                   	pop    %eax
    1c29:	5a                   	pop    %edx
    1c2a:	eb e3                	jmp    1c0f <ide_driveid_update+0x2e>
    1c2c:	31 c0                	xor    %eax,%eax
    1c2e:	85 db                	test   %ebx,%ebx
    1c30:	0f 84 93 00 00 00    	je     1cc9 <ide_driveid_update+0xe8>
    1c36:	ba 01 00 00 00       	mov    $0x1,%edx
    1c3b:	89 f0                	mov    %esi,%eax
    1c3d:	e8 fc ff ff ff       	call   1c3e <ide_driveid_update+0x5d>
			1c3e: R_386_PC32	SELECT_MASK
    1c42:	89 d9                	mov    %ebx,%ecx
    1c44:	ba ec 00 00 00       	mov    $0xec,%edx
    1c49:	89 f0                	mov    %esi,%eax
    1c4b:	6a 01                	push   $0x1
    1c4d:	e8 fc ff ff ff       	call   1c4e <ide_driveid_update+0x6d>
			1c4e: R_386_PC32	ide_dev_read_id
    1c52:	31 d2                	xor    %edx,%edx
    1c54:	89 c7                	mov    %eax,%edi
    1c56:	89 f0                	mov    %esi,%eax
    1c58:	e8 fc ff ff ff       	call   1c59 <ide_driveid_update+0x78>
			1c59: R_386_PC32	SELECT_MASK
    1c5d:	85 ff                	test   %edi,%edi
    1c5f:	59                   	pop    %ecx
    1c60:	75 46                	jne    1ca8 <ide_driveid_update+0xc7>
    1c62:	8b 46 1c             	mov    0x1c(%esi),%eax
    1c65:	66 8b 93 b0 00 00 00 	mov    0xb0(%ebx),%dx
    1c6c:	66 89 90 b0 00 00 00 	mov    %dx,0xb0(%eax)
    1c73:	8b 46 1c             	mov    0x1c(%esi),%eax
    1c76:	66 8b 53 7e          	mov    0x7e(%ebx),%dx
    1c7a:	66 89 50 7e          	mov    %dx,0x7e(%eax)
    1c7e:	8b 46 1c             	mov    0x1c(%esi),%eax
    1c81:	66 8b 53 7c          	mov    0x7c(%ebx),%dx
    1c85:	66 89 50 7c          	mov    %dx,0x7c(%eax)
    1c89:	8b 46 1c             	mov    0x1c(%esi),%eax
    1c8c:	66 8b 93 46 01 00 00 	mov    0x146(%ebx),%dx
    1c93:	66 89 90 46 01 00 00 	mov    %dx,0x146(%eax)
    1c9a:	89 d8                	mov    %ebx,%eax
    1c9c:	e8 fc ff ff ff       	call   1c9d <ide_driveid_update+0xbc>
			1c9d: R_386_PC32	kfree
    1ca1:	b8 01 00 00 00       	mov    $0x1,%eax
    1ca6:	eb 21                	jmp    1cc9 <ide_driveid_update+0xe8>
    1ca8:	83 ff 02             	cmp    $0x2,%edi
    1cab:	75 13                	jne    1cc0 <ide_driveid_update+0xdf>
    1cad:	68 a4 00 00 00       	push   $0xa4
			1cae: R_386_32	.rodata
    1cb2:	56                   	push   %esi
    1cb3:	68 65 03 00 00       	push   $0x365
			1cb4: R_386_32	.rodata.str1.1
    1cb8:	e8 fc ff ff ff       	call   1cb9 <ide_driveid_update+0xd8>
			1cb9: R_386_PC32	printk
    1cbd:	83 c4 0c             	add    $0xc,%esp
    1cc0:	89 d8                	mov    %ebx,%eax
    1cc2:	e8 fc ff ff ff       	call   1cc3 <ide_driveid_update+0xe2>
			1cc3: R_386_PC32	kfree
    1cc7:	31 c0                	xor    %eax,%eax
    1cc9:	5b                   	pop    %ebx
    1cca:	5e                   	pop    %esi
    1ccb:	5f                   	pop    %edi
    1ccc:	5d                   	pop    %ebp
    1ccd:	c3                   	ret    
    1cce:	90                   	nop
    1ccf:	90                   	nop

00001cd0 <ide_get_lba_addr>:
    1cd0:	55                   	push   %ebp
    1cd1:	89 e5                	mov    %esp,%ebp
    1cd3:	57                   	push   %edi
    1cd4:	56                   	push   %esi
    1cd5:	53                   	push   %ebx
    1cd6:	83 ec 08             	sub    $0x8,%esp
    1cd9:	85 d2                	test   %edx,%edx
    1cdb:	0f b6 70 05          	movzbl 0x5(%eax),%esi
    1cdf:	8a 58 04             	mov    0x4(%eax),%bl
    1ce2:	8a 48 03             	mov    0x3(%eax),%cl
    1ce5:	74 18                	je     1cff <ide_get_lba_addr+0x2f>
    1ce7:	0f b6 50 0d          	movzbl 0xd(%eax),%edx
    1ceb:	0f b6 78 0c          	movzbl 0xc(%eax),%edi
    1cef:	0f b6 40 0b          	movzbl 0xb(%eax),%eax
    1cf3:	c1 e2 10             	shl    $0x10,%edx
    1cf6:	c1 e7 08             	shl    $0x8,%edi
    1cf9:	09 fa                	or     %edi,%edx
    1cfb:	09 c2                	or     %eax,%edx
    1cfd:	eb 07                	jmp    1d06 <ide_get_lba_addr+0x36>
    1cff:	0f b6 50 06          	movzbl 0x6(%eax),%edx
    1d03:	83 e2 0f             	and    $0xf,%edx
    1d06:	89 55 ec             	mov    %edx,-0x14(%ebp)
    1d09:	8b 45 ec             	mov    -0x14(%ebp),%eax
    1d0c:	0f b6 db             	movzbl %bl,%ebx
    1d0f:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
    1d16:	8b 55 f0             	mov    -0x10(%ebp),%edx
    1d19:	c1 e3 08             	shl    $0x8,%ebx
    1d1c:	0f b6 c9             	movzbl %cl,%ecx
    1d1f:	0f a4 c2 18          	shld   $0x18,%eax,%edx
    1d23:	89 55 f0             	mov    %edx,-0x10(%ebp)
    1d26:	c1 e0 18             	shl    $0x18,%eax
    1d29:	89 f2                	mov    %esi,%edx
    1d2b:	89 45 ec             	mov    %eax,-0x14(%ebp)
    1d2e:	0f b6 c2             	movzbl %dl,%eax
    1d31:	8b 55 f0             	mov    -0x10(%ebp),%edx
    1d34:	c1 e0 10             	shl    $0x10,%eax
    1d37:	09 d8                	or     %ebx,%eax
    1d39:	09 c8                	or     %ecx,%eax
    1d3b:	0b 45 ec             	or     -0x14(%ebp),%eax
    1d3e:	59                   	pop    %ecx
    1d3f:	5b                   	pop    %ebx
    1d40:	5b                   	pop    %ebx
    1d41:	5e                   	pop    %esi
    1d42:	5f                   	pop    %edi
    1d43:	5d                   	pop    %ebp
    1d44:	c3                   	ret    

00001d45 <ide_dump_status>:
    1d45:	55                   	push   %ebp
    1d46:	57                   	push   %edi
    1d47:	89 d7                	mov    %edx,%edi
    1d49:	56                   	push   %esi
    1d4a:	0f b6 f1             	movzbl %cl,%esi
    1d4d:	53                   	push   %ebx
    1d4e:	89 c3                	mov    %eax,%ebx
    1d50:	83 ec 4c             	sub    $0x4c,%esp
    1d53:	56                   	push   %esi
    1d54:	52                   	push   %edx
    1d55:	50                   	push   %eax
    1d56:	68 09 05 00 00       	push   $0x509
			1d57: R_386_32	.rodata.str1.1
    1d5b:	88 4c 24 10          	mov    %cl,0x10(%esp)
    1d5f:	e8 fc ff ff ff       	call   1d60 <ide_dump_status+0x1b>
			1d60: R_386_PC32	printk
    1d64:	83 c4 10             	add    $0x10,%esp
    1d67:	8a 0c 24             	mov    (%esp),%cl
    1d6a:	84 c9                	test   %cl,%cl
    1d6c:	79 07                	jns    1d75 <ide_dump_status+0x30>
    1d6e:	68 25 05 00 00       	push   $0x525
			1d6f: R_386_32	.rodata.str1.1
    1d73:	eb 7f                	jmp    1df4 <ide_dump_status+0xaf>
    1d75:	f7 c6 40 00 00 00    	test   $0x40,%esi
    1d7b:	74 0b                	je     1d88 <ide_dump_status+0x43>
    1d7d:	68 2e 05 00 00       	push   $0x52e
			1d7e: R_386_32	.rodata.str1.1
    1d82:	e8 fc ff ff ff       	call   1d83 <ide_dump_status+0x3e>
			1d83: R_386_PC32	printk
    1d87:	5a                   	pop    %edx
    1d88:	f7 c6 20 00 00 00    	test   $0x20,%esi
    1d8e:	74 0b                	je     1d9b <ide_dump_status+0x56>
    1d90:	68 3d 05 00 00       	push   $0x53d
			1d91: R_386_32	.rodata.str1.1
    1d95:	e8 fc ff ff ff       	call   1d96 <ide_dump_status+0x51>
			1d96: R_386_PC32	printk
    1d9a:	58                   	pop    %eax
    1d9b:	f7 c6 10 00 00 00    	test   $0x10,%esi
    1da1:	74 0b                	je     1dae <ide_dump_status+0x69>
    1da3:	68 4d 05 00 00       	push   $0x54d
			1da4: R_386_32	.rodata.str1.1
    1da8:	e8 fc ff ff ff       	call   1da9 <ide_dump_status+0x64>
			1da9: R_386_PC32	printk
    1dad:	5d                   	pop    %ebp
    1dae:	f7 c6 08 00 00 00    	test   $0x8,%esi
    1db4:	74 0b                	je     1dc1 <ide_dump_status+0x7c>
    1db6:	68 5e 05 00 00       	push   $0x55e
			1db7: R_386_32	.rodata.str1.1
    1dbb:	e8 fc ff ff ff       	call   1dbc <ide_dump_status+0x77>
			1dbc: R_386_PC32	printk
    1dc0:	59                   	pop    %ecx
    1dc1:	f7 c6 04 00 00 00    	test   $0x4,%esi
    1dc7:	74 0b                	je     1dd4 <ide_dump_status+0x8f>
    1dc9:	68 6e 05 00 00       	push   $0x56e
			1dca: R_386_32	.rodata.str1.1
    1dce:	e8 fc ff ff ff       	call   1dcf <ide_dump_status+0x8a>
			1dcf: R_386_PC32	printk
    1dd3:	5a                   	pop    %edx
    1dd4:	f7 c6 02 00 00 00    	test   $0x2,%esi
    1dda:	74 0b                	je     1de7 <ide_dump_status+0xa2>
    1ddc:	68 81 05 00 00       	push   $0x581
			1ddd: R_386_32	.rodata.str1.1
    1de1:	e8 fc ff ff ff       	call   1de2 <ide_dump_status+0x9d>
			1de2: R_386_PC32	printk
    1de6:	58                   	pop    %eax
    1de7:	f7 c6 01 00 00 00    	test   $0x1,%esi
    1ded:	74 0b                	je     1dfa <ide_dump_status+0xb5>
    1def:	68 8b 05 00 00       	push   $0x58b
			1df0: R_386_32	.rodata.str1.1
    1df4:	e8 fc ff ff ff       	call   1df5 <ide_dump_status+0xb0>
			1df5: R_386_PC32	printk
    1df9:	5d                   	pop    %ebp
    1dfa:	68 95 05 00 00       	push   $0x595
			1dfb: R_386_32	.rodata.str1.1
    1dff:	e8 fc ff ff ff       	call   1e00 <ide_dump_status+0xbb>
			1e00: R_386_PC32	printk
    1e04:	89 f0                	mov    %esi,%eax
    1e06:	31 f6                	xor    %esi,%esi
    1e08:	25 81 00 00 00       	and    $0x81,%eax
    1e0d:	48                   	dec    %eax
    1e0e:	59                   	pop    %ecx
    1e0f:	0f 85 65 02 00 00    	jne    207a <ide_dump_status+0x335>
    1e15:	89 d8                	mov    %ebx,%eax
    1e17:	e8 fc ff ff ff       	call   1e18 <ide_dump_status+0xd3>
			1e18: R_386_PC32	ide_read_error
    1e1c:	0f b6 e8             	movzbl %al,%ebp
    1e1f:	89 c6                	mov    %eax,%esi
    1e21:	55                   	push   %ebp
    1e22:	57                   	push   %edi
    1e23:	53                   	push   %ebx
    1e24:	68 9b 05 00 00       	push   $0x59b
			1e25: R_386_32	.rodata.str1.1
    1e29:	e8 fc ff ff ff       	call   1e2a <ide_dump_status+0xe5>
			1e2a: R_386_PC32	printk
    1e2e:	83 c4 10             	add    $0x10,%esp
    1e31:	80 7b 46 20          	cmpb   $0x20,0x46(%ebx)
    1e35:	0f 85 c1 01 00 00    	jne    1ffc <ide_dump_status+0x2b7>
    1e3b:	68 b4 05 00 00       	push   $0x5b4
			1e3c: R_386_32	.rodata.str1.1
    1e40:	89 ef                	mov    %ebp,%edi
    1e42:	e8 fc ff ff ff       	call   1e43 <ide_dump_status+0xfe>
			1e43: R_386_PC32	printk
    1e47:	83 e7 04             	and    $0x4,%edi
    1e4a:	5a                   	pop    %edx
    1e4b:	74 0b                	je     1e58 <ide_dump_status+0x113>
    1e4d:	68 ba 05 00 00       	push   $0x5ba
			1e4e: R_386_32	.rodata.str1.1
    1e52:	e8 fc ff ff ff       	call   1e53 <ide_dump_status+0x10e>
			1e53: R_386_PC32	printk
    1e57:	58                   	pop    %eax
    1e58:	89 f0                	mov    %esi,%eax
    1e5a:	84 c0                	test   %al,%al
    1e5c:	79 1c                	jns    1e7a <ide_dump_status+0x135>
    1e5e:	85 ff                	test   %edi,%edi
    1e60:	ba da 05 00 00       	mov    $0x5da,%edx
			1e61: R_386_32	.rodata.str1.1
    1e65:	b8 cf 05 00 00       	mov    $0x5cf,%eax
			1e66: R_386_32	.rodata.str1.1
    1e6a:	0f 45 c2             	cmovne %edx,%eax
    1e6d:	50                   	push   %eax
    1e6e:	68 e2 05 00 00       	push   $0x5e2
			1e6f: R_386_32	.rodata.str1.1
    1e73:	e8 fc ff ff ff       	call   1e74 <ide_dump_status+0x12f>
			1e74: R_386_PC32	printk
    1e78:	59                   	pop    %ecx
    1e79:	5f                   	pop    %edi
    1e7a:	f7 c5 40 00 00 00    	test   $0x40,%ebp
    1e80:	74 0b                	je     1e8d <ide_dump_status+0x148>
    1e82:	68 e8 05 00 00       	push   $0x5e8
			1e83: R_386_32	.rodata.str1.1
    1e87:	e8 fc ff ff ff       	call   1e88 <ide_dump_status+0x143>
			1e88: R_386_PC32	printk
    1e8c:	5a                   	pop    %edx
    1e8d:	f7 c5 10 00 00 00    	test   $0x10,%ebp
    1e93:	74 0b                	je     1ea0 <ide_dump_status+0x15b>
    1e95:	68 ff 05 00 00       	push   $0x5ff
			1e96: R_386_32	.rodata.str1.1
    1e9a:	e8 fc ff ff ff       	call   1e9b <ide_dump_status+0x156>
			1e9b: R_386_PC32	printk
    1e9f:	58                   	pop    %eax
    1ea0:	f7 c5 02 00 00 00    	test   $0x2,%ebp
    1ea6:	74 0b                	je     1eb3 <ide_dump_status+0x16e>
    1ea8:	68 14 06 00 00       	push   $0x614
			1ea9: R_386_32	.rodata.str1.1
    1ead:	e8 fc ff ff ff       	call   1eae <ide_dump_status+0x169>
			1eae: R_386_PC32	printk
    1eb2:	5f                   	pop    %edi
    1eb3:	f7 c5 01 00 00 00    	test   $0x1,%ebp
    1eb9:	74 0b                	je     1ec6 <ide_dump_status+0x181>
    1ebb:	68 2a 06 00 00       	push   $0x62a
			1ebc: R_386_32	.rodata.str1.1
    1ec0:	e8 fc ff ff ff       	call   1ec1 <ide_dump_status+0x17c>
			1ec1: R_386_PC32	printk
    1ec5:	59                   	pop    %ecx
    1ec6:	68 3f 06 00 00       	push   $0x63f
			1ec7: R_386_32	.rodata.str1.1
    1ecb:	e8 fc ff ff ff       	call   1ecc <ide_dump_status+0x187>
			1ecc: R_386_PC32	printk
    1ed0:	89 e8                	mov    %ebp,%eax
    1ed2:	25 84 00 00 00       	and    $0x84,%eax
    1ed7:	83 c0 80             	add    $0xffffff80,%eax
    1eda:	5a                   	pop    %edx
    1edb:	74 09                	je     1ee6 <ide_dump_status+0x1a1>
    1edd:	83 e5 51             	and    $0x51,%ebp
    1ee0:	0f 84 0f 01 00 00    	je     1ff5 <ide_dump_status+0x2b0>
    1ee6:	8b 43 28             	mov    0x28(%ebx),%eax
    1ee9:	8d 7c 24 0c          	lea    0xc(%esp),%edi
    1eed:	b9 10 00 00 00       	mov    $0x10,%ecx
    1ef2:	8b 6b 30             	mov    0x30(%ebx),%ebp
    1ef5:	8b 80 38 02 00 00    	mov    0x238(%eax),%eax
    1efb:	c1 ed 15             	shr    $0x15,%ebp
    1efe:	83 e5 01             	and    $0x1,%ebp
    1f01:	89 44 24 04          	mov    %eax,0x4(%esp)
    1f05:	31 c0                	xor    %eax,%eax
    1f07:	f3 ab                	rep stos %eax,%es:(%edi)
    1f09:	89 ea                	mov    %ebp,%edx
    1f0b:	84 d2                	test   %dl,%dl
    1f0d:	74 13                	je     1f22 <ide_dump_status+0x1dd>
    1f0f:	c6 44 24 1e 38       	movb   $0x38,0x1e(%esp)
    1f14:	c6 44 24 1f 38       	movb   $0x38,0x1f(%esp)
    1f19:	66 c7 44 24 20 01 00 	movw   $0x1,0x20(%esp)
    1f20:	eb 05                	jmp    1f27 <ide_dump_status+0x1e2>
    1f22:	c6 44 24 1e 78       	movb   $0x78,0x1e(%esp)
    1f27:	89 d8                	mov    %ebx,%eax
    1f29:	8d 54 24 0c          	lea    0xc(%esp),%edx
    1f2d:	e8 fc ff ff ff       	call   1f2e <ide_dump_status+0x1e9>
			1f2e: R_386_PC32	ide_tf_readback
    1f32:	89 e8                	mov    %ebp,%eax
    1f34:	84 c0                	test   %al,%al
    1f36:	75 09                	jne    1f41 <ide_dump_status+0x1fc>
    1f38:	0f b6 44 24 12       	movzbl 0x12(%esp),%eax
    1f3d:	a8 40                	test   $0x40,%al
    1f3f:	74 6f                	je     1fb0 <ide_dump_status+0x26b>
    1f41:	8a 54 24 0f          	mov    0xf(%esp),%dl
    1f45:	8a 44 24 11          	mov    0x11(%esp),%al
    1f49:	8b 7c 24 10          	mov    0x10(%esp),%edi
    1f4d:	88 54 24 0b          	mov    %dl,0xb(%esp)
    1f51:	89 ea                	mov    %ebp,%edx
    1f53:	84 d2                	test   %dl,%dl
    1f55:	74 1b                	je     1f72 <ide_dump_status+0x22d>
    1f57:	0f b6 54 24 19       	movzbl 0x19(%esp),%edx
    1f5c:	0f b6 4c 24 18       	movzbl 0x18(%esp),%ecx
    1f61:	c1 e2 10             	shl    $0x10,%edx
    1f64:	c1 e1 08             	shl    $0x8,%ecx
    1f67:	09 ca                	or     %ecx,%edx
    1f69:	0f b6 4c 24 17       	movzbl 0x17(%esp),%ecx
    1f6e:	09 ca                	or     %ecx,%edx
    1f70:	eb 08                	jmp    1f7a <ide_dump_status+0x235>
    1f72:	0f b6 54 24 12       	movzbl 0x12(%esp),%edx
    1f77:	83 e2 0f             	and    $0xf,%edx
    1f7a:	0f b6 c0             	movzbl %al,%eax
    1f7d:	81 e7 ff 00 00 00    	and    $0xff,%edi
    1f83:	c1 e7 08             	shl    $0x8,%edi
    1f86:	31 c9                	xor    %ecx,%ecx
    1f88:	c1 e0 10             	shl    $0x10,%eax
    1f8b:	09 f8                	or     %edi,%eax
    1f8d:	0f b6 7c 24 0b       	movzbl 0xb(%esp),%edi
    1f92:	0f a4 d1 18          	shld   $0x18,%edx,%ecx
    1f96:	c1 e2 18             	shl    $0x18,%edx
    1f99:	51                   	push   %ecx
    1f9a:	09 f8                	or     %edi,%eax
    1f9c:	89 d7                	mov    %edx,%edi
    1f9e:	09 c7                	or     %eax,%edi
    1fa0:	57                   	push   %edi
    1fa1:	68 44 06 00 00       	push   $0x644
			1fa2: R_386_32	.rodata.str1.1
    1fa6:	e8 fc ff ff ff       	call   1fa7 <ide_dump_status+0x262>
			1fa7: R_386_PC32	printk
    1fab:	83 c4 0c             	add    $0xc,%esp
    1fae:	eb 27                	jmp    1fd7 <ide_dump_status+0x292>
    1fb0:	0f b6 54 24 0f       	movzbl 0xf(%esp),%edx
    1fb5:	83 e0 0f             	and    $0xf,%eax
    1fb8:	52                   	push   %edx
    1fb9:	50                   	push   %eax
    1fba:	0f b6 44 24 19       	movzbl 0x19(%esp),%eax
    1fbf:	0f b6 54 24 18       	movzbl 0x18(%esp),%edx
    1fc4:	c1 e0 08             	shl    $0x8,%eax
    1fc7:	01 d0                	add    %edx,%eax
    1fc9:	50                   	push   %eax
    1fca:	68 56 06 00 00       	push   $0x656
			1fcb: R_386_32	.rodata.str1.1
    1fcf:	e8 fc ff ff ff       	call   1fd0 <ide_dump_status+0x28b>
			1fd0: R_386_PC32	printk
    1fd4:	83 c4 10             	add    $0x10,%esp
    1fd7:	83 7c 24 04 00       	cmpl   $0x0,0x4(%esp)
    1fdc:	74 17                	je     1ff5 <ide_dump_status+0x2b0>
    1fde:	8b 44 24 04          	mov    0x4(%esp),%eax
    1fe2:	ff 70 34             	pushl  0x34(%eax)
    1fe5:	ff 70 30             	pushl  0x30(%eax)
    1fe8:	68 68 06 00 00       	push   $0x668
			1fe9: R_386_32	.rodata.str1.1
    1fed:	e8 fc ff ff ff       	call   1fee <ide_dump_status+0x2a9>
			1fee: R_386_PC32	printk
    1ff2:	83 c4 0c             	add    $0xc,%esp
    1ff5:	68 79 06 00 00       	push   $0x679
			1ff6: R_386_32	.rodata.str1.1
    1ffa:	eb 78                	jmp    2074 <ide_dump_status+0x32f>
    1ffc:	68 b4 05 00 00       	push   $0x5b4
			1ffd: R_386_32	.rodata.str1.1
    2001:	e8 fc ff ff ff       	call   2002 <ide_dump_status+0x2bd>
			2002: R_386_PC32	printk
    2006:	f7 c5 01 00 00 00    	test   $0x1,%ebp
    200c:	59                   	pop    %ecx
    200d:	74 0b                	je     201a <ide_dump_status+0x2d5>
    200f:	68 7e 06 00 00       	push   $0x67e
			2010: R_386_32	.rodata.str1.1
    2014:	e8 fc ff ff ff       	call   2015 <ide_dump_status+0x2d0>
			2015: R_386_PC32	printk
    2019:	5a                   	pop    %edx
    201a:	f7 c5 02 00 00 00    	test   $0x2,%ebp
    2020:	74 0b                	je     202d <ide_dump_status+0x2e8>
    2022:	68 9a 06 00 00       	push   $0x69a
			2023: R_386_32	.rodata.str1.1
    2027:	e8 fc ff ff ff       	call   2028 <ide_dump_status+0x2e3>
			2028: R_386_PC32	printk
    202c:	58                   	pop    %eax
    202d:	f7 c5 04 00 00 00    	test   $0x4,%ebp
    2033:	74 0b                	je     2040 <ide_dump_status+0x2fb>
    2035:	68 a9 06 00 00       	push   $0x6a9
			2036: R_386_32	.rodata.str1.1
    203a:	e8 fc ff ff ff       	call   203b <ide_dump_status+0x2f6>
			203b: R_386_PC32	printk
    203f:	5f                   	pop    %edi
    2040:	f7 c5 08 00 00 00    	test   $0x8,%ebp
    2046:	74 0b                	je     2053 <ide_dump_status+0x30e>
    2048:	68 bc 06 00 00       	push   $0x6bc
			2049: R_386_32	.rodata.str1.1
    204d:	e8 fc ff ff ff       	call   204e <ide_dump_status+0x309>
			204e: R_386_PC32	printk
    2052:	59                   	pop    %ecx
    2053:	89 ea                	mov    %ebp,%edx
    2055:	80 e2 f0             	and    $0xf0,%dl
    2058:	74 15                	je     206f <ide_dump_status+0x32a>
    205a:	89 f0                	mov    %esi,%eax
    205c:	c0 e8 04             	shr    $0x4,%al
    205f:	0f b6 c0             	movzbl %al,%eax
    2062:	50                   	push   %eax
    2063:	68 d5 06 00 00       	push   $0x6d5
			2064: R_386_32	.rodata.str1.1
    2068:	e8 fc ff ff ff       	call   2069 <ide_dump_status+0x324>
			2069: R_386_PC32	printk
    206d:	58                   	pop    %eax
    206e:	5a                   	pop    %edx
    206f:	68 95 05 00 00       	push   $0x595
			2070: R_386_32	.rodata.str1.1
    2074:	e8 fc ff ff ff       	call   2075 <ide_dump_status+0x330>
			2075: R_386_PC32	printk
    2079:	5d                   	pop    %ebp
    207a:	8b 43 28             	mov    0x28(%ebx),%eax
    207d:	0f b6 80 9b 00 00 00 	movzbl 0x9b(%eax),%eax
    2084:	50                   	push   %eax
    2085:	53                   	push   %ebx
    2086:	68 f0 06 00 00       	push   $0x6f0
			2087: R_386_32	.rodata.str1.1
    208b:	e8 fc ff ff ff       	call   208c <ide_dump_status+0x347>
			208c: R_386_PC32	printk
    2090:	89 f0                	mov    %esi,%eax
    2092:	83 c4 58             	add    $0x58,%esp
    2095:	5b                   	pop    %ebx
    2096:	5e                   	pop    %esi
    2097:	5f                   	pop    %edi
    2098:	5d                   	pop    %ebp
    2099:	c3                   	ret    

0000209a <ide_toggle_bounce>:
    209a:	56                   	push   %esi
    209b:	8b 35 00 00 00 00    	mov    0x0,%esi
			209d: R_386_32	dma_ops
    20a1:	31 c9                	xor    %ecx,%ecx
    20a3:	53                   	push   %ebx
    20a4:	89 d3                	mov    %edx,%ebx
    20a6:	8b 15 00 00 00 00    	mov    0x0,%edx
			20a8: R_386_32	blk_max_low_pfn
    20ac:	0f a4 d1 0c          	shld   $0xc,%edx,%ecx
    20b0:	c1 e2 0c             	shl    $0xc,%edx
    20b3:	83 7e 3c 00          	cmpl   $0x0,0x3c(%esi)
    20b7:	75 07                	jne    20c0 <ide_toggle_bounce+0x26>
    20b9:	83 ca ff             	or     $0xffffffff,%edx
    20bc:	89 d1                	mov    %edx,%ecx
    20be:	eb 23                	jmp    20e3 <ide_toggle_bounce+0x49>
    20c0:	85 db                	test   %ebx,%ebx
    20c2:	74 1f                	je     20e3 <ide_toggle_bounce+0x49>
    20c4:	80 78 46 20          	cmpb   $0x20,0x46(%eax)
    20c8:	75 19                	jne    20e3 <ide_toggle_bounce+0x49>
    20ca:	8b 58 28             	mov    0x28(%eax),%ebx
    20cd:	8b 5b 68             	mov    0x68(%ebx),%ebx
    20d0:	85 db                	test   %ebx,%ebx
    20d2:	74 0f                	je     20e3 <ide_toggle_bounce+0x49>
    20d4:	8b 9b d0 00 00 00    	mov    0xd0(%ebx),%ebx
    20da:	85 db                	test   %ebx,%ebx
    20dc:	74 05                	je     20e3 <ide_toggle_bounce+0x49>
    20de:	8b 13                	mov    (%ebx),%edx
    20e0:	8b 4b 04             	mov    0x4(%ebx),%ecx
    20e3:	8b 40 10             	mov    0x10(%eax),%eax
    20e6:	85 c0                	test   %eax,%eax
    20e8:	74 07                	je     20f1 <ide_toggle_bounce+0x57>
    20ea:	5b                   	pop    %ebx
    20eb:	5e                   	pop    %esi
    20ec:	e9 fc ff ff ff       	jmp    20ed <ide_toggle_bounce+0x53>
			20ed: R_386_PC32	blk_queue_bounce_limit
    20f1:	5b                   	pop    %ebx
    20f2:	5e                   	pop    %esi
    20f3:	c3                   	ret    

000020f4 <ata_lock>:
    20f4:	31 c0                	xor    %eax,%eax
    20f6:	c3                   	ret    

000020f7 <exact_match>:
    20f7:	83 22 3f             	andl   $0x3f,(%edx)
    20fa:	8d 41 54             	lea    0x54(%ecx),%eax
    20fd:	c3                   	ret    

000020fe <ide_port_init_devices>:
    20fe:	57                   	push   %edi
    20ff:	56                   	push   %esi
    2100:	31 f6                	xor    %esi,%esi
    2102:	53                   	push   %ebx
    2103:	89 c3                	mov    %eax,%ebx
    2105:	8b 78 74             	mov    0x74(%eax),%edi
    2108:	eb 44                	jmp    214e <ide_port_init_devices+0x50>
    210a:	8a 53 5a             	mov    0x5a(%ebx),%dl
    210d:	8d 14 56             	lea    (%esi,%edx,2),%edx
    2110:	88 50 44             	mov    %dl,0x44(%eax)
    2113:	f6 43 5f 01          	testb  $0x1,0x5f(%ebx)
    2117:	74 04                	je     211d <ide_port_init_devices+0x1f>
    2119:	c6 40 4a 01          	movb   $0x1,0x4a(%eax)
    211d:	f6 43 5f 40          	testb  $0x40,0x5f(%ebx)
    2121:	74 07                	je     212a <ide_port_init_devices+0x2c>
    2123:	81 48 30 00 40 00 00 	orl    $0x4000,0x30(%eax)
    212a:	f6 43 5f 02          	testb  $0x2,0x5f(%ebx)
    212e:	74 04                	je     2134 <ide_port_init_devices+0x36>
    2130:	83 48 30 04          	orl    $0x4,0x30(%eax)
    2134:	83 7b 5c 00          	cmpl   $0x0,0x5c(%ebx)
    2138:	79 07                	jns    2141 <ide_port_init_devices+0x43>
    213a:	81 48 30 00 20 00 00 	orl    $0x2000,0x30(%eax)
    2141:	85 ff                	test   %edi,%edi
    2143:	74 08                	je     214d <ide_port_init_devices+0x4f>
    2145:	8b 17                	mov    (%edi),%edx
    2147:	85 d2                	test   %edx,%edx
    2149:	74 02                	je     214d <ide_port_init_devices+0x4f>
    214b:	ff d2                	call   *%edx
    214d:	46                   	inc    %esi
    214e:	8b 44 b3 48          	mov    0x48(%ebx,%esi,4),%eax
    2152:	85 c0                	test   %eax,%eax
    2154:	75 b4                	jne    210a <ide_port_init_devices+0xc>
    2156:	83 fe 01             	cmp    $0x1,%esi
    2159:	7e af                	jle    210a <ide_port_init_devices+0xc>
    215b:	5b                   	pop    %ebx
    215c:	5e                   	pop    %esi
    215d:	5f                   	pop    %edi
    215e:	c3                   	ret    

0000215f <trace_kmalloc>:
    215f:	55                   	push   %ebp
    2160:	89 c5                	mov    %eax,%ebp
    2162:	83 3d 04 00 00 00 00 	cmpl   $0x0,0x4
			2164: R_386_32	__tracepoint_kmalloc
    2169:	57                   	push   %edi
    216a:	89 d7                	mov    %edx,%edi
    216c:	56                   	push   %esi
    216d:	89 ce                	mov    %ecx,%esi
    216f:	53                   	push   %ebx
    2170:	74 24                	je     2196 <trace_kmalloc+0x37>
    2172:	8b 1d 10 00 00 00    	mov    0x10,%ebx
			2174: R_386_32	__tracepoint_kmalloc
    2178:	85 db                	test   %ebx,%ebx
    217a:	74 1a                	je     2196 <trace_kmalloc+0x37>
    217c:	ff 74 24 18          	pushl  0x18(%esp)
    2180:	89 fa                	mov    %edi,%edx
    2182:	ff 74 24 18          	pushl  0x18(%esp)
    2186:	89 e8                	mov    %ebp,%eax
    2188:	89 f1                	mov    %esi,%ecx
    218a:	ff 13                	call   *(%ebx)
    218c:	83 c3 04             	add    $0x4,%ebx
    218f:	83 3b 00             	cmpl   $0x0,(%ebx)
    2192:	58                   	pop    %eax
    2193:	5a                   	pop    %edx
    2194:	eb e4                	jmp    217a <trace_kmalloc+0x1b>
    2196:	5b                   	pop    %ebx
    2197:	5e                   	pop    %esi
    2198:	5f                   	pop    %edi
    2199:	5d                   	pop    %ebp
    219a:	c3                   	ret    

0000219b <ide_busy_sleep>:
    219b:	55                   	push   %ebp
    219c:	57                   	push   %edi
    219d:	56                   	push   %esi
    219e:	53                   	push   %ebx
    219f:	89 c3                	mov    %eax,%ebx
    21a1:	83 ec 04             	sub    $0x4,%esp
    21a4:	8b 2d 00 00 00 00    	mov    0x0,%ebp
			21a6: R_386_32	jiffies
    21aa:	89 0c 24             	mov    %ecx,(%esp)
    21ad:	8b 70 28             	mov    0x28(%eax),%esi
    21b0:	8d 2c 2a             	lea    (%edx,%ebp,1),%ebp
    21b3:	b8 32 00 00 00       	mov    $0x32,%eax
    21b8:	e8 fc ff ff ff       	call   21b9 <ide_busy_sleep+0x1e>
			21b9: R_386_PC32	msleep
    21bd:	8b 7e 70             	mov    0x70(%esi),%edi
    21c0:	83 3c 24 00          	cmpl   $0x0,(%esp)
    21c4:	74 07                	je     21cd <ide_busy_sleep+0x32>
    21c6:	89 f0                	mov    %esi,%eax
    21c8:	ff 57 08             	call   *0x8(%edi)
    21cb:	eb 05                	jmp    21d2 <ide_busy_sleep+0x37>
    21cd:	89 f0                	mov    %esi,%eax
    21cf:	ff 57 04             	call   *0x4(%edi)
    21d2:	84 c0                	test   %al,%al
    21d4:	78 04                	js     21da <ide_busy_sleep+0x3f>
    21d6:	31 c0                	xor    %eax,%eax
    21d8:	eb 21                	jmp    21fb <ide_busy_sleep+0x60>
    21da:	a1 00 00 00 00       	mov    0x0,%eax
			21db: R_386_32	jiffies
    21df:	39 e8                	cmp    %ebp,%eax
    21e1:	78 d0                	js     21b3 <ide_busy_sleep+0x18>
    21e3:	68 40 01 00 00       	push   $0x140
			21e4: R_386_32	.rodata
    21e8:	53                   	push   %ebx
    21e9:	68 17 07 00 00       	push   $0x717
			21ea: R_386_32	.rodata.str1.1
    21ee:	e8 fc ff ff ff       	call   21ef <ide_busy_sleep+0x54>
			21ef: R_386_PC32	printk
    21f3:	b8 01 00 00 00       	mov    $0x1,%eax
    21f8:	83 c4 0c             	add    $0xc,%esp
    21fb:	59                   	pop    %ecx
    21fc:	5b                   	pop    %ebx
    21fd:	5e                   	pop    %esi
    21fe:	5f                   	pop    %edi
    21ff:	5d                   	pop    %ebp
    2200:	c3                   	ret    

00002201 <ide_port_tune_devices>:
    2201:	55                   	push   %ebp
    2202:	57                   	push   %edi
    2203:	89 c7                	mov    %eax,%edi
    2205:	56                   	push   %esi
    2206:	53                   	push   %ebx
    2207:	31 db                	xor    %ebx,%ebx
    2209:	8b 68 74             	mov    0x74(%eax),%ebp
    220c:	eb 1d                	jmp    222b <ide_port_tune_devices+0x2a>
    220e:	f6 46 30 40          	testb  $0x40,0x30(%esi)
    2212:	74 16                	je     222a <ide_port_tune_devices+0x29>
    2214:	89 f0                	mov    %esi,%eax
    2216:	e8 fc ff ff ff       	call   2217 <ide_port_tune_devices+0x16>
			2217: R_386_PC32	ide_check_nien_quirk_list
    221b:	85 ed                	test   %ebp,%ebp
    221d:	74 0b                	je     222a <ide_port_tune_devices+0x29>
    221f:	8b 55 1c             	mov    0x1c(%ebp),%edx
    2222:	85 d2                	test   %edx,%edx
    2224:	74 04                	je     222a <ide_port_tune_devices+0x29>
    2226:	89 f0                	mov    %esi,%eax
    2228:	ff d2                	call   *%edx
    222a:	43                   	inc    %ebx
    222b:	8b 74 9f 48          	mov    0x48(%edi,%ebx,4),%esi
    222f:	85 f6                	test   %esi,%esi
    2231:	75 db                	jne    220e <ide_port_tune_devices+0xd>
    2233:	83 fb 01             	cmp    $0x1,%ebx
    2236:	7e d6                	jle    220e <ide_port_tune_devices+0xd>
    2238:	eb 24                	jmp    225e <ide_port_tune_devices+0x5d>
    223a:	f6 43 30 40          	testb  $0x40,0x30(%ebx)
    223e:	74 1d                	je     225d <ide_port_tune_devices+0x5c>
    2240:	ba ff 00 00 00       	mov    $0xff,%edx
    2245:	89 d8                	mov    %ebx,%eax
    2247:	e8 fc ff ff ff       	call   2248 <ide_port_tune_devices+0x47>
			2248: R_386_PC32	ide_set_pio
    224c:	83 4b 30 20          	orl    $0x20,0x30(%ebx)
    2250:	83 7f 78 00          	cmpl   $0x0,0x78(%edi)
    2254:	74 07                	je     225d <ide_port_tune_devices+0x5c>
    2256:	89 d8                	mov    %ebx,%eax
    2258:	e8 fc ff ff ff       	call   2259 <ide_port_tune_devices+0x58>
			2259: R_386_PC32	ide_set_dma
    225d:	46                   	inc    %esi
    225e:	8b 5c b7 48          	mov    0x48(%edi,%esi,4),%ebx
    2262:	85 db                	test   %ebx,%ebx
    2264:	75 d4                	jne    223a <ide_port_tune_devices+0x39>
    2266:	83 fe 01             	cmp    $0x1,%esi
    2269:	7e cf                	jle    223a <ide_port_tune_devices+0x39>
    226b:	5b                   	pop    %ebx
    226c:	5e                   	pop    %esi
    226d:	5f                   	pop    %edi
    226e:	5d                   	pop    %ebp
    226f:	c3                   	ret    

00002270 <ide_port_setup_devices>:
    2270:	55                   	push   %ebp
    2271:	31 ed                	xor    %ebp,%ebp
    2273:	57                   	push   %edi
    2274:	56                   	push   %esi
    2275:	53                   	push   %ebx
    2276:	83 ec 08             	sub    $0x8,%esp
    2279:	89 44 24 04          	mov    %eax,0x4(%esp)
    227d:	b8 5c 00 00 00       	mov    $0x5c,%eax
			227e: R_386_32	.data
    2282:	e8 fc ff ff ff       	call   2283 <ide_port_setup_devices+0x13>
			2283: R_386_PC32	mutex_lock
    2287:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)
    228e:	e9 9c 00 00 00       	jmp    232f <ide_port_setup_devices+0xbf>
    2293:	f6 43 30 40          	testb  $0x40,0x30(%ebx)
    2297:	0f 84 91 00 00 00    	je     232e <ide_port_setup_devices+0xbe>
    229d:	83 c9 ff             	or     $0xffffffff,%ecx
    22a0:	31 d2                	xor    %edx,%edx
    22a2:	8b 7b 28             	mov    0x28(%ebx),%edi
    22a5:	b8 00 00 00 00       	mov    $0x0,%eax
			22a6: R_386_32	do_ide_request
    22aa:	e8 fc ff ff ff       	call   22ab <ide_port_setup_devices+0x3b>
			22ab: R_386_PC32	blk_init_queue_node
    22af:	85 c0                	test   %eax,%eax
    22b1:	89 c6                	mov    %eax,%esi
    22b3:	74 68                	je     231d <ide_port_setup_devices+0xad>
    22b5:	89 98 a8 01 00 00    	mov    %ebx,0x1a8(%eax)
    22bb:	ba ff ff 00 00       	mov    $0xffff,%edx
    22c0:	e8 fc ff ff ff       	call   22c1 <ide_port_setup_devices+0x51>
			22c1: R_386_PC32	blk_queue_segment_boundary
    22c5:	8b 97 d4 00 00 00    	mov    0xd4(%edi),%edx
    22cb:	b8 00 01 00 00       	mov    $0x100,%eax
    22d0:	81 fa 00 01 00 00    	cmp    $0x100,%edx
    22d6:	0f 4d d0             	cmovge %eax,%edx
    22d9:	89 f0                	mov    %esi,%eax
    22db:	e8 fc ff ff ff       	call   22dc <ide_port_setup_devices+0x6c>
			22dc: R_386_PC32	blk_queue_max_sectors
    22e0:	a1 00 00 00 00       	mov    0x0,%eax
			22e1: R_386_32	dma_ops
    22e5:	83 78 3c 01          	cmpl   $0x1,0x3c(%eax)
    22e9:	89 f0                	mov    %esi,%eax
    22eb:	19 ff                	sbb    %edi,%edi
    22ed:	83 e7 80             	and    $0xffffff80,%edi
    22f0:	81 c7 00 01 00 00    	add    $0x100,%edi
    22f6:	0f b7 ff             	movzwl %di,%edi
    22f9:	89 fa                	mov    %edi,%edx
    22fb:	e8 fc ff ff ff       	call   22fc <ide_port_setup_devices+0x8c>
			22fc: R_386_PC32	blk_queue_max_hw_segments
    2300:	89 fa                	mov    %edi,%edx
    2302:	89 f0                	mov    %esi,%eax
    2304:	e8 fc ff ff ff       	call   2305 <ide_port_setup_devices+0x95>
			2305: R_386_PC32	blk_queue_max_phys_segments
    2309:	ba 01 00 00 00       	mov    $0x1,%edx
    230e:	89 d8                	mov    %ebx,%eax
    2310:	89 73 10             	mov    %esi,0x10(%ebx)
    2313:	e8 fc ff ff ff       	call   2314 <ide_port_setup_devices+0xa4>
			2314: R_386_PC32	ide_toggle_bounce
    2318:	ff 04 24             	incl   (%esp)
    231b:	eb 11                	jmp    232e <ide_port_setup_devices+0xbe>
    231d:	53                   	push   %ebx
    231e:	68 2d 07 00 00       	push   $0x72d
			231f: R_386_32	.rodata.str1.1
    2323:	e8 fc ff ff ff       	call   2324 <ide_port_setup_devices+0xb4>
			2324: R_386_PC32	printk
    2328:	83 63 30 bf          	andl   $0xffffffbf,0x30(%ebx)
    232c:	5f                   	pop    %edi
    232d:	58                   	pop    %eax
    232e:	45                   	inc    %ebp
    232f:	8b 44 24 04          	mov    0x4(%esp),%eax
    2333:	8b 5c a8 48          	mov    0x48(%eax,%ebp,4),%ebx
    2337:	85 db                	test   %ebx,%ebx
    2339:	0f 85 54 ff ff ff    	jne    2293 <ide_port_setup_devices+0x23>
    233f:	83 fd 01             	cmp    $0x1,%ebp
    2342:	0f 8e 4b ff ff ff    	jle    2293 <ide_port_setup_devices+0x23>
    2348:	b8 5c 00 00 00       	mov    $0x5c,%eax
			2349: R_386_32	.data
    234d:	e8 fc ff ff ff       	call   234e <ide_port_setup_devices+0xde>
			234e: R_386_PC32	mutex_unlock
    2352:	8b 04 24             	mov    (%esp),%eax
    2355:	5b                   	pop    %ebx
    2356:	5e                   	pop    %esi
    2357:	5b                   	pop    %ebx
    2358:	5e                   	pop    %esi
    2359:	5f                   	pop    %edi
    235a:	5d                   	pop    %ebp
    235b:	c3                   	ret    

0000235c <hwif_register_devices>:
    235c:	55                   	push   %ebp
    235d:	57                   	push   %edi
    235e:	89 c7                	mov    %eax,%edi
    2360:	56                   	push   %esi
    2361:	31 f6                	xor    %esi,%esi
    2363:	53                   	push   %ebx
    2364:	83 ec 04             	sub    $0x4,%esp
    2367:	8d 80 f4 00 00 00    	lea    0xf4(%eax),%eax
    236d:	89 04 24             	mov    %eax,(%esp)
    2370:	eb 66                	jmp    23d8 <hwif_register_devices+0x7c>
    2372:	f6 43 30 40          	testb  $0x40,0x30(%ebx)
    2376:	74 5f                	je     23d7 <hwif_register_devices+0x7b>
    2378:	0f b6 47 59          	movzbl 0x59(%edi),%eax
    237c:	8d ab 8c 00 00 00    	lea    0x8c(%ebx),%ebp
    2382:	56                   	push   %esi
    2383:	50                   	push   %eax
    2384:	68 48 07 00 00       	push   $0x748
			2385: R_386_32	.rodata.str1.1
    2389:	55                   	push   %ebp
    238a:	e8 fc ff ff ff       	call   238b <hwif_register_devices+0x2f>
			238b: R_386_PC32	dev_set_name
    238f:	89 da                	mov    %ebx,%edx
    2391:	89 e8                	mov    %ebp,%eax
    2393:	e8 fc ff ff ff       	call   2394 <hwif_register_devices+0x38>
			2394: R_386_PC32	dev_set_drvdata
    2398:	8b 44 24 10          	mov    0x10(%esp),%eax
    239c:	c7 83 d0 00 00 00 00 	movl   $0x0,0xd0(%ebx)
    23a3:	00 00 00 
			23a2: R_386_32	ide_bus_type
    23a6:	c7 83 a8 01 00 00 eb 	movl   $0x23eb,0x1a8(%ebx)
    23ad:	23 00 00 
			23ac: R_386_32	.text
    23b0:	89 83 8c 00 00 00    	mov    %eax,0x8c(%ebx)
    23b6:	89 e8                	mov    %ebp,%eax
    23b8:	e8 fc ff ff ff       	call   23b9 <hwif_register_devices+0x5d>
			23b9: R_386_PC32	device_register
    23bd:	83 c4 10             	add    $0x10,%esp
    23c0:	85 c0                	test   %eax,%eax
    23c2:	79 13                	jns    23d7 <hwif_register_devices+0x7b>
    23c4:	50                   	push   %eax
    23c5:	68 08 01 00 00       	push   $0x108
			23c6: R_386_32	.rodata
    23ca:	68 4e 07 00 00       	push   $0x74e
			23cb: R_386_32	.rodata.str1.1
    23cf:	e8 fc ff ff ff       	call   23d0 <hwif_register_devices+0x74>
			23d0: R_386_PC32	printk
    23d4:	83 c4 0c             	add    $0xc,%esp
    23d7:	46                   	inc    %esi
    23d8:	8b 5c b7 48          	mov    0x48(%edi,%esi,4),%ebx
    23dc:	85 db                	test   %ebx,%ebx
    23de:	75 92                	jne    2372 <hwif_register_devices+0x16>
    23e0:	83 fe 01             	cmp    $0x1,%esi
    23e3:	76 8d                	jbe    2372 <hwif_register_devices+0x16>
    23e5:	5a                   	pop    %edx
    23e6:	5b                   	pop    %ebx
    23e7:	5e                   	pop    %esi
    23e8:	5f                   	pop    %edi
    23e9:	5d                   	pop    %ebp
    23ea:	c3                   	ret    

000023eb <drive_release_dev>:
    23eb:	56                   	push   %esi
    23ec:	89 c6                	mov    %eax,%esi
    23ee:	53                   	push   %ebx
    23ef:	8d 98 74 ff ff ff    	lea    -0x8c(%eax),%ebx
    23f5:	89 d8                	mov    %ebx,%eax
    23f7:	e8 fc ff ff ff       	call   23f8 <drive_release_dev+0xd>
			23f8: R_386_PC32	ide_proc_unregister_device
    23fc:	8b 43 10             	mov    0x10(%ebx),%eax
    23ff:	e8 fc ff ff ff       	call   2400 <drive_release_dev+0x15>
			2400: R_386_PC32	blk_cleanup_queue
    2404:	8d 86 20 01 00 00    	lea    0x120(%esi),%eax
    240a:	83 63 30 bf          	andl   $0xffffffbf,0x30(%ebx)
    240e:	c7 43 10 00 00 00 00 	movl   $0x0,0x10(%ebx)
    2415:	5b                   	pop    %ebx
    2416:	5e                   	pop    %esi
    2417:	e9 fc ff ff ff       	jmp    2418 <drive_release_dev+0x2d>
			2418: R_386_PC32	complete

0000241c <hwif_release_dev>:
    241c:	05 24 01 00 00       	add    $0x124,%eax
    2421:	e9 fc ff ff ff       	jmp    2422 <hwif_release_dev+0x6>
			2422: R_386_PC32	complete

00002426 <__ide_port_unregister_devices>:
    2426:	57                   	push   %edi
    2427:	89 c7                	mov    %eax,%edi
    2429:	56                   	push   %esi
    242a:	53                   	push   %ebx
    242b:	31 db                	xor    %ebx,%ebx
    242d:	eb 1d                	jmp    244c <__ide_port_unregister_devices+0x26>
    242f:	f6 46 30 40          	testb  $0x40,0x30(%esi)
    2433:	74 16                	je     244b <__ide_port_unregister_devices+0x25>
    2435:	8d 86 8c 00 00 00    	lea    0x8c(%esi),%eax
    243b:	e8 fc ff ff ff       	call   243c <__ide_port_unregister_devices+0x16>
			243c: R_386_PC32	device_unregister
    2440:	8d 86 ac 01 00 00    	lea    0x1ac(%esi),%eax
    2446:	e8 fc ff ff ff       	call   2447 <__ide_port_unregister_devices+0x21>
			2447: R_386_PC32	wait_for_completion
    244b:	43                   	inc    %ebx
    244c:	8b 74 9f 48          	mov    0x48(%edi,%ebx,4),%esi
    2450:	85 f6                	test   %esi,%esi
    2452:	75 db                	jne    242f <__ide_port_unregister_devices+0x9>
    2454:	83 fb 01             	cmp    $0x1,%ebx
    2457:	7e d6                	jle    242f <__ide_port_unregister_devices+0x9>
    2459:	5b                   	pop    %ebx
    245a:	5e                   	pop    %esi
    245b:	5f                   	pop    %edi
    245c:	c3                   	ret    

0000245d <ide_unregister_region>:
    245d:	89 c1                	mov    %eax,%ecx
    245f:	8b 50 08             	mov    0x8(%eax),%edx
    2462:	8b 00                	mov    (%eax),%eax
    2464:	c1 e0 14             	shl    $0x14,%eax
    2467:	0b 41 04             	or     0x4(%ecx),%eax
    246a:	e9 fc ff ff ff       	jmp    246b <ide_unregister_region+0xe>
			246b: R_386_PC32	blk_unregister_region

0000246f <ide_port_free_devices>:
    246f:	57                   	push   %edi
    2470:	89 c7                	mov    %eax,%edi
    2472:	56                   	push   %esi
    2473:	53                   	push   %ebx
    2474:	31 db                	xor    %ebx,%ebx
    2476:	eb 10                	jmp    2488 <ide_port_free_devices+0x19>
    2478:	8b 46 1c             	mov    0x1c(%esi),%eax
    247b:	43                   	inc    %ebx
    247c:	e8 fc ff ff ff       	call   247d <ide_port_free_devices+0xe>
			247d: R_386_PC32	kfree
    2481:	89 f0                	mov    %esi,%eax
    2483:	e8 fc ff ff ff       	call   2484 <ide_port_free_devices+0x15>
			2484: R_386_PC32	kfree
    2488:	8b 74 9f 48          	mov    0x48(%edi,%ebx,4),%esi
    248c:	85 f6                	test   %esi,%esi
    248e:	75 e8                	jne    2478 <ide_port_free_devices+0x9>
    2490:	83 fb 01             	cmp    $0x1,%ebx
    2493:	7e e3                	jle    2478 <ide_port_free_devices+0x9>
    2495:	5b                   	pop    %ebx
    2496:	5e                   	pop    %esi
    2497:	5f                   	pop    %edi
    2498:	c3                   	ret    

00002499 <ide_port_free>:
    2499:	56                   	push   %esi
    249a:	53                   	push   %ebx
    249b:	89 c3                	mov    %eax,%ebx
    249d:	e8 cd ff ff ff       	call   246f <ide_port_free_devices>
    24a2:	b8 5c 00 00 00       	mov    $0x5c,%eax
			24a3: R_386_32	.data
    24a7:	0f b6 73 59          	movzbl 0x59(%ebx),%esi
    24ab:	e8 fc ff ff ff       	call   24ac <ide_port_free+0x13>
			24ac: R_386_PC32	mutex_lock
    24b0:	89 f1                	mov    %esi,%ecx
    24b2:	b8 fe ff ff ff       	mov    $0xfffffffe,%eax
    24b7:	d3 c0                	rol    %cl,%eax
    24b9:	21 05 d8 00 00 00    	and    %eax,0xd8
			24bb: R_386_32	.bss
    24bf:	b8 5c 00 00 00       	mov    $0x5c,%eax
			24c0: R_386_32	.data
    24c4:	e8 fc ff ff ff       	call   24c5 <ide_port_free+0x2c>
			24c5: R_386_PC32	mutex_unlock
    24c9:	89 d8                	mov    %ebx,%eax
    24cb:	5b                   	pop    %ebx
    24cc:	5e                   	pop    %esi
    24cd:	e9 fc ff ff ff       	jmp    24ce <ide_port_free+0x35>
			24ce: R_386_PC32	kfree

000024d2 <ide_disable_port>:
    24d2:	56                   	push   %esi
    24d3:	53                   	push   %ebx
    24d4:	89 c3                	mov    %eax,%ebx
    24d6:	8b 70 08             	mov    0x8(%eax),%esi
    24d9:	8d 40 0c             	lea    0xc(%eax),%eax
    24dc:	50                   	push   %eax
    24dd:	68 75 07 00 00       	push   $0x775
			24de: R_386_32	.rodata.str1.1
    24e2:	e8 fc ff ff ff       	call   24e3 <ide_disable_port+0x11>
			24e3: R_386_PC32	printk
    24e7:	89 f0                	mov    %esi,%eax
    24e9:	8d 56 10             	lea    0x10(%esi),%edx
    24ec:	59                   	pop    %ecx
    24ed:	59                   	pop    %ecx
    24ee:	39 18                	cmp    %ebx,(%eax)
    24f0:	75 09                	jne    24fb <ide_disable_port+0x29>
    24f2:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
    24f8:	ff 4e 14             	decl   0x14(%esi)
    24fb:	83 c0 04             	add    $0x4,%eax
    24fe:	39 d0                	cmp    %edx,%eax
    2500:	75 ec                	jne    24ee <ide_disable_port+0x1c>
    2502:	89 d8                	mov    %ebx,%eax
    2504:	5b                   	pop    %ebx
    2505:	5e                   	pop    %esi
    2506:	eb 91                	jmp    2499 <ide_port_free>

00002508 <ide_host_free>:
    2508:	56                   	push   %esi
    2509:	89 c6                	mov    %eax,%esi
    250b:	53                   	push   %ebx
    250c:	31 db                	xor    %ebx,%ebx
    250e:	eb 06                	jmp    2516 <ide_host_free+0xe>
    2510:	e8 84 ff ff ff       	call   2499 <ide_port_free>
    2515:	43                   	inc    %ebx
    2516:	8b 04 9e             	mov    (%esi,%ebx,4),%eax
    2519:	85 c0                	test   %eax,%eax
    251b:	75 f3                	jne    2510 <ide_host_free+0x8>
    251d:	83 fb 03             	cmp    $0x3,%ebx
    2520:	7e f3                	jle    2515 <ide_host_free+0xd>
    2522:	89 f0                	mov    %esi,%eax
    2524:	5b                   	pop    %ebx
    2525:	5e                   	pop    %esi
    2526:	e9 fc ff ff ff       	jmp    2527 <ide_host_free+0x1f>
			2527: R_386_PC32	kfree

0000252b <ide_host_remove>:
    252b:	57                   	push   %edi
    252c:	89 c7                	mov    %eax,%edi
    252e:	56                   	push   %esi
    252f:	31 f6                	xor    %esi,%esi
    2531:	53                   	push   %ebx
    2532:	e9 b3 00 00 00       	jmp    25ea <ide_host_remove+0xbf>
    2537:	89 e0                	mov    %esp,%eax
    2539:	25 00 e0 ff ff       	and    $0xffffe000,%eax
    253e:	f7 40 14 00 ff ff 07 	testl  $0x7ffff00,0x14(%eax)
    2545:	74 04                	je     254b <ide_host_remove+0x20>
    2547:	0f 0b                	ud2a   
    2549:	eb fe                	jmp    2549 <ide_host_remove+0x1e>
    254b:	ff 15 00 00 00 00    	call   *0x0
			254d: R_386_32	pv_irq_ops
    2551:	f6 c4 02             	test   $0x2,%ah
    2554:	75 04                	jne    255a <ide_host_remove+0x2f>
    2556:	0f 0b                	ud2a   
    2558:	eb fe                	jmp    2558 <ide_host_remove+0x2d>
    255a:	b8 5c 00 00 00       	mov    $0x5c,%eax
			255b: R_386_32	.data
    255f:	e8 fc ff ff ff       	call   2560 <ide_host_remove+0x35>
			2560: R_386_PC32	mutex_lock
    2564:	f6 83 f0 00 00 00 01 	testb  $0x1,0xf0(%ebx)
    256b:	74 0e                	je     257b <ide_host_remove+0x50>
    256d:	89 d8                	mov    %ebx,%eax
    256f:	e8 b2 fe ff ff       	call   2426 <__ide_port_unregister_devices>
    2574:	80 a3 f0 00 00 00 fe 	andb   $0xfe,0xf0(%ebx)
    257b:	89 d8                	mov    %ebx,%eax
    257d:	e8 fc ff ff ff       	call   257e <ide_host_remove+0x53>
			257e: R_386_PC32	ide_proc_unregister_port
    2582:	8b 83 d8 00 00 00    	mov    0xd8(%ebx),%eax
    2588:	89 da                	mov    %ebx,%edx
    258a:	e8 fc ff ff ff       	call   258b <ide_host_remove+0x60>
			258b: R_386_PC32	free_irq
    258f:	8b 83 14 02 00 00    	mov    0x214(%ebx),%eax
    2595:	e8 fc ff ff ff       	call   2596 <ide_host_remove+0x6b>
			2596: R_386_PC32	device_unregister
    259a:	8d 83 f4 00 00 00    	lea    0xf4(%ebx),%eax
    25a0:	e8 fc ff ff ff       	call   25a1 <ide_host_remove+0x76>
			25a1: R_386_PC32	device_unregister
    25a5:	8d 83 18 02 00 00    	lea    0x218(%ebx),%eax
    25ab:	e8 fc ff ff ff       	call   25ac <ide_host_remove+0x81>
			25ac: R_386_PC32	wait_for_completion
    25b0:	0f b6 43 58          	movzbl 0x58(%ebx),%eax
    25b4:	ba 80 00 00 00       	mov    $0x80,%edx
    25b9:	c1 e0 14             	shl    $0x14,%eax
    25bc:	e8 fc ff ff ff       	call   25bd <ide_host_remove+0x92>
			25bd: R_386_PC32	blk_unregister_region
    25c1:	8b 83 8c 00 00 00    	mov    0x8c(%ebx),%eax
    25c7:	e8 fc ff ff ff       	call   25c8 <ide_host_remove+0x9d>
			25c8: R_386_PC32	kfree
    25cc:	0f b6 43 58          	movzbl 0x58(%ebx),%eax
    25d0:	8d 53 0c             	lea    0xc(%ebx),%edx
    25d3:	e8 fc ff ff ff       	call   25d4 <ide_host_remove+0xa9>
			25d4: R_386_PC32	unregister_blkdev
    25d8:	89 d8                	mov    %ebx,%eax
    25da:	e8 fc ff ff ff       	call   25db <ide_host_remove+0xb0>
			25db: R_386_PC32	ide_release_dma_engine
    25df:	b8 5c 00 00 00       	mov    $0x5c,%eax
			25e0: R_386_32	.data
    25e4:	e8 fc ff ff ff       	call   25e5 <ide_host_remove+0xba>
			25e5: R_386_PC32	mutex_unlock
    25e9:	46                   	inc    %esi
    25ea:	8b 1c b7             	mov    (%edi,%esi,4),%ebx
    25ed:	85 db                	test   %ebx,%ebx
    25ef:	0f 85 42 ff ff ff    	jne    2537 <ide_host_remove+0xc>
    25f5:	83 fe 03             	cmp    $0x3,%esi
    25f8:	7e ef                	jle    25e9 <ide_host_remove+0xbe>
    25fa:	89 f8                	mov    %edi,%eax
    25fc:	5b                   	pop    %ebx
    25fd:	5e                   	pop    %esi
    25fe:	5f                   	pop    %edi
    25ff:	e9 fc ff ff ff       	jmp    2600 <ide_host_remove+0xd5>
			2600: R_386_PC32	ide_host_free

00002604 <ide_port_init_devices_data>:
    2604:	55                   	push   %ebp
    2605:	57                   	push   %edi
    2606:	56                   	push   %esi
    2607:	31 f6                	xor    %esi,%esi
    2609:	53                   	push   %ebx
    260a:	89 c3                	mov    %eax,%ebx
    260c:	83 ec 04             	sub    $0x4,%esp
    260f:	e9 8a 00 00 00       	jmp    269e <ide_port_init_devices_data+0x9a>
    2614:	8a 43 59             	mov    0x59(%ebx),%al
    2617:	8d 3c 00             	lea    (%eax,%eax,1),%edi
    261a:	31 c0                	xor    %eax,%eax
    261c:	89 f9                	mov    %edi,%ecx
    261e:	89 d7                	mov    %edx,%edi
    2620:	88 4c 24 03          	mov    %cl,0x3(%esp)
    2624:	b9 c0 00 00 00       	mov    $0xc0,%ecx
    2629:	8b 6a 1c             	mov    0x1c(%edx),%ebp
    262c:	f3 ab                	rep stos %eax,%es:(%edi)
    262e:	b9 80 00 00 00       	mov    $0x80,%ecx
    2633:	89 ef                	mov    %ebp,%edi
    2635:	f3 ab                	rep stos %eax,%es:(%edi)
    2637:	89 f0                	mov    %esi,%eax
    2639:	c1 e0 04             	shl    $0x4,%eax
    263c:	83 c8 a0             	or     $0xffffffa0,%eax
    263f:	88 42 3d             	mov    %al,0x3d(%edx)
    2642:	89 6a 1c             	mov    %ebp,0x1c(%edx)
    2645:	c6 42 46 20          	movb   $0x20,0x46(%edx)
    2649:	89 5a 28             	mov    %ebx,0x28(%edx)
    264c:	c6 42 47 40          	movb   $0x40,0x47(%edx)
    2650:	c6 42 4b a1          	movb   $0xa1,0x4b(%edx)
    2654:	c6 42 3c 03          	movb   $0x3,0x3c(%edx)
    2658:	c6 02 68             	movb   $0x68,(%edx)
    265b:	c6 42 01 64          	movb   $0x64,0x1(%edx)
    265f:	8a 4c 24 03          	mov    0x3(%esp),%cl
    2663:	c7 42 64 01 00 00 00 	movl   $0x1,0x64(%edx)
    266a:	c7 82 ac 01 00 00 00 	movl   $0x0,0x1ac(%edx)
    2671:	00 00 00 
    2674:	8d 44 31 61          	lea    0x61(%ecx,%esi,1),%eax
    2678:	46                   	inc    %esi
    2679:	88 42 02             	mov    %al,0x2(%edx)
    267c:	8d 82 84 00 00 00    	lea    0x84(%edx),%eax
    2682:	89 82 84 00 00 00    	mov    %eax,0x84(%edx)
    2688:	89 82 88 00 00 00    	mov    %eax,0x88(%edx)
    268e:	8d 82 b0 01 00 00    	lea    0x1b0(%edx),%eax
    2694:	ba d8 00 00 00       	mov    $0xd8,%edx
			2695: R_386_32	.bss
    2699:	e8 fc ff ff ff       	call   269a <ide_port_init_devices_data+0x96>
			269a: R_386_PC32	__init_waitqueue_head
    269e:	8b 54 b3 48          	mov    0x48(%ebx,%esi,4),%edx
    26a2:	85 d2                	test   %edx,%edx
    26a4:	0f 85 6a ff ff ff    	jne    2614 <ide_port_init_devices_data+0x10>
    26aa:	83 fe 01             	cmp    $0x1,%esi
    26ad:	0f 8e 61 ff ff ff    	jle    2614 <ide_port_init_devices_data+0x10>
    26b3:	5b                   	pop    %ebx
    26b4:	5b                   	pop    %ebx
    26b5:	5e                   	pop    %esi
    26b6:	5f                   	pop    %edi
    26b7:	5d                   	pop    %ebp
    26b8:	c3                   	ret    

000026b9 <ide_port_unregister_devices>:
    26b9:	53                   	push   %ebx
    26ba:	89 c3                	mov    %eax,%ebx
    26bc:	b8 5c 00 00 00       	mov    $0x5c,%eax
			26bd: R_386_32	.data
    26c1:	e8 fc ff ff ff       	call   26c2 <ide_port_unregister_devices+0x9>
			26c2: R_386_PC32	mutex_lock
    26c6:	89 d8                	mov    %ebx,%eax
    26c8:	e8 59 fd ff ff       	call   2426 <__ide_port_unregister_devices>
    26cd:	89 d8                	mov    %ebx,%eax
    26cf:	80 a3 f0 00 00 00 fe 	andb   $0xfe,0xf0(%ebx)
    26d6:	e8 29 ff ff ff       	call   2604 <ide_port_init_devices_data>
    26db:	b8 5c 00 00 00       	mov    $0x5c,%eax
			26dc: R_386_32	.data
    26e0:	5b                   	pop    %ebx
    26e1:	e9 fc ff ff ff       	jmp    26e2 <ide_port_unregister_devices+0x29>
			26e2: R_386_PC32	mutex_unlock

000026e6 <ide_register_region>:
    26e6:	8b 50 08             	mov    0x8(%eax),%edx
    26e9:	89 c1                	mov    %eax,%ecx
    26eb:	8b 00                	mov    (%eax),%eax
    26ed:	c1 e0 14             	shl    $0x14,%eax
    26f0:	0b 41 04             	or     0x4(%ecx),%eax
    26f3:	51                   	push   %ecx
    26f4:	31 c9                	xor    %ecx,%ecx
    26f6:	68 b6 27 00 00       	push   $0x27b6
			26f7: R_386_32	.text
    26fb:	68 f7 20 00 00       	push   $0x20f7
			26fc: R_386_32	.text
    2700:	e8 fc ff ff ff       	call   2701 <ide_register_region+0x1b>
			2701: R_386_PC32	blk_register_region
    2705:	83 c4 0c             	add    $0xc,%esp
    2708:	c3                   	ret    

00002709 <ata_probe>:
    2709:	53                   	push   %ebx
    270a:	8b 02                	mov    (%edx),%eax
    270c:	c1 f8 06             	sar    $0x6,%eax
    270f:	8b 5c 81 48          	mov    0x48(%ecx,%eax,4),%ebx
    2713:	f6 43 30 40          	testb  $0x40,0x30(%ebx)
    2717:	74 55                	je     276e <ata_probe+0x65>
    2719:	80 7b 46 20          	cmpb   $0x20,0x46(%ebx)
    271d:	75 0e                	jne    272d <ata_probe+0x24>
    271f:	68 a4 07 00 00       	push   $0x7a4
			2720: R_386_32	.rodata.str1.1
    2724:	6a 01                	push   $0x1
    2726:	e8 fc ff ff ff       	call   2727 <ata_probe+0x1e>
			2727: R_386_PC32	__request_module
    272b:	58                   	pop    %eax
    272c:	5a                   	pop    %edx
    272d:	8a 43 46             	mov    0x46(%ebx),%al
    2730:	3c 07                	cmp    $0x7,%al
    2732:	74 04                	je     2738 <ata_probe+0x2f>
    2734:	3c 05                	cmp    $0x5,%al
    2736:	75 0e                	jne    2746 <ata_probe+0x3d>
    2738:	68 ad 07 00 00       	push   $0x7ad
			2739: R_386_32	.rodata.str1.1
    273d:	6a 01                	push   $0x1
    273f:	e8 fc ff ff ff       	call   2740 <ata_probe+0x37>
			2740: R_386_PC32	__request_module
    2744:	5a                   	pop    %edx
    2745:	59                   	pop    %ecx
    2746:	80 7b 46 01          	cmpb   $0x1,0x46(%ebx)
    274a:	75 0e                	jne    275a <ata_probe+0x51>
    274c:	68 b4 07 00 00       	push   $0x7b4
			274d: R_386_32	.rodata.str1.1
    2751:	6a 01                	push   $0x1
    2753:	e8 fc ff ff ff       	call   2754 <ata_probe+0x4b>
			2754: R_386_PC32	__request_module
    2758:	59                   	pop    %ecx
    2759:	58                   	pop    %eax
    275a:	80 7b 46 00          	cmpb   $0x0,0x46(%ebx)
    275e:	75 0e                	jne    276e <ata_probe+0x65>
    2760:	68 bd 07 00 00       	push   $0x7bd
			2761: R_386_32	.rodata.str1.1
    2765:	6a 01                	push   $0x1
    2767:	e8 fc ff ff ff       	call   2768 <ata_probe+0x5f>
			2768: R_386_PC32	__request_module
    276c:	58                   	pop    %eax
    276d:	5a                   	pop    %edx
    276e:	31 c0                	xor    %eax,%eax
    2770:	5b                   	pop    %ebx
    2771:	c3                   	ret    

00002772 <ide_init_disk>:
    2772:	56                   	push   %esi
    2773:	89 d6                	mov    %edx,%esi
    2775:	53                   	push   %ebx
    2776:	8b 52 28             	mov    0x28(%edx),%edx
    2779:	89 c3                	mov    %eax,%ebx
    277b:	0f b6 46 44          	movzbl 0x44(%esi),%eax
    277f:	0f b6 4a 58          	movzbl 0x58(%edx),%ecx
    2783:	83 e0 01             	and    $0x1,%eax
    2786:	89 0b                	mov    %ecx,(%ebx)
    2788:	89 c1                	mov    %eax,%ecx
    278a:	c1 e1 06             	shl    $0x6,%ecx
    278d:	89 4b 04             	mov    %ecx,0x4(%ebx)
    2790:	0f b6 52 59          	movzbl 0x59(%edx),%edx
    2794:	8d 44 50 61          	lea    0x61(%eax,%edx,2),%eax
    2798:	50                   	push   %eax
    2799:	68 c8 07 00 00       	push   $0x7c8
			279a: R_386_32	.rodata.str1.1
    279e:	8d 43 0c             	lea    0xc(%ebx),%eax
    27a1:	50                   	push   %eax
    27a2:	e8 fc ff ff ff       	call   27a3 <ide_init_disk+0x31>
			27a3: R_386_PC32	sprintf
    27a7:	8b 46 10             	mov    0x10(%esi),%eax
    27aa:	89 83 94 01 00 00    	mov    %eax,0x194(%ebx)
    27b0:	83 c4 0c             	add    $0xc,%esp
    27b3:	5b                   	pop    %ebx
    27b4:	5e                   	pop    %esi
    27b5:	c3                   	ret    

000027b6 <exact_lock>:
    27b6:	89 d0                	mov    %edx,%eax
    27b8:	e8 fc ff ff ff       	call   27b9 <exact_lock+0x3>
			27b9: R_386_PC32	get_disk
    27bd:	83 f8 01             	cmp    $0x1,%eax
    27c0:	19 c0                	sbb    %eax,%eax
    27c2:	c3                   	ret    

000027c3 <ide_undecoded_slave>:
    27c3:	56                   	push   %esi
    27c4:	53                   	push   %ebx
    27c5:	89 c3                	mov    %eax,%ebx
    27c7:	8b 40 28             	mov    0x28(%eax),%eax
    27ca:	f6 43 44 01          	testb  $0x1,0x44(%ebx)
    27ce:	8b 70 48             	mov    0x48(%eax),%esi
    27d1:	74 4d                	je     2820 <ide_undecoded_slave+0x5d>
    27d3:	f6 46 30 40          	testb  $0x40,0x30(%esi)
    27d7:	74 47                	je     2820 <ide_undecoded_slave+0x5d>
    27d9:	8b 53 1c             	mov    0x1c(%ebx),%edx
    27dc:	8b 46 1c             	mov    0x1c(%esi),%eax
    27df:	83 c2 36             	add    $0x36,%edx
    27e2:	83 c0 36             	add    $0x36,%eax
    27e5:	e8 fc ff ff ff       	call   27e6 <ide_undecoded_slave+0x23>
			27e6: R_386_PC32	strcmp
    27ea:	85 c0                	test   %eax,%eax
    27ec:	75 32                	jne    2820 <ide_undecoded_slave+0x5d>
    27ee:	8b 53 1c             	mov    0x1c(%ebx),%edx
    27f1:	b9 14 00 00 00       	mov    $0x14,%ecx
    27f6:	8b 46 1c             	mov    0x1c(%esi),%eax
    27f9:	83 c2 14             	add    $0x14,%edx
    27fc:	83 c0 14             	add    $0x14,%eax
    27ff:	e8 fc ff ff ff       	call   2800 <ide_undecoded_slave+0x3d>
			2800: R_386_PC32	strncmp
    2804:	85 c0                	test   %eax,%eax
    2806:	75 18                	jne    2820 <ide_undecoded_slave+0x5d>
    2808:	8b 46 1c             	mov    0x1c(%esi),%eax
    280b:	80 78 14 00          	cmpb   $0x0,0x14(%eax)
    280f:	74 0f                	je     2820 <ide_undecoded_slave+0x5d>
    2811:	68 cd 07 00 00       	push   $0x7cd
			2812: R_386_32	.rodata.str1.1
    2816:	e8 fc ff ff ff       	call   2817 <ide_undecoded_slave+0x54>
			2817: R_386_PC32	printk
    281b:	83 63 30 bf          	andl   $0xffffffbf,0x30(%ebx)
    281f:	59                   	pop    %ecx
    2820:	5b                   	pop    %ebx
    2821:	5e                   	pop    %esi
    2822:	c3                   	ret    

00002823 <ide_dev_read_id>:
    2823:	55                   	push   %ebp
    2824:	57                   	push   %edi
    2825:	56                   	push   %esi
    2826:	89 c6                	mov    %eax,%esi
    2828:	53                   	push   %ebx
    2829:	83 ec 1c             	sub    $0x1c,%esp
    282c:	89 4c 24 08          	mov    %ecx,0x8(%esp)
    2830:	88 54 24 0f          	mov    %dl,0xf(%esp)
    2834:	8b 68 28             	mov    0x28(%eax),%ebp
    2837:	8b 45 70             	mov    0x70(%ebp),%eax
    283a:	c6 44 24 1b 00       	movb   $0x0,0x1b(%esp)
    283f:	89 44 24 04          	mov    %eax,0x4(%esp)
    2843:	83 7d 34 00          	cmpl   $0x0,0x34(%ebp)
    2847:	74 0e                	je     2857 <ide_dev_read_id+0x34>
    2849:	8b 4c 24 04          	mov    0x4(%esp),%ecx
    284d:	ba 0a 00 00 00       	mov    $0xa,%edx
    2852:	89 e8                	mov    %ebp,%eax
    2854:	ff 51 0c             	call   *0xc(%ecx)
    2857:	83 7c 24 30 00       	cmpl   $0x0,0x30(%esp)
    285c:	bb 32 00 00 00       	mov    $0x32,%ebx
    2861:	75 0c                	jne    286f <ide_dev_read_id+0x4c>
    2863:	eb 12                	jmp    2877 <ide_dev_read_id+0x54>
    2865:	b8 58 89 41 00       	mov    $0x418958,%eax
    286a:	e8 fc ff ff ff       	call   286b <ide_dev_read_id+0x48>
			286b: R_386_PC32	__const_udelay
    286f:	4b                   	dec    %ebx
    2870:	83 fb ff             	cmp    $0xffffffff,%ebx
    2873:	75 f0                	jne    2865 <ide_dev_read_id+0x42>
    2875:	eb 0a                	jmp    2881 <ide_dev_read_id+0x5e>
    2877:	b8 32 00 00 00       	mov    $0x32,%eax
    287c:	e8 fc ff ff ff       	call   287d <ide_dev_read_id+0x5a>
			287d: R_386_PC32	msleep
    2881:	83 7d 34 00          	cmpl   $0x0,0x34(%ebp)
    2885:	74 49                	je     28d0 <ide_dev_read_id+0xad>
    2887:	f6 45 5f 04          	testb  $0x4,0x5f(%ebp)
    288b:	75 43                	jne    28d0 <ide_dev_read_id+0xad>
    288d:	8b 7c 24 04          	mov    0x4(%esp),%edi
    2891:	89 e8                	mov    %ebp,%eax
    2893:	bb 01 00 00 00       	mov    $0x1,%ebx
    2898:	ff 57 08             	call   *0x8(%edi)
    289b:	8b 54 24 04          	mov    0x4(%esp),%edx
    289f:	89 c7                	mov    %eax,%edi
    28a1:	89 e8                	mov    %ebp,%eax
    28a3:	ff 52 04             	call   *0x4(%edx)
    28a6:	88 c2                	mov    %al,%dl
    28a8:	31 fa                	xor    %edi,%edx
    28aa:	80 e2 fd             	and    $0xfd,%dl
    28ad:	88 44 24 1b          	mov    %al,0x1b(%esp)
    28b1:	74 1f                	je     28d2 <ide_dev_read_id+0xaf>
    28b3:	81 e7 ff 00 00 00    	and    $0xff,%edi
    28b9:	0f b6 c0             	movzbl %al,%eax
    28bc:	57                   	push   %edi
    28bd:	30 db                	xor    %bl,%bl
    28bf:	50                   	push   %eax
    28c0:	56                   	push   %esi
    28c1:	68 f5 07 00 00       	push   $0x7f5
			28c2: R_386_32	.rodata.str1.1
    28c6:	e8 fc ff ff ff       	call   28c7 <ide_dev_read_id+0xa4>
			28c7: R_386_PC32	printk
    28cb:	83 c4 10             	add    $0x10,%esp
    28ce:	eb 02                	jmp    28d2 <ide_dev_read_id+0xaf>
    28d0:	31 db                	xor    %ebx,%ebx
    28d2:	80 7c 24 0f a1       	cmpb   $0xa1,0xf(%esp)
    28d7:	75 1d                	jne    28f6 <ide_dev_read_id+0xd3>
    28d9:	8d 54 24 13          	lea    0x13(%esp),%edx
    28dd:	b9 02 00 00 00       	mov    $0x2,%ecx
    28e2:	89 d7                	mov    %edx,%edi
    28e4:	31 c0                	xor    %eax,%eax
    28e6:	f3 ab                	rep stos %eax,%es:(%edi)
    28e8:	8b 7c 24 04          	mov    0x4(%esp),%edi
    28ec:	b9 02 00 00 00       	mov    $0x2,%ecx
    28f1:	89 f0                	mov    %esi,%eax
    28f3:	ff 57 14             	call   *0x14(%edi)
    28f6:	8b 4c 24 04          	mov    0x4(%esp),%ecx
    28fa:	89 e8                	mov    %ebp,%eax
    28fc:	0f b6 54 24 0f       	movzbl 0xf(%esp),%edx
    2901:	ff 11                	call   *(%ecx)
    2903:	ba e2 04 00 00       	mov    $0x4e2,%edx
    2908:	b8 a6 0e 00 00       	mov    $0xea6,%eax
    290d:	80 7c 24 0f ec       	cmpb   $0xec,0xf(%esp)
    2912:	0f 44 d0             	cmove  %eax,%edx
    2915:	83 7c 24 30 00       	cmpl   $0x0,0x30(%esp)
    291a:	74 22                	je     293e <ide_dev_read_id+0x11b>
    291c:	8d 44 24 1b          	lea    0x1b(%esp),%eax
    2920:	b9 81 00 00 00       	mov    $0x81,%ecx
    2925:	50                   	push   %eax
    2926:	89 f0                	mov    %esi,%eax
    2928:	52                   	push   %edx
    2929:	ba 08 00 00 00       	mov    $0x8,%edx
    292e:	e8 fc ff ff ff       	call   292f <ide_dev_read_id+0x10c>
			292f: R_386_PC32	__ide_wait_stat
    2933:	5f                   	pop    %edi
    2934:	5a                   	pop    %edx
    2935:	85 c0                	test   %eax,%eax
    2937:	74 2a                	je     2963 <ide_dev_read_id+0x140>
    2939:	e9 1a 01 00 00       	jmp    2a58 <ide_dev_read_id+0x235>
    293e:	89 d9                	mov    %ebx,%ecx
    2940:	89 f0                	mov    %esi,%eax
    2942:	e8 fc ff ff ff       	call   2943 <ide_dev_read_id+0x120>
			2943: R_386_PC32	ide_busy_sleep
    2947:	85 c0                	test   %eax,%eax
    2949:	0f 85 09 01 00 00    	jne    2a58 <ide_dev_read_id+0x235>
    294f:	b0 32                	mov    $0x32,%al
    2951:	e8 fc ff ff ff       	call   2952 <ide_dev_read_id+0x12f>
			2952: R_386_PC32	msleep
    2956:	89 e8                	mov    %ebp,%eax
    2958:	8b 7c 24 04          	mov    0x4(%esp),%edi
    295c:	ff 57 04             	call   *0x4(%edi)
    295f:	88 44 24 1b          	mov    %al,0x1b(%esp)
    2963:	0f b6 54 24 1b       	movzbl 0x1b(%esp),%edx
    2968:	b8 02 00 00 00       	mov    $0x2,%eax
    296d:	81 e2 89 00 00 00    	and    $0x89,%edx
    2973:	83 fa 08             	cmp    $0x8,%edx
    2976:	0f 85 e1 00 00 00    	jne    2a5d <ide_dev_read_id+0x23a>
    297c:	8b 7c 24 08          	mov    0x8(%esp),%edi
    2980:	8b 4e 28             	mov    0x28(%esi),%ecx
    2983:	83 c7 36             	add    $0x36,%edi
    2986:	ff 15 00 00 00 00    	call   *0x0
			2988: R_386_32	pv_irq_ops
    298c:	89 04 24             	mov    %eax,(%esp)
    298f:	ff 15 08 00 00 00    	call   *0x8
			2991: R_386_32	pv_irq_ops
    2995:	8b 59 70             	mov    0x70(%ecx),%ebx
    2998:	89 f0                	mov    %esi,%eax
    299a:	31 d2                	xor    %edx,%edx
    299c:	68 00 02 00 00       	push   $0x200
    29a1:	8b 4c 24 0c          	mov    0xc(%esp),%ecx
    29a5:	ff 53 1c             	call   *0x1c(%ebx)
    29a8:	5b                   	pop    %ebx
    29a9:	8b 04 24             	mov    (%esp),%eax
    29ac:	ff 15 04 00 00 00    	call   *0x4
			29ae: R_386_32	pv_irq_ops
    29b2:	81 4e 30 00 01 00 00 	orl    $0x100,0x30(%esi)
    29b9:	8b 44 24 08          	mov    0x8(%esp),%eax
    29bd:	e8 fc ff ff ff       	call   29be <ide_dev_read_id+0x19b>
			29be: R_386_PC32	ide_fix_driveid
    29c2:	80 7c 24 0f a1       	cmpb   $0xa1,0xf(%esp)
    29c7:	75 2b                	jne    29f4 <ide_dev_read_id+0x1d1>
    29c9:	8b 54 24 08          	mov    0x8(%esp),%edx
    29cd:	8a 42 36             	mov    0x36(%edx),%al
    29d0:	3c 4e                	cmp    $0x4e,%al
    29d2:	75 06                	jne    29da <ide_dev_read_id+0x1b7>
    29d4:	80 7f 01 45          	cmpb   $0x45,0x1(%edi)
    29d8:	eb 12                	jmp    29ec <ide_dev_read_id+0x1c9>
    29da:	3c 46                	cmp    $0x46,%al
    29dc:	75 06                	jne    29e4 <ide_dev_read_id+0x1c1>
    29de:	80 7f 01 58          	cmpb   $0x58,0x1(%edi)
    29e2:	eb 08                	jmp    29ec <ide_dev_read_id+0x1c9>
    29e4:	3c 50                	cmp    $0x50,%al
    29e6:	75 0c                	jne    29f4 <ide_dev_read_id+0x1d1>
    29e8:	80 7f 01 69          	cmpb   $0x69,0x1(%edi)
    29ec:	0f 95 c3             	setne  %bl
    29ef:	0f b6 db             	movzbl %bl,%ebx
    29f2:	eb 05                	jmp    29f9 <ide_dev_read_id+0x1d6>
    29f4:	bb 01 00 00 00       	mov    $0x1,%ebx
    29f9:	89 d9                	mov    %ebx,%ecx
    29fb:	ba 28 00 00 00       	mov    $0x28,%edx
    2a00:	89 f8                	mov    %edi,%eax
    2a02:	e8 fc ff ff ff       	call   2a03 <ide_dev_read_id+0x1e0>
			2a03: R_386_PC32	ide_fixstring
    2a07:	89 d9                	mov    %ebx,%ecx
    2a09:	ba 08 00 00 00       	mov    $0x8,%edx
    2a0e:	8b 44 24 08          	mov    0x8(%esp),%eax
    2a12:	83 c0 2e             	add    $0x2e,%eax
    2a15:	e8 fc ff ff ff       	call   2a16 <ide_dev_read_id+0x1f3>
			2a16: R_386_PC32	ide_fixstring
    2a1a:	89 d9                	mov    %ebx,%ecx
    2a1c:	ba 14 00 00 00       	mov    $0x14,%edx
    2a21:	8b 44 24 08          	mov    0x8(%esp),%eax
    2a25:	83 c0 14             	add    $0x14,%eax
    2a28:	e8 fc ff ff ff       	call   2a29 <ide_dev_read_id+0x206>
			2a29: R_386_PC32	ide_fixstring
    2a2d:	ba 36 08 00 00       	mov    $0x836,%edx
			2a2e: R_386_32	.rodata.str1.1
    2a32:	89 f8                	mov    %edi,%eax
    2a34:	c6 47 27 00          	movb   $0x0,0x27(%edi)
    2a38:	e8 fc ff ff ff       	call   2a39 <ide_dev_read_id+0x216>
			2a39: R_386_PC32	strstr
    2a3d:	85 c0                	test   %eax,%eax
    2a3f:	74 06                	je     2a47 <ide_dev_read_id+0x224>
    2a41:	83 66 30 bf          	andl   $0xffffffbf,0x30(%esi)
    2a45:	eb 04                	jmp    2a4b <ide_dev_read_id+0x228>
    2a47:	83 4e 30 40          	orl    $0x40,0x30(%esi)
    2a4b:	8b 4c 24 04          	mov    0x4(%esp),%ecx
    2a4f:	89 e8                	mov    %ebp,%eax
    2a51:	ff 51 04             	call   *0x4(%ecx)
    2a54:	31 c0                	xor    %eax,%eax
    2a56:	eb 05                	jmp    2a5d <ide_dev_read_id+0x23a>
    2a58:	b8 01 00 00 00       	mov    $0x1,%eax
    2a5d:	83 c4 1c             	add    $0x1c,%esp
    2a60:	5b                   	pop    %ebx
    2a61:	5e                   	pop    %esi
    2a62:	5f                   	pop    %edi
    2a63:	5d                   	pop    %ebp
    2a64:	c3                   	ret    

00002a65 <do_probe>:
    2a65:	55                   	push   %ebp
    2a66:	57                   	push   %edi
    2a67:	56                   	push   %esi
    2a68:	53                   	push   %ebx
    2a69:	89 c3                	mov    %eax,%ebx
    2a6b:	83 ec 18             	sub    $0x18,%esp
    2a6e:	88 54 24 07          	mov    %dl,0x7(%esp)
    2a72:	8b 78 28             	mov    0x28(%eax),%edi
    2a75:	8b 40 1c             	mov    0x1c(%eax),%eax
    2a78:	8b 77 70             	mov    0x70(%edi),%esi
    2a7b:	89 44 24 08          	mov    %eax,0x8(%esp)
    2a7f:	8b 43 30             	mov    0x30(%ebx),%eax
    2a82:	c1 e8 06             	shr    $0x6,%eax
    2a85:	88 c2                	mov    %al,%dl
    2a87:	80 e2 01             	and    $0x1,%dl
    2a8a:	88 54 24 0f          	mov    %dl,0xf(%esp)
    2a8e:	74 11                	je     2aa1 <do_probe+0x3c>
    2a90:	80 7c 24 07 ec       	cmpb   $0xec,0x7(%esp)
    2a95:	75 0a                	jne    2aa1 <do_probe+0x3c>
    2a97:	80 7b 46 20          	cmpb   $0x20,0x46(%ebx)
    2a9b:	0f 85 77 01 00 00    	jne    2c18 <do_probe+0x1b3>
    2aa1:	b8 32 00 00 00       	mov    $0x32,%eax
    2aa6:	e8 fc ff ff ff       	call   2aa7 <do_probe+0x42>
			2aa7: R_386_PC32	msleep
    2aab:	89 d8                	mov    %ebx,%eax
    2aad:	ff 56 10             	call   *0x10(%esi)
    2ab0:	b8 32 00 00 00       	mov    $0x32,%eax
    2ab5:	e8 fc ff ff ff       	call   2ab6 <do_probe+0x51>
			2ab6: R_386_PC32	msleep
    2aba:	8b 43 28             	mov    0x28(%ebx),%eax
    2abd:	b9 40 00 00 00       	mov    $0x40,%ecx
    2ac2:	8b 68 70             	mov    0x70(%eax),%ebp
    2ac5:	89 d8                	mov    %ebx,%eax
    2ac7:	8d 54 24 10          	lea    0x10(%esp),%edx
    2acb:	ff 55 18             	call   *0x18(%ebp)
    2ace:	8a 44 24 16          	mov    0x16(%esp),%al
    2ad2:	3a 43 3d             	cmp    0x3d(%ebx),%al
    2ad5:	74 30                	je     2b07 <do_probe+0xa2>
    2ad7:	80 7c 24 0f 00       	cmpb   $0x0,0xf(%esp)
    2adc:	75 29                	jne    2b07 <do_probe+0xa2>
    2ade:	f6 43 44 01          	testb  $0x1,0x44(%ebx)
    2ae2:	ba 03 00 00 00       	mov    $0x3,%edx
    2ae7:	0f 84 30 01 00 00    	je     2c1d <do_probe+0x1b8>
    2aed:	8b 47 48             	mov    0x48(%edi),%eax
    2af0:	ff 56 10             	call   *0x10(%esi)
    2af3:	b8 32 00 00 00       	mov    $0x32,%eax
    2af8:	e8 fc ff ff ff       	call   2af9 <do_probe+0x94>
			2af9: R_386_PC32	msleep
    2afd:	ba 03 00 00 00       	mov    $0x3,%edx
    2b02:	e9 16 01 00 00       	jmp    2c1d <do_probe+0x1b8>
    2b07:	89 f8                	mov    %edi,%eax
    2b09:	ff 56 04             	call   *0x4(%esi)
    2b0c:	25 c0 00 00 00       	and    $0xc0,%eax
    2b11:	83 f8 40             	cmp    $0x40,%eax
    2b14:	74 17                	je     2b2d <do_probe+0xc8>
    2b16:	80 7c 24 0f 00       	cmpb   $0x0,0xf(%esp)
    2b1b:	75 10                	jne    2b2d <do_probe+0xc8>
    2b1d:	80 7c 24 07 a1       	cmpb   $0xa1,0x7(%esp)
    2b22:	ba 03 00 00 00       	mov    $0x3,%edx
    2b27:	0f 85 c8 00 00 00    	jne    2bf5 <do_probe+0x190>
    2b2d:	0f b6 6c 24 07       	movzbl 0x7(%esp),%ebp
    2b32:	89 d8                	mov    %ebx,%eax
    2b34:	6a 00                	push   $0x0
    2b36:	8b 4c 24 0c          	mov    0xc(%esp),%ecx
    2b3a:	89 ea                	mov    %ebp,%edx
    2b3c:	e8 fc ff ff ff       	call   2b3d <do_probe+0xd8>
			2b3d: R_386_PC32	ide_dev_read_id
    2b41:	89 c2                	mov    %eax,%edx
    2b43:	85 d2                	test   %edx,%edx
    2b45:	58                   	pop    %eax
    2b46:	74 12                	je     2b5a <do_probe+0xf5>
    2b48:	6a 00                	push   $0x0
    2b4a:	8b 4c 24 0c          	mov    0xc(%esp),%ecx
    2b4e:	89 ea                	mov    %ebp,%edx
    2b50:	89 d8                	mov    %ebx,%eax
    2b52:	e8 fc ff ff ff       	call   2b53 <do_probe+0xee>
			2b53: R_386_PC32	ide_dev_read_id
    2b57:	59                   	pop    %ecx
    2b58:	89 c2                	mov    %eax,%edx
    2b5a:	89 14 24             	mov    %edx,(%esp)
    2b5d:	89 f8                	mov    %edi,%eax
    2b5f:	ff 56 04             	call   *0x4(%esi)
    2b62:	8b 14 24             	mov    (%esp),%edx
    2b65:	3c c0                	cmp    $0xc0,%al
    2b67:	0f 84 ab 00 00 00    	je     2c18 <do_probe+0x1b3>
    2b6d:	83 fa 01             	cmp    $0x1,%edx
    2b70:	75 5a                	jne    2bcc <do_probe+0x167>
    2b72:	80 7c 24 07 a1       	cmpb   $0xa1,0x7(%esp)
    2b77:	75 53                	jne    2bcc <do_probe+0x167>
    2b79:	0f b6 c0             	movzbl %al,%eax
    2b7c:	50                   	push   %eax
    2b7d:	53                   	push   %ebx
    2b7e:	68 4c 08 00 00       	push   $0x84c
			2b7f: R_386_32	.rodata.str1.1
    2b83:	e8 fc ff ff ff       	call   2b84 <do_probe+0x11f>
			2b84: R_386_PC32	printk
    2b88:	b8 32 00 00 00       	mov    $0x32,%eax
    2b8d:	e8 fc ff ff ff       	call   2b8e <do_probe+0x129>
			2b8e: R_386_PC32	msleep
    2b92:	89 d8                	mov    %ebx,%eax
    2b94:	ff 56 10             	call   *0x10(%esi)
    2b97:	b8 32 00 00 00       	mov    $0x32,%eax
    2b9c:	e8 fc ff ff ff       	call   2b9d <do_probe+0x138>
			2b9d: R_386_PC32	msleep
    2ba1:	ba 08 00 00 00       	mov    $0x8,%edx
    2ba6:	89 f8                	mov    %edi,%eax
    2ba8:	ff 16                	call   *(%esi)
    2baa:	31 c9                	xor    %ecx,%ecx
    2bac:	ba 4c 1d 00 00       	mov    $0x1d4c,%edx
    2bb1:	89 d8                	mov    %ebx,%eax
    2bb3:	e8 fc ff ff ff       	call   2bb4 <do_probe+0x14f>
			2bb4: R_386_PC32	ide_busy_sleep
    2bb8:	89 ea                	mov    %ebp,%edx
    2bba:	89 d8                	mov    %ebx,%eax
    2bbc:	6a 00                	push   $0x0
    2bbe:	8b 4c 24 18          	mov    0x18(%esp),%ecx
    2bc2:	e8 fc ff ff ff       	call   2bc3 <do_probe+0x15e>
			2bc3: R_386_PC32	ide_dev_read_id
    2bc7:	89 c2                	mov    %eax,%edx
    2bc9:	83 c4 10             	add    $0x10,%esp
    2bcc:	89 14 24             	mov    %edx,(%esp)
    2bcf:	89 f8                	mov    %edi,%eax
    2bd1:	ff 56 04             	call   *0x4(%esi)
    2bd4:	8b 14 24             	mov    (%esp),%edx
    2bd7:	83 fa 01             	cmp    $0x1,%edx
    2bda:	75 19                	jne    2bf5 <do_probe+0x190>
    2bdc:	0f b6 c0             	movzbl %al,%eax
    2bdf:	50                   	push   %eax
    2be0:	53                   	push   %ebx
    2be1:	68 83 08 00 00       	push   $0x883
			2be2: R_386_32	.rodata.str1.1
    2be6:	89 54 24 0c          	mov    %edx,0xc(%esp)
    2bea:	e8 fc ff ff ff       	call   2beb <do_probe+0x186>
			2beb: R_386_PC32	printk
    2bef:	83 c4 0c             	add    $0xc,%esp
    2bf2:	8b 14 24             	mov    (%esp),%edx
    2bf5:	f6 43 44 01          	testb  $0x1,0x44(%ebx)
    2bf9:	74 22                	je     2c1d <do_probe+0x1b8>
    2bfb:	8b 47 48             	mov    0x48(%edi),%eax
    2bfe:	89 14 24             	mov    %edx,(%esp)
    2c01:	ff 56 10             	call   *0x10(%esi)
    2c04:	b8 32 00 00 00       	mov    $0x32,%eax
    2c09:	e8 fc ff ff ff       	call   2c0a <do_probe+0x1a5>
			2c0a: R_386_PC32	msleep
    2c0e:	89 f8                	mov    %edi,%eax
    2c10:	ff 56 04             	call   *0x4(%esi)
    2c13:	8b 14 24             	mov    (%esp),%edx
    2c16:	eb 05                	jmp    2c1d <do_probe+0x1b8>
    2c18:	ba 04 00 00 00       	mov    $0x4,%edx
    2c1d:	83 c4 18             	add    $0x18,%esp
    2c20:	89 d0                	mov    %edx,%eax
    2c22:	5b                   	pop    %ebx
    2c23:	5e                   	pop    %esi
    2c24:	5f                   	pop    %edi
    2c25:	5d                   	pop    %ebp
    2c26:	c3                   	ret    

00002c27 <ide_probe_port>:
    2c27:	55                   	push   %ebp
    2c28:	57                   	push   %edi
    2c29:	56                   	push   %esi
    2c2a:	89 c6                	mov    %eax,%esi
    2c2c:	53                   	push   %ebx
    2c2d:	83 ec 10             	sub    $0x10,%esp
    2c30:	f6 80 f0 00 00 00 01 	testb  $0x1,0xf0(%eax)
    2c37:	74 04                	je     2c3d <ide_probe_port+0x16>
    2c39:	0f 0b                	ud2a   
    2c3b:	eb fe                	jmp    2c3b <ide_probe_port+0x14>
    2c3d:	8b 40 48             	mov    0x48(%eax),%eax
    2c40:	f6 40 31 02          	testb  $0x2,0x31(%eax)
    2c44:	74 12                	je     2c58 <ide_probe_port+0x31>
    2c46:	8b 46 4c             	mov    0x4c(%esi),%eax
    2c49:	bf f3 ff ff ff       	mov    $0xfffffff3,%edi
    2c4e:	f6 40 31 02          	testb  $0x2,0x31(%eax)
    2c52:	0f 85 a5 04 00 00    	jne    30fd <ide_probe_port+0x4d6>
    2c58:	8b 86 d8 00 00 00    	mov    0xd8(%esi),%eax
    2c5e:	85 c0                	test   %eax,%eax
    2c60:	89 44 24 0c          	mov    %eax,0xc(%esp)
    2c64:	74 05                	je     2c6b <ide_probe_port+0x44>
    2c66:	e8 fc ff ff ff       	call   2c67 <ide_probe_port+0x40>
			2c67: R_386_PC32	disable_irq
    2c6b:	8d 56 0c             	lea    0xc(%esi),%edx
    2c6e:	8b 6e 70             	mov    0x70(%esi),%ebp
    2c71:	89 14 24             	mov    %edx,(%esp)
    2c74:	52                   	push   %edx
    2c75:	68 a9 08 00 00       	push   $0x8a9
			2c76: R_386_32	.rodata.str1.1
    2c7a:	e8 fc ff ff ff       	call   2c7b <ide_probe_port+0x54>
			2c7b: R_386_PC32	printk
    2c7f:	b8 b0 12 83 00       	mov    $0x8312b0,%eax
    2c84:	e8 fc ff ff ff       	call   2c85 <ide_probe_port+0x5e>
			2c85: R_386_PC32	__const_udelay
    2c89:	ba b8 88 00 00       	mov    $0x88b8,%edx
    2c8e:	89 f0                	mov    %esi,%eax
    2c90:	e8 fc ff ff ff       	call   2c91 <ide_probe_port+0x6a>
			2c91: R_386_PC32	ide_wait_not_busy
    2c95:	59                   	pop    %ecx
    2c96:	5b                   	pop    %ebx
    2c97:	31 db                	xor    %ebx,%ebx
    2c99:	85 c0                	test   %eax,%eax
    2c9b:	89 c7                	mov    %eax,%edi
    2c9d:	74 4a                	je     2ce9 <ide_probe_port+0xc2>
    2c9f:	eb 63                	jmp    2d04 <ide_probe_port+0xdd>
    2ca1:	8b 50 30             	mov    0x30(%eax),%edx
    2ca4:	81 e2 40 02 00 00    	and    $0x240,%edx
    2caa:	81 fa 00 02 00 00    	cmp    $0x200,%edx
    2cb0:	74 29                	je     2cdb <ide_probe_port+0xb4>
    2cb2:	ff 55 10             	call   *0x10(%ebp)
    2cb5:	ba 08 00 00 00       	mov    $0x8,%edx
    2cba:	89 f0                	mov    %esi,%eax
    2cbc:	ff 55 0c             	call   *0xc(%ebp)
    2cbf:	b8 b0 12 83 00       	mov    $0x8312b0,%eax
    2cc4:	e8 fc ff ff ff       	call   2cc5 <ide_probe_port+0x9e>
			2cc5: R_386_PC32	__const_udelay
    2cc9:	ba b8 88 00 00       	mov    $0x88b8,%edx
    2cce:	89 f0                	mov    %esi,%eax
    2cd0:	e8 fc ff ff ff       	call   2cd1 <ide_probe_port+0xaa>
			2cd1: R_386_PC32	ide_wait_not_busy
    2cd5:	85 c0                	test   %eax,%eax
    2cd7:	74 0f                	je     2ce8 <ide_probe_port+0xc1>
    2cd9:	eb 1d                	jmp    2cf8 <ide_probe_port+0xd1>
    2cdb:	50                   	push   %eax
    2cdc:	68 c9 08 00 00       	push   $0x8c9
			2cdd: R_386_32	.rodata.str1.1
    2ce1:	e8 fc ff ff ff       	call   2ce2 <ide_probe_port+0xbb>
			2ce2: R_386_PC32	printk
    2ce6:	58                   	pop    %eax
    2ce7:	5a                   	pop    %edx
    2ce8:	43                   	inc    %ebx
    2ce9:	8b 44 9e 48          	mov    0x48(%esi,%ebx,4),%eax
    2ced:	85 c0                	test   %eax,%eax
    2cef:	75 b0                	jne    2ca1 <ide_probe_port+0x7a>
    2cf1:	83 fb 01             	cmp    $0x1,%ebx
    2cf4:	7e ab                	jle    2ca1 <ide_probe_port+0x7a>
    2cf6:	eb 06                	jmp    2cfe <ide_probe_port+0xd7>
    2cf8:	85 db                	test   %ebx,%ebx
    2cfa:	89 c7                	mov    %eax,%edi
    2cfc:	74 06                	je     2d04 <ide_probe_port+0xdd>
    2cfe:	8b 46 48             	mov    0x48(%esi),%eax
    2d01:	ff 55 10             	call   *0x10(%ebp)
    2d04:	83 ff ed             	cmp    $0xffffffed,%edi
    2d07:	75 14                	jne    2d1d <ide_probe_port+0xf6>
    2d09:	ff 34 24             	pushl  (%esp)
    2d0c:	68 ed 08 00 00       	push   $0x8ed
			2d0d: R_386_32	.rodata.str1.1
    2d11:	e8 fc ff ff ff       	call   2d12 <ide_probe_port+0xeb>
			2d12: R_386_PC32	printk
    2d16:	5b                   	pop    %ebx
    2d17:	5e                   	pop    %esi
    2d18:	e9 d0 03 00 00       	jmp    30ed <ide_probe_port+0x4c6>
    2d1d:	83 ff f0             	cmp    $0xfffffff0,%edi
    2d20:	74 07                	je     2d29 <ide_probe_port+0x102>
    2d22:	bf ed ff ff ff       	mov    $0xffffffed,%edi
    2d27:	eb 0f                	jmp    2d38 <ide_probe_port+0x111>
    2d29:	ff 34 24             	pushl  (%esp)
    2d2c:	68 0c 09 00 00       	push   $0x90c
			2d2d: R_386_32	.rodata.str1.1
    2d31:	e8 fc ff ff ff       	call   2d32 <ide_probe_port+0x10b>
			2d32: R_386_PC32	printk
    2d36:	5a                   	pop    %edx
    2d37:	59                   	pop    %ecx
    2d38:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)
    2d3f:	00 
    2d40:	89 f5                	mov    %esi,%ebp
    2d42:	e9 8f 03 00 00       	jmp    30d6 <ide_probe_port+0x4af>
    2d47:	8b 43 1c             	mov    0x1c(%ebx),%eax
    2d4a:	ba 2f 09 00 00       	mov    $0x92f,%edx
			2d4b: R_386_32	.rodata.str1.1
    2d4f:	81 63 30 ff fe ff ff 	andl   $0xfffffeff,0x30(%ebx)
    2d56:	83 c0 36             	add    $0x36,%eax
    2d59:	e8 fc ff ff ff       	call   2d5a <ide_probe_port+0x133>
			2d5a: R_386_PC32	strcpy
    2d5e:	f6 43 31 02          	testb  $0x2,0x31(%ebx)
    2d62:	0f 85 53 02 00 00    	jne    2fbb <ide_probe_port+0x394>
    2d68:	ba ec 00 00 00       	mov    $0xec,%edx
    2d6d:	89 d8                	mov    %ebx,%eax
    2d6f:	e8 f1 fc ff ff       	call   2a65 <do_probe>
    2d74:	b2 ec                	mov    $0xec,%dl
    2d76:	48                   	dec    %eax
    2d77:	7e 0e                	jle    2d87 <ide_probe_port+0x160>
    2d79:	ba a1 00 00 00       	mov    $0xa1,%edx
    2d7e:	89 d8                	mov    %ebx,%eax
    2d80:	e8 e0 fc ff ff       	call   2a65 <do_probe>
    2d85:	b2 a1                	mov    $0xa1,%dl
    2d87:	8b 43 30             	mov    0x30(%ebx),%eax
    2d8a:	a8 40                	test   $0x40,%al
    2d8c:	0f 84 34 03 00 00    	je     30c6 <ide_probe_port+0x49f>
    2d92:	f6 c4 01             	test   $0x1,%ah
    2d95:	75 4e                	jne    2de5 <ide_probe_port+0x1be>
    2d97:	8a 43 46             	mov    0x46(%ebx),%al
    2d9a:	3c 20                	cmp    $0x20,%al
    2d9c:	75 20                	jne    2dbe <ide_probe_port+0x197>
    2d9e:	0f b6 43 4d          	movzbl 0x4d(%ebx),%eax
    2da2:	50                   	push   %eax
    2da3:	0f b6 43 4c          	movzbl 0x4c(%ebx),%eax
    2da7:	50                   	push   %eax
    2da8:	ff 73 58             	pushl  0x58(%ebx)
    2dab:	53                   	push   %ebx
    2dac:	68 37 09 00 00       	push   $0x937
			2dad: R_386_32	.rodata.str1.1
    2db1:	e8 fc ff ff ff       	call   2db2 <ide_probe_port+0x18b>
			2db2: R_386_PC32	printk
    2db6:	83 c4 14             	add    $0x14,%esp
    2db9:	e9 fd 01 00 00       	jmp    2fbb <ide_probe_port+0x394>
    2dbe:	3c 05                	cmp    $0x5,%al
    2dc0:	75 0d                	jne    2dcf <ide_probe_port+0x1a8>
    2dc2:	53                   	push   %ebx
    2dc3:	68 5b 09 00 00       	push   $0x95b
			2dc4: R_386_32	.rodata.str1.1
    2dc8:	e8 fc ff ff ff       	call   2dc9 <ide_probe_port+0x1a2>
			2dc9: R_386_PC32	printk
    2dcd:	eb 0f                	jmp    2dde <ide_probe_port+0x1b7>
    2dcf:	53                   	push   %ebx
    2dd0:	68 73 09 00 00       	push   $0x973
			2dd1: R_386_32	.rodata.str1.1
    2dd5:	e8 fc ff ff ff       	call   2dd6 <ide_probe_port+0x1af>
			2dd6: R_386_PC32	printk
    2dda:	83 63 30 bf          	andl   $0xffffffbf,0x30(%ebx)
    2dde:	5e                   	pop    %esi
    2ddf:	58                   	pop    %eax
    2de0:	e9 d6 01 00 00       	jmp    2fbb <ide_probe_port+0x394>
    2de5:	80 fa a1             	cmp    $0xa1,%dl
    2de8:	8b 73 1c             	mov    0x1c(%ebx),%esi
    2deb:	0f 85 21 01 00 00    	jne    2f12 <ide_probe_port+0x2eb>
    2df1:	8d 4e 36             	lea    0x36(%esi),%ecx
    2df4:	89 4c 24 04          	mov    %ecx,0x4(%esp)
    2df8:	66 8b 06             	mov    (%esi),%ax
    2dfb:	66 c1 e8 08          	shr    $0x8,%ax
    2dff:	83 e0 1f             	and    $0x1f,%eax
    2e02:	88 04 24             	mov    %al,(%esp)
    2e05:	51                   	push   %ecx
    2e06:	53                   	push   %ebx
    2e07:	68 b3 09 00 00       	push   $0x9b3
			2e08: R_386_32	.rodata.str1.1
    2e0c:	e8 fc ff ff ff       	call   2e0d <ide_probe_port+0x1e6>
			2e0d: R_386_PC32	printk
    2e11:	83 c4 0c             	add    $0xc,%esp
    2e14:	80 3c 24 01          	cmpb   $0x1,(%esp)
    2e18:	0f 84 90 00 00 00    	je     2eae <ide_probe_port+0x287>
    2e1e:	72 15                	jb     2e35 <ide_probe_port+0x20e>
    2e20:	80 3c 24 05          	cmpb   $0x5,(%esp)
    2e24:	74 6f                	je     2e95 <ide_probe_port+0x26e>
    2e26:	80 3c 24 07          	cmpb   $0x7,(%esp)
    2e2a:	0f 85 9d 00 00 00    	jne    2ecd <ide_probe_port+0x2a6>
    2e30:	e9 85 00 00 00       	jmp    2eba <ide_probe_port+0x293>
    2e35:	8b 44 24 04          	mov    0x4(%esp),%eax
    2e39:	ba c5 09 00 00       	mov    $0x9c5,%edx
			2e3a: R_386_32	.rodata.str1.1
    2e3e:	e8 fc ff ff ff       	call   2e3f <ide_probe_port+0x218>
			2e3f: R_386_PC32	strstr
    2e43:	85 c0                	test   %eax,%eax
    2e45:	75 4e                	jne    2e95 <ide_probe_port+0x26e>
    2e47:	8b 44 24 04          	mov    0x4(%esp),%eax
    2e4b:	ba cc 09 00 00       	mov    $0x9cc,%edx
			2e4c: R_386_32	.rodata.str1.1
    2e50:	e8 fc ff ff ff       	call   2e51 <ide_probe_port+0x22a>
			2e51: R_386_PC32	strstr
    2e55:	85 c0                	test   %eax,%eax
    2e57:	75 2f                	jne    2e88 <ide_probe_port+0x261>
    2e59:	8b 44 24 04          	mov    0x4(%esp),%eax
    2e5d:	ba d1 09 00 00       	mov    $0x9d1,%edx
			2e5e: R_386_32	.rodata.str1.1
    2e62:	e8 fc ff ff ff       	call   2e63 <ide_probe_port+0x23c>
			2e63: R_386_PC32	strstr
    2e67:	85 c0                	test   %eax,%eax
    2e69:	75 1d                	jne    2e88 <ide_probe_port+0x261>
    2e6b:	8b 44 24 04          	mov    0x4(%esp),%eax
    2e6f:	ba d6 09 00 00       	mov    $0x9d6,%edx
			2e70: R_386_32	.rodata.str1.1
    2e74:	e8 fc ff ff ff       	call   2e75 <ide_probe_port+0x24e>
			2e75: R_386_PC32	strstr
    2e79:	85 c0                	test   %eax,%eax
    2e7b:	75 0b                	jne    2e88 <ide_probe_port+0x261>
    2e7d:	68 da 09 00 00       	push   $0x9da
			2e7e: R_386_32	.rodata.str1.1
    2e82:	e8 fc ff ff ff       	call   2e83 <ide_probe_port+0x25c>
			2e83: R_386_PC32	printk
    2e87:	59                   	pop    %ecx
    2e88:	80 7b 46 05          	cmpb   $0x5,0x46(%ebx)
    2e8c:	74 07                	je     2e95 <ide_probe_port+0x26e>
    2e8e:	68 f9 09 00 00       	push   $0x9f9
			2e8f: R_386_32	.rodata.str1.1
    2e93:	eb 2a                	jmp    2ebf <ide_probe_port+0x298>
    2e95:	81 4b 30 00 04 00 00 	orl    $0x400,0x30(%ebx)
    2e9c:	68 03 0a 00 00       	push   $0xa03
			2e9d: R_386_32	.rodata.str1.1
    2ea1:	e8 fc ff ff ff       	call   2ea2 <ide_probe_port+0x27b>
			2ea2: R_386_PC32	printk
    2ea6:	c6 44 24 04 05       	movb   $0x5,0x4(%esp)
    2eab:	5a                   	pop    %edx
    2eac:	eb 30                	jmp    2ede <ide_probe_port+0x2b7>
    2eae:	68 11 0a 00 00       	push   $0xa11
			2eaf: R_386_32	.rodata.str1.1
    2eb3:	e8 fc ff ff ff       	call   2eb4 <ide_probe_port+0x28d>
			2eb4: R_386_PC32	printk
    2eb8:	eb f1                	jmp    2eab <ide_probe_port+0x284>
    2eba:	68 19 0a 00 00       	push   $0xa19
			2ebb: R_386_32	.rodata.str1.1
    2ebf:	e8 fc ff ff ff       	call   2ec0 <ide_probe_port+0x299>
			2ec0: R_386_PC32	printk
    2ec4:	81 4b 30 00 04 00 00 	orl    $0x400,0x30(%ebx)
    2ecb:	eb de                	jmp    2eab <ide_probe_port+0x284>
    2ecd:	0f b6 04 24          	movzbl (%esp),%eax
    2ed1:	50                   	push   %eax
    2ed2:	68 24 0a 00 00       	push   $0xa24
			2ed3: R_386_32	.rodata.str1.1
    2ed7:	e8 fc ff ff ff       	call   2ed8 <ide_probe_port+0x2b1>
			2ed8: R_386_PC32	printk
    2edc:	59                   	pop    %ecx
    2edd:	58                   	pop    %eax
    2ede:	68 39 0a 00 00       	push   $0xa39
			2edf: R_386_32	.rodata.str1.1
    2ee3:	e8 fc ff ff ff       	call   2ee4 <ide_probe_port+0x2bd>
			2ee4: R_386_PC32	printk
    2ee8:	8a 44 24 04          	mov    0x4(%esp),%al
    2eec:	c6 43 47 00          	movb   $0x0,0x47(%ebx)
    2ef0:	88 43 46             	mov    %al,0x46(%ebx)
    2ef3:	0f b7 06             	movzwl (%esi),%eax
    2ef6:	5a                   	pop    %edx
    2ef7:	83 e0 60             	and    $0x60,%eax
    2efa:	83 f8 20             	cmp    $0x20,%eax
    2efd:	75 07                	jne    2f06 <ide_probe_port+0x2df>
    2eff:	83 8b cc 01 00 00 01 	orl    $0x1,0x1cc(%ebx)
    2f06:	81 4b 30 00 80 00 04 	orl    $0x4008000,0x30(%ebx)
    2f0d:	e9 a9 00 00 00       	jmp    2fbb <ide_probe_port+0x394>
    2f12:	66 8b 0e             	mov    (%esi),%cx
    2f15:	66 81 f9 8a 84       	cmp    $0x848a,%cx
    2f1a:	74 25                	je     2f41 <ide_probe_port+0x31a>
    2f1c:	0f b7 96 a6 00 00 00 	movzwl 0xa6(%esi),%edx
    2f23:	81 e2 04 c0 00 00    	and    $0xc004,%edx
    2f29:	81 fa 04 40 00 00    	cmp    $0x4004,%edx
    2f2f:	0f 85 d2 01 00 00    	jne    3107 <ide_probe_port+0x4e0>
    2f35:	eb 0a                	jmp    2f41 <ide_probe_port+0x31a>
    2f37:	80 cc 04             	or     $0x4,%ah
    2f3a:	31 d2                	xor    %edx,%edx
    2f3c:	89 43 30             	mov    %eax,0x30(%ebx)
    2f3f:	eb 05                	jmp    2f46 <ide_probe_port+0x31f>
    2f41:	ba 01 00 00 00       	mov    $0x1,%edx
    2f46:	8b 4b 1c             	mov    0x1c(%ebx),%ecx
    2f49:	c6 43 46 20          	movb   $0x20,0x46(%ebx)
    2f4d:	89 0c 24             	mov    %ecx,(%esp)
    2f50:	66 8b 89 a0 00 00 00 	mov    0xa0(%ecx),%cx
    2f57:	66 83 f9 ff          	cmp    $0xffffffff,%cx
    2f5b:	0f 84 b5 01 00 00    	je     3116 <ide_probe_port+0x4ef>
    2f61:	b8 0e 00 00 00       	mov    $0xe,%eax
    2f66:	0f b7 c9             	movzwl %cx,%ecx
    2f69:	0f a3 c1             	bt     %eax,%ecx
    2f6c:	72 08                	jb     2f76 <ide_probe_port+0x34f>
    2f6e:	48                   	dec    %eax
    2f6f:	75 f8                	jne    2f69 <ide_probe_port+0x342>
    2f71:	e9 a0 01 00 00       	jmp    3116 <ide_probe_port+0x4ef>
    2f76:	83 f8 06             	cmp    $0x6,%eax
    2f79:	0f 86 97 01 00 00    	jbe    3116 <ide_probe_port+0x4ef>
    2f7f:	8b 0c 24             	mov    (%esp),%ecx
    2f82:	0f b7 81 a8 00 00 00 	movzwl 0xa8(%ecx),%eax
    2f89:	25 00 e0 00 00       	and    $0xe000,%eax
    2f8e:	3d 00 60 00 00       	cmp    $0x6000,%eax
    2f93:	0f 85 7d 01 00 00    	jne    3116 <ide_probe_port+0x4ef>
    2f99:	85 d2                	test   %edx,%edx
    2f9b:	b8 44 0a 00 00       	mov    $0xa44,%eax
			2f9c: R_386_32	.rodata.str1.1
    2fa0:	ba 48 0a 00 00       	mov    $0xa48,%edx
			2fa1: R_386_32	.rodata.str1.1
    2fa5:	0f 45 c2             	cmovne %edx,%eax
    2fa8:	83 c6 36             	add    $0x36,%esi
    2fab:	50                   	push   %eax
    2fac:	56                   	push   %esi
    2fad:	53                   	push   %ebx
    2fae:	68 4c 0a 00 00       	push   $0xa4c
			2faf: R_386_32	.rodata.str1.1
    2fb3:	e8 fc ff ff ff       	call   2fb4 <ide_probe_port+0x38d>
			2fb4: R_386_PC32	printk
    2fb8:	83 c4 10             	add    $0x10,%esp
    2fbb:	8b 43 30             	mov    0x30(%ebx),%eax
    2fbe:	a8 40                	test   $0x40,%al
    2fc0:	0f 84 00 01 00 00    	je     30c6 <ide_probe_port+0x49f>
    2fc6:	f6 c4 01             	test   $0x1,%ah
    2fc9:	75 2b                	jne    2ff6 <ide_probe_port+0x3cf>
    2fcb:	8b 53 58             	mov    0x58(%ebx),%edx
    2fce:	8b 43 1c             	mov    0x1c(%ebx),%eax
    2fd1:	66 89 50 02          	mov    %dx,0x2(%eax)
    2fd5:	66 89 50 6c          	mov    %dx,0x6c(%eax)
    2fd9:	0f b6 53 4c          	movzbl 0x4c(%ebx),%edx
    2fdd:	66 89 50 06          	mov    %dx,0x6(%eax)
    2fe1:	66 89 50 6e          	mov    %dx,0x6e(%eax)
    2fe5:	0f b6 53 4d          	movzbl 0x4d(%ebx),%edx
    2fe9:	66 89 50 0c          	mov    %dx,0xc(%eax)
    2fed:	66 89 50 70          	mov    %dx,0x70(%eax)
    2ff1:	e9 d0 00 00 00       	jmp    30c6 <ide_probe_port+0x49f>
    2ff6:	80 7b 46 20          	cmpb   $0x20,0x46(%ebx)
    2ffa:	0f 85 c6 00 00 00    	jne    30c6 <ide_probe_port+0x49f>
    3000:	83 7b 58 00          	cmpl   $0x0,0x58(%ebx)
    3004:	8b 43 1c             	mov    0x1c(%ebx),%eax
    3007:	74 0c                	je     3015 <ide_probe_port+0x3ee>
    3009:	80 7b 4c 00          	cmpb   $0x0,0x4c(%ebx)
    300d:	74 06                	je     3015 <ide_probe_port+0x3ee>
    300f:	80 7b 4d 00          	cmpb   $0x0,0x4d(%ebx)
    3013:	75 1e                	jne    3033 <ide_probe_port+0x40c>
    3015:	0f b7 50 02          	movzwl 0x2(%eax),%edx
    3019:	89 53 54             	mov    %edx,0x54(%ebx)
    301c:	89 53 58             	mov    %edx,0x58(%ebx)
    301f:	66 8b 50 06          	mov    0x6(%eax),%dx
    3023:	88 53 4e             	mov    %dl,0x4e(%ebx)
    3026:	88 53 4c             	mov    %dl,0x4c(%ebx)
    3029:	66 8b 50 0c          	mov    0xc(%eax),%dx
    302d:	88 53 4f             	mov    %dl,0x4f(%ebx)
    3030:	88 53 4d             	mov    %dl,0x4d(%ebx)
    3033:	f6 40 6a 01          	testb  $0x1,0x6a(%eax)
    3037:	74 33                	je     306c <ide_probe_port+0x445>
    3039:	66 8b 50 6c          	mov    0x6c(%eax),%dx
    303d:	66 85 d2             	test   %dx,%dx
    3040:	74 2a                	je     306c <ide_probe_port+0x445>
    3042:	66 8b 48 6e          	mov    0x6e(%eax),%cx
    3046:	66 85 c9             	test   %cx,%cx
    3049:	74 21                	je     306c <ide_probe_port+0x445>
    304b:	66 83 f9 10          	cmp    $0x10,%cx
    304f:	77 1b                	ja     306c <ide_probe_port+0x445>
    3051:	66 83 78 70 00       	cmpw   $0x0,0x70(%eax)
    3056:	74 14                	je     306c <ide_probe_port+0x445>
    3058:	0f b7 d2             	movzwl %dx,%edx
    305b:	89 53 58             	mov    %edx,0x58(%ebx)
    305e:	66 8b 50 6e          	mov    0x6e(%eax),%dx
    3062:	88 53 4c             	mov    %dl,0x4c(%ebx)
    3065:	66 8b 50 70          	mov    0x70(%eax),%dx
    3069:	88 53 4d             	mov    %dl,0x4d(%ebx)
    306c:	80 7b 4c 10          	cmpb   $0x10,0x4c(%ebx)
    3070:	76 24                	jbe    3096 <ide_probe_port+0x46f>
    3072:	66 8b 50 06          	mov    0x6(%eax),%dx
    3076:	66 85 d2             	test   %dx,%dx
    3079:	74 1b                	je     3096 <ide_probe_port+0x46f>
    307b:	66 83 fa 10          	cmp    $0x10,%dx
    307f:	77 15                	ja     3096 <ide_probe_port+0x46f>
    3081:	0f b7 50 02          	movzwl 0x2(%eax),%edx
    3085:	89 53 58             	mov    %edx,0x58(%ebx)
    3088:	66 8b 50 06          	mov    0x6(%eax),%dx
    308c:	88 53 4c             	mov    %dl,0x4c(%ebx)
    308f:	66 8b 40 0c          	mov    0xc(%eax),%ax
    3093:	88 43 4d             	mov    %al,0x4d(%ebx)
    3096:	8b 43 1c             	mov    0x1c(%ebx),%eax
    3099:	8a 50 5e             	mov    0x5e(%eax),%dl
    309c:	84 d2                	test   %dl,%dl
    309e:	74 26                	je     30c6 <ide_probe_port+0x49f>
    30a0:	80 fa 03             	cmp    $0x3,%dl
    30a3:	76 0c                	jbe    30b1 <ide_probe_port+0x48a>
    30a5:	0f b6 d2             	movzbl %dl,%edx
    30a8:	80 ce 01             	or     $0x1,%dh
    30ab:	66 89 50 76          	mov    %dx,0x76(%eax)
    30af:	eb 06                	jmp    30b7 <ide_probe_port+0x490>
    30b1:	66 81 60 76 00 fe    	andw   $0xfe00,0x76(%eax)
    30b7:	66 8b 40 76          	mov    0x76(%eax),%ax
    30bb:	84 c0                	test   %al,%al
    30bd:	88 43 49             	mov    %al,0x49(%ebx)
    30c0:	74 04                	je     30c6 <ide_probe_port+0x49f>
    30c2:	80 4b 3c 04          	orb    $0x4,0x3c(%ebx)
    30c6:	f6 43 30 40          	testb  $0x40,0x30(%ebx)
    30ca:	b8 00 00 00 00       	mov    $0x0,%eax
    30cf:	0f 45 f8             	cmovne %eax,%edi
    30d2:	ff 44 24 08          	incl   0x8(%esp)
    30d6:	8b 4c 24 08          	mov    0x8(%esp),%ecx
    30da:	8b 5c 8d 48          	mov    0x48(%ebp,%ecx,4),%ebx
    30de:	85 db                	test   %ebx,%ebx
    30e0:	0f 85 61 fc ff ff    	jne    2d47 <ide_probe_port+0x120>
    30e6:	49                   	dec    %ecx
    30e7:	0f 8e 5a fc ff ff    	jle    2d47 <ide_probe_port+0x120>
    30ed:	83 7c 24 0c 00       	cmpl   $0x0,0xc(%esp)
    30f2:	74 09                	je     30fd <ide_probe_port+0x4d6>
    30f4:	8b 44 24 0c          	mov    0xc(%esp),%eax
    30f8:	e8 fc ff ff ff       	call   30f9 <ide_probe_port+0x4d2>
			30f9: R_386_PC32	enable_irq
    30fd:	83 c4 10             	add    $0x10,%esp
    3100:	89 f8                	mov    %edi,%eax
    3102:	5b                   	pop    %ebx
    3103:	5e                   	pop    %esi
    3104:	5f                   	pop    %edi
    3105:	5d                   	pop    %ebp
    3106:	c3                   	ret    
    3107:	31 d2                	xor    %edx,%edx
    3109:	84 c9                	test   %cl,%cl
    310b:	0f 89 35 fe ff ff    	jns    2f46 <ide_probe_port+0x31f>
    3111:	e9 21 fe ff ff       	jmp    2f37 <ide_probe_port+0x310>
    3116:	81 4b 30 00 00 00 04 	orl    $0x4000000,0x30(%ebx)
    311d:	e9 77 fe ff ff       	jmp    2f99 <ide_probe_port+0x372>

00003122 <ide_port_scan>:
    3122:	53                   	push   %ebx
    3123:	89 c3                	mov    %eax,%ebx
    3125:	e8 fc ff ff ff       	call   3126 <ide_port_scan+0x4>
			3126: R_386_PC32	ide_port_apply_params
    312a:	8b 43 74             	mov    0x74(%ebx),%eax
    312d:	85 c0                	test   %eax,%eax
    312f:	74 1c                	je     314d <ide_port_scan+0x2b>
    3131:	8b 50 30             	mov    0x30(%eax),%edx
    3134:	85 d2                	test   %edx,%edx
    3136:	74 15                	je     314d <ide_port_scan+0x2b>
    3138:	0f b6 43 61          	movzbl 0x61(%ebx),%eax
    313c:	a8 78                	test   $0x78,%al
    313e:	74 0d                	je     314d <ide_port_scan+0x2b>
    3140:	80 7b 64 03          	cmpb   $0x3,0x64(%ebx)
    3144:	74 07                	je     314d <ide_port_scan+0x2b>
    3146:	89 d8                	mov    %ebx,%eax
    3148:	ff d2                	call   *%edx
    314a:	88 43 64             	mov    %al,0x64(%ebx)
    314d:	83 4b 54 01          	orl    $0x1,0x54(%ebx)
    3151:	89 d8                	mov    %ebx,%eax
    3153:	e8 a6 ef ff ff       	call   20fe <ide_port_init_devices>
    3158:	89 d8                	mov    %ebx,%eax
    315a:	e8 c8 fa ff ff       	call   2c27 <ide_probe_port>
    315f:	83 63 54 fe          	andl   $0xfffffffe,0x54(%ebx)
    3163:	85 c0                	test   %eax,%eax
    3165:	78 24                	js     318b <ide_port_scan+0x69>
    3167:	80 8b f0 00 00 00 01 	orb    $0x1,0xf0(%ebx)
    316e:	89 d8                	mov    %ebx,%eax
    3170:	e8 8c f0 ff ff       	call   2201 <ide_port_tune_devices>
    3175:	89 d8                	mov    %ebx,%eax
    3177:	e8 f4 f0 ff ff       	call   2270 <ide_port_setup_devices>
    317c:	89 d8                	mov    %ebx,%eax
    317e:	e8 d9 f1 ff ff       	call   235c <hwif_register_devices>
    3183:	89 d8                	mov    %ebx,%eax
    3185:	5b                   	pop    %ebx
    3186:	e9 fc ff ff ff       	jmp    3187 <ide_port_scan+0x65>
			3187: R_386_PC32	ide_proc_port_register_devices
    318b:	5b                   	pop    %ebx
    318c:	c3                   	ret    

0000318d <T.883>:
    318d:	ba d0 80 00 00       	mov    $0x80d0,%edx
    3192:	e9 fc ff ff ff       	jmp    3193 <T.883+0x6>
			3193: R_386_PC32	__kmalloc

00003197 <ide_host_alloc>:
    3197:	55                   	push   %ebp
    3198:	57                   	push   %edi
    3199:	56                   	push   %esi
    319a:	89 c6                	mov    %eax,%esi
    319c:	53                   	push   %ebx
    319d:	83 ec 14             	sub    $0x14,%esp
    31a0:	89 54 24 0c          	mov    %edx,0xc(%esp)
    31a4:	89 4c 24 10          	mov    %ecx,0x10(%esp)
    31a8:	8b 02                	mov    (%edx),%eax
    31aa:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)
    31b1:	00 
    31b2:	85 c0                	test   %eax,%eax
    31b4:	74 07                	je     31bd <ide_host_alloc+0x26>
    31b6:	8b 40 2c             	mov    0x2c(%eax),%eax
    31b9:	89 44 24 08          	mov    %eax,0x8(%esp)
    31bd:	b8 44 00 00 00       	mov    $0x44,%eax
    31c2:	e8 c6 ff ff ff       	call   318d <T.883>
    31c7:	85 c0                	test   %eax,%eax
    31c9:	89 c7                	mov    %eax,%edi
    31cb:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)
    31d2:	00 
    31d3:	0f 85 c8 01 00 00    	jne    33a1 <ide_host_alloc+0x20a>
    31d9:	e9 0b 02 00 00       	jmp    33e9 <ide_host_alloc+0x252>
    31de:	8b 44 24 04          	mov    0x4(%esp),%eax
    31e2:	8b 54 24 0c          	mov    0xc(%esp),%edx
    31e6:	83 3c 82 00          	cmpl   $0x0,(%edx,%eax,4)
    31ea:	0f 84 ad 01 00 00    	je     339d <ide_host_alloc+0x206>
    31f0:	b8 80 02 00 00       	mov    $0x280,%eax
    31f5:	e8 93 ff ff ff       	call   318d <T.883>
    31fa:	85 c0                	test   %eax,%eax
    31fc:	89 c3                	mov    %eax,%ebx
    31fe:	0f 84 99 01 00 00    	je     339d <ide_host_alloc+0x206>
    3204:	b8 00 03 00 00       	mov    $0x300,%eax
    3209:	e8 7f ff ff ff       	call   318d <T.883>
    320e:	85 c0                	test   %eax,%eax
    3210:	89 c5                	mov    %eax,%ebp
    3212:	74 45                	je     3259 <ide_host_alloc+0xc2>
    3214:	b8 00 02 00 00       	mov    $0x200,%eax
    3219:	e8 6f ff ff ff       	call   318d <T.883>
    321e:	85 c0                	test   %eax,%eax
    3220:	89 45 1c             	mov    %eax,0x1c(%ebp)
    3223:	74 34                	je     3259 <ide_host_alloc+0xc2>
    3225:	89 6b 48             	mov    %ebp,0x48(%ebx)
    3228:	b8 00 03 00 00       	mov    $0x300,%eax
    322d:	e8 5b ff ff ff       	call   318d <T.883>
    3232:	85 c0                	test   %eax,%eax
    3234:	89 c5                	mov    %eax,%ebp
    3236:	74 21                	je     3259 <ide_host_alloc+0xc2>
    3238:	b8 00 02 00 00       	mov    $0x200,%eax
    323d:	e8 4b ff ff ff       	call   318d <T.883>
    3242:	85 c0                	test   %eax,%eax
    3244:	89 45 1c             	mov    %eax,0x1c(%ebp)
    3247:	74 10                	je     3259 <ide_host_alloc+0xc2>
    3249:	85 f6                	test   %esi,%esi
    324b:	89 6b 4c             	mov    %ebp,0x4c(%ebx)
    324e:	75 1c                	jne    326c <ide_host_alloc+0xd5>
    3250:	bd 01 00 00 00       	mov    $0x1,%ebp
    3255:	31 c9                	xor    %ecx,%ecx
    3257:	eb 28                	jmp    3281 <ide_host_alloc+0xea>
    3259:	89 d8                	mov    %ebx,%eax
    325b:	e8 0f f2 ff ff       	call   246f <ide_port_free_devices>
    3260:	89 d8                	mov    %ebx,%eax
    3262:	e8 fc ff ff ff       	call   3263 <ide_host_alloc+0xcc>
			3263: R_386_PC32	kfree
    3267:	e9 31 01 00 00       	jmp    339d <ide_host_alloc+0x206>
    326c:	8b 46 34             	mov    0x34(%esi),%eax
    326f:	31 c9                	xor    %ecx,%ecx
    3271:	89 c5                	mov    %eax,%ebp
    3273:	c1 ed 0d             	shr    $0xd,%ebp
    3276:	83 f5 01             	xor    $0x1,%ebp
    3279:	83 e5 01             	and    $0x1,%ebp
    327c:	a8 08                	test   $0x8,%al
    327e:	0f 95 c1             	setne  %cl
    3281:	b8 5c 00 00 00       	mov    $0x5c,%eax
			3282: R_386_32	.data
    3286:	89 0c 24             	mov    %ecx,(%esp)
    3289:	e8 fc ff ff ff       	call   328a <ide_host_alloc+0xf3>
			328a: R_386_PC32	mutex_lock
    328e:	85 ed                	test   %ebp,%ebp
    3290:	8b 0c 24             	mov    (%esp),%ecx
    3293:	74 10                	je     32a5 <ide_host_alloc+0x10e>
    3295:	0b 0d d8 00 00 00    	or     0xd8,%ecx
			3297: R_386_32	.bss
    329b:	81 f9 ff 03 00 00    	cmp    $0x3ff,%ecx
    32a1:	75 14                	jne    32b7 <ide_host_alloc+0x120>
    32a3:	eb 3b                	jmp    32e0 <ide_host_alloc+0x149>
    32a5:	a1 d8 00 00 00       	mov    0xd8,%eax
			32a6: R_386_32	.bss
    32aa:	89 c1                	mov    %eax,%ecx
    32ac:	83 c9 03             	or     $0x3,%ecx
    32af:	81 f9 ff 03 00 00    	cmp    $0x3ff,%ecx
    32b5:	74 07                	je     32be <ide_host_alloc+0x127>
    32b7:	f7 d1                	not    %ecx
    32b9:	0f bc c9             	bsf    %ecx,%ecx
    32bc:	eb 0f                	jmp    32cd <ide_host_alloc+0x136>
    32be:	89 c2                	mov    %eax,%edx
    32c0:	83 e2 03             	and    $0x3,%edx
    32c3:	83 fa 03             	cmp    $0x3,%edx
    32c6:	74 18                	je     32e0 <ide_host_alloc+0x149>
    32c8:	f7 d0                	not    %eax
    32ca:	0f bc c8             	bsf    %eax,%ecx
    32cd:	85 c9                	test   %ecx,%ecx
    32cf:	78 14                	js     32e5 <ide_host_alloc+0x14e>
    32d1:	b8 01 00 00 00       	mov    $0x1,%eax
    32d6:	d3 e0                	shl    %cl,%eax
    32d8:	09 05 d8 00 00 00    	or     %eax,0xd8
			32da: R_386_32	.bss
    32de:	eb 05                	jmp    32e5 <ide_host_alloc+0x14e>
    32e0:	b9 fe ff ff ff       	mov    $0xfffffffe,%ecx
    32e5:	b8 5c 00 00 00       	mov    $0x5c,%eax
			32e6: R_386_32	.data
    32ea:	89 0c 24             	mov    %ecx,(%esp)
    32ed:	e8 fc ff ff ff       	call   32ee <ide_host_alloc+0x157>
			32ee: R_386_PC32	mutex_unlock
    32f2:	8b 0c 24             	mov    (%esp),%ecx
    32f5:	85 c9                	test   %ecx,%ecx
    32f7:	79 28                	jns    3321 <ide_host_alloc+0x18a>
    32f9:	85 f6                	test   %esi,%esi
    32fb:	b8 66 0a 00 00       	mov    $0xa66,%eax
			32fc: R_386_32	.rodata.str1.1
    3300:	74 02                	je     3304 <ide_host_alloc+0x16d>
    3302:	8b 06                	mov    (%esi),%eax
    3304:	50                   	push   %eax
    3305:	68 6a 0a 00 00       	push   $0xa6a
			3306: R_386_32	.rodata.str1.1
    330a:	e8 fc ff ff ff       	call   330b <ide_host_alloc+0x174>
			330b: R_386_PC32	printk
    330f:	89 d8                	mov    %ebx,%eax
    3311:	e8 59 f1 ff ff       	call   246f <ide_port_free_devices>
    3316:	89 d8                	mov    %ebx,%eax
    3318:	e8 fc ff ff ff       	call   3319 <ide_host_alloc+0x182>
			3319: R_386_PC32	kfree
    331d:	5d                   	pop    %ebp
    331e:	58                   	pop    %eax
    331f:	eb 7c                	jmp    339d <ide_host_alloc+0x206>
    3321:	8a 81 34 01 00 00    	mov    0x134(%ecx),%al
			3323: R_386_32	.rodata
    3327:	31 d2                	xor    %edx,%edx
    3329:	88 4b 59             	mov    %cl,0x59(%ebx)
    332c:	83 c1 30             	add    $0x30,%ecx
    332f:	88 4b 0f             	mov    %cl,0xf(%ebx)
    3332:	31 c9                	xor    %ecx,%ecx
    3334:	c6 43 0c 69          	movb   $0x69,0xc(%ebx)
    3338:	88 43 58             	mov    %al,0x58(%ebx)
    333b:	8d 83 3c 02 00 00    	lea    0x23c(%ebx),%eax
    3341:	c6 43 0d 64          	movb   $0x64,0xd(%ebx)
    3345:	c6 43 0e 65          	movb   $0x65,0xe(%ebx)
    3349:	c7 83 7c 02 00 00 00 	movl   $0x0,0x27c(%ebx)
    3350:	00 00 00 
    3353:	e8 fc ff ff ff       	call   3354 <ide_host_alloc+0x1bd>
			3354: R_386_PC32	init_timer_key
    3358:	8d 83 1c 02 00 00    	lea    0x21c(%ebx),%eax
    335e:	ba d8 00 00 00       	mov    $0xd8,%edx
			335f: R_386_32	.bss
    3363:	c7 83 48 02 00 00 00 	movl   $0x0,0x248(%ebx)
    336a:	00 00 00 
			3369: R_386_32	ide_timer_expiry
    336d:	89 9b 4c 02 00 00    	mov    %ebx,0x24c(%ebx)
    3373:	c7 83 18 02 00 00 00 	movl   $0x0,0x218(%ebx)
    337a:	00 00 00 
    337d:	e8 fc ff ff ff       	call   337e <ide_host_alloc+0x1e7>
			337e: R_386_PC32	__init_waitqueue_head
    3382:	89 d8                	mov    %ebx,%eax
    3384:	c7 43 70 00 00 00 00 	movl   $0x0,0x70(%ebx)
			3387: R_386_32	default_tp_ops
    338b:	e8 74 f2 ff ff       	call   2604 <ide_port_init_devices_data>
    3390:	89 7b 08             	mov    %edi,0x8(%ebx)
    3393:	8b 44 24 04          	mov    0x4(%esp),%eax
    3397:	89 1c 87             	mov    %ebx,(%edi,%eax,4)
    339a:	ff 47 14             	incl   0x14(%edi)
    339d:	ff 44 24 04          	incl   0x4(%esp)
    33a1:	8b 54 24 10          	mov    0x10(%esp),%edx
    33a5:	39 54 24 04          	cmp    %edx,0x4(%esp)
    33a9:	0f 82 2f fe ff ff    	jb     31de <ide_host_alloc+0x47>
    33af:	83 7f 14 00          	cmpl   $0x0,0x14(%edi)
    33b3:	75 0b                	jne    33c0 <ide_host_alloc+0x229>
    33b5:	89 f8                	mov    %edi,%eax
    33b7:	31 ff                	xor    %edi,%edi
    33b9:	e8 fc ff ff ff       	call   33ba <ide_host_alloc+0x223>
			33ba: R_386_PC32	kfree
    33be:	eb 29                	jmp    33e9 <ide_host_alloc+0x252>
    33c0:	8b 44 24 08          	mov    0x8(%esp),%eax
    33c4:	85 f6                	test   %esi,%esi
    33c6:	89 47 18             	mov    %eax,0x18(%edi)
    33c9:	74 1e                	je     33e9 <ide_host_alloc+0x252>
    33cb:	8b 46 04             	mov    0x4(%esi),%eax
    33ce:	89 47 20             	mov    %eax,0x20(%edi)
    33d1:	8b 46 08             	mov    0x8(%esi),%eax
    33d4:	89 47 24             	mov    %eax,0x24(%edi)
    33d7:	8b 46 0c             	mov    0xc(%esi),%eax
    33da:	89 47 28             	mov    %eax,0x28(%edi)
    33dd:	8b 46 34             	mov    0x34(%esi),%eax
    33e0:	89 47 30             	mov    %eax,0x30(%edi)
    33e3:	8b 46 38             	mov    0x38(%esi),%eax
    33e6:	89 47 34             	mov    %eax,0x34(%edi)
    33e9:	83 c4 14             	add    $0x14,%esp
    33ec:	89 f8                	mov    %edi,%eax
    33ee:	5b                   	pop    %ebx
    33ef:	5e                   	pop    %esi
    33f0:	5f                   	pop    %edi
    33f1:	5d                   	pop    %ebp
    33f2:	c3                   	ret    

000033f3 <ide_host_register>:
    33f3:	55                   	push   %ebp
    33f4:	89 d5                	mov    %edx,%ebp
    33f6:	57                   	push   %edi
    33f7:	56                   	push   %esi
    33f8:	53                   	push   %ebx
    33f9:	83 ec 14             	sub    $0x14,%esp
    33fc:	89 44 24 0c          	mov    %eax,0xc(%esp)
    3400:	89 4c 24 10          	mov    %ecx,0x10(%esp)
    3404:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)
    340b:	00 
    340c:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)
    3413:	00 
    3414:	e9 ac 01 00 00       	jmp    35c5 <ide_host_register+0x1d2>
    3419:	8b 4c 24 10          	mov    0x10(%esp),%ecx
    341d:	8d 7b 14             	lea    0x14(%ebx),%edi
    3420:	8b 54 24 04          	mov    0x4(%esp),%edx
    3424:	8b 04 91             	mov    (%ecx,%edx,4),%eax
    3427:	b9 0a 00 00 00       	mov    $0xa,%ecx
    342c:	89 c6                	mov    %eax,%esi
    342e:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)
    3430:	8b 50 28             	mov    0x28(%eax),%edx
    3433:	89 93 d8 00 00 00    	mov    %edx,0xd8(%ebx)
    3439:	8b 50 2c             	mov    0x2c(%eax),%edx
    343c:	89 53 68             	mov    %edx,0x68(%ebx)
    343f:	8b 50 30             	mov    0x30(%eax),%edx
    3442:	85 d2                	test   %edx,%edx
    3444:	75 03                	jne    3449 <ide_host_register+0x56>
    3446:	8b 50 2c             	mov    0x2c(%eax),%edx
    3449:	89 93 f4 00 00 00    	mov    %edx,0xf4(%ebx)
    344f:	8b 40 34             	mov    0x34(%eax),%eax
    3452:	89 83 e0 00 00 00    	mov    %eax,0xe0(%ebx)
    3458:	89 d8                	mov    %ebx,%eax
    345a:	e8 fc ff ff ff       	call   345b <ide_host_register+0x68>
			345b: R_386_PC32	ide_port_apply_params
    345f:	8b 44 24 04          	mov    0x4(%esp),%eax
    3463:	83 e0 01             	and    $0x1,%eax
    3466:	74 11                	je     3479 <ide_host_register+0x86>
    3468:	83 7c 24 08 00       	cmpl   $0x0,0x8(%esp)
    346d:	74 0a                	je     3479 <ide_host_register+0x86>
    346f:	8b 44 24 08          	mov    0x8(%esp),%eax
    3473:	89 03                	mov    %eax,(%ebx)
    3475:	89 18                	mov    %ebx,(%eax)
    3477:	eb 08                	jmp    3481 <ide_host_register+0x8e>
    3479:	85 c0                	test   %eax,%eax
    347b:	89 5c 24 08          	mov    %ebx,0x8(%esp)
    347f:	74 08                	je     3489 <ide_host_register+0x96>
    3481:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)
    3488:	00 
    3489:	8b 44 24 04          	mov    0x4(%esp),%eax
    348d:	b2 02                	mov    $0x2,%dl
    348f:	83 e0 01             	and    $0x1,%eax
    3492:	88 43 5a             	mov    %al,0x5a(%ebx)
    3495:	8a 45 2e             	mov    0x2e(%ebp),%al
    3498:	84 c0                	test   %al,%al
    349a:	0f 44 c2             	cmove  %edx,%eax
    349d:	88 43 65             	mov    %al,0x65(%ebx)
    34a0:	8b 55 10             	mov    0x10(%ebp),%edx
    34a3:	85 d2                	test   %edx,%edx
    34a5:	74 04                	je     34ab <ide_host_register+0xb8>
    34a7:	89 d8                	mov    %ebx,%eax
    34a9:	ff d2                	call   *%edx
    34ab:	8b 45 34             	mov    0x34(%ebp),%eax
    34ae:	09 43 5c             	or     %eax,0x5c(%ebx)
    34b1:	8a 45 3c             	mov    0x3c(%ebp),%al
    34b4:	88 43 60             	mov    %al,0x60(%ebx)
    34b7:	8b 45 1c             	mov    0x1c(%ebp),%eax
    34ba:	85 c0                	test   %eax,%eax
    34bc:	74 03                	je     34c1 <ide_host_register+0xce>
    34be:	89 43 70             	mov    %eax,0x70(%ebx)
    34c1:	f6 43 5e 20          	testb  $0x20,0x5e(%ebx)
    34c5:	74 06                	je     34cd <ide_host_register+0xda>
    34c7:	80 7b 5a 00          	cmpb   $0x0,0x5a(%ebx)
    34cb:	75 06                	jne    34d3 <ide_host_register+0xe0>
    34cd:	8b 45 20             	mov    0x20(%ebp),%eax
    34d0:	89 43 74             	mov    %eax,0x74(%ebx)
    34d3:	8a 45 3d             	mov    0x3d(%ebp),%al
    34d6:	88 43 63             	mov    %al,0x63(%ebx)
    34d9:	8a 45 3e             	mov    0x3e(%ebp),%al
    34dc:	88 43 62             	mov    %al,0x62(%ebx)
    34df:	8a 45 3f             	mov    0x3f(%ebp),%al
    34e2:	88 43 61             	mov    %al,0x61(%ebx)
    34e5:	f6 45 35 40          	testb  $0x40,0x35(%ebp)
    34e9:	75 4f                	jne    353a <ide_host_register+0x147>
    34eb:	8b 45 24             	mov    0x24(%ebp),%eax
    34ee:	89 43 78             	mov    %eax,0x78(%ebx)
    34f1:	8b 4d 18             	mov    0x18(%ebp),%ecx
    34f4:	85 c9                	test   %ecx,%ecx
    34f6:	74 08                	je     3500 <ide_host_register+0x10d>
    34f8:	89 ea                	mov    %ebp,%edx
    34fa:	89 d8                	mov    %ebx,%eax
    34fc:	ff d1                	call   *%ecx
    34fe:	eb 09                	jmp    3509 <ide_host_register+0x116>
    3500:	89 ea                	mov    %ebp,%edx
    3502:	89 d8                	mov    %ebx,%eax
    3504:	e8 fc ff ff ff       	call   3505 <ide_host_register+0x112>
			3505: R_386_PC32	ide_hwif_setup_dma
    3509:	85 c0                	test   %eax,%eax
    350b:	79 2d                	jns    353a <ide_host_register+0x147>
    350d:	8d 43 0c             	lea    0xc(%ebx),%eax
    3510:	50                   	push   %eax
    3511:	68 8d 0a 00 00       	push   $0xa8d
			3512: R_386_32	.rodata.str1.1
    3516:	e8 fc ff ff ff       	call   3517 <ide_host_register+0x124>
			3517: R_386_PC32	printk
    351b:	c7 43 78 00 00 00 00 	movl   $0x0,0x78(%ebx)
    3522:	c7 83 dc 00 00 00 00 	movl   $0x0,0xdc(%ebx)
    3529:	00 00 00 
    352c:	c6 43 63 00          	movb   $0x0,0x63(%ebx)
    3530:	c6 43 62 00          	movb   $0x0,0x62(%ebx)
    3534:	c6 43 61 00          	movb   $0x0,0x61(%ebx)
    3538:	59                   	pop    %ecx
    3539:	5e                   	pop    %esi
    353a:	8b 45 34             	mov    0x34(%ebp),%eax
    353d:	a9 00 00 10 00       	test   $0x100000,%eax
    3542:	75 10                	jne    3554 <ide_host_register+0x161>
    3544:	a9 00 00 00 08       	test   $0x8000000,%eax
    3549:	74 13                	je     355e <ide_host_register+0x16b>
    354b:	83 bb dc 00 00 00 00 	cmpl   $0x0,0xdc(%ebx)
    3552:	74 0a                	je     355e <ide_host_register+0x16b>
    3554:	8b 43 08             	mov    0x8(%ebx),%eax
    3557:	81 48 30 00 00 10 00 	orl    $0x100000,0x30(%eax)
    355e:	8b 45 30             	mov    0x30(%ebp),%eax
    3561:	66 85 c0             	test   %ax,%ax
    3564:	74 05                	je     356b <ide_host_register+0x178>
    3566:	0f b7 c0             	movzwl %ax,%eax
    3569:	eb 17                	jmp    3582 <ide_host_register+0x18f>
    356b:	8b 43 5c             	mov    0x5c(%ebx),%eax
    356e:	25 00 00 06 00       	and    $0x60000,%eax
    3573:	83 f8 01             	cmp    $0x1,%eax
    3576:	19 c0                	sbb    %eax,%eax
    3578:	25 00 ff 00 00       	and    $0xff00,%eax
    357d:	05 00 01 00 00       	add    $0x100,%eax
    3582:	89 83 d4 00 00 00    	mov    %eax,0xd4(%ebx)
    3588:	8b 55 14             	mov    0x14(%ebp),%edx
    358b:	85 d2                	test   %edx,%edx
    358d:	74 04                	je     3593 <ide_host_register+0x1a0>
    358f:	89 d8                	mov    %ebx,%eax
    3591:	ff d2                	call   *%edx
    3593:	8b 43 74             	mov    0x74(%ebx),%eax
    3596:	85 c0                	test   %eax,%eax
    3598:	74 1c                	je     35b6 <ide_host_register+0x1c3>
    359a:	8b 50 30             	mov    0x30(%eax),%edx
    359d:	85 d2                	test   %edx,%edx
    359f:	74 15                	je     35b6 <ide_host_register+0x1c3>
    35a1:	0f b6 43 61          	movzbl 0x61(%ebx),%eax
    35a5:	a8 78                	test   $0x78,%al
    35a7:	74 0d                	je     35b6 <ide_host_register+0x1c3>
    35a9:	80 7b 64 03          	cmpb   $0x3,0x64(%ebx)
    35ad:	74 07                	je     35b6 <ide_host_register+0x1c3>
    35af:	89 d8                	mov    %ebx,%eax
    35b1:	ff d2                	call   *%edx
    35b3:	88 43 64             	mov    %al,0x64(%ebx)
    35b6:	83 4b 54 01          	orl    $0x1,0x54(%ebx)
    35ba:	89 d8                	mov    %ebx,%eax
    35bc:	e8 3d eb ff ff       	call   20fe <ide_port_init_devices>
    35c1:	ff 44 24 04          	incl   0x4(%esp)
    35c5:	8b 54 24 04          	mov    0x4(%esp),%edx
    35c9:	8b 4c 24 0c          	mov    0xc(%esp),%ecx
    35cd:	8b 1c 91             	mov    (%ecx,%edx,4),%ebx
    35d0:	85 db                	test   %ebx,%ebx
    35d2:	0f 85 41 fe ff ff    	jne    3419 <ide_host_register+0x26>
    35d8:	83 fa 03             	cmp    $0x3,%edx
    35db:	7e 07                	jle    35e4 <ide_host_register+0x1f1>
    35dd:	31 ed                	xor    %ebp,%ebp
    35df:	e9 e4 00 00 00       	jmp    36c8 <ide_host_register+0x2d5>
    35e4:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)
    35eb:	00 
    35ec:	eb d3                	jmp    35c1 <ide_host_register+0x1ce>
    35ee:	89 d8                	mov    %ebx,%eax
    35f0:	e8 32 f6 ff ff       	call   2c27 <ide_probe_port>
    35f5:	85 c0                	test   %eax,%eax
    35f7:	75 07                	jne    3600 <ide_host_register+0x20d>
    35f9:	80 8b f0 00 00 00 01 	orb    $0x1,0xf0(%ebx)
    3600:	83 63 54 fe          	andl   $0xfffffffe,0x54(%ebx)
    3604:	f6 43 5e 40          	testb  $0x40,0x5e(%ebx)
    3608:	74 13                	je     361d <ide_host_register+0x22a>
    360a:	8b 03                	mov    (%ebx),%eax
    360c:	85 c0                	test   %eax,%eax
    360e:	74 0d                	je     361d <ide_host_register+0x22a>
    3610:	f6 80 f0 00 00 00 01 	testb  $0x1,0xf0(%eax)
    3617:	0f 85 9a 00 00 00    	jne    36b7 <ide_host_register+0x2c4>
    361d:	8d 7b 0c             	lea    0xc(%ebx),%edi
    3620:	8d b3 f4 00 00 00    	lea    0xf4(%ebx),%esi
    3626:	57                   	push   %edi
    3627:	56                   	push   %esi
    3628:	e8 fc ff ff ff       	call   3629 <ide_host_register+0x236>
			3629: R_386_PC32	dev_set_name
    362d:	89 da                	mov    %ebx,%edx
    362f:	89 f0                	mov    %esi,%eax
    3631:	e8 fc ff ff ff       	call   3632 <ide_host_register+0x23f>
			3632: R_386_PC32	dev_set_drvdata
    3636:	83 bb f4 00 00 00 00 	cmpl   $0x0,0xf4(%ebx)
    363d:	58                   	pop    %eax
    363e:	5a                   	pop    %edx
    363f:	75 09                	jne    364a <ide_host_register+0x257>
    3641:	8b 43 68             	mov    0x68(%ebx),%eax
    3644:	89 83 f4 00 00 00    	mov    %eax,0xf4(%ebx)
    364a:	c7 83 10 02 00 00 1c 	movl   $0x241c,0x210(%ebx)
    3651:	24 00 00 
			3650: R_386_32	.text
    3654:	89 f0                	mov    %esi,%eax
    3656:	e8 fc ff ff ff       	call   3657 <ide_host_register+0x264>
			3657: R_386_PC32	device_register
    365b:	85 c0                	test   %eax,%eax
    365d:	79 15                	jns    3674 <ide_host_register+0x281>
    365f:	50                   	push   %eax
    3660:	68 20 01 00 00       	push   $0x120
			3661: R_386_32	.rodata
    3665:	68 4e 07 00 00       	push   $0x74e
			3666: R_386_32	.rodata.str1.1
    366a:	e8 fc ff ff ff       	call   366b <ide_host_register+0x278>
			366b: R_386_PC32	printk
    366f:	83 c4 0c             	add    $0xc,%esp
    3672:	eb 3a                	jmp    36ae <ide_host_register+0x2bb>
    3674:	57                   	push   %edi
    3675:	53                   	push   %ebx
    3676:	6a 00                	push   $0x0
    3678:	56                   	push   %esi
    3679:	ff 35 00 00 00 00    	pushl  0x0
			367b: R_386_32	ide_port_class
    367f:	89 44 24 14          	mov    %eax,0x14(%esp)
    3683:	e8 fc ff ff ff       	call   3684 <ide_host_register+0x291>
			3684: R_386_PC32	device_create
    3688:	83 c4 14             	add    $0x14,%esp
    368b:	3d 00 f0 ff ff       	cmp    $0xfffff000,%eax
    3690:	89 83 14 02 00 00    	mov    %eax,0x214(%ebx)
    3696:	8b 14 24             	mov    (%esp),%edx
    3699:	76 0f                	jbe    36aa <ide_host_register+0x2b7>
    369b:	89 c2                	mov    %eax,%edx
    369d:	89 f0                	mov    %esi,%eax
    369f:	89 14 24             	mov    %edx,(%esp)
    36a2:	e8 fc ff ff ff       	call   36a3 <ide_host_register+0x2b0>
			36a3: R_386_PC32	device_unregister
    36a7:	8b 14 24             	mov    (%esp),%edx
    36aa:	85 d2                	test   %edx,%edx
    36ac:	74 09                	je     36b7 <ide_host_register+0x2c4>
    36ae:	89 d8                	mov    %ebx,%eax
    36b0:	e8 1d ee ff ff       	call   24d2 <ide_disable_port>
    36b5:	eb 10                	jmp    36c7 <ide_host_register+0x2d4>
    36b7:	f6 83 f0 00 00 00 01 	testb  $0x1,0xf0(%ebx)
    36be:	74 07                	je     36c7 <ide_host_register+0x2d4>
    36c0:	89 d8                	mov    %ebx,%eax
    36c2:	e8 3a eb ff ff       	call   2201 <ide_port_tune_devices>
    36c7:	45                   	inc    %ebp
    36c8:	8b 44 24 0c          	mov    0xc(%esp),%eax
    36cc:	8b 1c a8             	mov    (%eax,%ebp,4),%ebx
    36cf:	85 db                	test   %ebx,%ebx
    36d1:	0f 85 17 ff ff ff    	jne    35ee <ide_host_register+0x1fb>
    36d7:	83 fd 03             	cmp    $0x3,%ebp
    36da:	7e eb                	jle    36c7 <ide_host_register+0x2d4>
    36dc:	31 f6                	xor    %esi,%esi
    36de:	eb 1c                	jmp    36fc <ide_host_register+0x309>
    36e0:	8b 53 70             	mov    0x70(%ebx),%edx
    36e3:	89 d8                	mov    %ebx,%eax
    36e5:	ff 52 04             	call   *0x4(%edx)
    36e8:	83 7b 34 00          	cmpl   $0x0,0x34(%ebx)
    36ec:	74 0d                	je     36fb <ide_host_register+0x308>
    36ee:	8b 4b 70             	mov    0x70(%ebx),%ecx
    36f1:	ba 08 00 00 00       	mov    $0x8,%edx
    36f6:	89 d8                	mov    %ebx,%eax
    36f8:	ff 51 0c             	call   *0xc(%ecx)
    36fb:	46                   	inc    %esi
    36fc:	8b 54 24 0c          	mov    0xc(%esp),%edx
    3700:	8b 1c b2             	mov    (%edx,%esi,4),%ebx
    3703:	85 db                	test   %ebx,%ebx
    3705:	75 d9                	jne    36e0 <ide_host_register+0x2ed>
    3707:	83 fe 03             	cmp    $0x3,%esi
    370a:	7e ef                	jle    36fb <ide_host_register+0x308>
    370c:	31 ff                	xor    %edi,%edi
    370e:	89 fd                	mov    %edi,%ebp
    3710:	e9 68 01 00 00       	jmp    387d <ide_host_register+0x48a>
    3715:	83 bb d8 00 00 00 00 	cmpl   $0x0,0xd8(%ebx)
    371c:	8d 73 0c             	lea    0xc(%ebx),%esi
    371f:	75 12                	jne    3733 <ide_host_register+0x340>
    3721:	56                   	push   %esi
    3722:	68 a2 0a 00 00       	push   $0xaa2
			3723: R_386_32	.rodata.str1.1
    3727:	e8 fc ff ff ff       	call   3728 <ide_host_register+0x335>
			3728: R_386_PC32	printk
    372c:	59                   	pop    %ecx
    372d:	5e                   	pop    %esi
    372e:	e9 10 01 00 00       	jmp    3843 <ide_host_register+0x450>
    3733:	0f b6 43 58          	movzbl 0x58(%ebx),%eax
    3737:	89 f2                	mov    %esi,%edx
    3739:	e8 fc ff ff ff       	call   373a <ide_host_register+0x347>
			373a: R_386_PC32	register_blkdev
    373e:	85 c0                	test   %eax,%eax
    3740:	0f 85 fd 00 00 00    	jne    3843 <ide_host_register+0x450>
    3746:	83 bb 90 00 00 00 00 	cmpl   $0x0,0x90(%ebx)
    374d:	75 0a                	jne    3759 <ide_host_register+0x366>
    374f:	c7 83 90 00 00 00 00 	movl   $0x100,0x90(%ebx)
    3756:	01 00 00 
    3759:	6b 83 90 00 00 00 14 	imul   $0x14,0x90(%ebx),%eax
    3760:	ba d0 00 00 00       	mov    $0xd0,%edx
    3765:	e8 fc ff ff ff       	call   3766 <ide_host_register+0x373>
			3766: R_386_PC32	__kmalloc
    376a:	85 c0                	test   %eax,%eax
    376c:	89 83 8c 00 00 00    	mov    %eax,0x8c(%ebx)
    3772:	75 12                	jne    3786 <ide_host_register+0x393>
    3774:	56                   	push   %esi
    3775:	68 bb 0a 00 00       	push   $0xabb
			3776: R_386_32	.rodata.str1.1
    377a:	e8 fc ff ff ff       	call   377b <ide_host_register+0x388>
			377b: R_386_PC32	printk
    377f:	58                   	pop    %eax
    3780:	5a                   	pop    %edx
    3781:	e9 b2 00 00 00       	jmp    3838 <ide_host_register+0x445>
    3786:	8b 93 90 00 00 00    	mov    0x90(%ebx),%edx
    378c:	e8 fc ff ff ff       	call   378d <ide_host_register+0x39a>
			378d: R_386_PC32	sg_init_table
    3791:	8b 4b 08             	mov    0x8(%ebx),%ecx
    3794:	b8 00 00 00 00       	mov    $0x0,%eax
			3795: R_386_32	ide_intr
    3799:	8b 51 2c             	mov    0x2c(%ecx),%edx
    379c:	85 d2                	test   %edx,%edx
    379e:	0f 44 d0             	cmove  %eax,%edx
    37a1:	8b 83 d8 00 00 00    	mov    0xd8(%ebx),%eax
    37a7:	53                   	push   %ebx
    37a8:	56                   	push   %esi
    37a9:	ff 71 34             	pushl  0x34(%ecx)
    37ac:	31 c9                	xor    %ecx,%ecx
    37ae:	e8 fc ff ff ff       	call   37af <ide_host_register+0x3bc>
			37af: R_386_PC32	request_threaded_irq
    37b3:	83 c4 0c             	add    $0xc,%esp
    37b6:	85 c0                	test   %eax,%eax
    37b8:	75 6a                	jne    3824 <ide_host_register+0x431>
    37ba:	ff b3 d8 00 00 00    	pushl  0xd8(%ebx)
    37c0:	ff 73 34             	pushl  0x34(%ebx)
    37c3:	ff 73 30             	pushl  0x30(%ebx)
    37c6:	ff 73 14             	pushl  0x14(%ebx)
    37c9:	56                   	push   %esi
    37ca:	68 e0 0a 00 00       	push   $0xae0
			37cb: R_386_32	.rodata.str1.1
    37cf:	e8 fc ff ff ff       	call   37d0 <ide_host_register+0x3dd>
			37d0: R_386_PC32	printk
    37d4:	8b 43 08             	mov    0x8(%ebx),%eax
    37d7:	83 c4 18             	add    $0x18,%esp
    37da:	f6 40 32 10          	testb  $0x10,0x32(%eax)
    37de:	74 0b                	je     37eb <ide_host_register+0x3f8>
    37e0:	68 0b 0b 00 00       	push   $0xb0b
			37e1: R_386_32	.rodata.str1.1
    37e5:	e8 fc ff ff ff       	call   37e6 <ide_host_register+0x3f3>
			37e6: R_386_PC32	printk
    37ea:	5e                   	pop    %esi
    37eb:	68 1c 0b 00 00       	push   $0xb1c
			37ec: R_386_32	.rodata.str1.1
    37f0:	e8 fc ff ff ff       	call   37f1 <ide_host_register+0x3fe>
			37f1: R_386_PC32	printk
    37f5:	0f b6 43 58          	movzbl 0x58(%ebx),%eax
    37f9:	b9 00 00 00 00       	mov    $0x0,%ecx
			37fa: R_386_32	__this_module
    37fe:	ba 80 00 00 00       	mov    $0x80,%edx
    3803:	c1 e0 14             	shl    $0x14,%eax
    3806:	53                   	push   %ebx
    3807:	68 f4 20 00 00       	push   $0x20f4
			3808: R_386_32	.text
    380c:	68 09 27 00 00       	push   $0x2709
			380d: R_386_32	.text
    3811:	e8 fc ff ff ff       	call   3812 <ide_host_register+0x41f>
			3812: R_386_PC32	blk_register_region
    3816:	83 c4 10             	add    $0x10,%esp
    3819:	f6 83 f0 00 00 00 01 	testb  $0x1,0xf0(%ebx)
    3820:	74 59                	je     387b <ide_host_register+0x488>
    3822:	eb 43                	jmp    3867 <ide_host_register+0x474>
    3824:	ff b3 d8 00 00 00    	pushl  0xd8(%ebx)
    382a:	56                   	push   %esi
    382b:	68 21 0b 00 00       	push   $0xb21
			382c: R_386_32	.rodata.str1.1
    3830:	e8 fc ff ff ff       	call   3831 <ide_host_register+0x43e>
			3831: R_386_PC32	printk
    3835:	83 c4 0c             	add    $0xc,%esp
    3838:	0f b6 43 58          	movzbl 0x58(%ebx),%eax
    383c:	89 f2                	mov    %esi,%edx
    383e:	e8 fc ff ff ff       	call   383f <ide_host_register+0x44c>
			383f: R_386_PC32	unregister_blkdev
    3843:	8d 43 0c             	lea    0xc(%ebx),%eax
    3846:	50                   	push   %eax
    3847:	68 48 0b 00 00       	push   $0xb48
			3848: R_386_32	.rodata.str1.1
    384c:	e8 fc ff ff ff       	call   384d <ide_host_register+0x45a>
			384d: R_386_PC32	printk
    3851:	8d 83 f4 00 00 00    	lea    0xf4(%ebx),%eax
    3857:	e8 fc ff ff ff       	call   3858 <ide_host_register+0x465>
			3858: R_386_PC32	device_unregister
    385c:	89 d8                	mov    %ebx,%eax
    385e:	e8 6f ec ff ff       	call   24d2 <ide_disable_port>
    3863:	5a                   	pop    %edx
    3864:	59                   	pop    %ecx
    3865:	eb 15                	jmp    387c <ide_host_register+0x489>
    3867:	89 d8                	mov    %ebx,%eax
    3869:	e8 02 ea ff ff       	call   2270 <ide_port_setup_devices>
    386e:	85 c0                	test   %eax,%eax
    3870:	75 09                	jne    387b <ide_host_register+0x488>
    3872:	80 a3 f0 00 00 00 fe 	andb   $0xfe,0xf0(%ebx)
    3879:	eb 01                	jmp    387c <ide_host_register+0x489>
    387b:	45                   	inc    %ebp
    387c:	47                   	inc    %edi
    387d:	8b 54 24 0c          	mov    0xc(%esp),%edx
    3881:	8b 1c ba             	mov    (%edx,%edi,4),%ebx
    3884:	85 db                	test   %ebx,%ebx
    3886:	0f 85 89 fe ff ff    	jne    3715 <ide_host_register+0x322>
    388c:	83 ff 03             	cmp    $0x3,%edi
    388f:	7e eb                	jle    387c <ide_host_register+0x489>
    3891:	89 ef                	mov    %ebp,%edi
    3893:	eb 0f                	jmp    38a4 <ide_host_register+0x4b1>
    3895:	f6 80 f0 00 00 00 01 	testb  $0x1,0xf0(%eax)
    389c:	74 05                	je     38a3 <ide_host_register+0x4b0>
    389e:	e8 b9 ea ff ff       	call   235c <hwif_register_devices>
    38a3:	43                   	inc    %ebx
    38a4:	8b 4c 24 0c          	mov    0xc(%esp),%ecx
    38a8:	8b 04 99             	mov    (%ecx,%ebx,4),%eax
    38ab:	85 c0                	test   %eax,%eax
    38ad:	75 e6                	jne    3895 <ide_host_register+0x4a2>
    38af:	83 fb 03             	cmp    $0x3,%ebx
    38b2:	7e ef                	jle    38a3 <ide_host_register+0x4b0>
    38b4:	31 f6                	xor    %esi,%esi
    38b6:	eb 1f                	jmp    38d7 <ide_host_register+0x4e4>
    38b8:	89 d8                	mov    %ebx,%eax
    38ba:	e8 fc ff ff ff       	call   38bb <ide_host_register+0x4c8>
			38bb: R_386_PC32	ide_sysfs_register_port
    38bf:	89 d8                	mov    %ebx,%eax
    38c1:	e8 fc ff ff ff       	call   38c2 <ide_host_register+0x4cf>
			38c2: R_386_PC32	ide_proc_register_port
    38c6:	f6 83 f0 00 00 00 01 	testb  $0x1,0xf0(%ebx)
    38cd:	74 07                	je     38d6 <ide_host_register+0x4e3>
    38cf:	89 d8                	mov    %ebx,%eax
    38d1:	e8 fc ff ff ff       	call   38d2 <ide_host_register+0x4df>
			38d2: R_386_PC32	ide_proc_port_register_devices
    38d6:	46                   	inc    %esi
    38d7:	8b 44 24 0c          	mov    0xc(%esp),%eax
    38db:	8b 1c b0             	mov    (%eax,%esi,4),%ebx
    38de:	85 db                	test   %ebx,%ebx
    38e0:	75 d6                	jne    38b8 <ide_host_register+0x4c5>
    38e2:	83 fe 03             	cmp    $0x3,%esi
    38e5:	7e ef                	jle    38d6 <ide_host_register+0x4e3>
    38e7:	83 ff 01             	cmp    $0x1,%edi
    38ea:	19 c0                	sbb    %eax,%eax
    38ec:	83 c4 14             	add    $0x14,%esp
    38ef:	5b                   	pop    %ebx
    38f0:	5e                   	pop    %esi
    38f1:	5f                   	pop    %edi
    38f2:	5d                   	pop    %ebp
    38f3:	c3                   	ret    

000038f4 <ide_host_add>:
    38f4:	55                   	push   %ebp
    38f5:	57                   	push   %edi
    38f6:	89 c7                	mov    %eax,%edi
    38f8:	56                   	push   %esi
    38f9:	89 d6                	mov    %edx,%esi
    38fb:	53                   	push   %ebx
    38fc:	83 ec 04             	sub    $0x4,%esp
    38ff:	8b 6c 24 18          	mov    0x18(%esp),%ebp
    3903:	e8 fc ff ff ff       	call   3904 <ide_host_add+0x10>
			3904: R_386_PC32	ide_host_alloc
    3908:	ba f4 ff ff ff       	mov    $0xfffffff4,%edx
    390d:	85 c0                	test   %eax,%eax
    390f:	89 c3                	mov    %eax,%ebx
    3911:	74 25                	je     3938 <ide_host_add+0x44>
    3913:	89 fa                	mov    %edi,%edx
    3915:	89 f1                	mov    %esi,%ecx
    3917:	e8 fc ff ff ff       	call   3918 <ide_host_add+0x24>
			3918: R_386_PC32	ide_host_register
    391c:	85 c0                	test   %eax,%eax
    391e:	89 c2                	mov    %eax,%edx
    3920:	74 0f                	je     3931 <ide_host_add+0x3d>
    3922:	89 d8                	mov    %ebx,%eax
    3924:	89 14 24             	mov    %edx,(%esp)
    3927:	e8 fc ff ff ff       	call   3928 <ide_host_add+0x34>
			3928: R_386_PC32	ide_host_free
    392c:	8b 14 24             	mov    (%esp),%edx
    392f:	eb 07                	jmp    3938 <ide_host_add+0x44>
    3931:	85 ed                	test   %ebp,%ebp
    3933:	74 03                	je     3938 <ide_host_add+0x44>
    3935:	89 5d 00             	mov    %ebx,0x0(%ebp)
    3938:	5f                   	pop    %edi
    3939:	89 d0                	mov    %edx,%eax
    393b:	5b                   	pop    %ebx
    393c:	5e                   	pop    %esi
    393d:	5f                   	pop    %edi
    393e:	5d                   	pop    %ebp
    393f:	c3                   	ret    

00003940 <ide_tf_readback>:
    3940:	55                   	push   %ebp
    3941:	89 c5                	mov    %eax,%ebp
    3943:	57                   	push   %edi
    3944:	56                   	push   %esi
    3945:	53                   	push   %ebx
    3946:	8b 78 28             	mov    0x28(%eax),%edi
    3949:	89 d3                	mov    %edx,%ebx
    394b:	ba 08 00 00 00       	mov    $0x8,%edx
    3950:	8b 77 70             	mov    0x70(%edi),%esi
    3953:	89 f8                	mov    %edi,%eax
    3955:	ff 56 0c             	call   *0xc(%esi)
    3958:	0f b6 4b 12          	movzbl 0x12(%ebx),%ecx
    395c:	89 da                	mov    %ebx,%edx
    395e:	89 e8                	mov    %ebp,%eax
    3960:	ff 56 18             	call   *0x18(%esi)
    3963:	f6 43 14 01          	testb  $0x1,0x14(%ebx)
    3967:	74 16                	je     397f <ide_tf_readback+0x3f>
    3969:	ba 88 00 00 00       	mov    $0x88,%edx
    396e:	89 f8                	mov    %edi,%eax
    3970:	ff 56 0c             	call   *0xc(%esi)
    3973:	0f b6 4b 13          	movzbl 0x13(%ebx),%ecx
    3977:	8d 53 08             	lea    0x8(%ebx),%edx
    397a:	89 e8                	mov    %ebp,%eax
    397c:	ff 56 18             	call   *0x18(%esi)
    397f:	5b                   	pop    %ebx
    3980:	5e                   	pop    %esi
    3981:	5f                   	pop    %edi
    3982:	5d                   	pop    %ebp
    3983:	c3                   	ret    

00003984 <ide_tf_dump>:
    3984:	c3                   	ret    

00003985 <ide_raw_taskfile>:
    3985:	55                   	push   %ebp
    3986:	57                   	push   %edi
    3987:	89 d7                	mov    %edx,%edi
    3989:	56                   	push   %esi
    398a:	89 c6                	mov    %eax,%esi
    398c:	53                   	push   %ebx
    398d:	31 d2                	xor    %edx,%edx
    398f:	83 ec 04             	sub    $0x4,%esp
    3992:	89 0c 24             	mov    %ecx,(%esp)
    3995:	8b 40 10             	mov    0x10(%eax),%eax
    3998:	b9 10 00 00 00       	mov    $0x10,%ecx
    399d:	8b 6c 24 18          	mov    0x18(%esp),%ebp
    39a1:	e8 fc ff ff ff       	call   39a2 <ide_raw_taskfile+0x1d>
			39a2: R_386_PC32	blk_get_request
    39a6:	c7 40 28 09 00 00 00 	movl   $0x9,0x28(%eax)
    39ad:	89 c3                	mov    %eax,%ebx
    39af:	f6 47 14 02          	testb  $0x2,0x14(%edi)
    39b3:	74 04                	je     39b9 <ide_raw_taskfile+0x34>
    39b5:	83 48 24 01          	orl    $0x1,0x24(%eax)
    39b9:	66 85 ed             	test   %bp,%bp
    39bc:	74 1f                	je     39dd <ide_raw_taskfile+0x58>
    39be:	0f b7 ed             	movzwl %bp,%ebp
    39c1:	8b 46 10             	mov    0x10(%esi),%eax
    39c4:	89 da                	mov    %ebx,%edx
    39c6:	6a 10                	push   $0x10
    39c8:	c1 e5 09             	shl    $0x9,%ebp
    39cb:	55                   	push   %ebp
    39cc:	8b 4c 24 08          	mov    0x8(%esp),%ecx
    39d0:	e8 fc ff ff ff       	call   39d1 <ide_raw_taskfile+0x4c>
			39d1: R_386_PC32	blk_rq_map_kern
    39d5:	89 c5                	mov    %eax,%ebp
    39d7:	85 ed                	test   %ebp,%ebp
    39d9:	58                   	pop    %eax
    39da:	5a                   	pop    %edx
    39db:	75 17                	jne    39f4 <ide_raw_taskfile+0x6f>
    39dd:	89 7b 6c             	mov    %edi,0x6c(%ebx)
    39e0:	89 d9                	mov    %ebx,%ecx
    39e2:	31 d2                	xor    %edx,%edx
    39e4:	89 5f 3c             	mov    %ebx,0x3c(%edi)
    39e7:	8b 46 10             	mov    0x10(%esi),%eax
    39ea:	6a 00                	push   $0x0
    39ec:	e8 fc ff ff ff       	call   39ed <ide_raw_taskfile+0x68>
			39ed: R_386_PC32	blk_execute_rq
    39f1:	59                   	pop    %ecx
    39f2:	89 c5                	mov    %eax,%ebp
    39f4:	89 d8                	mov    %ebx,%eax
    39f6:	e8 fc ff ff ff       	call   39f7 <ide_raw_taskfile+0x72>
			39f7: R_386_PC32	blk_put_request
    39fb:	89 e8                	mov    %ebp,%eax
    39fd:	5a                   	pop    %edx
    39fe:	5b                   	pop    %ebx
    39ff:	5e                   	pop    %esi
    3a00:	5f                   	pop    %edi
    3a01:	5d                   	pop    %ebp
    3a02:	c3                   	ret    

00003a03 <ide_no_data_taskfile>:
    3a03:	31 c9                	xor    %ecx,%ecx
    3a05:	c7 42 18 01 00 00 00 	movl   $0x1,0x18(%edx)
    3a0c:	6a 00                	push   $0x0
    3a0e:	e8 fc ff ff ff       	call   3a0f <ide_no_data_taskfile+0xc>
			3a0f: R_386_PC32	ide_raw_taskfile
    3a13:	59                   	pop    %ecx
    3a14:	c3                   	ret    

00003a15 <taskfile_lib_get_identify>:
    3a15:	57                   	push   %edi
    3a16:	b9 10 00 00 00       	mov    $0x10,%ecx
    3a1b:	56                   	push   %esi
    3a1c:	89 d6                	mov    %edx,%esi
    3a1e:	53                   	push   %ebx
    3a1f:	89 c3                	mov    %eax,%ebx
    3a21:	83 ec 40             	sub    $0x40,%esp
    3a24:	31 c0                	xor    %eax,%eax
    3a26:	89 e2                	mov    %esp,%edx
    3a28:	89 e7                	mov    %esp,%edi
    3a2a:	f3 ab                	rep stos %eax,%es:(%edi)
    3a2c:	80 7b 46 20          	cmpb   $0x20,0x46(%ebx)
    3a30:	b1 a1                	mov    $0xa1,%cl
    3a32:	b0 ec                	mov    $0xec,%al
    3a34:	c6 44 24 02 01       	movb   $0x1,0x2(%esp)
    3a39:	0f 45 c1             	cmovne %ecx,%eax
    3a3c:	89 f1                	mov    %esi,%ecx
    3a3e:	88 44 24 07          	mov    %al,0x7(%esp)
    3a42:	89 d8                	mov    %ebx,%eax
    3a44:	c6 44 24 10 7e       	movb   $0x7e,0x10(%esp)
    3a49:	c6 44 24 12 7c       	movb   $0x7c,0x12(%esp)
    3a4e:	c7 44 24 18 02 00 00 	movl   $0x2,0x18(%esp)
    3a55:	00 
    3a56:	6a 01                	push   $0x1
    3a58:	e8 fc ff ff ff       	call   3a59 <taskfile_lib_get_identify+0x44>
			3a59: R_386_PC32	ide_raw_taskfile
    3a5d:	83 c4 44             	add    $0x44,%esp
    3a60:	5b                   	pop    %ebx
    3a61:	5e                   	pop    %esi
    3a62:	5f                   	pop    %edi
    3a63:	c3                   	ret    

00003a64 <ide_finish_cmd>:
    3a64:	55                   	push   %ebp
    3a65:	57                   	push   %edi
    3a66:	56                   	push   %esi
    3a67:	53                   	push   %ebx
    3a68:	89 c3                	mov    %eax,%ebx
    3a6a:	83 ec 08             	sub    $0x8,%esp
    3a6d:	88 4c 24 07          	mov    %cl,0x7(%esp)
    3a71:	8b 40 28             	mov    0x28(%eax),%eax
    3a74:	8b a8 38 02 00 00    	mov    0x238(%eax),%ebp
    3a7a:	89 d8                	mov    %ebx,%eax
    3a7c:	89 14 24             	mov    %edx,(%esp)
    3a7f:	e8 fc ff ff ff       	call   3a80 <ide_finish_cmd+0x1c>
			3a80: R_386_PC32	ide_read_error
    3a84:	8b 14 24             	mov    (%esp),%edx
    3a87:	0f b6 4c 24 07       	movzbl 0x7(%esp),%ecx
    3a8c:	88 44 24 05          	mov    %al,0x5(%esp)
    3a90:	0f b6 74 24 05       	movzbl 0x5(%esp),%esi
    3a95:	8a 42 02             	mov    0x2(%edx),%al
    3a98:	88 44 24 06          	mov    %al,0x6(%esp)
    3a9c:	89 d8                	mov    %ebx,%eax
    3a9e:	0f b7 7a 14          	movzwl 0x14(%edx),%edi
    3aa2:	56                   	push   %esi
    3aa3:	e8 fc ff ff ff       	call   3aa4 <ide_finish_cmd+0x40>
			3aa4: R_386_PC32	ide_complete_cmd
    3aa8:	89 75 78             	mov    %esi,0x78(%ebp)
    3aab:	81 e7 00 01 00 00    	and    $0x100,%edi
    3ab1:	58                   	pop    %eax
    3ab2:	80 7c 24 05 00       	cmpb   $0x0,0x5(%esp)
    3ab7:	75 17                	jne    3ad0 <ide_finish_cmd+0x6c>
    3ab9:	85 ff                	test   %edi,%edi
    3abb:	74 13                	je     3ad0 <ide_finish_cmd+0x6c>
    3abd:	0f b6 54 24 06       	movzbl 0x6(%esp),%edx
    3ac2:	89 d8                	mov    %ebx,%eax
    3ac4:	e8 fc ff ff ff       	call   3ac5 <ide_finish_cmd+0x61>
			3ac5: R_386_PC32	ide_set_xfer_rate
    3ac9:	89 d8                	mov    %ebx,%eax
    3acb:	e8 fc ff ff ff       	call   3acc <ide_finish_cmd+0x68>
			3acc: R_386_PC32	ide_driveid_update
    3ad0:	80 7c 24 05 01       	cmpb   $0x1,0x5(%esp)
    3ad5:	89 d8                	mov    %ebx,%eax
    3ad7:	8b 4d 38             	mov    0x38(%ebp),%ecx
    3ada:	5b                   	pop    %ebx
    3adb:	19 d2                	sbb    %edx,%edx
    3add:	5e                   	pop    %esi
    3ade:	f7 d2                	not    %edx
    3ae0:	5b                   	pop    %ebx
    3ae1:	83 e2 fb             	and    $0xfffffffb,%edx
    3ae4:	5e                   	pop    %esi
    3ae5:	5f                   	pop    %edi
    3ae6:	5d                   	pop    %ebp
    3ae7:	e9 fc ff ff ff       	jmp    3ae8 <ide_finish_cmd+0x84>
			3ae8: R_386_PC32	ide_complete_rq

00003aec <ide_pio_bytes>:
    3aec:	55                   	push   %ebp
    3aed:	57                   	push   %edi
    3aee:	56                   	push   %esi
    3aef:	89 d6                	mov    %edx,%esi
    3af1:	53                   	push   %ebx
    3af2:	83 ec 18             	sub    $0x18,%esp
    3af5:	8b 7e 34             	mov    0x34(%esi),%edi
    3af8:	89 44 24 08          	mov    %eax,0x8(%esp)
    3afc:	89 4c 24 14          	mov    %ecx,0x14(%esp)
    3b00:	8b 40 28             	mov    0x28(%eax),%eax
    3b03:	85 ff                	test   %edi,%edi
    3b05:	89 44 24 10          	mov    %eax,0x10(%esp)
    3b09:	8b 80 8c 00 00 00    	mov    0x8c(%eax),%eax
    3b0f:	0f 85 24 01 00 00    	jne    3c39 <ide_pio_bytes+0x14d>
    3b15:	89 46 34             	mov    %eax,0x34(%esi)
    3b18:	89 c7                	mov    %eax,%edi
    3b1a:	e9 1a 01 00 00       	jmp    3c39 <ide_pio_bytes+0x14d>
    3b1f:	8b 5e 38             	mov    0x38(%esi),%ebx
    3b22:	b8 00 10 00 00       	mov    $0x1000,%eax
    3b27:	8b 6f 08             	mov    0x8(%edi),%ebp
    3b2a:	8b 15 00 00 00 00    	mov    0x0,%edx
			3b2c: R_386_32	mem_map
    3b30:	29 dd                	sub    %ebx,%ebp
    3b32:	81 fd 00 10 00 00    	cmp    $0x1000,%ebp
    3b38:	0f 47 e8             	cmova  %eax,%ebp
    3b3b:	8b 07                	mov    (%edi),%eax
    3b3d:	3b 6c 24 2c          	cmp    0x2c(%esp),%ebp
    3b41:	0f 47 6c 24 2c       	cmova  0x2c(%esp),%ebp
    3b46:	03 5f 04             	add    0x4(%edi),%ebx
    3b49:	83 e0 fc             	and    $0xfffffffc,%eax
    3b4c:	29 d0                	sub    %edx,%eax
    3b4e:	89 d9                	mov    %ebx,%ecx
    3b50:	c1 f8 05             	sar    $0x5,%eax
    3b53:	c1 e9 0c             	shr    $0xc,%ecx
    3b56:	8d 0c 08             	lea    (%eax,%ecx,1),%ecx
    3b59:	c1 e1 05             	shl    $0x5,%ecx
    3b5c:	8d 0c 0a             	lea    (%edx,%ecx,1),%ecx
    3b5f:	8b 01                	mov    (%ecx),%eax
    3b61:	c1 e8 1e             	shr    $0x1e,%eax
    3b64:	69 c0 00 0b 00 00    	imul   $0xb00,%eax,%eax
    3b6a:	05 00 00 00 00       	add    $0x0,%eax
			3b6b: R_386_32	contig_page_data
    3b6f:	2b 80 ec 0a 00 00    	sub    0xaec(%eax),%eax
    3b75:	3d 00 16 00 00       	cmp    $0x1600,%eax
    3b7a:	74 10                	je     3b8c <ide_pio_bytes+0xa0>
    3b7c:	3d 00 21 00 00       	cmp    $0x2100,%eax
    3b81:	75 22                	jne    3ba5 <ide_pio_bytes+0xb9>
    3b83:	83 3d 00 00 00 00 02 	cmpl   $0x2,0x0
			3b85: R_386_32	movable_zone
    3b8a:	75 19                	jne    3ba5 <ide_pio_bytes+0xb9>
    3b8c:	ff 15 00 00 00 00    	call   *0x0
			3b8e: R_386_32	pv_irq_ops
    3b92:	89 04 24             	mov    %eax,(%esp)
    3b95:	ff 15 08 00 00 00    	call   *0x8
			3b97: R_386_32	pv_irq_ops
    3b9b:	c7 44 24 0c 01 00 00 	movl   $0x1,0xc(%esp)
    3ba2:	00 
    3ba3:	eb 08                	jmp    3bad <ide_pio_bytes+0xc1>
    3ba5:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)
    3bac:	00 
    3bad:	ba 05 00 00 00       	mov    $0x5,%edx
    3bb2:	89 c8                	mov    %ecx,%eax
    3bb4:	e8 fc ff ff ff       	call   3bb5 <ide_pio_bytes+0xc9>
			3bb5: R_386_PC32	kmap_atomic
    3bb9:	81 e3 ff 0f 00 00    	and    $0xfff,%ebx
    3bbf:	29 6e 2c             	sub    %ebp,0x2c(%esi)
    3bc2:	8d 1c 18             	lea    (%eax,%ebx,1),%ebx
    3bc5:	8b 46 38             	mov    0x38(%esi),%eax
    3bc8:	89 5c 24 04          	mov    %ebx,0x4(%esp)
    3bcc:	01 e8                	add    %ebp,%eax
    3bce:	89 46 38             	mov    %eax,0x38(%esi)
    3bd1:	3b 47 08             	cmp    0x8(%edi),%eax
    3bd4:	75 14                	jne    3bea <ide_pio_bytes+0xfe>
    3bd6:	8b 46 34             	mov    0x34(%esi),%eax
    3bd9:	e8 fc ff ff ff       	call   3bda <ide_pio_bytes+0xee>
			3bda: R_386_PC32	sg_next
    3bde:	c7 46 38 00 00 00 00 	movl   $0x0,0x38(%esi)
    3be5:	89 c7                	mov    %eax,%edi
    3be7:	89 46 34             	mov    %eax,0x34(%esi)
    3bea:	8b 54 24 10          	mov    0x10(%esp),%edx
    3bee:	83 7c 24 14 00       	cmpl   $0x0,0x14(%esp)
    3bf3:	8b 5a 70             	mov    0x70(%edx),%ebx
    3bf6:	74 10                	je     3c08 <ide_pio_bytes+0x11c>
    3bf8:	55                   	push   %ebp
    3bf9:	8b 4c 24 08          	mov    0x8(%esp),%ecx
    3bfd:	89 f2                	mov    %esi,%edx
    3bff:	8b 44 24 0c          	mov    0xc(%esp),%eax
    3c03:	ff 53 20             	call   *0x20(%ebx)
    3c06:	eb 0e                	jmp    3c16 <ide_pio_bytes+0x12a>
    3c08:	55                   	push   %ebp
    3c09:	8b 4c 24 08          	mov    0x8(%esp),%ecx
    3c0d:	89 f2                	mov    %esi,%edx
    3c0f:	8b 44 24 0c          	mov    0xc(%esp),%eax
    3c13:	ff 53 1c             	call   *0x1c(%ebx)
    3c16:	5a                   	pop    %edx
    3c17:	ba 05 00 00 00       	mov    $0x5,%edx
    3c1c:	8b 44 24 04          	mov    0x4(%esp),%eax
    3c20:	e8 fc ff ff ff       	call   3c21 <ide_pio_bytes+0x135>
			3c21: R_386_PC32	kunmap_atomic
    3c25:	83 7c 24 0c 00       	cmpl   $0x0,0xc(%esp)
    3c2a:	74 09                	je     3c35 <ide_pio_bytes+0x149>
    3c2c:	8b 04 24             	mov    (%esp),%eax
    3c2f:	ff 15 04 00 00 00    	call   *0x4
			3c31: R_386_32	pv_irq_ops
    3c35:	29 6c 24 2c          	sub    %ebp,0x2c(%esp)
    3c39:	83 7c 24 2c 00       	cmpl   $0x0,0x2c(%esp)
    3c3e:	0f 85 db fe ff ff    	jne    3b1f <ide_pio_bytes+0x33>
    3c44:	83 c4 18             	add    $0x18,%esp
    3c47:	5b                   	pop    %ebx
    3c48:	5e                   	pop    %esi
    3c49:	5f                   	pop    %edi
    3c4a:	5d                   	pop    %ebp
    3c4b:	c3                   	ret    

00003c4c <ide_pio_datablock>:
    3c4c:	56                   	push   %esi
    3c4d:	53                   	push   %ebx
    3c4e:	89 c3                	mov    %eax,%ebx
    3c50:	83 ec 0c             	sub    $0xc,%esp
    3c53:	8a 40 4a             	mov    0x4a(%eax),%al
    3c56:	88 44 24 0b          	mov    %al,0xb(%esp)
    3c5a:	f6 42 14 40          	testb  $0x40,0x14(%edx)
    3c5e:	74 0a                	je     3c6a <ide_pio_datablock+0x1e>
    3c60:	8b 42 3c             	mov    0x3c(%edx),%eax
    3c63:	c7 40 78 00 00 00 00 	movl   $0x0,0x78(%eax)
    3c6a:	f6 42 14 10          	testb  $0x10,0x14(%edx)
    3c6e:	74 04                	je     3c74 <ide_pio_datablock+0x28>
    3c70:	c6 43 4a 00          	movb   $0x0,0x4a(%ebx)
    3c74:	89 54 24 04          	mov    %edx,0x4(%esp)
    3c78:	89 0c 24             	mov    %ecx,(%esp)
    3c7b:	e8 fc ff ff ff       	call   3c7c <ide_pio_datablock+0x30>
			3c7c: R_386_PC32	touch_softlockup_watchdog
    3c80:	b8 00 02 00 00       	mov    $0x200,%eax
    3c85:	8b 54 24 04          	mov    0x4(%esp),%edx
    3c89:	8b 0c 24             	mov    (%esp),%ecx
    3c8c:	80 7a 14 00          	cmpb   $0x0,0x14(%edx)
    3c90:	79 0f                	jns    3ca1 <ide_pio_datablock+0x55>
    3c92:	0f b6 43 48          	movzbl 0x48(%ebx),%eax
    3c96:	8b 72 2c             	mov    0x2c(%edx),%esi
    3c99:	c1 e0 09             	shl    $0x9,%eax
    3c9c:	39 f0                	cmp    %esi,%eax
    3c9e:	0f 47 c6             	cmova  %esi,%eax
    3ca1:	50                   	push   %eax
    3ca2:	89 d8                	mov    %ebx,%eax
    3ca4:	e8 fc ff ff ff       	call   3ca5 <ide_pio_datablock+0x59>
			3ca5: R_386_PC32	ide_pio_bytes
    3ca9:	8a 44 24 0f          	mov    0xf(%esp),%al
    3cad:	88 43 4a             	mov    %al,0x4a(%ebx)
    3cb0:	83 c4 10             	add    $0x10,%esp
    3cb3:	5b                   	pop    %ebx
    3cb4:	5e                   	pop    %esi
    3cb5:	c3                   	ret    

00003cb6 <do_rw_taskfile>:
    3cb6:	55                   	push   %ebp
    3cb7:	89 c5                	mov    %eax,%ebp
    3cb9:	57                   	push   %edi
    3cba:	56                   	push   %esi
    3cbb:	53                   	push   %ebx
    3cbc:	83 ec 14             	sub    $0x14,%esp
    3cbf:	8b 58 28             	mov    0x28(%eax),%ebx
    3cc2:	8b 43 70             	mov    0x70(%ebx),%eax
    3cc5:	89 44 24 04          	mov    %eax,0x4(%esp)
    3cc9:	8b 4b 78             	mov    0x78(%ebx),%ecx
    3ccc:	89 4c 24 08          	mov    %ecx,0x8(%esp)
    3cd0:	83 7a 18 02          	cmpl   $0x2,0x18(%edx)
    3cd4:	75 20                	jne    3cf6 <do_rw_taskfile+0x40>
    3cd6:	80 7a 14 00          	cmpb   $0x0,0x14(%edx)
    3cda:	79 1a                	jns    3cf6 <do_rw_taskfile+0x40>
    3cdc:	80 7d 48 00          	cmpb   $0x0,0x48(%ebp)
    3ce0:	75 14                	jne    3cf6 <do_rw_taskfile+0x40>
    3ce2:	55                   	push   %ebp
    3ce3:	68 73 0b 00 00       	push   $0xb73
			3ce4: R_386_32	.rodata.str1.1
    3ce8:	e8 fc ff ff ff       	call   3ce9 <do_rw_taskfile+0x33>
			3ce9: R_386_PC32	printk
    3ced:	31 c0                	xor    %eax,%eax
    3cef:	5a                   	pop    %edx
    3cf0:	59                   	pop    %ecx
    3cf1:	e9 fc 01 00 00       	jmp    3ef2 <do_rw_taskfile+0x23c>
    3cf6:	8a 42 16             	mov    0x16(%edx),%al
    3cf9:	a8 01                	test   $0x1,%al
    3cfb:	74 06                	je     3d03 <do_rw_taskfile+0x4d>
    3cfd:	83 c8 02             	or     $0x2,%eax
    3d00:	88 42 16             	mov    %al,0x16(%edx)
    3d03:	8d b3 94 00 00 00    	lea    0x94(%ebx),%esi
    3d09:	b9 10 00 00 00       	mov    $0x10,%ecx
    3d0e:	89 34 24             	mov    %esi,(%esp)
    3d11:	89 f7                	mov    %esi,%edi
    3d13:	89 d6                	mov    %edx,%esi
    3d15:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)
    3d17:	f6 83 a8 00 00 00 08 	testb  $0x8,0xa8(%ebx)
    3d1e:	0f 85 9d 00 00 00    	jne    3dc1 <do_rw_taskfile+0x10b>
    3d24:	8b 4c 24 04          	mov    0x4(%esp),%ecx
    3d28:	ba 08 00 00 00       	mov    $0x8,%edx
    3d2d:	89 d8                	mov    %ebx,%eax
    3d2f:	ff 51 0c             	call   *0xc(%ecx)
    3d32:	f6 83 aa 00 00 00 04 	testb  $0x4,0xaa(%ebx)
    3d39:	74 28                	je     3d63 <do_rw_taskfile+0xad>
    3d3b:	8a 83 9c 00 00 00    	mov    0x9c(%ebx),%al
    3d41:	8d 4c 24 12          	lea    0x12(%esp),%ecx
    3d45:	8a 93 94 00 00 00    	mov    0x94(%ebx),%dl
    3d4b:	88 44 24 13          	mov    %al,0x13(%esp)
    3d4f:	89 e8                	mov    %ebp,%eax
    3d51:	88 54 24 12          	mov    %dl,0x12(%esp)
    3d55:	6a 02                	push   $0x2
    3d57:	8b 74 24 08          	mov    0x8(%esp),%esi
    3d5b:	8b 54 24 04          	mov    0x4(%esp),%edx
    3d5f:	ff 56 20             	call   *0x20(%esi)
    3d62:	58                   	pop    %eax
    3d63:	f6 83 a4 00 00 00 40 	testb  $0x40,0xa4(%ebx)
    3d6a:	74 2d                	je     3d99 <do_rw_taskfile+0xe3>
    3d6c:	0f b7 83 a8 00 00 00 	movzwl 0xa8(%ebx),%eax
    3d73:	83 e0 01             	and    $0x1,%eax
    3d76:	83 f8 01             	cmp    $0x1,%eax
    3d79:	19 c0                	sbb    %eax,%eax
    3d7b:	83 e0 0f             	and    $0xf,%eax
    3d7e:	83 e8 20             	sub    $0x20,%eax
    3d81:	f6 83 aa 00 00 00 01 	testb  $0x1,0xaa(%ebx)
    3d88:	75 06                	jne    3d90 <do_rw_taskfile+0xda>
    3d8a:	20 83 9a 00 00 00    	and    %al,0x9a(%ebx)
    3d90:	8a 45 3d             	mov    0x3d(%ebp),%al
    3d93:	08 83 9a 00 00 00    	or     %al,0x9a(%ebx)
    3d99:	8b 74 24 04          	mov    0x4(%esp),%esi
    3d9d:	8d 93 9c 00 00 00    	lea    0x9c(%ebx),%edx
    3da3:	89 e8                	mov    %ebp,%eax
    3da5:	0f b6 8b a5 00 00 00 	movzbl 0xa5(%ebx),%ecx
    3dac:	ff 56 14             	call   *0x14(%esi)
    3daf:	0f b6 8b a4 00 00 00 	movzbl 0xa4(%ebx),%ecx
    3db6:	8d 93 94 00 00 00    	lea    0x94(%ebx),%edx
    3dbc:	89 e8                	mov    %ebp,%eax
    3dbe:	ff 56 14             	call   *0x14(%esi)
    3dc1:	8b 93 ac 00 00 00    	mov    0xac(%ebx),%edx
    3dc7:	83 fa 02             	cmp    $0x2,%edx
    3dca:	74 1a                	je     3de6 <do_rw_taskfile+0x130>
    3dcc:	83 fa 03             	cmp    $0x3,%edx
    3dcf:	0f 84 de 00 00 00    	je     3eb3 <do_rw_taskfile+0x1fd>
    3dd5:	4a                   	dec    %edx
    3dd6:	b8 01 00 00 00       	mov    $0x1,%eax
    3ddb:	0f 85 11 01 00 00    	jne    3ef2 <do_rw_taskfile+0x23c>
    3de1:	e9 b6 00 00 00       	jmp    3e9c <do_rw_taskfile+0x1e6>
    3de6:	f6 83 a8 00 00 00 02 	testb  $0x2,0xa8(%ebx)
    3ded:	b9 fa 3e 00 00       	mov    $0x3efa,%ecx
			3dee: R_386_32	.text
    3df2:	0f 84 a9 00 00 00    	je     3ea1 <do_rw_taskfile+0x1eb>
    3df8:	8b 4c 24 04          	mov    0x4(%esp),%ecx
    3dfc:	89 d8                	mov    %ebx,%eax
    3dfe:	0f b6 93 9b 00 00 00 	movzbl 0x9b(%ebx),%edx
    3e05:	ff 11                	call   *(%ecx)
    3e07:	b8 d0 07 00 00       	mov    $0x7d0,%eax
    3e0c:	e8 fc ff ff ff       	call   3e0d <do_rw_taskfile+0x157>
			3e0d: R_386_PC32	__const_udelay
    3e11:	b9 08 00 00 00       	mov    $0x8,%ecx
    3e16:	8d 44 24 0c          	lea    0xc(%esp),%eax
    3e1a:	6a 19                	push   $0x19
    3e1c:	0f b6 55 4b          	movzbl 0x4b(%ebp),%edx
    3e20:	52                   	push   %edx
    3e21:	89 ea                	mov    %ebp,%edx
    3e23:	e8 fc ff ff ff       	call   3e24 <do_rw_taskfile+0x16e>
			3e24: R_386_PC32	ide_wait_stat
    3e28:	5e                   	pop    %esi
    3e29:	5f                   	pop    %edi
    3e2a:	85 c0                	test   %eax,%eax
    3e2c:	8b 45 30             	mov    0x30(%ebp),%eax
    3e2f:	74 3a                	je     3e6b <do_rw_taskfile+0x1b5>
    3e31:	a9 00 00 20 00       	test   $0x200000,%eax
    3e36:	ba 8e 0b 00 00       	mov    $0xb8e,%edx
			3e37: R_386_32	.rodata.str1.1
    3e3b:	b8 8f 0b 00 00       	mov    $0xb8f,%eax
			3e3c: R_386_32	.rodata.str1.1
    3e40:	b9 94 0b 00 00       	mov    $0xb94,%ecx
			3e41: R_386_32	.rodata.str1.1
    3e45:	0f 44 c2             	cmove  %edx,%eax
    3e48:	80 bb a8 00 00 00 00 	cmpb   $0x0,0xa8(%ebx)
    3e4f:	50                   	push   %eax
    3e50:	0f 48 d1             	cmovs  %ecx,%edx
    3e53:	52                   	push   %edx
    3e54:	55                   	push   %ebp
    3e55:	68 99 0b 00 00       	push   $0xb99
			3e56: R_386_32	.rodata.str1.1
    3e5a:	e8 fc ff ff ff       	call   3e5b <do_rw_taskfile+0x1a5>
			3e5b: R_386_PC32	printk
    3e5f:	8b 44 24 1c          	mov    0x1c(%esp),%eax
    3e63:	83 c4 10             	add    $0x10,%esp
    3e66:	e9 87 00 00 00       	jmp    3ef2 <do_rw_taskfile+0x23c>
    3e6b:	a8 04                	test   $0x4,%al
    3e6d:	75 06                	jne    3e75 <do_rw_taskfile+0x1bf>
    3e6f:	ff 15 08 00 00 00    	call   *0x8
			3e71: R_386_32	pv_irq_ops
    3e75:	b9 4c 1d 00 00       	mov    $0x1d4c,%ecx
    3e7a:	ba fa 3e 00 00       	mov    $0x3efa,%edx
			3e7b: R_386_32	.text
    3e7f:	89 e8                	mov    %ebp,%eax
    3e81:	e8 fc ff ff ff       	call   3e82 <do_rw_taskfile+0x1cc>
			3e82: R_386_PC32	ide_set_handler
    3e86:	89 e8                	mov    %ebp,%eax
    3e88:	b9 01 00 00 00       	mov    $0x1,%ecx
    3e8d:	8b 14 24             	mov    (%esp),%edx
    3e90:	e8 b7 fd ff ff       	call   3c4c <ide_pio_datablock>
    3e95:	b8 01 00 00 00       	mov    $0x1,%eax
    3e9a:	eb 56                	jmp    3ef2 <do_rw_taskfile+0x23c>
    3e9c:	b9 ac 40 00 00       	mov    $0x40ac,%ecx
			3e9d: R_386_32	.text
    3ea1:	68 4c 1d 00 00       	push   $0x1d4c
    3ea6:	8b 54 24 04          	mov    0x4(%esp),%edx
    3eaa:	89 e8                	mov    %ebp,%eax
    3eac:	e8 fc ff ff ff       	call   3ead <do_rw_taskfile+0x1f7>
			3ead: R_386_PC32	ide_execute_command
    3eb1:	eb 39                	jmp    3eec <do_rw_taskfile+0x236>
    3eb3:	8b 14 24             	mov    (%esp),%edx
    3eb6:	89 e8                	mov    %ebp,%eax
    3eb8:	e8 fc ff ff ff       	call   3eb9 <do_rw_taskfile+0x203>
			3eb9: R_386_PC32	ide_dma_prepare
    3ebd:	89 c2                	mov    %eax,%edx
    3ebf:	31 c0                	xor    %eax,%eax
    3ec1:	85 d2                	test   %edx,%edx
    3ec3:	75 2d                	jne    3ef2 <do_rw_taskfile+0x23c>
    3ec5:	8b 74 24 08          	mov    0x8(%esp),%esi
    3ec9:	b9 00 00 00 00       	mov    $0x0,%ecx
			3eca: R_386_32	ide_dma_intr
    3ece:	8b 46 1c             	mov    0x1c(%esi),%eax
    3ed1:	89 83 70 02 00 00    	mov    %eax,0x270(%ebx)
    3ed7:	89 e8                	mov    %ebp,%eax
    3ed9:	68 88 13 00 00       	push   $0x1388
    3ede:	8b 54 24 04          	mov    0x4(%esp),%edx
    3ee2:	e8 fc ff ff ff       	call   3ee3 <do_rw_taskfile+0x22d>
			3ee3: R_386_PC32	ide_execute_command
    3ee7:	89 e8                	mov    %ebp,%eax
    3ee9:	ff 56 08             	call   *0x8(%esi)
    3eec:	59                   	pop    %ecx
    3eed:	b8 01 00 00 00       	mov    $0x1,%eax
    3ef2:	83 c4 14             	add    $0x14,%esp
    3ef5:	5b                   	pop    %ebx
    3ef6:	5e                   	pop    %esi
    3ef7:	5f                   	pop    %edi
    3ef8:	5d                   	pop    %ebp
    3ef9:	c3                   	ret    

00003efa <task_pio_intr>:
    3efa:	55                   	push   %ebp
    3efb:	57                   	push   %edi
    3efc:	56                   	push   %esi
    3efd:	89 c6                	mov    %eax,%esi
    3eff:	53                   	push   %ebx
    3f00:	83 ec 08             	sub    $0x8,%esp
    3f03:	8b 58 28             	mov    0x28(%eax),%ebx
    3f06:	8d 83 94 00 00 00    	lea    0x94(%ebx),%eax
    3f0c:	89 44 24 04          	mov    %eax,0x4(%esp)
    3f10:	8b 53 70             	mov    0x70(%ebx),%edx
    3f13:	89 d8                	mov    %ebx,%eax
    3f15:	ff 52 04             	call   *0x4(%edx)
    3f18:	89 c7                	mov    %eax,%edi
    3f1a:	0f b7 83 a8 00 00 00 	movzwl 0xa8(%ebx),%eax
    3f21:	d1 e8                	shr    %eax
    3f23:	88 c2                	mov    %al,%dl
    3f25:	80 e2 01             	and    $0x1,%dl
    3f28:	88 14 24             	mov    %dl,(%esp)
    3f2b:	75 24                	jne    3f51 <task_pio_intr+0x57>
    3f2d:	89 f9                	mov    %edi,%ecx
    3f2f:	0f b6 c1             	movzbl %cl,%eax
    3f32:	a8 01                	test   $0x1,%al
    3f34:	0f 85 08 01 00 00    	jne    4042 <task_pio_intr+0x148>
    3f3a:	a8 08                	test   $0x8,%al
    3f3c:	75 4b                	jne    3f89 <task_pio_intr+0x8f>
    3f3e:	25 c0 00 00 00       	and    $0xc0,%eax
    3f43:	83 f8 40             	cmp    $0x40,%eax
    3f46:	0f 85 a4 00 00 00    	jne    3ff0 <task_pio_intr+0xf6>
    3f4c:	e9 ba 00 00 00       	jmp    400b <task_pio_intr+0x111>
    3f51:	8a 46 4b             	mov    0x4b(%esi),%al
    3f54:	83 c8 50             	or     $0x50,%eax
    3f57:	21 f8                	and    %edi,%eax
    3f59:	3c 50                	cmp    $0x50,%al
    3f5b:	0f 85 e1 00 00 00    	jne    4042 <task_pio_intr+0x148>
    3f61:	83 bb c0 00 00 00 00 	cmpl   $0x0,0xc0(%ebx)
    3f68:	89 f9                	mov    %edi,%ecx
    3f6a:	0f b6 c1             	movzbl %cl,%eax
    3f6d:	0f 94 c2             	sete   %dl
    3f70:	c1 e8 03             	shr    $0x3,%eax
    3f73:	83 f0 01             	xor    $0x1,%eax
    3f76:	83 e0 01             	and    $0x1,%eax
    3f79:	38 d0                	cmp    %dl,%al
    3f7b:	0f 85 c1 00 00 00    	jne    4042 <task_pio_intr+0x148>
    3f81:	84 d2                	test   %dl,%dl
    3f83:	0f 85 82 00 00 00    	jne    400b <task_pio_intr+0x111>
    3f89:	0f b6 0c 24          	movzbl (%esp),%ecx
    3f8d:	89 f0                	mov    %esi,%eax
    3f8f:	8b 54 24 04          	mov    0x4(%esp),%edx
    3f93:	e8 b4 fc ff ff       	call   3c4c <ide_pio_datablock>
    3f98:	80 3c 24 00          	cmpb   $0x0,(%esp)
    3f9c:	75 52                	jne    3ff0 <task_pio_intr+0xf6>
    3f9e:	83 bb c0 00 00 00 00 	cmpl   $0x0,0xc0(%ebx)
    3fa5:	75 49                	jne    3ff0 <task_pio_intr+0xf6>
    3fa7:	8b 46 28             	mov    0x28(%esi),%eax
    3faa:	31 ed                	xor    %ebp,%ebp
    3fac:	89 04 24             	mov    %eax,(%esp)
    3faf:	8b 0c 24             	mov    (%esp),%ecx
    3fb2:	8b 51 70             	mov    0x70(%ecx),%edx
    3fb5:	89 c8                	mov    %ecx,%eax
    3fb7:	ff 52 04             	call   *0x4(%edx)
    3fba:	84 c0                	test   %al,%al
    3fbc:	89 c7                	mov    %eax,%edi
    3fbe:	79 13                	jns    3fd3 <task_pio_intr+0xd9>
    3fc0:	b8 c6 a7 00 00       	mov    $0xa7c6,%eax
    3fc5:	45                   	inc    %ebp
    3fc6:	e8 fc ff ff ff       	call   3fc7 <task_pio_intr+0xcd>
			3fc7: R_386_PC32	__const_udelay
    3fcb:	81 fd e8 03 00 00    	cmp    $0x3e8,%ebp
    3fd1:	75 dc                	jne    3faf <task_pio_intr+0xb5>
    3fd3:	89 f8                	mov    %edi,%eax
    3fd5:	84 c0                	test   %al,%al
    3fd7:	79 0d                	jns    3fe6 <task_pio_intr+0xec>
    3fd9:	56                   	push   %esi
    3fda:	68 c0 0b 00 00       	push   $0xbc0
			3fdb: R_386_32	.rodata.str1.1
    3fdf:	e8 fc ff ff ff       	call   3fe0 <task_pio_intr+0xe6>
			3fe0: R_386_PC32	printk
    3fe4:	58                   	pop    %eax
    3fe5:	5a                   	pop    %edx
    3fe6:	f7 c7 89 00 00 00    	test   $0x89,%edi
    3fec:	75 54                	jne    4042 <task_pio_intr+0x148>
    3fee:	eb 1b                	jmp    400b <task_pio_intr+0x111>
    3ff0:	89 f0                	mov    %esi,%eax
    3ff2:	b9 4c 1d 00 00       	mov    $0x1d4c,%ecx
    3ff7:	ba fa 3e 00 00       	mov    $0x3efa,%edx
			3ff8: R_386_32	.text
    3ffc:	e8 fc ff ff ff       	call   3ffd <task_pio_intr+0x103>
			3ffd: R_386_PC32	ide_set_handler
    4001:	b8 01 00 00 00       	mov    $0x1,%eax
    4006:	e9 9a 00 00 00       	jmp    40a5 <task_pio_intr+0x1ab>
    400b:	f6 83 a8 00 00 00 40 	testb  $0x40,0xa8(%ebx)
    4012:	75 12                	jne    4026 <task_pio_intr+0x12c>
    4014:	89 fa                	mov    %edi,%edx
    4016:	89 f0                	mov    %esi,%eax
    4018:	0f b6 ca             	movzbl %dl,%ecx
    401b:	8b 54 24 04          	mov    0x4(%esp),%edx
    401f:	e8 fc ff ff ff       	call   4020 <task_pio_intr+0x126>
			4020: R_386_PC32	ide_finish_cmd
    4024:	eb 18                	jmp    403e <task_pio_intr+0x144>
    4026:	8b 83 d0 00 00 00    	mov    0xd0(%ebx),%eax
    402c:	31 d2                	xor    %edx,%edx
    402e:	8b 48 38             	mov    0x38(%eax),%ecx
    4031:	89 f0                	mov    %esi,%eax
    4033:	81 e1 00 fe ff ff    	and    $0xfffffe00,%ecx
    4039:	e8 fc ff ff ff       	call   403a <task_pio_intr+0x140>
			403a: R_386_PC32	ide_complete_rq
    403e:	31 c0                	xor    %eax,%eax
    4040:	eb 63                	jmp    40a5 <task_pio_intr+0x1ab>
    4042:	0f b7 83 a8 00 00 00 	movzwl 0xa8(%ebx),%eax
    4049:	a8 40                	test   $0x40,%al
    404b:	74 41                	je     408e <task_pio_intr+0x194>
    404d:	8b 93 c0 00 00 00    	mov    0xc0(%ebx),%edx
    4053:	8b 8b bc 00 00 00    	mov    0xbc(%ebx),%ecx
    4059:	29 d1                	sub    %edx,%ecx
    405b:	83 bb ac 00 00 00 02 	cmpl   $0x2,0xac(%ebx)
    4062:	75 1d                	jne    4081 <task_pio_intr+0x187>
    4064:	a8 02                	test   $0x2,%al
    4066:	75 04                	jne    406c <task_pio_intr+0x172>
    4068:	85 d2                	test   %edx,%edx
    406a:	75 15                	jne    4081 <task_pio_intr+0x187>
    406c:	84 c0                	test   %al,%al
    406e:	79 0b                	jns    407b <task_pio_intr+0x181>
    4070:	0f b6 46 48          	movzbl 0x48(%esi),%eax
    4074:	c1 e0 09             	shl    $0x9,%eax
    4077:	29 c1                	sub    %eax,%ecx
    4079:	eb 06                	jmp    4081 <task_pio_intr+0x187>
    407b:	81 e9 00 02 00 00    	sub    $0x200,%ecx
    4081:	85 c9                	test   %ecx,%ecx
    4083:	7e 09                	jle    408e <task_pio_intr+0x194>
    4085:	31 d2                	xor    %edx,%edx
    4087:	89 f0                	mov    %esi,%eax
    4089:	e8 fc ff ff ff       	call   408a <task_pio_intr+0x190>
			408a: R_386_PC32	ide_complete_rq
    408e:	89 f8                	mov    %edi,%eax
    4090:	ba 64 01 00 00       	mov    $0x164,%edx
			4091: R_386_32	.rodata
    4095:	5f                   	pop    %edi
    4096:	0f b6 c8             	movzbl %al,%ecx
    4099:	5d                   	pop    %ebp
    409a:	89 f0                	mov    %esi,%eax
    409c:	5b                   	pop    %ebx
    409d:	5e                   	pop    %esi
    409e:	5f                   	pop    %edi
    409f:	5d                   	pop    %ebp
    40a0:	e9 fc ff ff ff       	jmp    40a1 <task_pio_intr+0x1a7>
			40a1: R_386_PC32	ide_error
    40a5:	5b                   	pop    %ebx
    40a6:	5e                   	pop    %esi
    40a7:	5b                   	pop    %ebx
    40a8:	5e                   	pop    %esi
    40a9:	5f                   	pop    %edi
    40aa:	5d                   	pop    %ebp
    40ab:	c3                   	ret    

000040ac <task_no_data_intr>:
    40ac:	55                   	push   %ebp
    40ad:	57                   	push   %edi
    40ae:	56                   	push   %esi
    40af:	53                   	push   %ebx
    40b0:	8b 70 28             	mov    0x28(%eax),%esi
    40b3:	89 c3                	mov    %eax,%ebx
    40b5:	0f b7 ae a8 00 00 00 	movzwl 0xa8(%esi),%ebp
    40bc:	c1 ed 02             	shr    $0x2,%ebp
    40bf:	83 e5 01             	and    $0x1,%ebp
    40c2:	74 0e                	je     40d2 <task_no_data_intr+0x26>
    40c4:	80 be 9b 00 00 00 91 	cmpb   $0x91,0x9b(%esi)
    40cb:	bf 05 00 00 00       	mov    $0x5,%edi
    40d0:	74 05                	je     40d7 <task_no_data_intr+0x2b>
    40d2:	bf 01 00 00 00       	mov    $0x1,%edi
    40d7:	ff 15 0c 00 00 00    	call   *0xc
			40d9: R_386_32	pv_irq_ops
    40dd:	8b 56 70             	mov    0x70(%esi),%edx
    40e0:	89 f0                	mov    %esi,%eax
    40e2:	ff 52 04             	call   *0x4(%edx)
    40e5:	84 c0                	test   %al,%al
    40e7:	79 11                	jns    40fa <task_no_data_intr+0x4e>
    40e9:	85 ff                	test   %edi,%edi
    40eb:	74 0d                	je     40fa <task_no_data_intr+0x4e>
    40ed:	b8 c6 a7 00 00       	mov    $0xa7c6,%eax
    40f2:	4f                   	dec    %edi
    40f3:	e8 fc ff ff ff       	call   40f4 <task_no_data_intr+0x48>
			40f4: R_386_PC32	__const_udelay
    40f8:	eb e3                	jmp    40dd <task_no_data_intr+0x31>
    40fa:	0f b6 c8             	movzbl %al,%ecx
    40fd:	89 c8                	mov    %ecx,%eax
    40ff:	25 c9 00 00 00       	and    $0xc9,%eax
    4104:	83 f8 40             	cmp    $0x40,%eax
    4107:	74 59                	je     4162 <task_no_data_intr+0xb6>
    4109:	85 ed                	test   %ebp,%ebp
    410b:	74 45                	je     4152 <task_no_data_intr+0xa6>
    410d:	8a 86 9b 00 00 00    	mov    0x9b(%esi),%al
    4113:	3c c6                	cmp    $0xc6,%al
    4115:	75 1a                	jne    4131 <task_no_data_intr+0x85>
    4117:	80 4b 3c 02          	orb    $0x2,0x3c(%ebx)
    411b:	ba 50 01 00 00       	mov    $0x150,%edx
			411c: R_386_32	.rodata
    4120:	89 d8                	mov    %ebx,%eax
    4122:	c6 43 48 00          	movb   $0x0,0x48(%ebx)
    4126:	c6 43 49 00          	movb   $0x0,0x49(%ebx)
    412a:	e8 fc ff ff ff       	call   412b <task_no_data_intr+0x7f>
			412b: R_386_PC32	ide_dump_status
    412f:	eb 74                	jmp    41a5 <task_no_data_intr+0xf9>
    4131:	3c 91                	cmp    $0x91,%al
    4133:	75 1d                	jne    4152 <task_no_data_intr+0xa6>
    4135:	f6 c1 09             	test   $0x9,%cl
    4138:	75 18                	jne    4152 <task_no_data_intr+0xa6>
    413a:	89 d8                	mov    %ebx,%eax
    413c:	b9 4c 1d 00 00       	mov    $0x1d4c,%ecx
    4141:	ba ac 40 00 00       	mov    $0x40ac,%edx
			4142: R_386_32	.text
    4146:	e8 fc ff ff ff       	call   4147 <task_no_data_intr+0x9b>
			4147: R_386_PC32	ide_set_handler
    414b:	b8 01 00 00 00       	mov    $0x1,%eax
    4150:	eb 55                	jmp    41a7 <task_no_data_intr+0xfb>
    4152:	89 d8                	mov    %ebx,%eax
    4154:	ba da 0b 00 00       	mov    $0xbda,%edx
			4155: R_386_32	.rodata.str1.1
    4159:	5b                   	pop    %ebx
    415a:	5e                   	pop    %esi
    415b:	5f                   	pop    %edi
    415c:	5d                   	pop    %ebp
    415d:	e9 fc ff ff ff       	jmp    415e <task_no_data_intr+0xb2>
			415e: R_386_PC32	ide_error
    4162:	85 ed                	test   %ebp,%ebp
    4164:	74 18                	je     417e <task_no_data_intr+0xd2>
    4166:	80 be 9b 00 00 00 c6 	cmpb   $0xc6,0x9b(%esi)
    416d:	75 3d                	jne    41ac <task_no_data_intr+0x100>
    416f:	8a 43 49             	mov    0x49(%ebx),%al
    4172:	88 43 48             	mov    %al,0x48(%ebx)
    4175:	eb 35                	jmp    41ac <task_no_data_intr+0x100>
    4177:	31 c0                	xor    %eax,%eax
    4179:	80 fa e5             	cmp    $0xe5,%dl
    417c:	75 29                	jne    41a7 <task_no_data_intr+0xfb>
    417e:	8b 96 38 02 00 00    	mov    0x238(%esi),%edx
    4184:	8b 42 28             	mov    0x28(%edx),%eax
    4187:	83 e8 04             	sub    $0x4,%eax
    418a:	83 f8 01             	cmp    $0x1,%eax
    418d:	77 09                	ja     4198 <task_no_data_intr+0xec>
    418f:	89 d8                	mov    %ebx,%eax
    4191:	e8 fc ff ff ff       	call   4192 <task_no_data_intr+0xe6>
			4192: R_386_PC32	ide_complete_pm_rq
    4196:	eb 0d                	jmp    41a5 <task_no_data_intr+0xf9>
    4198:	8d 96 94 00 00 00    	lea    0x94(%esi),%edx
    419e:	89 d8                	mov    %ebx,%eax
    41a0:	e8 fc ff ff ff       	call   41a1 <task_no_data_intr+0xf5>
			41a1: R_386_PC32	ide_finish_cmd
    41a5:	31 c0                	xor    %eax,%eax
    41a7:	5b                   	pop    %ebx
    41a8:	5e                   	pop    %esi
    41a9:	5f                   	pop    %edi
    41aa:	5d                   	pop    %ebp
    41ab:	c3                   	ret    
    41ac:	8a 96 9b 00 00 00    	mov    0x9b(%esi),%dl
    41b2:	80 fa e1             	cmp    $0xe1,%dl
    41b5:	75 c0                	jne    4177 <task_no_data_intr+0xcb>
    41b7:	eb c5                	jmp    417e <task_no_data_intr+0xd2>
    41b9:	90                   	nop
    41ba:	90                   	nop
    41bb:	90                   	nop

000041bc <ide_complete_power_step>:
    41bc:	80 78 46 20          	cmpb   $0x20,0x46(%eax)
    41c0:	8b 52 6c             	mov    0x6c(%edx),%edx
    41c3:	75 41                	jne    4206 <ide_complete_power_step+0x4a>
    41c5:	8b 02                	mov    (%edx),%eax
    41c7:	83 f8 01             	cmp    $0x1,%eax
    41ca:	74 26                	je     41f2 <ide_complete_power_step+0x36>
    41cc:	7f 05                	jg     41d3 <ide_complete_power_step+0x17>
    41ce:	85 c0                	test   %eax,%eax
    41d0:	74 0d                	je     41df <ide_complete_power_step+0x23>
    41d2:	c3                   	ret    
    41d3:	83 f8 02             	cmp    $0x2,%eax
    41d6:	74 21                	je     41f9 <ide_complete_power_step+0x3d>
    41d8:	83 f8 03             	cmp    $0x3,%eax
    41db:	75 29                	jne    4206 <ide_complete_power_step+0x4a>
    41dd:	eb 21                	jmp    4200 <ide_complete_power_step+0x44>
    41df:	31 c0                	xor    %eax,%eax
    41e1:	83 7a 04 01          	cmpl   $0x1,0x4(%edx)
    41e5:	0f 94 c0             	sete   %al
    41e8:	8d 04 85 01 00 00 00 	lea    0x1(,%eax,4),%eax
    41ef:	89 02                	mov    %eax,(%edx)
    41f1:	c3                   	ret    
    41f2:	c7 02 05 00 00 00    	movl   $0x5,(%edx)
    41f8:	c3                   	ret    
    41f9:	c7 02 03 00 00 00    	movl   $0x3,(%edx)
    41ff:	c3                   	ret    
    4200:	c7 02 04 00 00 00    	movl   $0x4,(%edx)
    4206:	c3                   	ret    

00004207 <ide_check_pm_state>:
    4207:	55                   	push   %ebp
    4208:	57                   	push   %edi
    4209:	56                   	push   %esi
    420a:	53                   	push   %ebx
    420b:	89 c3                	mov    %eax,%ebx
    420d:	8b 42 6c             	mov    0x6c(%edx),%eax
    4210:	8b 52 28             	mov    0x28(%edx),%edx
    4213:	83 fa 04             	cmp    $0x4,%edx
    4216:	75 15                	jne    422d <ide_check_pm_state+0x26>
    4218:	83 38 00             	cmpl   $0x0,(%eax)
    421b:	0f 85 8c 00 00 00    	jne    42ad <ide_check_pm_state+0xa6>
    4221:	81 4b 30 00 00 02 00 	orl    $0x20000,0x30(%ebx)
    4228:	e9 80 00 00 00       	jmp    42ad <ide_check_pm_state+0xa6>
    422d:	83 fa 05             	cmp    $0x5,%edx
    4230:	75 7b                	jne    42ad <ide_check_pm_state+0xa6>
    4232:	83 38 02             	cmpl   $0x2,(%eax)
    4235:	75 76                	jne    42ad <ide_check_pm_state+0xa6>
    4237:	8b 73 28             	mov    0x28(%ebx),%esi
    423a:	66 ba b8 88          	mov    $0x88b8,%dx
    423e:	8b 7b 10             	mov    0x10(%ebx),%edi
    4241:	89 f0                	mov    %esi,%eax
    4243:	8b 6e 70             	mov    0x70(%esi),%ebp
    4246:	e8 fc ff ff ff       	call   4247 <ide_check_pm_state+0x40>
			4247: R_386_PC32	ide_wait_not_busy
    424b:	85 c0                	test   %eax,%eax
    424d:	74 0d                	je     425c <ide_check_pm_state+0x55>
    424f:	53                   	push   %ebx
    4250:	68 ec 0b 00 00       	push   $0xbec
			4251: R_386_32	.rodata.str1.1
    4255:	e8 fc ff ff ff       	call   4256 <ide_check_pm_state+0x4f>
			4256: R_386_PC32	printk
    425a:	59                   	pop    %ecx
    425b:	58                   	pop    %eax
    425c:	89 d8                	mov    %ebx,%eax
    425e:	ff 55 10             	call   *0x10(%ebp)
    4261:	ba 08 00 00 00       	mov    $0x8,%edx
    4266:	89 f0                	mov    %esi,%eax
    4268:	ff 55 0c             	call   *0xc(%ebp)
    426b:	ba a0 86 01 00       	mov    $0x186a0,%edx
    4270:	89 f0                	mov    %esi,%eax
    4272:	e8 fc ff ff ff       	call   4273 <ide_check_pm_state+0x6c>
			4273: R_386_PC32	ide_wait_not_busy
    4277:	85 c0                	test   %eax,%eax
    4279:	74 0d                	je     4288 <ide_check_pm_state+0x81>
    427b:	53                   	push   %ebx
    427c:	68 0c 0c 00 00       	push   $0xc0c
			427d: R_386_32	.rodata.str1.1
    4281:	e8 fc ff ff ff       	call   4282 <ide_check_pm_state+0x7b>
			4282: R_386_PC32	printk
    4286:	58                   	pop    %eax
    4287:	5a                   	pop    %edx
    4288:	8b 87 b8 01 00 00    	mov    0x1b8(%edi),%eax
    428e:	e8 fc ff ff ff       	call   428f <ide_check_pm_state+0x88>
			428f: R_386_PC32	_spin_lock_irqsave
    4293:	89 c3                	mov    %eax,%ebx
    4295:	89 f8                	mov    %edi,%eax
    4297:	e8 fc ff ff ff       	call   4298 <ide_check_pm_state+0x91>
			4298: R_386_PC32	blk_start_queue
    429c:	8b 87 b8 01 00 00    	mov    0x1b8(%edi),%eax
    42a2:	89 da                	mov    %ebx,%edx
    42a4:	5b                   	pop    %ebx
    42a5:	5e                   	pop    %esi
    42a6:	5f                   	pop    %edi
    42a7:	5d                   	pop    %ebp
    42a8:	e9 fc ff ff ff       	jmp    42a9 <ide_check_pm_state+0xa2>
			42a9: R_386_PC32	_spin_unlock_irqrestore
    42ad:	5b                   	pop    %ebx
    42ae:	5e                   	pop    %esi
    42af:	5f                   	pop    %edi
    42b0:	5d                   	pop    %ebp
    42b1:	c3                   	ret    

000042b2 <ide_complete_pm_rq>:
    42b2:	55                   	push   %ebp
    42b3:	89 d5                	mov    %edx,%ebp
    42b5:	57                   	push   %edi
    42b6:	56                   	push   %esi
    42b7:	53                   	push   %ebx
    42b8:	8b 7a 6c             	mov    0x6c(%edx),%edi
    42bb:	89 c3                	mov    %eax,%ebx
    42bd:	8b 70 10             	mov    0x10(%eax),%esi
    42c0:	e8 fc ff ff ff       	call   42c1 <ide_complete_pm_rq+0xf>
			42c1: R_386_PC32	ide_complete_power_step
    42c5:	83 3f 05             	cmpl   $0x5,(%edi)
    42c8:	75 50                	jne    431a <ide_complete_pm_rq+0x68>
    42ca:	8b 86 b8 01 00 00    	mov    0x1b8(%esi),%eax
    42d0:	e8 fc ff ff ff       	call   42d1 <ide_complete_pm_rq+0x1f>
			42d1: R_386_PC32	_spin_lock_irqsave
    42d5:	83 7d 28 04          	cmpl   $0x4,0x28(%ebp)
    42d9:	89 c7                	mov    %eax,%edi
    42db:	75 09                	jne    42e6 <ide_complete_pm_rq+0x34>
    42dd:	89 f0                	mov    %esi,%eax
    42df:	e8 fc ff ff ff       	call   42e0 <ide_complete_pm_rq+0x2e>
			42e0: R_386_PC32	blk_stop_queue
    42e4:	eb 07                	jmp    42ed <ide_complete_pm_rq+0x3b>
    42e6:	81 63 30 ff ff fd ff 	andl   $0xfffdffff,0x30(%ebx)
    42ed:	8b 86 b8 01 00 00    	mov    0x1b8(%esi),%eax
    42f3:	89 fa                	mov    %edi,%edx
    42f5:	e8 fc ff ff ff       	call   42f6 <ide_complete_pm_rq+0x44>
			42f6: R_386_PC32	_spin_unlock_irqrestore
    42fa:	8b 43 28             	mov    0x28(%ebx),%eax
    42fd:	31 c9                	xor    %ecx,%ecx
    42ff:	31 d2                	xor    %edx,%edx
    4301:	c7 80 38 02 00 00 00 	movl   $0x0,0x238(%eax)
    4308:	00 00 00 
    430b:	89 e8                	mov    %ebp,%eax
    430d:	e8 fc ff ff ff       	call   430e <ide_complete_pm_rq+0x5c>
			430e: R_386_PC32	blk_end_request
    4312:	84 c0                	test   %al,%al
    4314:	74 04                	je     431a <ide_complete_pm_rq+0x68>
    4316:	0f 0b                	ud2a   
    4318:	eb fe                	jmp    4318 <ide_complete_pm_rq+0x66>
    431a:	5b                   	pop    %ebx
    431b:	5e                   	pop    %esi
    431c:	5f                   	pop    %edi
    431d:	5d                   	pop    %ebp
    431e:	c3                   	ret    

0000431f <ide_start_power_step>:
    431f:	55                   	push   %ebp
    4320:	b9 10 00 00 00       	mov    $0x10,%ecx
    4325:	57                   	push   %edi
    4326:	89 d5                	mov    %edx,%ebp
    4328:	56                   	push   %esi
    4329:	53                   	push   %ebx
    432a:	89 c3                	mov    %eax,%ebx
    432c:	83 ec 40             	sub    $0x40,%esp
    432f:	31 c0                	xor    %eax,%eax
    4331:	8b 72 6c             	mov    0x6c(%edx),%esi
    4334:	89 e7                	mov    %esp,%edi
    4336:	f3 ab                	rep stos %eax,%es:(%edi)
    4338:	83 3e 04             	cmpl   $0x4,(%esi)
    433b:	0f 87 bf 00 00 00    	ja     4400 <ide_start_power_step+0xe1>
    4341:	8b 06                	mov    (%esi),%eax
    4343:	ff 24 85 74 01 00 00 	jmp    *0x174(,%eax,4)
			4346: R_386_32	.rodata
    434a:	80 7b 46 20          	cmpb   $0x20,0x46(%ebx)
    434e:	0f 85 ac 00 00 00    	jne    4400 <ide_start_power_step+0xe1>
    4354:	8b 53 1c             	mov    0x1c(%ebx),%edx
    4357:	0f b7 82 a6 00 00 00 	movzwl 0xa6(%edx),%eax
    435e:	89 c1                	mov    %eax,%ecx
    4360:	81 e1 00 c0 00 00    	and    $0xc000,%ecx
    4366:	81 f9 00 40 00 00    	cmp    $0x4000,%ecx
    436c:	75 70                	jne    43de <ide_start_power_step+0xbf>
    436e:	f6 c4 10             	test   $0x10,%ah
    4371:	74 6b                	je     43de <ide_start_power_step+0xbf>
    4373:	0f b7 8a ae 00 00 00 	movzwl 0xae(%edx),%ecx
    437a:	81 e1 00 c0 00 00    	and    $0xc000,%ecx
    4380:	81 f9 00 40 00 00    	cmp    $0x4000,%ecx
    4386:	75 56                	jne    43de <ide_start_power_step+0xbf>
    4388:	0f b7 92 ac 00 00 00 	movzwl 0xac(%edx),%edx
    438f:	f6 c6 10             	test   $0x10,%dh
    4392:	74 4a                	je     43de <ide_start_power_step+0xbf>
    4394:	f6 43 32 40          	testb  $0x40,0x32(%ebx)
    4398:	74 44                	je     43de <ide_start_power_step+0xbf>
    439a:	f6 c4 20             	test   $0x20,%ah
    439d:	74 15                	je     43b4 <ide_start_power_step+0x95>
    439f:	81 e2 00 24 00 00    	and    $0x2400,%edx
    43a5:	81 fa 00 24 00 00    	cmp    $0x2400,%edx
    43ab:	75 07                	jne    43b4 <ide_start_power_step+0x95>
    43ad:	c6 44 24 07 ea       	movb   $0xea,0x7(%esp)
    43b2:	eb 54                	jmp    4408 <ide_start_power_step+0xe9>
    43b4:	c6 44 24 07 e7       	movb   $0xe7,0x7(%esp)
    43b9:	eb 4d                	jmp    4408 <ide_start_power_step+0xe9>
    43bb:	c6 44 24 07 e0       	movb   $0xe0,0x7(%esp)
    43c0:	eb 46                	jmp    4408 <ide_start_power_step+0xe9>
    43c2:	ba ff 00 00 00       	mov    $0xff,%edx
    43c7:	89 d8                	mov    %ebx,%eax
    43c9:	e8 fc ff ff ff       	call   43ca <ide_start_power_step+0xab>
			43ca: R_386_PC32	ide_set_pio
    43ce:	80 7b 46 20          	cmpb   $0x20,0x46(%ebx)
    43d2:	74 0a                	je     43de <ide_start_power_step+0xbf>
    43d4:	c7 06 04 00 00 00    	movl   $0x4,(%esi)
    43da:	31 c0                	xor    %eax,%eax
    43dc:	eb 45                	jmp    4423 <ide_start_power_step+0x104>
    43de:	89 ea                	mov    %ebp,%edx
    43e0:	89 d8                	mov    %ebx,%eax
    43e2:	e8 fc ff ff ff       	call   43e3 <ide_start_power_step+0xc4>
			43e3: R_386_PC32	ide_complete_power_step
    43e7:	eb f1                	jmp    43da <ide_start_power_step+0xbb>
    43e9:	c6 44 24 07 e1       	movb   $0xe1,0x7(%esp)
    43ee:	eb 18                	jmp    4408 <ide_start_power_step+0xe9>
    43f0:	8b 43 28             	mov    0x28(%ebx),%eax
    43f3:	83 78 78 00          	cmpl   $0x0,0x78(%eax)
    43f7:	74 07                	je     4400 <ide_start_power_step+0xe1>
    43f9:	89 d8                	mov    %ebx,%eax
    43fb:	e8 fc ff ff ff       	call   43fc <ide_start_power_step+0xdd>
			43fc: R_386_PC32	ide_set_dma
    4400:	c7 06 05 00 00 00    	movl   $0x5,(%esi)
    4406:	eb d2                	jmp    43da <ide_start_power_step+0xbb>
    4408:	89 e2                	mov    %esp,%edx
    440a:	89 d8                	mov    %ebx,%eax
    440c:	c6 44 24 10 7e       	movb   $0x7e,0x10(%esp)
    4411:	c6 44 24 12 7c       	movb   $0x7c,0x12(%esp)
    4416:	c7 44 24 18 01 00 00 	movl   $0x1,0x18(%esp)
    441d:	00 
    441e:	e8 fc ff ff ff       	call   441f <ide_start_power_step+0x100>
			441f: R_386_PC32	do_rw_taskfile
    4423:	83 c4 40             	add    $0x40,%esp
    4426:	5b                   	pop    %ebx
    4427:	5e                   	pop    %esi
    4428:	5f                   	pop    %edi
    4429:	5d                   	pop    %ebp
    442a:	c3                   	ret    

0000442b <generic_ide_resume>:
    442b:	55                   	push   %ebp
    442c:	89 c5                	mov    %eax,%ebp
    442e:	57                   	push   %edi
    442f:	56                   	push   %esi
    4430:	53                   	push   %ebx
    4431:	83 ec 0c             	sub    $0xc,%esp
    4434:	e8 fc ff ff ff       	call   4435 <generic_ide_resume+0xa>
			4435: R_386_PC32	dev_get_drvdata
    4439:	b9 03 00 00 00       	mov    $0x3,%ecx
    443e:	89 c6                	mov    %eax,%esi
    4440:	31 c0                	xor    %eax,%eax
    4442:	8d 3c 24             	lea    (%esp),%edi
    4445:	f3 ab                	rep stos %eax,%es:(%edi)
    4447:	8b 46 10             	mov    0x10(%esi),%eax
    444a:	31 d2                	xor    %edx,%edx
    444c:	b9 10 00 00 00       	mov    $0x10,%ecx
    4451:	e8 fc ff ff ff       	call   4452 <generic_ide_resume+0x27>
			4452: R_386_PC32	blk_get_request
    4456:	31 d2                	xor    %edx,%edx
    4458:	81 48 24 00 00 01 00 	orl    $0x10000,0x24(%eax)
    445f:	89 c3                	mov    %eax,%ebx
    4461:	89 d9                	mov    %ebx,%ecx
    4463:	c7 40 28 05 00 00 00 	movl   $0x5,0x28(%eax)
    446a:	8d 04 24             	lea    (%esp),%eax
    446d:	89 43 6c             	mov    %eax,0x6c(%ebx)
    4470:	c7 04 24 02 00 00 00 	movl   $0x2,(%esp)
    4477:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)
    447e:	00 
    447f:	8b 46 10             	mov    0x10(%esi),%eax
    4482:	6a 01                	push   $0x1
    4484:	e8 fc ff ff ff       	call   4485 <generic_ide_resume+0x5a>
			4485: R_386_PC32	blk_execute_rq
    4489:	89 c7                	mov    %eax,%edi
    448b:	89 d8                	mov    %ebx,%eax
    448d:	e8 fc ff ff ff       	call   448e <generic_ide_resume+0x63>
			448e: R_386_PC32	blk_put_request
    4492:	85 ff                	test   %edi,%edi
    4494:	5a                   	pop    %edx
    4495:	75 12                	jne    44a9 <generic_ide_resume+0x7e>
    4497:	8b 45 48             	mov    0x48(%ebp),%eax
    449a:	85 c0                	test   %eax,%eax
    449c:	74 0b                	je     44a9 <generic_ide_resume+0x7e>
    449e:	8b 50 3c             	mov    0x3c(%eax),%edx
    44a1:	85 d2                	test   %edx,%edx
    44a3:	74 04                	je     44a9 <generic_ide_resume+0x7e>
    44a5:	89 f0                	mov    %esi,%eax
    44a7:	ff d2                	call   *%edx
    44a9:	83 c4 0c             	add    $0xc,%esp
    44ac:	89 f8                	mov    %edi,%eax
    44ae:	5b                   	pop    %ebx
    44af:	5e                   	pop    %esi
    44b0:	5f                   	pop    %edi
    44b1:	5d                   	pop    %ebp
    44b2:	c3                   	ret    

000044b3 <generic_ide_suspend>:
    44b3:	55                   	push   %ebp
    44b4:	57                   	push   %edi
    44b5:	56                   	push   %esi
    44b6:	53                   	push   %ebx
    44b7:	83 ec 10             	sub    $0x10,%esp
    44ba:	89 14 24             	mov    %edx,(%esp)
    44bd:	e8 fc ff ff ff       	call   44be <generic_ide_suspend+0xb>
			44be: R_386_PC32	dev_get_drvdata
    44c2:	b9 03 00 00 00       	mov    $0x3,%ecx
    44c7:	8d 6c 24 04          	lea    0x4(%esp),%ebp
    44cb:	89 c6                	mov    %eax,%esi
    44cd:	89 ef                	mov    %ebp,%edi
    44cf:	31 c0                	xor    %eax,%eax
    44d1:	f3 ab                	rep stos %eax,%es:(%edi)
    44d3:	8b 46 10             	mov    0x10(%esi),%eax
    44d6:	31 d2                	xor    %edx,%edx
    44d8:	b9 10 00 00 00       	mov    $0x10,%ecx
    44dd:	e8 fc ff ff ff       	call   44de <generic_ide_suspend+0x2b>
			44de: R_386_PC32	blk_get_request
    44e2:	89 68 6c             	mov    %ebp,0x6c(%eax)
    44e5:	89 c3                	mov    %eax,%ebx
    44e7:	c7 40 28 04 00 00 00 	movl   $0x4,0x28(%eax)
    44ee:	b8 01 00 00 00       	mov    $0x1,%eax
    44f3:	89 d9                	mov    %ebx,%ecx
    44f5:	83 3c 24 08          	cmpl   $0x8,(%esp)
    44f9:	0f 45 04 24          	cmovne (%esp),%eax
    44fd:	31 d2                	xor    %edx,%edx
    44ff:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)
    4506:	00 
    4507:	89 44 24 08          	mov    %eax,0x8(%esp)
    450b:	8b 46 10             	mov    0x10(%esi),%eax
    450e:	6a 00                	push   $0x0
    4510:	e8 fc ff ff ff       	call   4511 <generic_ide_suspend+0x5e>
			4511: R_386_PC32	blk_execute_rq
    4515:	89 c6                	mov    %eax,%esi
    4517:	89 d8                	mov    %ebx,%eax
    4519:	e8 fc ff ff ff       	call   451a <generic_ide_suspend+0x67>
			451a: R_386_PC32	blk_put_request
    451e:	89 f0                	mov    %esi,%eax
    4520:	83 c4 14             	add    $0x14,%esp
    4523:	5b                   	pop    %ebx
    4524:	5e                   	pop    %esi
    4525:	5f                   	pop    %edi
    4526:	5d                   	pop    %ebp
    4527:	c3                   	ret    

00004528 <ide_park_store>:
    4528:	55                   	push   %ebp
    4529:	ba 0a 00 00 00       	mov    $0xa,%edx
    452e:	57                   	push   %edi
    452f:	56                   	push   %esi
    4530:	89 c6                	mov    %eax,%esi
    4532:	53                   	push   %ebx
    4533:	89 c8                	mov    %ecx,%eax
    4535:	83 ec 0c             	sub    $0xc,%esp
    4538:	8d 4c 24 08          	lea    0x8(%esp),%ecx
    453c:	e8 fc ff ff ff       	call   453d <ide_park_store+0x15>
			453d: R_386_PC32	strict_strtol
    4541:	85 c0                	test   %eax,%eax
    4543:	89 c3                	mov    %eax,%ebx
    4545:	0f 85 bb 01 00 00    	jne    4706 <ide_park_store+0x1de>
    454b:	8b 44 24 08          	mov    0x8(%esp),%eax
    454f:	83 f8 fe             	cmp    $0xfffffffe,%eax
    4552:	0f 8c ae 01 00 00    	jl     4706 <ide_park_store+0x1de>
    4558:	3d 30 75 00 00       	cmp    $0x7530,%eax
    455d:	7e 0d                	jle    456c <ide_park_store+0x44>
    455f:	c7 44 24 08 30 75 00 	movl   $0x7530,0x8(%esp)
    4566:	00 
    4567:	bb b5 ff ff ff       	mov    $0xffffffb5,%ebx
    456c:	8d 96 74 ff ff ff    	lea    -0x8c(%esi),%edx
    4572:	b8 00 00 00 00       	mov    $0x0,%eax
			4573: R_386_32	ide_setting_mtx
    4577:	89 14 24             	mov    %edx,(%esp)
    457a:	e8 fc ff ff ff       	call   457b <ide_park_store+0x53>
			457b: R_386_PC32	mutex_lock
    457f:	8b 44 24 08          	mov    0x8(%esp),%eax
    4583:	8b 14 24             	mov    (%esp),%edx
    4586:	85 c0                	test   %eax,%eax
    4588:	0f 88 40 01 00 00    	js     46ce <ide_park_store+0x1a6>
    458e:	8b 4a 30             	mov    0x30(%edx),%ecx
    4591:	f7 c1 00 00 00 04    	test   $0x4000000,%ecx
    4597:	0f 85 51 01 00 00    	jne    46ee <ide_park_store+0x1c6>
    459d:	85 c0                	test   %eax,%eax
    459f:	75 0c                	jne    45ad <ide_park_store+0x85>
    45a1:	81 e1 00 00 00 08    	and    $0x8000000,%ecx
    45a7:	0f 84 46 01 00 00    	je     46f3 <ide_park_store+0x1cb>
    45ad:	89 14 24             	mov    %edx,(%esp)
    45b0:	e8 fc ff ff ff       	call   45b1 <ide_park_store+0x89>
			45b1: R_386_PC32	msecs_to_jiffies
    45b5:	8b 0d 00 00 00 00    	mov    0x0,%ecx
			45b7: R_386_32	jiffies
    45bb:	8b 14 24             	mov    (%esp),%edx
    45be:	89 44 24 04          	mov    %eax,0x4(%esp)
    45c2:	01 c8                	add    %ecx,%eax
    45c4:	8b 72 28             	mov    0x28(%edx),%esi
    45c7:	8b 7a 10             	mov    0x10(%edx),%edi
    45ca:	89 44 24 04          	mov    %eax,0x4(%esp)
    45ce:	8d 86 7c 02 00 00    	lea    0x27c(%esi),%eax
    45d4:	e8 fc ff ff ff       	call   45d5 <ide_park_store+0xad>
			45d5: R_386_PC32	_spin_lock_irq
    45d9:	8b 14 24             	mov    (%esp),%edx
    45dc:	f6 42 33 08          	testb  $0x8,0x33(%edx)
    45e0:	74 5a                	je     463c <ide_park_store+0x114>
    45e2:	8b 44 24 04          	mov    0x4(%esp),%eax
    45e6:	31 c9                	xor    %ecx,%ecx
    45e8:	89 c5                	mov    %eax,%ebp
    45ea:	2b 6a 34             	sub    0x34(%edx),%ebp
    45ed:	89 42 34             	mov    %eax,0x34(%edx)
    45f0:	ba 03 00 00 00       	mov    $0x3,%edx
    45f5:	b8 00 00 00 00       	mov    $0x0,%eax
			45f6: R_386_32	ide_park_wq
    45fa:	6a 00                	push   $0x0
    45fc:	e8 fc ff ff ff       	call   45fd <ide_park_store+0xd5>
			45fd: R_386_PC32	__wake_up
    4601:	85 ed                	test   %ebp,%ebp
    4603:	59                   	pop    %ecx
    4604:	79 14                	jns    461a <ide_park_store+0xf2>
    4606:	8d 86 3c 02 00 00    	lea    0x23c(%esi),%eax
    460c:	e8 fc ff ff ff       	call   460d <ide_park_store+0xe5>
			460d: R_386_PC32	del_timer
    4611:	b9 01 00 00 00       	mov    $0x1,%ecx
    4616:	85 c0                	test   %eax,%eax
    4618:	75 02                	jne    461c <ide_park_store+0xf4>
    461a:	31 c9                	xor    %ecx,%ecx
    461c:	fe 86 7c 02 00 00    	incb   0x27c(%esi)
    4622:	ff 15 0c 00 00 00    	call   *0xc
			4624: R_386_32	pv_irq_ops
    4628:	85 c9                	test   %ecx,%ecx
    462a:	0f 84 c3 00 00 00    	je     46f3 <ide_park_store+0x1cb>
    4630:	89 f8                	mov    %edi,%eax
    4632:	e8 fc ff ff ff       	call   4633 <ide_park_store+0x10b>
			4633: R_386_PC32	blk_run_queue
    4637:	e9 b7 00 00 00       	jmp    46f3 <ide_park_store+0x1cb>
    463c:	fe 86 7c 02 00 00    	incb   0x27c(%esi)
    4642:	ff 15 0c 00 00 00    	call   *0xc
			4644: R_386_32	pv_irq_ops
    4648:	31 d2                	xor    %edx,%edx
    464a:	b9 10 00 00 00       	mov    $0x10,%ecx
    464f:	89 f8                	mov    %edi,%eax
    4651:	e8 fc ff ff ff       	call   4652 <ide_park_store+0x12a>
			4652: R_386_PC32	blk_get_request
    4656:	31 d2                	xor    %edx,%edx
    4658:	89 c6                	mov    %eax,%esi
    465a:	8b 80 94 00 00 00    	mov    0x94(%eax),%eax
    4660:	89 f1                	mov    %esi,%ecx
    4662:	c6 00 22             	movb   $0x22,(%eax)
    4665:	8d 44 24 04          	lea    0x4(%esp),%eax
    4669:	89 46 6c             	mov    %eax,0x6c(%esi)
    466c:	89 f8                	mov    %edi,%eax
    466e:	66 c7 86 80 00 00 00 	movw   $0x1,0x80(%esi)
    4675:	01 00 
    4677:	c7 46 28 07 00 00 00 	movl   $0x7,0x28(%esi)
    467e:	6a 01                	push   $0x1
    4680:	e8 fc ff ff ff       	call   4681 <ide_park_store+0x159>
			4681: R_386_PC32	blk_execute_rq
    4685:	89 c5                	mov    %eax,%ebp
    4687:	89 f0                	mov    %esi,%eax
    4689:	e8 fc ff ff ff       	call   468a <ide_park_store+0x162>
			468a: R_386_PC32	blk_put_request
    468e:	85 ed                	test   %ebp,%ebp
    4690:	5a                   	pop    %edx
    4691:	75 60                	jne    46f3 <ide_park_store+0x1cb>
    4693:	31 c9                	xor    %ecx,%ecx
    4695:	31 d2                	xor    %edx,%edx
    4697:	89 f8                	mov    %edi,%eax
    4699:	e8 fc ff ff ff       	call   469a <ide_park_store+0x172>
			469a: R_386_PC32	blk_get_request
    469e:	85 c0                	test   %eax,%eax
    46a0:	74 51                	je     46f3 <ide_park_store+0x1cb>
    46a2:	8b 90 94 00 00 00    	mov    0x94(%eax),%edx
    46a8:	b9 01 00 00 00       	mov    $0x1,%ecx
    46ad:	c6 02 23             	movb   $0x23,(%edx)
    46b0:	89 c2                	mov    %eax,%edx
    46b2:	66 c7 80 80 00 00 00 	movw   $0x1,0x80(%eax)
    46b9:	01 00 
    46bb:	c7 40 28 07 00 00 00 	movl   $0x7,0x28(%eax)
    46c2:	89 f8                	mov    %edi,%eax
    46c4:	6a 01                	push   $0x1
    46c6:	e8 fc ff ff ff       	call   46c7 <ide_park_store+0x19f>
			46c7: R_386_PC32	elv_add_request
    46cb:	58                   	pop    %eax
    46cc:	eb 25                	jmp    46f3 <ide_park_store+0x1cb>
    46ce:	80 7a 46 20          	cmpb   $0x20,0x46(%edx)
    46d2:	75 1a                	jne    46ee <ide_park_store+0x1c6>
    46d4:	83 f8 fe             	cmp    $0xfffffffe,%eax
    46d7:	74 0c                	je     46e5 <ide_park_store+0x1bd>
    46d9:	40                   	inc    %eax
    46da:	75 17                	jne    46f3 <ide_park_store+0x1cb>
    46dc:	81 62 30 ff ff ff fb 	andl   $0xfbffffff,0x30(%edx)
    46e3:	eb 0e                	jmp    46f3 <ide_park_store+0x1cb>
    46e5:	81 4a 30 00 00 00 04 	orl    $0x4000000,0x30(%edx)
    46ec:	eb 05                	jmp    46f3 <ide_park_store+0x1cb>
    46ee:	bb a1 ff ff ff       	mov    $0xffffffa1,%ebx
    46f3:	b8 00 00 00 00       	mov    $0x0,%eax
			46f4: R_386_32	ide_setting_mtx
    46f8:	e8 fc ff ff ff       	call   46f9 <ide_park_store+0x1d1>
			46f9: R_386_PC32	mutex_unlock
    46fd:	85 db                	test   %ebx,%ebx
    46ff:	0f 44 5c 24 20       	cmove  0x20(%esp),%ebx
    4704:	eb 05                	jmp    470b <ide_park_store+0x1e3>
    4706:	bb ea ff ff ff       	mov    $0xffffffea,%ebx
    470b:	83 c4 0c             	add    $0xc,%esp
    470e:	89 d8                	mov    %ebx,%eax
    4710:	5b                   	pop    %ebx
    4711:	5e                   	pop    %esi
    4712:	5f                   	pop    %edi
    4713:	5d                   	pop    %ebp
    4714:	c3                   	ret    

00004715 <ide_park_show>:
    4715:	57                   	push   %edi
    4716:	56                   	push   %esi
    4717:	89 ce                	mov    %ecx,%esi
    4719:	53                   	push   %ebx
    471a:	8d 98 74 ff ff ff    	lea    -0x8c(%eax),%ebx
    4720:	b8 a1 ff ff ff       	mov    $0xffffffa1,%eax
    4725:	f6 43 33 04          	testb  $0x4,0x33(%ebx)
    4729:	8b 7b 28             	mov    0x28(%ebx),%edi
    472c:	75 48                	jne    4776 <ide_park_show+0x61>
    472e:	8d 87 7c 02 00 00    	lea    0x27c(%edi),%eax
    4734:	e8 fc ff ff ff       	call   4735 <ide_park_show+0x20>
			4735: R_386_PC32	_spin_lock_irq
    4739:	8b 15 00 00 00 00    	mov    0x0,%edx
			473b: R_386_32	jiffies
    473f:	f6 43 33 08          	testb  $0x8,0x33(%ebx)
    4743:	74 12                	je     4757 <ide_park_show+0x42>
    4745:	8b 43 34             	mov    0x34(%ebx),%eax
    4748:	39 c2                	cmp    %eax,%edx
    474a:	79 0b                	jns    4757 <ide_park_show+0x42>
    474c:	29 d0                	sub    %edx,%eax
    474e:	e8 fc ff ff ff       	call   474f <ide_park_show+0x3a>
			474f: R_386_PC32	jiffies_to_msecs
    4753:	89 c3                	mov    %eax,%ebx
    4755:	eb 02                	jmp    4759 <ide_park_show+0x44>
    4757:	31 db                	xor    %ebx,%ebx
    4759:	fe 87 7c 02 00 00    	incb   0x27c(%edi)
    475f:	ff 15 0c 00 00 00    	call   *0xc
			4761: R_386_32	pv_irq_ops
    4765:	53                   	push   %ebx
    4766:	68 43 0c 00 00       	push   $0xc43
			4767: R_386_32	.rodata.str1.1
    476b:	6a 14                	push   $0x14
    476d:	56                   	push   %esi
    476e:	e8 fc ff ff ff       	call   476f <ide_park_show+0x5a>
			476f: R_386_PC32	snprintf
    4773:	83 c4 10             	add    $0x10,%esp
    4776:	5b                   	pop    %ebx
    4777:	5e                   	pop    %esi
    4778:	5f                   	pop    %edi
    4779:	c3                   	ret    

0000477a <ide_do_park_unpark>:
    477a:	57                   	push   %edi
    477b:	b9 10 00 00 00       	mov    $0x10,%ecx
    4780:	53                   	push   %ebx
    4781:	89 c3                	mov    %eax,%ebx
    4783:	83 ec 40             	sub    $0x40,%esp
    4786:	31 c0                	xor    %eax,%eax
    4788:	89 e7                	mov    %esp,%edi
    478a:	f3 ab                	rep stos %eax,%es:(%edi)
    478c:	8b 82 94 00 00 00    	mov    0x94(%edx),%eax
    4792:	80 38 22             	cmpb   $0x22,(%eax)
    4795:	75 34                	jne    47cb <ide_do_park_unpark+0x51>
    4797:	8b 42 6c             	mov    0x6c(%edx),%eax
    479a:	8b 00                	mov    (%eax),%eax
    479c:	81 4b 30 00 00 04 00 	orl    $0x40000,0x30(%ebx)
    47a3:	c6 44 24 07 e1       	movb   $0xe1,0x7(%esp)
    47a8:	89 43 34             	mov    %eax,0x34(%ebx)
    47ab:	c6 44 24 01 44       	movb   $0x44,0x1(%esp)
    47b0:	c6 44 24 03 4c       	movb   $0x4c,0x3(%esp)
    47b5:	c6 44 24 04 4e       	movb   $0x4e,0x4(%esp)
    47ba:	c6 44 24 05 55       	movb   $0x55,0x5(%esp)
    47bf:	c6 44 24 10 7e       	movb   $0x7e,0x10(%esp)
    47c4:	c6 44 24 12 7c       	movb   $0x7c,0x12(%esp)
    47c9:	eb 05                	jmp    47d0 <ide_do_park_unpark+0x56>
    47cb:	c6 44 24 07 e5       	movb   $0xe5,0x7(%esp)
    47d0:	89 54 24 3c          	mov    %edx,0x3c(%esp)
    47d4:	89 d8                	mov    %ebx,%eax
    47d6:	89 e2                	mov    %esp,%edx
    47d8:	66 83 4c 24 14 04    	orw    $0x4,0x14(%esp)
    47de:	c7 44 24 18 01 00 00 	movl   $0x1,0x18(%esp)
    47e5:	00 
    47e6:	e8 fc ff ff ff       	call   47e7 <ide_do_park_unpark+0x6d>
			47e7: R_386_PC32	do_rw_taskfile
    47eb:	83 c4 40             	add    $0x40,%esp
    47ee:	5b                   	pop    %ebx
    47ef:	5f                   	pop    %edi
    47f0:	c3                   	ret    
    47f1:	90                   	nop
    47f2:	90                   	nop
    47f3:	90                   	nop

000047f4 <ide_media_string>:
    47f4:	8a 50 46             	mov    0x46(%eax),%dl
    47f7:	b8 47 0c 00 00       	mov    $0xc47,%eax
			47f8: R_386_32	.rodata.str1.1
    47fc:	80 fa 20             	cmp    $0x20,%dl
    47ff:	77 0a                	ja     480b <ide_media_string+0x17>
    4801:	0f b6 d2             	movzbl %dl,%edx
    4804:	8b 04 95 94 01 00 00 	mov    0x194(,%edx,4),%eax
			4807: R_386_32	.rodata
    480b:	c3                   	ret    

0000480c <serial_show>:
    480c:	8b 40 90             	mov    -0x70(%eax),%eax
    480f:	83 c0 14             	add    $0x14,%eax
    4812:	50                   	push   %eax
    4813:	68 4f 0c 00 00       	push   $0xc4f
			4814: R_386_32	.rodata.str1.1
    4818:	51                   	push   %ecx
    4819:	e8 fc ff ff ff       	call   481a <serial_show+0xe>
			481a: R_386_PC32	sprintf
    481e:	83 c4 0c             	add    $0xc,%esp
    4821:	c3                   	ret    

00004822 <firmware_show>:
    4822:	8b 40 90             	mov    -0x70(%eax),%eax
    4825:	83 c0 2e             	add    $0x2e,%eax
    4828:	50                   	push   %eax
    4829:	68 4f 0c 00 00       	push   $0xc4f
			482a: R_386_32	.rodata.str1.1
    482e:	51                   	push   %ecx
    482f:	e8 fc ff ff ff       	call   4830 <firmware_show+0xe>
			4830: R_386_PC32	sprintf
    4834:	83 c4 0c             	add    $0xc,%esp
    4837:	c3                   	ret    

00004838 <model_show>:
    4838:	8b 40 90             	mov    -0x70(%eax),%eax
    483b:	83 c0 36             	add    $0x36,%eax
    483e:	50                   	push   %eax
    483f:	68 4f 0c 00 00       	push   $0xc4f
			4840: R_386_32	.rodata.str1.1
    4844:	51                   	push   %ecx
    4845:	e8 fc ff ff ff       	call   4846 <model_show+0xe>
			4846: R_386_PC32	sprintf
    484a:	83 c4 0c             	add    $0xc,%esp
    484d:	c3                   	ret    

0000484e <modalias_show>:
    484e:	8a 50 ba             	mov    -0x46(%eax),%dl
    4851:	b8 47 0c 00 00       	mov    $0xc47,%eax
			4852: R_386_32	.rodata.str1.1
    4856:	80 fa 20             	cmp    $0x20,%dl
    4859:	77 0a                	ja     4865 <modalias_show+0x17>
    485b:	0f b6 d2             	movzbl %dl,%edx
    485e:	8b 04 95 94 01 00 00 	mov    0x194(,%edx,4),%eax
			4861: R_386_32	.rodata
    4865:	50                   	push   %eax
    4866:	68 53 0c 00 00       	push   $0xc53
			4867: R_386_32	.rodata.str1.1
    486b:	51                   	push   %ecx
    486c:	e8 fc ff ff ff       	call   486d <modalias_show+0x1f>
			486d: R_386_PC32	sprintf
    4871:	83 c4 0c             	add    $0xc,%esp
    4874:	c3                   	ret    

00004875 <drivename_show>:
    4875:	2d 8c 00 00 00       	sub    $0x8c,%eax
    487a:	50                   	push   %eax
    487b:	68 4f 0c 00 00       	push   $0xc4f
			487c: R_386_32	.rodata.str1.1
    4880:	51                   	push   %ecx
    4881:	e8 fc ff ff ff       	call   4882 <drivename_show+0xd>
			4882: R_386_PC32	sprintf
    4886:	83 c4 0c             	add    $0xc,%esp
    4889:	c3                   	ret    

0000488a <media_show>:
    488a:	8a 50 ba             	mov    -0x46(%eax),%dl
    488d:	b8 47 0c 00 00       	mov    $0xc47,%eax
			488e: R_386_32	.rodata.str1.1
    4892:	80 fa 20             	cmp    $0x20,%dl
    4895:	77 0a                	ja     48a1 <media_show+0x17>
    4897:	0f b6 d2             	movzbl %dl,%edx
    489a:	8b 04 95 94 01 00 00 	mov    0x194(,%edx,4),%eax
			489d: R_386_32	.rodata
    48a1:	50                   	push   %eax
    48a2:	68 4f 0c 00 00       	push   $0xc4f
			48a3: R_386_32	.rodata.str1.1
    48a7:	51                   	push   %ecx
    48a8:	e8 fc ff ff ff       	call   48a9 <media_show+0x1f>
			48a9: R_386_PC32	sprintf
    48ad:	83 c4 0c             	add    $0xc,%esp
    48b0:	c3                   	ret    

000048b1 <ide_sysfs_register_port>:
    48b1:	56                   	push   %esi
    48b2:	89 c6                	mov    %eax,%esi
    48b4:	53                   	push   %ebx
    48b5:	31 db                	xor    %ebx,%ebx
    48b7:	eb 10                	jmp    48c9 <ide_sysfs_register_port+0x18>
    48b9:	8b 86 14 02 00 00    	mov    0x214(%esi),%eax
    48bf:	e8 fc ff ff ff       	call   48c0 <ide_sysfs_register_port+0xf>
			48c0: R_386_PC32	device_create_file
    48c4:	85 c0                	test   %eax,%eax
    48c6:	75 0e                	jne    48d6 <ide_sysfs_register_port+0x25>
    48c8:	43                   	inc    %ebx
    48c9:	8b 14 9d 88 01 00 00 	mov    0x188(,%ebx,4),%edx
			48cc: R_386_32	.rodata
    48d0:	85 d2                	test   %edx,%edx
    48d2:	75 e5                	jne    48b9 <ide_sysfs_register_port+0x8>
    48d4:	31 c0                	xor    %eax,%eax
    48d6:	5b                   	pop    %ebx
    48d7:	5e                   	pop    %esi
    48d8:	c3                   	ret    

000048d9 <store_delete_devices>:
    48d9:	57                   	push   %edi
    48da:	56                   	push   %esi
    48db:	89 ce                	mov    %ecx,%esi
    48dd:	53                   	push   %ebx
    48de:	8b 7c 24 10          	mov    0x10(%esp),%edi
    48e2:	e8 fc ff ff ff       	call   48e3 <store_delete_devices+0xa>
			48e3: R_386_PC32	dev_get_drvdata
    48e7:	ba 5d 0c 00 00       	mov    $0xc5d,%edx
			48e8: R_386_32	.rodata.str1.1
    48ec:	89 f9                	mov    %edi,%ecx
    48ee:	89 c3                	mov    %eax,%ebx
    48f0:	89 f0                	mov    %esi,%eax
    48f2:	e8 fc ff ff ff       	call   48f3 <store_delete_devices+0x1a>
			48f3: R_386_PC32	strncmp
    48f7:	89 c2                	mov    %eax,%edx
    48f9:	b8 ea ff ff ff       	mov    $0xffffffea,%eax
    48fe:	85 d2                	test   %edx,%edx
    4900:	75 09                	jne    490b <store_delete_devices+0x32>
    4902:	89 d8                	mov    %ebx,%eax
    4904:	e8 fc ff ff ff       	call   4905 <store_delete_devices+0x2c>
			4905: R_386_PC32	ide_port_unregister_devices
    4909:	89 f8                	mov    %edi,%eax
    490b:	5b                   	pop    %ebx
    490c:	5e                   	pop    %esi
    490d:	5f                   	pop    %edi
    490e:	c3                   	ret    

0000490f <store_scan>:
    490f:	57                   	push   %edi
    4910:	56                   	push   %esi
    4911:	89 ce                	mov    %ecx,%esi
    4913:	53                   	push   %ebx
    4914:	8b 7c 24 10          	mov    0x10(%esp),%edi
    4918:	e8 fc ff ff ff       	call   4919 <store_scan+0xa>
			4919: R_386_PC32	dev_get_drvdata
    491d:	ba 5d 0c 00 00       	mov    $0xc5d,%edx
			491e: R_386_32	.rodata.str1.1
    4922:	89 f9                	mov    %edi,%ecx
    4924:	89 c3                	mov    %eax,%ebx
    4926:	89 f0                	mov    %esi,%eax
    4928:	e8 fc ff ff ff       	call   4929 <store_scan+0x1a>
			4929: R_386_PC32	strncmp
    492d:	89 c2                	mov    %eax,%edx
    492f:	b8 ea ff ff ff       	mov    $0xffffffea,%eax
    4934:	85 d2                	test   %edx,%edx
    4936:	75 10                	jne    4948 <store_scan+0x39>
    4938:	89 d8                	mov    %ebx,%eax
    493a:	e8 fc ff ff ff       	call   493b <store_scan+0x2c>
			493b: R_386_PC32	ide_port_unregister_devices
    493f:	89 d8                	mov    %ebx,%eax
    4941:	e8 fc ff ff ff       	call   4942 <store_scan+0x33>
			4942: R_386_PC32	ide_port_scan
    4946:	89 f8                	mov    %edi,%eax
    4948:	5b                   	pop    %ebx
    4949:	5e                   	pop    %esi
    494a:	5f                   	pop    %edi
    494b:	c3                   	ret    

0000494c <get_io_32bit>:
    494c:	0f b6 40 4a          	movzbl 0x4a(%eax),%eax
    4950:	c3                   	ret    

00004951 <set_io_32bit>:
    4951:	83 c9 ff             	or     $0xffffffff,%ecx
    4954:	f6 40 31 40          	testb  $0x40,0x31(%eax)
    4958:	75 0c                	jne    4966 <set_io_32bit+0x15>
    495a:	83 fa 03             	cmp    $0x3,%edx
    495d:	b1 ea                	mov    $0xea,%cl
    495f:	77 05                	ja     4966 <set_io_32bit+0x15>
    4961:	88 50 4a             	mov    %dl,0x4a(%eax)
    4964:	31 c9                	xor    %ecx,%ecx
    4966:	89 c8                	mov    %ecx,%eax
    4968:	c3                   	ret    

00004969 <get_ksettings>:
    4969:	8b 40 30             	mov    0x30(%eax),%eax
    496c:	83 e0 01             	and    $0x1,%eax
    496f:	c3                   	ret    

00004970 <set_ksettings>:
    4970:	83 fa 01             	cmp    $0x1,%edx
    4973:	b9 ea ff ff ff       	mov    $0xffffffea,%ecx
    4978:	77 10                	ja     498a <set_ksettings+0x1a>
    497a:	85 d2                	test   %edx,%edx
    497c:	74 06                	je     4984 <set_ksettings+0x14>
    497e:	83 48 30 01          	orl    $0x1,0x30(%eax)
    4982:	eb 04                	jmp    4988 <set_ksettings+0x18>
    4984:	83 60 30 fe          	andl   $0xfffffffe,0x30(%eax)
    4988:	31 c9                	xor    %ecx,%ecx
    498a:	89 c8                	mov    %ecx,%eax
    498c:	c3                   	ret    

0000498d <get_using_dma>:
    498d:	8b 40 30             	mov    0x30(%eax),%eax
    4990:	d1 e8                	shr    %eax
    4992:	83 e0 01             	and    $0x1,%eax
    4995:	c3                   	ret    

00004996 <get_unmaskirq>:
    4996:	8b 40 30             	mov    0x30(%eax),%eax
    4999:	c1 e8 02             	shr    $0x2,%eax
    499c:	83 e0 01             	and    $0x1,%eax
    499f:	c3                   	ret    

000049a0 <set_unmaskirq>:
    49a0:	53                   	push   %ebx
    49a1:	8b 58 30             	mov    0x30(%eax),%ebx
    49a4:	83 c9 ff             	or     $0xffffffff,%ecx
    49a7:	f6 c7 20             	test   $0x20,%bh
    49aa:	75 18                	jne    49c4 <set_unmaskirq+0x24>
    49ac:	83 fa 01             	cmp    $0x1,%edx
    49af:	b1 ea                	mov    $0xea,%cl
    49b1:	77 11                	ja     49c4 <set_unmaskirq+0x24>
    49b3:	85 d2                	test   %edx,%edx
    49b5:	74 05                	je     49bc <set_unmaskirq+0x1c>
    49b7:	83 cb 04             	or     $0x4,%ebx
    49ba:	eb 03                	jmp    49bf <set_unmaskirq+0x1f>
    49bc:	83 e3 fb             	and    $0xfffffffb,%ebx
    49bf:	89 58 30             	mov    %ebx,0x30(%eax)
    49c2:	31 c9                	xor    %ecx,%ecx
    49c4:	89 c8                	mov    %ecx,%eax
    49c6:	5b                   	pop    %ebx
    49c7:	c3                   	ret    

000049c8 <set_pio_mode>:
    49c8:	55                   	push   %ebp
    49c9:	89 d5                	mov    %edx,%ebp
    49cb:	57                   	push   %edi
    49cc:	56                   	push   %esi
    49cd:	53                   	push   %ebx
    49ce:	89 c3                	mov    %eax,%ebx
    49d0:	83 ec 08             	sub    $0x8,%esp
    49d3:	8b 70 28             	mov    0x28(%eax),%esi
    49d6:	81 fa ff 00 00 00    	cmp    $0xff,%edx
    49dc:	b8 ea ff ff ff       	mov    $0xffffffea,%eax
    49e1:	8b 7e 74             	mov    0x74(%esi),%edi
    49e4:	0f 87 b5 00 00 00    	ja     4a9f <set_pio_mode+0xd7>
    49ea:	85 ff                	test   %edi,%edi
    49ec:	0f 84 a4 00 00 00    	je     4a96 <set_pio_mode+0xce>
    49f2:	8b 47 04             	mov    0x4(%edi),%eax
    49f5:	85 c0                	test   %eax,%eax
    49f7:	89 44 24 04          	mov    %eax,0x4(%esp)
    49fb:	0f 84 95 00 00 00    	je     4a96 <set_pio_mode+0xce>
    4a01:	8b 4e 5c             	mov    0x5c(%esi),%ecx
    4a04:	f6 c5 02             	test   $0x2,%ch
    4a07:	0f 85 89 00 00 00    	jne    4a96 <set_pio_mode+0xce>
    4a0d:	88 d0                	mov    %dl,%al
    4a0f:	0f b6 d2             	movzbl %dl,%edx
    4a12:	3c 09                	cmp    $0x9,%al
    4a14:	77 0a                	ja     4a20 <set_pio_mode+0x58>
    4a16:	3c 08                	cmp    $0x8,%al
    4a18:	73 1a                	jae    4a34 <set_pio_mode+0x6c>
    4a1a:	3c 06                	cmp    $0x6,%al
    4a1c:	72 5a                	jb     4a78 <set_pio_mode+0xb0>
    4a1e:	eb 19                	jmp    4a39 <set_pio_mode+0x71>
    4a20:	3c 64                	cmp    $0x64,%al
    4a22:	72 54                	jb     4a78 <set_pio_mode+0xb0>
    4a24:	3c 66                	cmp    $0x66,%al
    4a26:	76 07                	jbe    4a2f <set_pio_mode+0x67>
    4a28:	83 c0 38             	add    $0x38,%eax
    4a2b:	3c 02                	cmp    $0x2,%al
    4a2d:	77 49                	ja     4a78 <set_pio_mode+0xb0>
    4a2f:	c1 e9 06             	shr    $0x6,%ecx
    4a32:	eb 08                	jmp    4a3c <set_pio_mode+0x74>
    4a34:	c1 e9 04             	shr    $0x4,%ecx
    4a37:	eb 03                	jmp    4a3c <set_pio_mode+0x74>
    4a39:	c1 e9 05             	shr    $0x5,%ecx
    4a3c:	83 e1 01             	and    $0x1,%ecx
    4a3f:	85 c9                	test   %ecx,%ecx
    4a41:	74 35                	je     4a78 <set_pio_mode+0xb0>
    4a43:	83 ed 08             	sub    $0x8,%ebp
    4a46:	83 fd 01             	cmp    $0x1,%ebp
    4a49:	77 25                	ja     4a70 <set_pio_mode+0xa8>
    4a4b:	81 c6 7c 02 00 00    	add    $0x27c,%esi
    4a51:	89 f0                	mov    %esi,%eax
    4a53:	89 14 24             	mov    %edx,(%esp)
    4a56:	e8 fc ff ff ff       	call   4a57 <set_pio_mode+0x8f>
			4a57: R_386_PC32	_spin_lock_irqsave
    4a5b:	8b 14 24             	mov    (%esp),%edx
    4a5e:	89 c5                	mov    %eax,%ebp
    4a60:	89 d8                	mov    %ebx,%eax
    4a62:	ff 57 04             	call   *0x4(%edi)
    4a65:	89 ea                	mov    %ebp,%edx
    4a67:	89 f0                	mov    %esi,%eax
    4a69:	e8 fc ff ff ff       	call   4a6a <set_pio_mode+0xa2>
			4a6a: R_386_PC32	_spin_unlock_irqrestore
    4a6e:	eb 2d                	jmp    4a9d <set_pio_mode+0xd5>
    4a70:	89 d8                	mov    %ebx,%eax
    4a72:	ff 54 24 04          	call   *0x4(%esp)
    4a76:	eb 25                	jmp    4a9d <set_pio_mode+0xd5>
    4a78:	89 d8                	mov    %ebx,%eax
    4a7a:	8b 7b 30             	mov    0x30(%ebx),%edi
    4a7d:	e8 fc ff ff ff       	call   4a7e <set_pio_mode+0xb6>
			4a7e: R_386_PC32	ide_set_pio
    4a82:	80 7e 5c 00          	cmpb   $0x0,0x5c(%esi)
    4a86:	79 15                	jns    4a9d <set_pio_mode+0xd5>
    4a88:	83 e7 02             	and    $0x2,%edi
    4a8b:	74 10                	je     4a9d <set_pio_mode+0xd5>
    4a8d:	89 d8                	mov    %ebx,%eax
    4a8f:	e8 fc ff ff ff       	call   4a90 <set_pio_mode+0xc8>
			4a90: R_386_PC32	ide_dma_on
    4a94:	eb 07                	jmp    4a9d <set_pio_mode+0xd5>
    4a96:	b8 da ff ff ff       	mov    $0xffffffda,%eax
    4a9b:	eb 02                	jmp    4a9f <set_pio_mode+0xd7>
    4a9d:	31 c0                	xor    %eax,%eax
    4a9f:	5a                   	pop    %edx
    4aa0:	59                   	pop    %ecx
    4aa1:	5b                   	pop    %ebx
    4aa2:	5e                   	pop    %esi
    4aa3:	5f                   	pop    %edi
    4aa4:	5d                   	pop    %ebp
    4aa5:	c3                   	ret    

00004aa6 <set_using_dma>:
    4aa6:	83 fa 01             	cmp    $0x1,%edx
    4aa9:	b9 ea ff ff ff       	mov    $0xffffffea,%ecx
    4aae:	77 33                	ja     4ae3 <set_using_dma+0x3d>
    4ab0:	8b 48 1c             	mov    0x1c(%eax),%ecx
    4ab3:	f6 41 63 01          	testb  $0x1,0x63(%ecx)
    4ab7:	74 27                	je     4ae0 <set_using_dma+0x3a>
    4ab9:	8b 48 28             	mov    0x28(%eax),%ecx
    4abc:	83 79 78 00          	cmpl   $0x0,0x78(%ecx)
    4ac0:	74 1e                	je     4ae0 <set_using_dma+0x3a>
    4ac2:	85 d2                	test   %edx,%edx
    4ac4:	74 11                	je     4ad7 <set_using_dma+0x31>
    4ac6:	e8 fc ff ff ff       	call   4ac7 <set_using_dma+0x21>
			4ac7: R_386_PC32	ide_set_dma
    4acb:	83 f8 01             	cmp    $0x1,%eax
    4ace:	19 c9                	sbb    %ecx,%ecx
    4ad0:	f7 d1                	not    %ecx
    4ad2:	83 e1 fb             	and    $0xfffffffb,%ecx
    4ad5:	eb 0c                	jmp    4ae3 <set_using_dma+0x3d>
    4ad7:	e8 fc ff ff ff       	call   4ad8 <set_using_dma+0x32>
			4ad8: R_386_PC32	ide_dma_off
    4adc:	31 c9                	xor    %ecx,%ecx
    4ade:	eb 03                	jmp    4ae3 <set_using_dma+0x3d>
    4ae0:	83 c9 ff             	or     $0xffffffff,%ecx
    4ae3:	89 c8                	mov    %ecx,%eax
    4ae5:	c3                   	ret    

00004ae6 <ide_do_devset>:
    4ae6:	56                   	push   %esi
    4ae7:	89 d6                	mov    %edx,%esi
    4ae9:	53                   	push   %ebx
    4aea:	89 c3                	mov    %eax,%ebx
    4aec:	8b 82 94 00 00 00    	mov    0x94(%edx),%eax
    4af2:	8b 50 01             	mov    0x1(%eax),%edx
    4af5:	89 d8                	mov    %ebx,%eax
    4af7:	ff 56 6c             	call   *0x6c(%esi)
    4afa:	85 c0                	test   %eax,%eax
    4afc:	74 03                	je     4b01 <ide_do_devset+0x1b>
    4afe:	89 46 78             	mov    %eax,0x78(%esi)
    4b01:	8b 4e 38             	mov    0x38(%esi),%ecx
    4b04:	89 c2                	mov    %eax,%edx
    4b06:	89 d8                	mov    %ebx,%eax
    4b08:	e8 fc ff ff ff       	call   4b09 <ide_do_devset+0x23>
			4b09: R_386_PC32	ide_complete_rq
    4b0d:	31 c0                	xor    %eax,%eax
    4b0f:	5b                   	pop    %ebx
    4b10:	5e                   	pop    %esi
    4b11:	c3                   	ret    

00004b12 <ide_devset_execute>:
    4b12:	55                   	push   %ebp
    4b13:	57                   	push   %edi
    4b14:	89 cf                	mov    %ecx,%edi
    4b16:	56                   	push   %esi
    4b17:	89 d6                	mov    %edx,%esi
    4b19:	53                   	push   %ebx
    4b1a:	8b 68 10             	mov    0x10(%eax),%ebp
    4b1d:	f6 42 08 01          	testb  $0x1,0x8(%edx)
    4b21:	75 09                	jne    4b2c <ide_devset_execute+0x1a>
    4b23:	89 ca                	mov    %ecx,%edx
    4b25:	ff 56 04             	call   *0x4(%esi)
    4b28:	89 c6                	mov    %eax,%esi
    4b2a:	eb 56                	jmp    4b82 <ide_devset_execute+0x70>
    4b2c:	31 d2                	xor    %edx,%edx
    4b2e:	b9 10 00 00 00       	mov    $0x10,%ecx
    4b33:	89 e8                	mov    %ebp,%eax
    4b35:	e8 fc ff ff ff       	call   4b36 <ide_devset_execute+0x24>
			4b36: R_386_PC32	blk_get_request
    4b3a:	31 d2                	xor    %edx,%edx
    4b3c:	c7 40 28 07 00 00 00 	movl   $0x7,0x28(%eax)
    4b43:	89 c3                	mov    %eax,%ebx
    4b45:	66 c7 80 80 00 00 00 	movw   $0x5,0x80(%eax)
    4b4c:	05 00 
    4b4e:	8b 80 94 00 00 00    	mov    0x94(%eax),%eax
    4b54:	89 d9                	mov    %ebx,%ecx
    4b56:	c6 00 21             	movb   $0x21,(%eax)
    4b59:	8b 83 94 00 00 00    	mov    0x94(%ebx),%eax
    4b5f:	89 78 01             	mov    %edi,0x1(%eax)
    4b62:	8b 46 04             	mov    0x4(%esi),%eax
    4b65:	89 43 6c             	mov    %eax,0x6c(%ebx)
    4b68:	89 e8                	mov    %ebp,%eax
    4b6a:	6a 00                	push   $0x0
    4b6c:	e8 fc ff ff ff       	call   4b6d <ide_devset_execute+0x5b>
			4b6d: R_386_PC32	blk_execute_rq
    4b71:	5e                   	pop    %esi
    4b72:	31 f6                	xor    %esi,%esi
    4b74:	85 c0                	test   %eax,%eax
    4b76:	74 03                	je     4b7b <ide_devset_execute+0x69>
    4b78:	8b 73 78             	mov    0x78(%ebx),%esi
    4b7b:	89 d8                	mov    %ebx,%eax
    4b7d:	e8 fc ff ff ff       	call   4b7e <ide_devset_execute+0x6c>
			4b7e: R_386_PC32	blk_put_request
    4b82:	89 f0                	mov    %esi,%eax
    4b84:	5b                   	pop    %ebx
    4b85:	5e                   	pop    %esi
    4b86:	5f                   	pop    %edi
    4b87:	5d                   	pop    %ebp
    4b88:	c3                   	ret    
    4b89:	90                   	nop
    4b8a:	90                   	nop
    4b8b:	90                   	nop

00004b8c <ide_inb>:
    4b8c:	89 c2                	mov    %eax,%edx
    4b8e:	ec                   	in     (%dx),%al
    4b8f:	c3                   	ret    

00004b90 <ide_outb>:
    4b90:	ee                   	out    %al,(%dx)
    4b91:	c3                   	ret    

00004b92 <ide_mm_inb>:
    4b92:	8a 00                	mov    (%eax),%al
    4b94:	c3                   	ret    

00004b95 <ide_mm_outb>:
    4b95:	88 02                	mov    %al,(%edx)
    4b97:	c3                   	ret    

00004b98 <ide_exec_command>:
    4b98:	89 c1                	mov    %eax,%ecx
    4b9a:	88 d0                	mov    %dl,%al
    4b9c:	f6 41 5e 01          	testb  $0x1,0x5e(%ecx)
    4ba0:	8b 51 30             	mov    0x30(%ecx),%edx
    4ba3:	74 03                	je     4ba8 <ide_exec_command+0x10>
    4ba5:	88 02                	mov    %al,(%edx)
    4ba7:	c3                   	ret    
    4ba8:	ee                   	out    %al,(%dx)
    4ba9:	c3                   	ret    

00004baa <ide_read_status>:
    4baa:	f6 40 5e 01          	testb  $0x1,0x5e(%eax)
    4bae:	8b 50 30             	mov    0x30(%eax),%edx
    4bb1:	74 03                	je     4bb6 <ide_read_status+0xc>
    4bb3:	8a 02                	mov    (%edx),%al
    4bb5:	c3                   	ret    
    4bb6:	ec                   	in     (%dx),%al
    4bb7:	c3                   	ret    

00004bb8 <ide_read_altstatus>:
    4bb8:	f6 40 5e 01          	testb  $0x1,0x5e(%eax)
    4bbc:	8b 50 34             	mov    0x34(%eax),%edx
    4bbf:	74 03                	je     4bc4 <ide_read_altstatus+0xc>
    4bc1:	8a 02                	mov    (%edx),%al
    4bc3:	c3                   	ret    
    4bc4:	ec                   	in     (%dx),%al
    4bc5:	c3                   	ret    

00004bc6 <ide_write_devctl>:
    4bc6:	89 c1                	mov    %eax,%ecx
    4bc8:	88 d0                	mov    %dl,%al
    4bca:	f6 41 5e 01          	testb  $0x1,0x5e(%ecx)
    4bce:	8b 51 34             	mov    0x34(%ecx),%edx
    4bd1:	74 03                	je     4bd6 <ide_write_devctl+0x10>
    4bd3:	88 02                	mov    %al,(%edx)
    4bd5:	c3                   	ret    
    4bd6:	ee                   	out    %al,(%dx)
    4bd7:	c3                   	ret    

00004bd8 <ide_dev_select>:
    4bd8:	8b 50 28             	mov    0x28(%eax),%edx
    4bdb:	8a 40 3d             	mov    0x3d(%eax),%al
    4bde:	83 c8 a0             	or     $0xffffffa0,%eax
    4be1:	f6 42 5e 01          	testb  $0x1,0x5e(%edx)
    4be5:	8b 52 2c             	mov    0x2c(%edx),%edx
    4be8:	74 03                	je     4bed <ide_dev_select+0x15>
    4bea:	88 02                	mov    %al,(%edx)
    4bec:	c3                   	ret    
    4bed:	ee                   	out    %al,(%dx)
    4bee:	c3                   	ret    

00004bef <ide_tf_load>:
    4bef:	55                   	push   %ebp
    4bf0:	0f b6 e9             	movzbl %cl,%ebp
    4bf3:	57                   	push   %edi
    4bf4:	56                   	push   %esi
    4bf5:	be 90 4b 00 00       	mov    $0x4b90,%esi
			4bf6: R_386_32	.text
    4bfa:	53                   	push   %ebx
    4bfb:	8b 78 28             	mov    0x28(%eax),%edi
    4bfe:	b8 95 4b 00 00       	mov    $0x4b95,%eax
			4bff: R_386_32	.text
    4c03:	89 d3                	mov    %edx,%ebx
    4c05:	f6 47 5e 01          	testb  $0x1,0x5e(%edi)
    4c09:	0f 45 f0             	cmovne %eax,%esi
    4c0c:	f7 c5 02 00 00 00    	test   $0x2,%ebp
    4c12:	74 09                	je     4c1d <ide_tf_load+0x2e>
    4c14:	8b 57 18             	mov    0x18(%edi),%edx
    4c17:	0f b6 43 01          	movzbl 0x1(%ebx),%eax
    4c1b:	ff d6                	call   *%esi
    4c1d:	f7 c5 04 00 00 00    	test   $0x4,%ebp
    4c23:	74 09                	je     4c2e <ide_tf_load+0x3f>
    4c25:	8b 57 1c             	mov    0x1c(%edi),%edx
    4c28:	0f b6 43 02          	movzbl 0x2(%ebx),%eax
    4c2c:	ff d6                	call   *%esi
    4c2e:	f7 c5 08 00 00 00    	test   $0x8,%ebp
    4c34:	74 09                	je     4c3f <ide_tf_load+0x50>
    4c36:	8b 57 20             	mov    0x20(%edi),%edx
    4c39:	0f b6 43 03          	movzbl 0x3(%ebx),%eax
    4c3d:	ff d6                	call   *%esi
    4c3f:	f7 c5 10 00 00 00    	test   $0x10,%ebp
    4c45:	74 09                	je     4c50 <ide_tf_load+0x61>
    4c47:	8b 57 24             	mov    0x24(%edi),%edx
    4c4a:	0f b6 43 04          	movzbl 0x4(%ebx),%eax
    4c4e:	ff d6                	call   *%esi
    4c50:	f7 c5 20 00 00 00    	test   $0x20,%ebp
    4c56:	74 09                	je     4c61 <ide_tf_load+0x72>
    4c58:	8b 57 28             	mov    0x28(%edi),%edx
    4c5b:	0f b6 43 05          	movzbl 0x5(%ebx),%eax
    4c5f:	ff d6                	call   *%esi
    4c61:	83 e5 40             	and    $0x40,%ebp
    4c64:	74 09                	je     4c6f <ide_tf_load+0x80>
    4c66:	8b 57 2c             	mov    0x2c(%edi),%edx
    4c69:	0f b6 43 06          	movzbl 0x6(%ebx),%eax
    4c6d:	ff d6                	call   *%esi
    4c6f:	5b                   	pop    %ebx
    4c70:	5e                   	pop    %esi
    4c71:	5f                   	pop    %edi
    4c72:	5d                   	pop    %ebp
    4c73:	c3                   	ret    

00004c74 <ide_tf_read>:
    4c74:	55                   	push   %ebp
    4c75:	0f b6 e9             	movzbl %cl,%ebp
    4c78:	57                   	push   %edi
    4c79:	56                   	push   %esi
    4c7a:	be 8c 4b 00 00       	mov    $0x4b8c,%esi
			4c7b: R_386_32	.text
    4c7f:	53                   	push   %ebx
    4c80:	8b 78 28             	mov    0x28(%eax),%edi
    4c83:	b8 92 4b 00 00       	mov    $0x4b92,%eax
			4c84: R_386_32	.text
    4c88:	89 d3                	mov    %edx,%ebx
    4c8a:	f6 47 5e 01          	testb  $0x1,0x5e(%edi)
    4c8e:	0f 45 f0             	cmovne %eax,%esi
    4c91:	f7 c5 02 00 00 00    	test   $0x2,%ebp
    4c97:	74 08                	je     4ca1 <ide_tf_read+0x2d>
    4c99:	8b 47 18             	mov    0x18(%edi),%eax
    4c9c:	ff d6                	call   *%esi
    4c9e:	88 43 01             	mov    %al,0x1(%ebx)
    4ca1:	f7 c5 04 00 00 00    	test   $0x4,%ebp
    4ca7:	74 08                	je     4cb1 <ide_tf_read+0x3d>
    4ca9:	8b 47 1c             	mov    0x1c(%edi),%eax
    4cac:	ff d6                	call   *%esi
    4cae:	88 43 02             	mov    %al,0x2(%ebx)
    4cb1:	f7 c5 08 00 00 00    	test   $0x8,%ebp
    4cb7:	74 08                	je     4cc1 <ide_tf_read+0x4d>
    4cb9:	8b 47 20             	mov    0x20(%edi),%eax
    4cbc:	ff d6                	call   *%esi
    4cbe:	88 43 03             	mov    %al,0x3(%ebx)
    4cc1:	f7 c5 10 00 00 00    	test   $0x10,%ebp
    4cc7:	74 08                	je     4cd1 <ide_tf_read+0x5d>
    4cc9:	8b 47 24             	mov    0x24(%edi),%eax
    4ccc:	ff d6                	call   *%esi
    4cce:	88 43 04             	mov    %al,0x4(%ebx)
    4cd1:	f7 c5 20 00 00 00    	test   $0x20,%ebp
    4cd7:	74 08                	je     4ce1 <ide_tf_read+0x6d>
    4cd9:	8b 47 28             	mov    0x28(%edi),%eax
    4cdc:	ff d6                	call   *%esi
    4cde:	88 43 05             	mov    %al,0x5(%ebx)
    4ce1:	83 e5 40             	and    $0x40,%ebp
    4ce4:	74 08                	je     4cee <ide_tf_read+0x7a>
    4ce6:	8b 47 2c             	mov    0x2c(%edi),%eax
    4ce9:	ff d6                	call   *%esi
    4ceb:	88 43 06             	mov    %al,0x6(%ebx)
    4cee:	5b                   	pop    %ebx
    4cef:	5e                   	pop    %esi
    4cf0:	5f                   	pop    %edi
    4cf1:	5d                   	pop    %ebp
    4cf2:	c3                   	ret    

00004cf3 <ide_input_data>:
    4cf3:	55                   	push   %ebp
    4cf4:	57                   	push   %edi
    4cf5:	56                   	push   %esi
    4cf6:	53                   	push   %ebx
    4cf7:	89 cb                	mov    %ecx,%ebx
    4cf9:	83 ec 0c             	sub    $0xc,%esp
    4cfc:	8b 78 28             	mov    0x28(%eax),%edi
    4cff:	8b 54 24 20          	mov    0x20(%esp),%edx
    4d03:	8b 77 14             	mov    0x14(%edi),%esi
    4d06:	42                   	inc    %edx
    4d07:	89 54 24 04          	mov    %edx,0x4(%esp)
    4d0b:	89 d1                	mov    %edx,%ecx
    4d0d:	0f b7 6f 5e          	movzwl 0x5e(%edi),%ebp
    4d11:	8a 50 4a             	mov    0x4a(%eax),%dl
    4d14:	d1 e9                	shr    %ecx
    4d16:	83 e5 01             	and    $0x1,%ebp
    4d19:	84 d2                	test   %dl,%dl
    4d1b:	74 6e                	je     4d8b <ide_input_data+0x98>
    4d1d:	89 e8                	mov    %ebp,%eax
    4d1f:	83 f0 01             	xor    $0x1,%eax
    4d22:	d1 ea                	shr    %edx
    4d24:	20 d0                	and    %dl,%al
    4d26:	88 44 24 0b          	mov    %al,0xb(%esp)
    4d2a:	74 15                	je     4d41 <ide_input_data+0x4e>
    4d2c:	ff 15 00 00 00 00    	call   *0x0
			4d2e: R_386_32	pv_irq_ops
    4d32:	89 04 24             	mov    %eax,(%esp)
    4d35:	ff 15 08 00 00 00    	call   *0x8
			4d37: R_386_32	pv_irq_ops
    4d3b:	8b 57 1c             	mov    0x1c(%edi),%edx
    4d3e:	ec                   	in     (%dx),%al
    4d3f:	ec                   	in     (%dx),%al
    4d40:	ec                   	in     (%dx),%al
    4d41:	89 ea                	mov    %ebp,%edx
    4d43:	89 d8                	mov    %ebx,%eax
    4d45:	d1 e9                	shr    %ecx
    4d47:	84 d2                	test   %dl,%dl
    4d49:	75 0a                	jne    4d55 <ide_input_data+0x62>
    4d4b:	eb 0e                	jmp    4d5b <ide_input_data+0x68>
    4d4d:	8b 16                	mov    (%esi),%edx
    4d4f:	89 10                	mov    %edx,(%eax)
    4d51:	49                   	dec    %ecx
    4d52:	83 c0 04             	add    $0x4,%eax
    4d55:	85 c9                	test   %ecx,%ecx
    4d57:	75 f4                	jne    4d4d <ide_input_data+0x5a>
    4d59:	eb 06                	jmp    4d61 <ide_input_data+0x6e>
    4d5b:	89 df                	mov    %ebx,%edi
    4d5d:	89 f2                	mov    %esi,%edx
    4d5f:	f3 6d                	rep insl (%dx),%es:(%edi)
    4d61:	80 7c 24 0b 00       	cmpb   $0x0,0xb(%esp)
    4d66:	74 09                	je     4d71 <ide_input_data+0x7e>
    4d68:	8b 04 24             	mov    (%esp),%eax
    4d6b:	ff 15 04 00 00 00    	call   *0x4
			4d6d: R_386_32	pv_irq_ops
    4d71:	8b 44 24 04          	mov    0x4(%esp),%eax
    4d75:	83 e0 03             	and    $0x3,%eax
    4d78:	83 f8 01             	cmp    $0x1,%eax
    4d7b:	76 2d                	jbe    4daa <ide_input_data+0xb7>
    4d7d:	8b 44 24 20          	mov    0x20(%esp),%eax
    4d81:	b9 01 00 00 00       	mov    $0x1,%ecx
    4d86:	83 e0 fc             	and    $0xfffffffc,%eax
    4d89:	01 c3                	add    %eax,%ebx
    4d8b:	89 ea                	mov    %ebp,%edx
    4d8d:	84 d2                	test   %dl,%dl
    4d8f:	74 12                	je     4da3 <ide_input_data+0xb0>
    4d91:	eb 0a                	jmp    4d9d <ide_input_data+0xaa>
    4d93:	66 8b 06             	mov    (%esi),%ax
    4d96:	66 89 03             	mov    %ax,(%ebx)
    4d99:	49                   	dec    %ecx
    4d9a:	83 c3 02             	add    $0x2,%ebx
    4d9d:	85 c9                	test   %ecx,%ecx
    4d9f:	75 f2                	jne    4d93 <ide_input_data+0xa0>
    4da1:	eb 07                	jmp    4daa <ide_input_data+0xb7>
    4da3:	89 df                	mov    %ebx,%edi
    4da5:	89 f2                	mov    %esi,%edx
    4da7:	f3 66 6d             	rep insw (%dx),%es:(%edi)
    4daa:	83 c4 0c             	add    $0xc,%esp
    4dad:	5b                   	pop    %ebx
    4dae:	5e                   	pop    %esi
    4daf:	5f                   	pop    %edi
    4db0:	5d                   	pop    %ebp
    4db1:	c3                   	ret    

00004db2 <ide_output_data>:
    4db2:	55                   	push   %ebp
    4db3:	57                   	push   %edi
    4db4:	56                   	push   %esi
    4db5:	53                   	push   %ebx
    4db6:	89 cb                	mov    %ecx,%ebx
    4db8:	83 ec 0c             	sub    $0xc,%esp
    4dbb:	8b 70 28             	mov    0x28(%eax),%esi
    4dbe:	8b 54 24 20          	mov    0x20(%esp),%edx
    4dc2:	8b 7e 14             	mov    0x14(%esi),%edi
    4dc5:	42                   	inc    %edx
    4dc6:	89 54 24 04          	mov    %edx,0x4(%esp)
    4dca:	89 d1                	mov    %edx,%ecx
    4dcc:	0f b7 6e 5e          	movzwl 0x5e(%esi),%ebp
    4dd0:	8a 50 4a             	mov    0x4a(%eax),%dl
    4dd3:	d1 e9                	shr    %ecx
    4dd5:	83 e5 01             	and    $0x1,%ebp
    4dd8:	84 d2                	test   %dl,%dl
    4dda:	74 6e                	je     4e4a <ide_output_data+0x98>
    4ddc:	89 e8                	mov    %ebp,%eax
    4dde:	83 f0 01             	xor    $0x1,%eax
    4de1:	d1 ea                	shr    %edx
    4de3:	20 d0                	and    %dl,%al
    4de5:	88 44 24 0b          	mov    %al,0xb(%esp)
    4de9:	74 15                	je     4e00 <ide_output_data+0x4e>
    4deb:	ff 15 00 00 00 00    	call   *0x0
			4ded: R_386_32	pv_irq_ops
    4df1:	89 04 24             	mov    %eax,(%esp)
    4df4:	ff 15 08 00 00 00    	call   *0x8
			4df6: R_386_32	pv_irq_ops
    4dfa:	8b 56 1c             	mov    0x1c(%esi),%edx
    4dfd:	ec                   	in     (%dx),%al
    4dfe:	ec                   	in     (%dx),%al
    4dff:	ec                   	in     (%dx),%al
    4e00:	89 ea                	mov    %ebp,%edx
    4e02:	89 d8                	mov    %ebx,%eax
    4e04:	d1 e9                	shr    %ecx
    4e06:	84 d2                	test   %dl,%dl
    4e08:	75 0a                	jne    4e14 <ide_output_data+0x62>
    4e0a:	eb 0e                	jmp    4e1a <ide_output_data+0x68>
    4e0c:	8b 10                	mov    (%eax),%edx
    4e0e:	89 17                	mov    %edx,(%edi)
    4e10:	83 c0 04             	add    $0x4,%eax
    4e13:	49                   	dec    %ecx
    4e14:	85 c9                	test   %ecx,%ecx
    4e16:	75 f4                	jne    4e0c <ide_output_data+0x5a>
    4e18:	eb 06                	jmp    4e20 <ide_output_data+0x6e>
    4e1a:	89 de                	mov    %ebx,%esi
    4e1c:	89 fa                	mov    %edi,%edx
    4e1e:	f3 6f                	rep outsl %ds:(%esi),(%dx)
    4e20:	80 7c 24 0b 00       	cmpb   $0x0,0xb(%esp)
    4e25:	74 09                	je     4e30 <ide_output_data+0x7e>
    4e27:	8b 04 24             	mov    (%esp),%eax
    4e2a:	ff 15 04 00 00 00    	call   *0x4
			4e2c: R_386_32	pv_irq_ops
    4e30:	8b 44 24 04          	mov    0x4(%esp),%eax
    4e34:	83 e0 03             	and    $0x3,%eax
    4e37:	83 f8 01             	cmp    $0x1,%eax
    4e3a:	76 2d                	jbe    4e69 <ide_output_data+0xb7>
    4e3c:	8b 44 24 20          	mov    0x20(%esp),%eax
    4e40:	b9 01 00 00 00       	mov    $0x1,%ecx
    4e45:	83 e0 fc             	and    $0xfffffffc,%eax
    4e48:	01 c3                	add    %eax,%ebx
    4e4a:	89 ea                	mov    %ebp,%edx
    4e4c:	84 d2                	test   %dl,%dl
    4e4e:	74 12                	je     4e62 <ide_output_data+0xb0>
    4e50:	eb 0a                	jmp    4e5c <ide_output_data+0xaa>
    4e52:	66 8b 03             	mov    (%ebx),%ax
    4e55:	66 89 07             	mov    %ax,(%edi)
    4e58:	83 c3 02             	add    $0x2,%ebx
    4e5b:	49                   	dec    %ecx
    4e5c:	85 c9                	test   %ecx,%ecx
    4e5e:	75 f2                	jne    4e52 <ide_output_data+0xa0>
    4e60:	eb 07                	jmp    4e69 <ide_output_data+0xb7>
    4e62:	89 de                	mov    %ebx,%esi
    4e64:	89 fa                	mov    %edi,%edx
    4e66:	f3 66 6f             	rep outsw %ds:(%esi),(%dx)
    4e69:	83 c4 0c             	add    $0xc,%esp
    4e6c:	5b                   	pop    %ebx
    4e6d:	5e                   	pop    %esi
    4e6e:	5f                   	pop    %edi
    4e6f:	5d                   	pop    %ebp
    4e70:	c3                   	ret    
    4e71:	90                   	nop
    4e72:	90                   	nop
    4e73:	90                   	nop

00004e74 <pre_reset>:
    4e74:	56                   	push   %esi
    4e75:	53                   	push   %ebx
    4e76:	89 c3                	mov    %eax,%ebx
    4e78:	8b 40 28             	mov    0x28(%eax),%eax
    4e7b:	80 7b 46 20          	cmpb   $0x20,0x46(%ebx)
    4e7f:	8b 70 74             	mov    0x74(%eax),%esi
    4e82:	75 3d                	jne    4ec1 <pre_reset+0x4d>
    4e84:	8b 43 1c             	mov    0x1c(%ebx),%eax
    4e87:	0f b7 80 ac 00 00 00 	movzwl 0xac(%eax),%eax
    4e8e:	c6 43 48 00          	movb   $0x0,0x48(%ebx)
    4e92:	25 00 04 00 00       	and    $0x400,%eax
    4e97:	83 f8 01             	cmp    $0x1,%eax
    4e9a:	19 c0                	sbb    %eax,%eax
    4e9c:	81 63 30 ff ff ff f7 	andl   $0xf7ffffff,0x30(%ebx)
    4ea3:	83 e0 03             	and    $0x3,%eax
    4ea6:	f6 43 30 03          	testb  $0x3,0x30(%ebx)
    4eaa:	88 43 3c             	mov    %al,0x3c(%ebx)
    4ead:	75 04                	jne    4eb3 <pre_reset+0x3f>
    4eaf:	c6 43 49 00          	movb   $0x0,0x49(%ebx)
    4eb3:	8a 43 49             	mov    0x49(%ebx),%al
    4eb6:	3a 43 48             	cmp    0x48(%ebx),%al
    4eb9:	74 0d                	je     4ec8 <pre_reset+0x54>
    4ebb:	80 4b 3c 04          	orb    $0x4,0x3c(%ebx)
    4ebf:	eb 07                	jmp    4ec8 <pre_reset+0x54>
    4ec1:	81 4b 30 00 00 08 00 	orl    $0x80000,0x30(%ebx)
    4ec8:	f6 43 30 02          	testb  $0x2,0x30(%ebx)
    4ecc:	74 16                	je     4ee4 <pre_reset+0x70>
    4ece:	83 7b 7c 00          	cmpl   $0x0,0x7c(%ebx)
    4ed2:	74 09                	je     4edd <pre_reset+0x69>
    4ed4:	89 d8                	mov    %ebx,%eax
    4ed6:	e8 fc ff ff ff       	call   4ed7 <pre_reset+0x63>
			4ed7: R_386_PC32	ide_check_dma_crc
    4edb:	eb 07                	jmp    4ee4 <pre_reset+0x70>
    4edd:	89 d8                	mov    %ebx,%eax
    4edf:	e8 fc ff ff ff       	call   4ee0 <pre_reset+0x6c>
			4ee0: R_386_PC32	ide_dma_off
    4ee4:	8b 43 30             	mov    0x30(%ebx),%eax
    4ee7:	a8 01                	test   $0x1,%al
    4ee9:	75 10                	jne    4efb <pre_reset+0x87>
    4eeb:	a8 02                	test   $0x2,%al
    4eed:	75 29                	jne    4f18 <pre_reset+0xa4>
    4eef:	83 e0 fb             	and    $0xfffffffb,%eax
    4ef2:	89 43 30             	mov    %eax,0x30(%ebx)
    4ef5:	c6 43 4a 00          	movb   $0x0,0x4a(%ebx)
    4ef9:	eb 1d                	jmp    4f18 <pre_reset+0xa4>
    4efb:	85 f6                	test   %esi,%esi
    4efd:	74 0b                	je     4f0a <pre_reset+0x96>
    4eff:	8b 56 10             	mov    0x10(%esi),%edx
    4f02:	85 d2                	test   %edx,%edx
    4f04:	74 04                	je     4f0a <pre_reset+0x96>
    4f06:	89 d8                	mov    %ebx,%eax
    4f08:	ff d2                	call   *%edx
    4f0a:	8a 43 42             	mov    0x42(%ebx),%al
    4f0d:	3c ff                	cmp    $0xff,%al
    4f0f:	74 03                	je     4f14 <pre_reset+0xa0>
    4f11:	88 43 43             	mov    %al,0x43(%ebx)
    4f14:	c6 43 42 ff          	movb   $0xff,0x42(%ebx)
    4f18:	5b                   	pop    %ebx
    4f19:	5e                   	pop    %esi
    4f1a:	c3                   	ret    

00004f1b <ide_complete_drive_reset>:
    4f1b:	53                   	push   %ebx
    4f1c:	8b 48 28             	mov    0x28(%eax),%ecx
    4f1f:	8b 89 38 02 00 00    	mov    0x238(%ecx),%ecx
    4f25:	85 c9                	test   %ecx,%ecx
    4f27:	74 2b                	je     4f54 <ide_complete_drive_reset+0x39>
    4f29:	83 79 28 07          	cmpl   $0x7,0x28(%ecx)
    4f2d:	75 25                	jne    4f54 <ide_complete_drive_reset+0x39>
    4f2f:	8b 99 94 00 00 00    	mov    0x94(%ecx),%ebx
    4f35:	80 3b 20             	cmpb   $0x20,(%ebx)
    4f38:	75 1a                	jne    4f54 <ide_complete_drive_reset+0x39>
    4f3a:	85 d2                	test   %edx,%edx
    4f3c:	7f 0d                	jg     4f4b <ide_complete_drive_reset+0x30>
    4f3e:	83 79 78 00          	cmpl   $0x0,0x78(%ecx)
    4f42:	75 07                	jne    4f4b <ide_complete_drive_reset+0x30>
    4f44:	c7 41 78 fb ff ff ff 	movl   $0xfffffffb,0x78(%ecx)
    4f4b:	8b 49 38             	mov    0x38(%ecx),%ecx
    4f4e:	5b                   	pop    %ebx
    4f4f:	e9 fc ff ff ff       	jmp    4f50 <ide_complete_drive_reset+0x35>
			4f50: R_386_PC32	ide_complete_rq
    4f54:	5b                   	pop    %ebx
    4f55:	c3                   	ret    

00004f56 <do_reset1>:
    4f56:	55                   	push   %ebp
    4f57:	b9 05 00 00 00       	mov    $0x5,%ecx
    4f5c:	57                   	push   %edi
    4f5d:	56                   	push   %esi
    4f5e:	89 c6                	mov    %eax,%esi
    4f60:	53                   	push   %ebx
    4f61:	83 ec 24             	sub    $0x24,%esp
    4f64:	89 54 24 0c          	mov    %edx,0xc(%esp)
    4f68:	8b 58 28             	mov    0x28(%eax),%ebx
    4f6b:	8d 7c 24 10          	lea    0x10(%esp),%edi
    4f6f:	64 8b 15 00 00 00 00 	mov    %fs:0x0,%edx
			4f72: R_386_32	per_cpu__current_task
    4f76:	8b 43 70             	mov    0x70(%ebx),%eax
    4f79:	89 44 24 08          	mov    %eax,0x8(%esp)
    4f7d:	31 c0                	xor    %eax,%eax
    4f7f:	f3 ab                	rep stos %eax,%es:(%edi)
    4f81:	8d 44 24 1c          	lea    0x1c(%esp),%eax
    4f85:	89 54 24 14          	mov    %edx,0x14(%esp)
    4f89:	8d 93 7c 02 00 00    	lea    0x27c(%ebx),%edx
    4f8f:	89 44 24 1c          	mov    %eax,0x1c(%esp)
    4f93:	89 44 24 20          	mov    %eax,0x20(%esp)
    4f97:	89 d0                	mov    %edx,%eax
    4f99:	c7 44 24 18 00 00 00 	movl   $0x0,0x18(%esp)
    4fa0:	00 
			4f9d: R_386_32	autoremove_wake_function
    4fa1:	89 54 24 04          	mov    %edx,0x4(%esp)
    4fa5:	e8 fc ff ff ff       	call   4fa6 <do_reset1+0x50>
			4fa6: R_386_PC32	_spin_lock_irqsave
    4faa:	83 bb 2c 02 00 00 00 	cmpl   $0x0,0x22c(%ebx)
    4fb1:	89 c5                	mov    %eax,%ebp
    4fb3:	74 04                	je     4fb9 <do_reset1+0x63>
    4fb5:	0f 0b                	ud2a   
    4fb7:	eb fe                	jmp    4fb7 <do_reset1+0x61>
    4fb9:	83 7c 24 0c 00       	cmpl   $0x0,0xc(%esp)
    4fbe:	75 64                	jne    5024 <do_reset1+0xce>
    4fc0:	80 7e 46 20          	cmpb   $0x20,0x46(%esi)
    4fc4:	74 5e                	je     5024 <do_reset1+0xce>
    4fc6:	89 f0                	mov    %esi,%eax
    4fc8:	e8 a7 fe ff ff       	call   4e74 <pre_reset>
    4fcd:	89 f0                	mov    %esi,%eax
    4fcf:	8b 4c 24 08          	mov    0x8(%esp),%ecx
    4fd3:	ff 51 10             	call   *0x10(%ecx)
    4fd6:	b8 8c 4f 01 00       	mov    $0x14f8c,%eax
    4fdb:	e8 fc ff ff ff       	call   4fdc <do_reset1+0x86>
			4fdc: R_386_PC32	__const_udelay
    4fe0:	ba 08 00 00 00       	mov    $0x8,%edx
    4fe5:	89 d8                	mov    %ebx,%eax
    4fe7:	8b 4c 24 08          	mov    0x8(%esp),%ecx
    4feb:	ff 11                	call   *(%ecx)
    4fed:	b8 d0 07 00 00       	mov    $0x7d0,%eax
    4ff2:	e8 fc ff ff ff       	call   4ff3 <do_reset1+0x9d>
			4ff3: R_386_PC32	__const_udelay
    4ff7:	a1 00 00 00 00       	mov    0x0,%eax
			4ff8: R_386_32	jiffies
    4ffc:	b9 0c 00 00 00       	mov    $0xc,%ecx
    5001:	80 8b 30 02 00 00 01 	orb    $0x1,0x230(%ebx)
    5008:	ba 7d 51 00 00       	mov    $0x517d,%edx
			5009: R_386_32	.text
    500d:	05 4c 1d 00 00       	add    $0x1d4c,%eax
    5012:	89 83 6c 02 00 00    	mov    %eax,0x26c(%ebx)
    5018:	89 f0                	mov    %esi,%eax
    501a:	e8 fc ff ff ff       	call   501b <do_reset1+0xc5>
			501b: R_386_PC32	__ide_set_handler
    501f:	e9 3a 01 00 00       	jmp    515e <do_reset1+0x208>
    5024:	89 f7                	mov    %esi,%edi
    5026:	b8 00 00 00 00       	mov    $0x0,%eax
			5027: R_386_32	ide_park_wq
    502b:	b9 02 00 00 00       	mov    $0x2,%ecx
    5030:	8d 54 24 10          	lea    0x10(%esp),%edx
    5034:	e8 fc ff ff ff       	call   5035 <do_reset1+0xdf>
			5035: R_386_PC32	prepare_to_wait
    5039:	8b 35 00 00 00 00    	mov    0x0,%esi
			503b: R_386_32	jiffies
    503f:	31 c0                	xor    %eax,%eax
    5041:	eb 1d                	jmp    5060 <do_reset1+0x10a>
    5043:	8b 4a 30             	mov    0x30(%edx),%ecx
    5046:	81 e1 40 00 00 08    	and    $0x8000040,%ecx
    504c:	81 f9 40 00 00 08    	cmp    $0x8000040,%ecx
    5052:	75 07                	jne    505b <do_reset1+0x105>
    5054:	8b 52 34             	mov    0x34(%edx),%edx
    5057:	39 d6                	cmp    %edx,%esi
    5059:	78 02                	js     505d <do_reset1+0x107>
    505b:	89 f2                	mov    %esi,%edx
    505d:	40                   	inc    %eax
    505e:	89 d6                	mov    %edx,%esi
    5060:	8b 54 83 48          	mov    0x48(%ebx,%eax,4),%edx
    5064:	85 d2                	test   %edx,%edx
    5066:	75 db                	jne    5043 <do_reset1+0xed>
    5068:	83 f8 01             	cmp    $0x1,%eax
    506b:	7e d6                	jle    5043 <do_reset1+0xed>
    506d:	8b 0d 00 00 00 00    	mov    0x0,%ecx
			506f: R_386_32	jiffies
    5073:	39 f1                	cmp    %esi,%ecx
    5075:	79 2b                	jns    50a2 <do_reset1+0x14c>
    5077:	8b 44 24 04          	mov    0x4(%esp),%eax
    507b:	89 ea                	mov    %ebp,%edx
    507d:	89 0c 24             	mov    %ecx,(%esp)
    5080:	e8 fc ff ff ff       	call   5081 <do_reset1+0x12b>
			5081: R_386_PC32	_spin_unlock_irqrestore
    5085:	89 f0                	mov    %esi,%eax
    5087:	8b 0c 24             	mov    (%esp),%ecx
    508a:	29 c8                	sub    %ecx,%eax
    508c:	e8 fc ff ff ff       	call   508d <do_reset1+0x137>
			508d: R_386_PC32	schedule_timeout_uninterruptible
    5091:	89 c6                	mov    %eax,%esi
    5093:	8b 44 24 04          	mov    0x4(%esp),%eax
    5097:	e8 fc ff ff ff       	call   5098 <do_reset1+0x142>
			5098: R_386_PC32	_spin_lock_irqsave
    509c:	85 f6                	test   %esi,%esi
    509e:	89 c5                	mov    %eax,%ebp
    50a0:	75 84                	jne    5026 <do_reset1+0xd0>
    50a2:	8d 54 24 10          	lea    0x10(%esp),%edx
    50a6:	b8 00 00 00 00       	mov    $0x0,%eax
			50a7: R_386_32	ide_park_wq
    50ab:	89 fe                	mov    %edi,%esi
    50ad:	31 ff                	xor    %edi,%edi
    50af:	e8 fc ff ff ff       	call   50b0 <do_reset1+0x15a>
			50b0: R_386_PC32	finish_wait
    50b4:	eb 06                	jmp    50bc <do_reset1+0x166>
    50b6:	e8 b9 fd ff ff       	call   4e74 <pre_reset>
    50bb:	47                   	inc    %edi
    50bc:	8b 44 bb 48          	mov    0x48(%ebx,%edi,4),%eax
    50c0:	85 c0                	test   %eax,%eax
    50c2:	75 f2                	jne    50b6 <do_reset1+0x160>
    50c4:	83 ff 01             	cmp    $0x1,%edi
    50c7:	7e ed                	jle    50b6 <do_reset1+0x160>
    50c9:	83 7b 34 00          	cmpl   $0x0,0x34(%ebx)
    50cd:	75 1e                	jne    50ed <do_reset1+0x197>
    50cf:	8b 44 24 04          	mov    0x4(%esp),%eax
    50d3:	89 ea                	mov    %ebp,%edx
    50d5:	e8 fc ff ff ff       	call   50d6 <do_reset1+0x180>
			50d6: R_386_PC32	_spin_unlock_irqrestore
    50da:	89 f0                	mov    %esi,%eax
    50dc:	ba fa ff ff ff       	mov    $0xfffffffa,%edx
    50e1:	e8 35 fe ff ff       	call   4f1b <ide_complete_drive_reset>
    50e6:	31 c0                	xor    %eax,%eax
    50e8:	e9 81 00 00 00       	jmp    516e <do_reset1+0x218>
    50ed:	8b 4c 24 08          	mov    0x8(%esp),%ecx
    50f1:	ba 0e 00 00 00       	mov    $0xe,%edx
    50f6:	89 d8                	mov    %ebx,%eax
    50f8:	ff 51 0c             	call   *0xc(%ecx)
    50fb:	b8 c6 a7 00 00       	mov    $0xa7c6,%eax
    5100:	e8 fc ff ff ff       	call   5101 <do_reset1+0x1ab>
			5101: R_386_PC32	__const_udelay
    5105:	8b 56 30             	mov    0x30(%esi),%edx
    5108:	89 d8                	mov    %ebx,%eax
    510a:	8b 4c 24 08          	mov    0x8(%esp),%ecx
    510e:	c1 fa 1f             	sar    $0x1f,%edx
    5111:	83 e2 fe             	and    $0xfffffffe,%edx
    5114:	83 c2 0a             	add    $0xa,%edx
    5117:	ff 51 0c             	call   *0xc(%ecx)
    511a:	b8 c6 a7 00 00       	mov    $0xa7c6,%eax
    511f:	e8 fc ff ff ff       	call   5120 <do_reset1+0x1ca>
			5120: R_386_PC32	__const_udelay
    5124:	a1 00 00 00 00       	mov    0x0,%eax
			5125: R_386_32	jiffies
    5129:	b9 0c 00 00 00       	mov    $0xc,%ecx
    512e:	80 8b 30 02 00 00 01 	orb    $0x1,0x230(%ebx)
    5135:	ba 11 52 00 00       	mov    $0x5211,%edx
			5136: R_386_32	.text
    513a:	05 4c 1d 00 00       	add    $0x1d4c,%eax
    513f:	89 83 6c 02 00 00    	mov    %eax,0x26c(%ebx)
    5145:	89 f0                	mov    %esi,%eax
    5147:	e8 fc ff ff ff       	call   5148 <do_reset1+0x1f2>
			5148: R_386_PC32	__ide_set_handler
    514c:	8b 43 74             	mov    0x74(%ebx),%eax
    514f:	85 c0                	test   %eax,%eax
    5151:	74 0b                	je     515e <do_reset1+0x208>
    5153:	8b 50 14             	mov    0x14(%eax),%edx
    5156:	85 d2                	test   %edx,%edx
    5158:	74 04                	je     515e <do_reset1+0x208>
    515a:	89 f0                	mov    %esi,%eax
    515c:	ff d2                	call   *%edx
    515e:	8b 44 24 04          	mov    0x4(%esp),%eax
    5162:	89 ea                	mov    %ebp,%edx
    5164:	e8 fc ff ff ff       	call   5165 <do_reset1+0x20f>
			5165: R_386_PC32	_spin_unlock_irqrestore
    5169:	b8 01 00 00 00       	mov    $0x1,%eax
    516e:	83 c4 24             	add    $0x24,%esp
    5171:	5b                   	pop    %ebx
    5172:	5e                   	pop    %esi
    5173:	5f                   	pop    %edi
    5174:	5d                   	pop    %ebp
    5175:	c3                   	ret    

00005176 <ide_do_reset>:
    5176:	31 d2                	xor    %edx,%edx
    5178:	e9 d9 fd ff ff       	jmp    4f56 <do_reset1>

0000517d <atapi_reset_pollfunc>:
    517d:	57                   	push   %edi
    517e:	56                   	push   %esi
    517f:	53                   	push   %ebx
    5180:	8b 70 28             	mov    0x28(%eax),%esi
    5183:	89 c3                	mov    %eax,%ebx
    5185:	8b 7e 70             	mov    0x70(%esi),%edi
    5188:	ff 57 10             	call   *0x10(%edi)
    518b:	b8 c6 a7 00 00       	mov    $0xa7c6,%eax
    5190:	e8 fc ff ff ff       	call   5191 <atapi_reset_pollfunc+0x14>
			5191: R_386_PC32	__const_udelay
    5195:	89 f0                	mov    %esi,%eax
    5197:	ff 57 04             	call   *0x4(%edi)
    519a:	84 c0                	test   %al,%al
    519c:	78 21                	js     51bf <atapi_reset_pollfunc+0x42>
    519e:	53                   	push   %ebx
    519f:	68 e3 0c 00 00       	push   $0xce3
			51a0: R_386_32	.rodata.str1.1
    51a4:	e8 fc ff ff ff       	call   51a5 <atapi_reset_pollfunc+0x28>
			51a5: R_386_PC32	printk
    51a9:	31 d2                	xor    %edx,%edx
    51ab:	89 d8                	mov    %ebx,%eax
    51ad:	80 a6 30 02 00 00 fe 	andb   $0xfe,0x230(%esi)
    51b4:	e8 62 fd ff ff       	call   4f1b <ide_complete_drive_reset>
    51b9:	31 c0                	xor    %eax,%eax
    51bb:	5a                   	pop    %edx
    51bc:	59                   	pop    %ecx
    51bd:	eb 4e                	jmp    520d <atapi_reset_pollfunc+0x90>
    51bf:	8b 15 00 00 00 00    	mov    0x0,%edx
			51c1: R_386_32	jiffies
    51c5:	3b 96 6c 02 00 00    	cmp    0x26c(%esi),%edx
    51cb:	79 18                	jns    51e5 <atapi_reset_pollfunc+0x68>
    51cd:	89 d8                	mov    %ebx,%eax
    51cf:	b9 0c 00 00 00       	mov    $0xc,%ecx
    51d4:	ba 7d 51 00 00       	mov    $0x517d,%edx
			51d5: R_386_32	.text
    51d9:	e8 fc ff ff ff       	call   51da <atapi_reset_pollfunc+0x5d>
			51da: R_386_PC32	ide_set_handler
    51de:	b8 01 00 00 00       	mov    $0x1,%eax
    51e3:	eb 28                	jmp    520d <atapi_reset_pollfunc+0x90>
    51e5:	80 a6 30 02 00 00 fe 	andb   $0xfe,0x230(%esi)
    51ec:	0f b6 c0             	movzbl %al,%eax
    51ef:	50                   	push   %eax
    51f0:	53                   	push   %ebx
    51f1:	68 00 0d 00 00       	push   $0xd00
			51f2: R_386_32	.rodata.str1.1
    51f6:	e8 fc ff ff ff       	call   51f7 <atapi_reset_pollfunc+0x7a>
			51f7: R_386_PC32	printk
    51fb:	89 d8                	mov    %ebx,%eax
    51fd:	ba 01 00 00 00       	mov    $0x1,%edx
    5202:	83 c4 0c             	add    $0xc,%esp
    5205:	5b                   	pop    %ebx
    5206:	5e                   	pop    %esi
    5207:	5f                   	pop    %edi
    5208:	e9 49 fd ff ff       	jmp    4f56 <do_reset1>
    520d:	5b                   	pop    %ebx
    520e:	5e                   	pop    %esi
    520f:	5f                   	pop    %edi
    5210:	c3                   	ret    

00005211 <reset_pollfunc>:
    5211:	55                   	push   %ebp
    5212:	57                   	push   %edi
    5213:	56                   	push   %esi
    5214:	53                   	push   %ebx
    5215:	8b 70 28             	mov    0x28(%eax),%esi
    5218:	89 c3                	mov    %eax,%ebx
    521a:	8b 46 74             	mov    0x74(%esi),%eax
    521d:	85 c0                	test   %eax,%eax
    521f:	74 22                	je     5243 <reset_pollfunc+0x32>
    5221:	8b 50 0c             	mov    0xc(%eax),%edx
    5224:	85 d2                	test   %edx,%edx
    5226:	74 1b                	je     5243 <reset_pollfunc+0x32>
    5228:	89 d8                	mov    %ebx,%eax
    522a:	ff d2                	call   *%edx
    522c:	85 c0                	test   %eax,%eax
    522e:	89 c7                	mov    %eax,%edi
    5230:	74 11                	je     5243 <reset_pollfunc+0x32>
    5232:	53                   	push   %ebx
    5233:	8d 46 0c             	lea    0xc(%esi),%eax
    5236:	50                   	push   %eax
    5237:	68 2d 0d 00 00       	push   $0xd2d
			5238: R_386_32	.rodata.str1.1
    523c:	e8 fc ff ff ff       	call   523d <reset_pollfunc+0x2c>
			523d: R_386_PC32	printk
    5241:	eb 4f                	jmp    5292 <reset_pollfunc+0x81>
    5243:	8b 56 70             	mov    0x70(%esi),%edx
    5246:	89 f0                	mov    %esi,%eax
    5248:	ff 52 04             	call   *0x4(%edx)
    524b:	84 c0                	test   %al,%al
    524d:	79 4b                	jns    529a <reset_pollfunc+0x89>
    524f:	8b 15 00 00 00 00    	mov    0x0,%edx
			5251: R_386_32	jiffies
    5255:	3b 96 6c 02 00 00    	cmp    0x26c(%esi),%edx
    525b:	79 1b                	jns    5278 <reset_pollfunc+0x67>
    525d:	89 d8                	mov    %ebx,%eax
    525f:	b9 0c 00 00 00       	mov    $0xc,%ecx
    5264:	ba 11 52 00 00       	mov    $0x5211,%edx
			5265: R_386_32	.text
    5269:	e8 fc ff ff ff       	call   526a <reset_pollfunc+0x59>
			526a: R_386_PC32	ide_set_handler
    526e:	b8 01 00 00 00       	mov    $0x1,%eax
    5273:	e9 c1 00 00 00       	jmp    5339 <reset_pollfunc+0x128>
    5278:	0f b6 c0             	movzbl %al,%eax
    527b:	bf fb ff ff ff       	mov    $0xfffffffb,%edi
    5280:	50                   	push   %eax
    5281:	8d 46 0c             	lea    0xc(%esi),%eax
    5284:	50                   	push   %eax
    5285:	68 55 0d 00 00       	push   $0xd55
			5286: R_386_32	.rodata.str1.1
    528a:	e8 fc ff ff ff       	call   528b <reset_pollfunc+0x7a>
			528b: R_386_PC32	printk
    528f:	ff 43 60             	incl   0x60(%ebx)
    5292:	83 c4 0c             	add    $0xc,%esp
    5295:	e9 8d 00 00 00       	jmp    5327 <reset_pollfunc+0x116>
    529a:	89 d8                	mov    %ebx,%eax
    529c:	e8 fc ff ff ff       	call   529d <reset_pollfunc+0x8c>
			529d: R_386_PC32	ide_read_error
    52a1:	89 c7                	mov    %eax,%edi
    52a3:	fe c8                	dec    %al
    52a5:	8d 46 0c             	lea    0xc(%esi),%eax
    52a8:	75 18                	jne    52c2 <reset_pollfunc+0xb1>
    52aa:	50                   	push   %eax
    52ab:	31 ff                	xor    %edi,%edi
    52ad:	68 7c 0d 00 00       	push   $0xd7c
			52ae: R_386_32	.rodata.str1.1
    52b2:	e8 fc ff ff ff       	call   52b3 <reset_pollfunc+0xa2>
			52b3: R_386_PC32	printk
    52b7:	c7 43 60 00 00 00 00 	movl   $0x0,0x60(%ebx)
    52be:	5d                   	pop    %ebp
    52bf:	58                   	pop    %eax
    52c0:	eb 65                	jmp    5327 <reset_pollfunc+0x116>
    52c2:	50                   	push   %eax
    52c3:	bd 7f 00 00 00       	mov    $0x7f,%ebp
    52c8:	68 93 0d 00 00       	push   $0xd93
			52c9: R_386_32	.rodata.str1.1
    52cd:	21 fd                	and    %edi,%ebp
    52cf:	e8 fc ff ff ff       	call   52d0 <reset_pollfunc+0xbf>
			52d0: R_386_PC32	printk
    52d4:	8d 45 ff             	lea    -0x1(%ebp),%eax
    52d7:	3c 04                	cmp    $0x4,%al
    52d9:	5a                   	pop    %edx
    52da:	59                   	pop    %ecx
    52db:	77 14                	ja     52f1 <reset_pollfunc+0xe0>
    52dd:	81 e5 ff 00 00 00    	and    $0xff,%ebp
    52e3:	ff 34 ad 78 02 00 00 	pushl  0x278(,%ebp,4)
			52e6: R_386_32	.rodata
    52ea:	68 aa 0d 00 00       	push   $0xdaa
			52eb: R_386_32	.rodata.str1.1
    52ef:	eb 0b                	jmp    52fc <reset_pollfunc+0xeb>
    52f1:	89 fa                	mov    %edi,%edx
    52f3:	0f b6 c2             	movzbl %dl,%eax
    52f6:	50                   	push   %eax
    52f7:	68 b0 0d 00 00       	push   $0xdb0
			52f8: R_386_32	.rodata.str1.1
    52fc:	e8 fc ff ff ff       	call   52fd <reset_pollfunc+0xec>
			52fd: R_386_PC32	printk
    5301:	89 f8                	mov    %edi,%eax
    5303:	84 c0                	test   %al,%al
    5305:	5a                   	pop    %edx
    5306:	59                   	pop    %ecx
    5307:	79 0b                	jns    5314 <reset_pollfunc+0x103>
    5309:	68 c3 0d 00 00       	push   $0xdc3
			530a: R_386_32	.rodata.str1.1
    530e:	e8 fc ff ff ff       	call   530f <reset_pollfunc+0xfe>
			530f: R_386_PC32	printk
    5313:	58                   	pop    %eax
    5314:	68 d6 0d 00 00       	push   $0xdd6
			5315: R_386_32	.rodata.str1.1
    5319:	bf fb ff ff ff       	mov    $0xfffffffb,%edi
    531e:	e8 fc ff ff ff       	call   531f <reset_pollfunc+0x10e>
			531f: R_386_PC32	printk
    5323:	ff 43 60             	incl   0x60(%ebx)
    5326:	5d                   	pop    %ebp
    5327:	80 a6 30 02 00 00 fe 	andb   $0xfe,0x230(%esi)
    532e:	89 d8                	mov    %ebx,%eax
    5330:	89 fa                	mov    %edi,%edx
    5332:	e8 e4 fb ff ff       	call   4f1b <ide_complete_drive_reset>
    5337:	31 c0                	xor    %eax,%eax
    5339:	5b                   	pop    %ebx
    533a:	5e                   	pop    %esi
    533b:	5f                   	pop    %edi
    533c:	5d                   	pop    %ebp
    533d:	c3                   	ret    

0000533e <ide_error>:
    533e:	55                   	push   %ebp
    533f:	0f b6 e9             	movzbl %cl,%ebp
    5342:	57                   	push   %edi
    5343:	56                   	push   %esi
    5344:	89 c6                	mov    %eax,%esi
    5346:	53                   	push   %ebx
    5347:	83 ec 04             	sub    $0x4,%esp
    534a:	88 4c 24 03          	mov    %cl,0x3(%esp)
    534e:	89 e9                	mov    %ebp,%ecx
    5350:	e8 fc ff ff ff       	call   5351 <ide_error+0x13>
			5351: R_386_PC32	ide_dump_status
    5355:	88 44 24 02          	mov    %al,0x2(%esp)
    5359:	8b 7e 28             	mov    0x28(%esi),%edi
    535c:	8b 9f 38 02 00 00    	mov    0x238(%edi),%ebx
    5362:	85 db                	test   %ebx,%ebx
    5364:	0f 84 a6 01 00 00    	je     5510 <ide_error+0x1d2>
    536a:	8b 43 28             	mov    0x28(%ebx),%eax
    536d:	83 f8 01             	cmp    $0x1,%eax
    5370:	74 5e                	je     53d0 <ide_error+0x92>
    5372:	83 f8 09             	cmp    $0x9,%eax
    5375:	75 19                	jne    5390 <ide_error+0x52>
    5377:	8b 53 6c             	mov    0x6c(%ebx),%edx
    537a:	85 d2                	test   %edx,%edx
    537c:	74 2f                	je     53ad <ide_error+0x6f>
    537e:	0f b6 44 24 02       	movzbl 0x2(%esp),%eax
    5383:	89 e9                	mov    %ebp,%ecx
    5385:	50                   	push   %eax
    5386:	89 f0                	mov    %esi,%eax
    5388:	e8 fc ff ff ff       	call   5389 <ide_error+0x4b>
			5389: R_386_PC32	ide_complete_cmd
    538d:	5f                   	pop    %edi
    538e:	eb 1d                	jmp    53ad <ide_error+0x6f>
    5390:	83 e8 04             	sub    $0x4,%eax
    5393:	83 f8 01             	cmp    $0x1,%eax
    5396:	77 15                	ja     53ad <ide_error+0x6f>
    5398:	c7 43 78 01 00 00 00 	movl   $0x1,0x78(%ebx)
    539f:	89 da                	mov    %ebx,%edx
    53a1:	89 f0                	mov    %esi,%eax
    53a3:	e8 fc ff ff ff       	call   53a4 <ide_error+0x66>
			53a4: R_386_PC32	ide_complete_pm_rq
    53a8:	e9 63 01 00 00       	jmp    5510 <ide_error+0x1d2>
    53ad:	0f b6 44 24 02       	movzbl 0x2(%esp),%eax
    53b2:	8b 4b 38             	mov    0x38(%ebx),%ecx
    53b5:	89 43 78             	mov    %eax,0x78(%ebx)
    53b8:	89 f0                	mov    %esi,%eax
    53ba:	80 7c 24 02 01       	cmpb   $0x1,0x2(%esp)
    53bf:	19 d2                	sbb    %edx,%edx
    53c1:	f7 d2                	not    %edx
    53c3:	83 e2 fb             	and    $0xfffffffb,%edx
    53c6:	e8 fc ff ff ff       	call   53c7 <ide_error+0x89>
			53c7: R_386_PC32	ide_complete_rq
    53cb:	e9 40 01 00 00       	jmp    5510 <ide_error+0x1d2>
    53d0:	80 7e 46 20          	cmpb   $0x20,0x46(%esi)
    53d4:	0f 85 d6 00 00 00    	jne    54b0 <ide_error+0x172>
    53da:	80 7c 24 03 00       	cmpb   $0x0,0x3(%esp)
    53df:	78 0e                	js     53ef <ide_error+0xb1>
    53e1:	f7 c5 20 00 00 00    	test   $0x20,%ebp
    53e7:	74 0c                	je     53f5 <ide_error+0xb7>
    53e9:	f6 46 32 80          	testb  $0x80,0x32(%esi)
    53ed:	75 06                	jne    53f5 <ide_error+0xb7>
    53ef:	83 4b 78 03          	orl    $0x3,0x78(%ebx)
    53f3:	eb 55                	jmp    544a <ide_error+0x10c>
    53f5:	f7 c5 01 00 00 00    	test   $0x1,%ebp
    53fb:	74 4d                	je     544a <ide_error+0x10c>
    53fd:	80 7c 24 02 04       	cmpb   $0x4,0x2(%esp)
    5402:	75 17                	jne    541b <ide_error+0xdd>
    5404:	f6 46 33 02          	testb  $0x2,0x33(%esi)
    5408:	74 40                	je     544a <ide_error+0x10c>
    540a:	8b 57 70             	mov    0x70(%edi),%edx
    540d:	89 f8                	mov    %edi,%eax
    540f:	ff 52 04             	call   *0x4(%edx)
    5412:	3c 91                	cmp    $0x91,%al
    5414:	75 34                	jne    544a <ide_error+0x10c>
    5416:	e9 f5 00 00 00       	jmp    5510 <ide_error+0x1d2>
    541b:	0f b6 44 24 02       	movzbl 0x2(%esp),%eax
    5420:	89 c2                	mov    %eax,%edx
    5422:	81 e2 84 00 00 00    	and    $0x84,%edx
    5428:	81 fa 84 00 00 00    	cmp    $0x84,%edx
    542e:	75 05                	jne    5435 <ide_error+0xf7>
    5430:	ff 46 7c             	incl   0x7c(%esi)
    5433:	eb 15                	jmp    544a <ide_error+0x10c>
    5435:	a8 c0                	test   $0xc0,%al
    5437:	74 09                	je     5442 <ide_error+0x104>
    5439:	c7 43 78 08 00 00 00 	movl   $0x8,0x78(%ebx)
    5440:	eb 08                	jmp    544a <ide_error+0x10c>
    5442:	a8 02                	test   $0x2,%al
    5444:	74 04                	je     544a <ide_error+0x10c>
    5446:	83 4b 78 01          	orl    $0x1,0x78(%ebx)
    544a:	83 e5 08             	and    $0x8,%ebp
    544d:	74 28                	je     5477 <ide_error+0x139>
    544f:	f6 43 24 01          	testb  $0x1,0x24(%ebx)
    5453:	75 22                	jne    5477 <ide_error+0x139>
    5455:	f6 47 5e 08          	testb  $0x8,0x5e(%edi)
    5459:	75 1c                	jne    5477 <ide_error+0x139>
    545b:	8a 46 48             	mov    0x48(%esi),%al
    545e:	b9 01 00 00 00       	mov    $0x1,%ecx
    5463:	84 c0                	test   %al,%al
    5465:	0f b6 d0             	movzbl %al,%edx
    5468:	0f 45 ca             	cmovne %edx,%ecx
    546b:	89 f0                	mov    %esi,%eax
    546d:	c1 e1 09             	shl    $0x9,%ecx
    5470:	31 d2                	xor    %edx,%edx
    5472:	e8 fc ff ff ff       	call   5473 <ide_error+0x135>
			5473: R_386_PC32	ide_pad_transfer
    5477:	83 7b 78 07          	cmpl   $0x7,0x78(%ebx)
    547b:	7f 69                	jg     54e6 <ide_error+0x1a8>
    547d:	f6 43 24 0e          	testb  $0xe,0x24(%ebx)
    5481:	75 63                	jne    54e6 <ide_error+0x1a8>
    5483:	8b 57 70             	mov    0x70(%edi),%edx
    5486:	89 f8                	mov    %edi,%eax
    5488:	ff 52 04             	call   *0x4(%edx)
    548b:	a8 88                	test   $0x88,%al
    548d:	74 04                	je     5493 <ide_error+0x155>
    548f:	83 4b 78 03          	orl    $0x3,0x78(%ebx)
    5493:	8b 43 78             	mov    0x78(%ebx),%eax
    5496:	89 c2                	mov    %eax,%edx
    5498:	83 e2 03             	and    $0x3,%edx
    549b:	83 fa 03             	cmp    $0x3,%edx
    549e:	75 03                	jne    54a3 <ide_error+0x165>
    54a0:	40                   	inc    %eax
    54a1:	eb 5b                	jmp    54fe <ide_error+0x1c0>
    54a3:	a8 01                	test   $0x1,%al
    54a5:	74 04                	je     54ab <ide_error+0x16d>
    54a7:	80 4e 3c 02          	orb    $0x2,0x3c(%esi)
    54ab:	ff 43 78             	incl   0x78(%ebx)
    54ae:	eb 60                	jmp    5510 <ide_error+0x1d2>
    54b0:	80 7c 24 03 00       	cmpb   $0x0,0x3(%esp)
    54b5:	78 0b                	js     54c2 <ide_error+0x184>
    54b7:	83 e5 20             	and    $0x20,%ebp
    54ba:	74 0a                	je     54c6 <ide_error+0x188>
    54bc:	f6 46 32 80          	testb  $0x80,0x32(%esi)
    54c0:	75 04                	jne    54c6 <ide_error+0x188>
    54c2:	83 4b 78 03          	orl    $0x3,0x78(%ebx)
    54c6:	8b 57 70             	mov    0x70(%edi),%edx
    54c9:	89 f8                	mov    %edi,%eax
    54cb:	ff 52 04             	call   *0x4(%edx)
    54ce:	a8 88                	test   $0x88,%al
    54d0:	74 0c                	je     54de <ide_error+0x1a0>
    54d2:	8b 4f 70             	mov    0x70(%edi),%ecx
    54d5:	ba e1 00 00 00       	mov    $0xe1,%edx
    54da:	89 f8                	mov    %edi,%eax
    54dc:	ff 11                	call   *(%ecx)
    54de:	8b 43 78             	mov    0x78(%ebx),%eax
    54e1:	83 f8 07             	cmp    $0x7,%eax
    54e4:	7e 0b                	jle    54f1 <ide_error+0x1b3>
    54e6:	89 da                	mov    %ebx,%edx
    54e8:	89 f0                	mov    %esi,%eax
    54ea:	e8 fc ff ff ff       	call   54eb <ide_error+0x1ad>
			54eb: R_386_PC32	ide_kill_rq
    54ef:	eb 1f                	jmp    5510 <ide_error+0x1d2>
    54f1:	89 c2                	mov    %eax,%edx
    54f3:	83 e2 03             	and    $0x3,%edx
    54f6:	83 fa 03             	cmp    $0x3,%edx
    54f9:	8d 40 01             	lea    0x1(%eax),%eax
    54fc:	75 0f                	jne    550d <ide_error+0x1cf>
    54fe:	89 43 78             	mov    %eax,0x78(%ebx)
    5501:	89 f0                	mov    %esi,%eax
    5503:	59                   	pop    %ecx
    5504:	5b                   	pop    %ebx
    5505:	5e                   	pop    %esi
    5506:	5f                   	pop    %edi
    5507:	5d                   	pop    %ebp
    5508:	e9 fc ff ff ff       	jmp    5509 <ide_error+0x1cb>
			5509: R_386_PC32	ide_do_reset
    550d:	89 43 78             	mov    %eax,0x78(%ebx)
    5510:	5a                   	pop    %edx
    5511:	31 c0                	xor    %eax,%eax
    5513:	5b                   	pop    %ebx
    5514:	5e                   	pop    %esi
    5515:	5f                   	pop    %edi
    5516:	5d                   	pop    %ebp
    5517:	c3                   	ret    

00005518 <ide_scan_pio_blacklist>:
    5518:	56                   	push   %esi
    5519:	89 c6                	mov    %eax,%esi
    551b:	53                   	push   %ebx
    551c:	bb 58 01 00 00       	mov    $0x158,%ebx
			551d: R_386_32	.data
    5521:	eb 1c                	jmp    553f <ide_scan_pio_blacklist+0x27>
    5523:	e8 fc ff ff ff       	call   5524 <ide_scan_pio_blacklist+0xc>
			5524: R_386_PC32	strlen
    5528:	89 f2                	mov    %esi,%edx
    552a:	89 c1                	mov    %eax,%ecx
    552c:	8b 03                	mov    (%ebx),%eax
    552e:	e8 fc ff ff ff       	call   552f <ide_scan_pio_blacklist+0x17>
			552f: R_386_PC32	strncmp
    5533:	85 c0                	test   %eax,%eax
    5535:	75 05                	jne    553c <ide_scan_pio_blacklist+0x24>
    5537:	8b 43 04             	mov    0x4(%ebx),%eax
    553a:	eb 0c                	jmp    5548 <ide_scan_pio_blacklist+0x30>
    553c:	83 c3 08             	add    $0x8,%ebx
    553f:	8b 03                	mov    (%ebx),%eax
    5541:	85 c0                	test   %eax,%eax
    5543:	75 de                	jne    5523 <ide_scan_pio_blacklist+0xb>
    5545:	83 c8 ff             	or     $0xffffffff,%eax
    5548:	5b                   	pop    %ebx
    5549:	5e                   	pop    %esi
    554a:	c3                   	ret    
    554b:	90                   	nop

0000554c <ide_xfer_verbose>:
    554c:	88 c2                	mov    %al,%dl
    554e:	83 e0 0f             	and    $0xf,%eax
    5551:	8d 4a c0             	lea    -0x40(%edx),%ecx
    5554:	80 f9 07             	cmp    $0x7,%cl
    5557:	77 0b                	ja     5564 <ide_xfer_verbose+0x18>
    5559:	0f b6 c0             	movzbl %al,%eax
    555c:	8b 04 85 90 02 00 00 	mov    0x290(,%eax,4),%eax
			555f: R_386_32	.rodata
    5563:	c3                   	ret    
    5564:	8d 4a e0             	lea    -0x20(%edx),%ecx
    5567:	80 f9 04             	cmp    $0x4,%cl
    556a:	77 0b                	ja     5577 <ide_xfer_verbose+0x2b>
    556c:	0f b6 c0             	movzbl %al,%eax
    556f:	8b 04 85 b0 02 00 00 	mov    0x2b0(,%eax,4),%eax
			5572: R_386_32	.rodata
    5576:	c3                   	ret    
    5577:	8d 4a f0             	lea    -0x10(%edx),%ecx
    557a:	80 f9 02             	cmp    $0x2,%cl
    557d:	77 0b                	ja     558a <ide_xfer_verbose+0x3e>
    557f:	0f b6 c0             	movzbl %al,%eax
    5582:	8b 04 85 c4 02 00 00 	mov    0x2c4(,%eax,4),%eax
			5585: R_386_32	.rodata
    5589:	c3                   	ret    
    558a:	8d 4a f8             	lea    -0x8(%edx),%ecx
    558d:	80 f9 06             	cmp    $0x6,%cl
    5590:	77 0b                	ja     559d <ide_xfer_verbose+0x51>
    5592:	83 e0 07             	and    $0x7,%eax
    5595:	8b 04 85 d0 02 00 00 	mov    0x2d0(,%eax,4),%eax
			5598: R_386_32	.rodata
    559c:	c3                   	ret    
    559d:	84 d2                	test   %dl,%dl
    559f:	b8 e4 10 00 00       	mov    $0x10e4,%eax
			55a0: R_386_32	.rodata.str1.1
    55a4:	ba ef 10 00 00       	mov    $0x10ef,%edx
			55a5: R_386_32	.rodata.str1.1
    55a9:	0f 44 c2             	cmove  %edx,%eax
    55ac:	c3                   	ret    

000055ad <ide_pio_need_iordy>:
    55ad:	84 d2                	test   %dl,%dl
    55af:	75 09                	jne    55ba <ide_pio_need_iordy+0xd>
    55b1:	8b 48 28             	mov    0x28(%eax),%ecx
    55b4:	f6 41 54 01          	testb  $0x1,0x54(%ecx)
    55b8:	75 3c                	jne    55f6 <ide_pio_need_iordy+0x49>
    55ba:	80 fa 04             	cmp    $0x4,%dl
    55bd:	8b 48 1c             	mov    0x1c(%eax),%ecx
    55c0:	76 1f                	jbe    55e1 <ide_pio_need_iordy+0x34>
    55c2:	66 81 39 8a 84       	cmpw   $0x848a,(%ecx)
    55c7:	74 2d                	je     55f6 <ide_pio_need_iordy+0x49>
    55c9:	0f b7 81 a6 00 00 00 	movzwl 0xa6(%ecx),%eax
    55d0:	25 04 c0 00 00       	and    $0xc004,%eax
    55d5:	3d 04 40 00 00       	cmp    $0x4004,%eax
    55da:	0f 95 c0             	setne  %al
    55dd:	0f b6 c0             	movzbl %al,%eax
    55e0:	c3                   	ret    
    55e1:	80 fa 02             	cmp    $0x2,%dl
    55e4:	b8 01 00 00 00       	mov    $0x1,%eax
    55e9:	77 0d                	ja     55f8 <ide_pio_need_iordy+0x4b>
    55eb:	0f b7 41 62          	movzwl 0x62(%ecx),%eax
    55ef:	c1 e8 0b             	shr    $0xb,%eax
    55f2:	83 e0 01             	and    $0x1,%eax
    55f5:	c3                   	ret    
    55f6:	31 c0                	xor    %eax,%eax
    55f8:	c3                   	ret    

000055f9 <ide_set_dma_mode>:
    55f9:	57                   	push   %edi
    55fa:	89 d7                	mov    %edx,%edi
    55fc:	56                   	push   %esi
    55fd:	53                   	push   %ebx
    55fe:	89 c3                	mov    %eax,%ebx
    5600:	8b 40 28             	mov    0x28(%eax),%eax
    5603:	8b 50 5c             	mov    0x5c(%eax),%edx
    5606:	8b 70 74             	mov    0x74(%eax),%esi
    5609:	31 c0                	xor    %eax,%eax
    560b:	f6 c6 02             	test   $0x2,%dh
    560e:	75 48                	jne    5658 <ide_set_dma_mode+0x5f>
    5610:	85 f6                	test   %esi,%esi
    5612:	74 41                	je     5655 <ide_set_dma_mode+0x5c>
    5614:	8b 4e 08             	mov    0x8(%esi),%ecx
    5617:	85 c9                	test   %ecx,%ecx
    5619:	74 3a                	je     5655 <ide_set_dma_mode+0x5c>
    561b:	80 e6 01             	and    $0x1,%dh
    561e:	74 1e                	je     563e <ide_set_dma_mode+0x45>
    5620:	81 e7 ff 00 00 00    	and    $0xff,%edi
    5626:	89 d8                	mov    %ebx,%eax
    5628:	89 fa                	mov    %edi,%edx
    562a:	e8 fc ff ff ff       	call   562b <ide_set_dma_mode+0x32>
			562b: R_386_PC32	ide_config_drive_speed
    562f:	85 c0                	test   %eax,%eax
    5631:	75 22                	jne    5655 <ide_set_dma_mode+0x5c>
    5633:	89 d8                	mov    %ebx,%eax
    5635:	89 fa                	mov    %edi,%edx
    5637:	ff 56 08             	call   *0x8(%esi)
    563a:	31 c0                	xor    %eax,%eax
    563c:	eb 1a                	jmp    5658 <ide_set_dma_mode+0x5f>
    563e:	89 f8                	mov    %edi,%eax
    5640:	0f b6 f0             	movzbl %al,%esi
    5643:	89 d8                	mov    %ebx,%eax
    5645:	89 f2                	mov    %esi,%edx
    5647:	ff d1                	call   *%ecx
    5649:	89 f2                	mov    %esi,%edx
    564b:	89 d8                	mov    %ebx,%eax
    564d:	5b                   	pop    %ebx
    564e:	5e                   	pop    %esi
    564f:	5f                   	pop    %edi
    5650:	e9 fc ff ff ff       	jmp    5651 <ide_set_dma_mode+0x58>
			5651: R_386_PC32	ide_config_drive_speed
    5655:	83 c8 ff             	or     $0xffffffff,%eax
    5658:	5b                   	pop    %ebx
    5659:	5e                   	pop    %esi
    565a:	5f                   	pop    %edi
    565b:	c3                   	ret    

0000565c <ide_set_pio_mode>:
    565c:	57                   	push   %edi
    565d:	56                   	push   %esi
    565e:	89 d6                	mov    %edx,%esi
    5660:	53                   	push   %ebx
    5661:	89 c3                	mov    %eax,%ebx
    5663:	8b 40 28             	mov    0x28(%eax),%eax
    5666:	8b 50 5c             	mov    0x5c(%eax),%edx
    5669:	8b 78 74             	mov    0x74(%eax),%edi
    566c:	31 c0                	xor    %eax,%eax
    566e:	f6 c6 02             	test   $0x2,%dh
    5671:	75 61                	jne    56d4 <ide_set_pio_mode+0x78>
    5673:	85 ff                	test   %edi,%edi
    5675:	74 5a                	je     56d1 <ide_set_pio_mode+0x75>
    5677:	8b 4f 04             	mov    0x4(%edi),%ecx
    567a:	85 c9                	test   %ecx,%ecx
    567c:	74 53                	je     56d1 <ide_set_pio_mode+0x75>
    567e:	83 7f 08 00          	cmpl   $0x0,0x8(%edi)
    5682:	75 0e                	jne    5692 <ide_set_pio_mode+0x36>
    5684:	83 ee 08             	sub    $0x8,%esi
    5687:	89 f0                	mov    %esi,%eax
    5689:	0f b6 d0             	movzbl %al,%edx
    568c:	89 d8                	mov    %ebx,%eax
    568e:	ff d1                	call   *%ecx
    5690:	eb 22                	jmp    56b4 <ide_set_pio_mode+0x58>
    5692:	80 e6 01             	and    $0x1,%dh
    5695:	74 21                	je     56b8 <ide_set_pio_mode+0x5c>
    5697:	89 f0                	mov    %esi,%eax
    5699:	0f b6 d0             	movzbl %al,%edx
    569c:	89 d8                	mov    %ebx,%eax
    569e:	e8 fc ff ff ff       	call   569f <ide_set_pio_mode+0x43>
			569f: R_386_PC32	ide_config_drive_speed
    56a3:	85 c0                	test   %eax,%eax
    56a5:	75 2a                	jne    56d1 <ide_set_pio_mode+0x75>
    56a7:	83 ee 08             	sub    $0x8,%esi
    56aa:	89 f0                	mov    %esi,%eax
    56ac:	0f b6 d0             	movzbl %al,%edx
    56af:	89 d8                	mov    %ebx,%eax
    56b1:	ff 57 04             	call   *0x4(%edi)
    56b4:	31 c0                	xor    %eax,%eax
    56b6:	eb 1c                	jmp    56d4 <ide_set_pio_mode+0x78>
    56b8:	8d 56 f8             	lea    -0x8(%esi),%edx
    56bb:	89 d8                	mov    %ebx,%eax
    56bd:	0f b6 d2             	movzbl %dl,%edx
    56c0:	ff d1                	call   *%ecx
    56c2:	89 f0                	mov    %esi,%eax
    56c4:	0f b6 d0             	movzbl %al,%edx
    56c7:	89 d8                	mov    %ebx,%eax
    56c9:	5b                   	pop    %ebx
    56ca:	5e                   	pop    %esi
    56cb:	5f                   	pop    %edi
    56cc:	e9 fc ff ff ff       	jmp    56cd <ide_set_pio_mode+0x71>
			56cd: R_386_PC32	ide_config_drive_speed
    56d1:	83 c8 ff             	or     $0xffffffff,%eax
    56d4:	5b                   	pop    %ebx
    56d5:	5e                   	pop    %esi
    56d6:	5f                   	pop    %edi
    56d7:	c3                   	ret    

000056d8 <ide_set_xfer_rate>:
    56d8:	56                   	push   %esi
    56d9:	88 d1                	mov    %dl,%cl
    56db:	53                   	push   %ebx
    56dc:	89 c3                	mov    %eax,%ebx
    56de:	83 ec 04             	sub    $0x4,%esp
    56e1:	8b 70 28             	mov    0x28(%eax),%esi
    56e4:	8b 46 74             	mov    0x74(%esi),%eax
    56e7:	85 c0                	test   %eax,%eax
    56e9:	74 65                	je     5750 <ide_set_xfer_rate+0x78>
    56eb:	83 78 08 00          	cmpl   $0x0,0x8(%eax)
    56ef:	74 5f                	je     5750 <ide_set_xfer_rate+0x78>
    56f1:	f6 46 5d 02          	testb  $0x2,0x5d(%esi)
    56f5:	75 59                	jne    5750 <ide_set_xfer_rate+0x78>
    56f7:	0f b6 d2             	movzbl %dl,%edx
    56fa:	89 d8                	mov    %ebx,%eax
    56fc:	88 0c 24             	mov    %cl,(%esp)
    56ff:	e8 fc ff ff ff       	call   5700 <ide_set_xfer_rate+0x28>
			5700: R_386_PC32	ide_find_dma_mode
    5704:	8a 0c 24             	mov    (%esp),%cl
    5707:	84 c0                	test   %al,%al
    5709:	75 18                	jne    5723 <ide_set_xfer_rate+0x4b>
    570b:	8a 56 60             	mov    0x60(%esi),%dl
    570e:	b0 0c                	mov    $0xc,%al
    5710:	84 d2                	test   %dl,%dl
    5712:	74 0f                	je     5723 <ide_set_xfer_rate+0x4b>
    5714:	0f b6 d2             	movzbl %dl,%edx
    5717:	83 ce ff             	or     $0xffffffff,%esi
    571a:	0f bd c2             	bsr    %edx,%eax
    571d:	0f 44 c6             	cmove  %esi,%eax
    5720:	83 c0 08             	add    $0x8,%eax
    5723:	38 c8                	cmp    %cl,%al
    5725:	0f 46 c8             	cmovbe %eax,%ecx
    5728:	80 f9 07             	cmp    $0x7,%cl
    572b:	77 04                	ja     5731 <ide_set_xfer_rate+0x59>
    572d:	0f 0b                	ud2a   
    572f:	eb fe                	jmp    572f <ide_set_xfer_rate+0x57>
    5731:	0f b6 d1             	movzbl %cl,%edx
    5734:	83 e9 08             	sub    $0x8,%ecx
    5737:	80 f9 06             	cmp    $0x6,%cl
    573a:	77 0a                	ja     5746 <ide_set_xfer_rate+0x6e>
    573c:	89 d8                	mov    %ebx,%eax
    573e:	5b                   	pop    %ebx
    573f:	5b                   	pop    %ebx
    5740:	5e                   	pop    %esi
    5741:	e9 fc ff ff ff       	jmp    5742 <ide_set_xfer_rate+0x6a>
			5742: R_386_PC32	ide_set_pio_mode
    5746:	59                   	pop    %ecx
    5747:	89 d8                	mov    %ebx,%eax
    5749:	5b                   	pop    %ebx
    574a:	5e                   	pop    %esi
    574b:	e9 fc ff ff ff       	jmp    574c <ide_set_xfer_rate+0x74>
			574c: R_386_PC32	ide_set_dma_mode
    5750:	5a                   	pop    %edx
    5751:	83 c8 ff             	or     $0xffffffff,%eax
    5754:	5b                   	pop    %ebx
    5755:	5e                   	pop    %esi
    5756:	c3                   	ret    

00005757 <ide_get_best_pio_mode>:
    5757:	55                   	push   %ebp
    5758:	80 fa ff             	cmp    $0xff,%dl
    575b:	57                   	push   %edi
    575c:	89 cd                	mov    %ecx,%ebp
    575e:	56                   	push   %esi
    575f:	53                   	push   %ebx
    5760:	89 c3                	mov    %eax,%ebx
    5762:	8b 78 1c             	mov    0x1c(%eax),%edi
    5765:	74 0c                	je     5773 <ide_get_best_pio_mode+0x1c>
    5767:	38 d1                	cmp    %dl,%cl
    5769:	89 e8                	mov    %ebp,%eax
    576b:	0f 47 c2             	cmova  %edx,%eax
    576e:	e9 b3 00 00 00       	jmp    5826 <ide_get_best_pio_mode+0xcf>
    5773:	8b 40 28             	mov    0x28(%eax),%eax
    5776:	f6 40 5c 04          	testb  $0x4,0x5c(%eax)
    577a:	75 17                	jne    5793 <ide_get_best_pio_mode+0x3c>
    577c:	8d 47 36             	lea    0x36(%edi),%eax
    577f:	e8 fc ff ff ff       	call   5780 <ide_get_best_pio_mode+0x29>
			5780: R_386_PC32	ide_scan_pio_blacklist
    5784:	83 f8 ff             	cmp    $0xffffffff,%eax
    5787:	89 c6                	mov    %eax,%esi
    5789:	74 08                	je     5793 <ide_get_best_pio_mode+0x3c>
    578b:	53                   	push   %ebx
    578c:	68 14 11 00 00       	push   $0x1114
			578d: R_386_32	.rodata.str1.1
    5791:	eb 7f                	jmp    5812 <ide_get_best_pio_mode+0xbb>
    5793:	0f b6 77 67          	movzbl 0x67(%edi),%esi
    5797:	31 d2                	xor    %edx,%edx
    5799:	83 fe 02             	cmp    $0x2,%esi
    579c:	7e 07                	jle    57a5 <ide_get_best_pio_mode+0x4e>
    579e:	b2 01                	mov    $0x1,%dl
    57a0:	be 02 00 00 00       	mov    $0x2,%esi
    57a5:	f6 47 6a 02          	testb  $0x2,0x6a(%edi)
    57a9:	74 5d                	je     5808 <ide_get_best_pio_mode+0xb1>
    57ab:	66 81 3f 8a 84       	cmpw   $0x848a,(%edi)
    57b0:	74 13                	je     57c5 <ide_get_best_pio_mode+0x6e>
    57b2:	0f b7 87 a6 00 00 00 	movzwl 0xa6(%edi),%eax
    57b9:	25 04 c0 00 00       	and    $0xc004,%eax
    57be:	3d 04 40 00 00       	cmp    $0x4004,%eax
    57c3:	75 1c                	jne    57e1 <ide_get_best_pio_mode+0x8a>
    57c5:	0f b7 87 46 01 00 00 	movzwl 0x146(%edi),%eax
    57cc:	83 e0 07             	and    $0x7,%eax
    57cf:	74 10                	je     57e1 <ide_get_best_pio_mode+0x8a>
    57d1:	83 f8 02             	cmp    $0x2,%eax
    57d4:	be 02 00 00 00       	mov    $0x2,%esi
    57d9:	0f 4e f0             	cmovle %eax,%esi
    57dc:	83 c6 04             	add    $0x4,%esi
    57df:	eb 27                	jmp    5808 <ide_get_best_pio_mode+0xb1>
    57e1:	f6 47 63 08          	testb  $0x8,0x63(%edi)
    57e5:	74 21                	je     5808 <ide_get_best_pio_mode+0xb1>
    57e7:	0f b7 87 80 00 00 00 	movzwl 0x80(%edi),%eax
    57ee:	a8 07                	test   $0x7,%al
    57f0:	74 16                	je     5808 <ide_get_best_pio_mode+0xb1>
    57f2:	a8 04                	test   $0x4,%al
    57f4:	be 05 00 00 00       	mov    $0x5,%esi
    57f9:	75 1e                	jne    5819 <ide_get_best_pio_mode+0xc2>
    57fb:	83 e0 02             	and    $0x2,%eax
    57fe:	83 f8 01             	cmp    $0x1,%eax
    5801:	19 f6                	sbb    %esi,%esi
    5803:	83 c6 04             	add    $0x4,%esi
    5806:	eb 11                	jmp    5819 <ide_get_best_pio_mode+0xc2>
    5808:	85 d2                	test   %edx,%edx
    580a:	74 0d                	je     5819 <ide_get_best_pio_mode+0xc2>
    580c:	53                   	push   %ebx
    580d:	68 30 11 00 00       	push   $0x1130
			580e: R_386_32	.rodata.str1.1
    5812:	e8 fc ff ff ff       	call   5813 <ide_get_best_pio_mode+0xbc>
			5813: R_386_PC32	printk
    5817:	5f                   	pop    %edi
    5818:	58                   	pop    %eax
    5819:	81 e5 ff 00 00 00    	and    $0xff,%ebp
    581f:	39 ee                	cmp    %ebp,%esi
    5821:	89 e8                	mov    %ebp,%eax
    5823:	0f 4e c6             	cmovle %esi,%eax
    5826:	5b                   	pop    %ebx
    5827:	5e                   	pop    %esi
    5828:	5f                   	pop    %edi
    5829:	5d                   	pop    %ebp
    582a:	c3                   	ret    

0000582b <ide_set_pio>:
    582b:	55                   	push   %ebp
    582c:	57                   	push   %edi
    582d:	56                   	push   %esi
    582e:	53                   	push   %ebx
    582f:	89 c3                	mov    %eax,%ebx
    5831:	83 ec 04             	sub    $0x4,%esp
    5834:	88 54 24 03          	mov    %dl,0x3(%esp)
    5838:	8b 40 28             	mov    0x28(%eax),%eax
    583b:	8b 50 74             	mov    0x74(%eax),%edx
    583e:	85 d2                	test   %edx,%edx
    5840:	74 77                	je     58b9 <ide_set_pio+0x8e>
    5842:	83 7a 04 00          	cmpl   $0x0,0x4(%edx)
    5846:	74 71                	je     58b9 <ide_set_pio+0x8e>
    5848:	f6 40 5d 02          	testb  $0x2,0x5d(%eax)
    584c:	75 6b                	jne    58b9 <ide_set_pio+0x8e>
    584e:	8a 40 60             	mov    0x60(%eax),%al
    5851:	84 c0                	test   %al,%al
    5853:	75 04                	jne    5859 <ide_set_pio+0x2e>
    5855:	0f 0b                	ud2a   
    5857:	eb fe                	jmp    5857 <ide_set_pio+0x2c>
    5859:	0f b6 74 24 03       	movzbl 0x3(%esp),%esi
    585e:	83 ca ff             	or     $0xffffffff,%edx
    5861:	0f b6 c0             	movzbl %al,%eax
    5864:	0f bd f8             	bsr    %eax,%edi
    5867:	0f 44 fa             	cmove  %edx,%edi
    586a:	81 e7 ff 00 00 00    	and    $0xff,%edi
    5870:	89 d8                	mov    %ebx,%eax
    5872:	89 f9                	mov    %edi,%ecx
    5874:	89 f2                	mov    %esi,%edx
    5876:	e8 fc ff ff ff       	call   5877 <ide_set_pio+0x4c>
			5877: R_386_PC32	ide_get_best_pio_mode
    587b:	ba 55 11 00 00       	mov    $0x1155,%edx
			587c: R_386_32	.rodata.str1.1
    5880:	80 7c 24 03 ff       	cmpb   $0xff,0x3(%esp)
    5885:	89 c5                	mov    %eax,%ebp
    5887:	b8 54 11 00 00       	mov    $0x1154,%eax
			5888: R_386_32	.rodata.str1.1
    588c:	89 e9                	mov    %ebp,%ecx
    588e:	0f 44 c2             	cmove  %edx,%eax
    5891:	0f b6 d1             	movzbl %cl,%edx
    5894:	83 c5 08             	add    $0x8,%ebp
    5897:	52                   	push   %edx
    5898:	50                   	push   %eax
    5899:	56                   	push   %esi
    589a:	57                   	push   %edi
    589b:	53                   	push   %ebx
    589c:	68 61 11 00 00       	push   $0x1161
			589d: R_386_32	.rodata.str1.1
    58a1:	e8 fc ff ff ff       	call   58a2 <ide_set_pio+0x77>
			58a2: R_386_PC32	printk
    58a6:	89 e8                	mov    %ebp,%eax
    58a8:	0f b6 d0             	movzbl %al,%edx
    58ab:	89 d8                	mov    %ebx,%eax
    58ad:	83 c4 1c             	add    $0x1c,%esp
    58b0:	5b                   	pop    %ebx
    58b1:	5e                   	pop    %esi
    58b2:	5f                   	pop    %edi
    58b3:	5d                   	pop    %ebp
    58b4:	e9 fc ff ff ff       	jmp    58b5 <ide_set_pio+0x8a>
			58b5: R_386_PC32	ide_set_pio_mode
    58b9:	5a                   	pop    %edx
    58ba:	5b                   	pop    %ebx
    58bb:	5e                   	pop    %esi
    58bc:	5f                   	pop    %edi
    58bd:	5d                   	pop    %ebp
    58be:	c3                   	ret    
    58bf:	90                   	nop

000058c0 <ide_init_pc>:
    58c0:	57                   	push   %edi
    58c1:	b9 09 00 00 00       	mov    $0x9,%ecx
    58c6:	89 c7                	mov    %eax,%edi
    58c8:	31 c0                	xor    %eax,%eax
    58ca:	f3 ab                	rep stos %eax,%es:(%edi)
    58cc:	5f                   	pop    %edi
    58cd:	c3                   	ret    

000058ce <ide_create_request_sense_cmd>:
    58ce:	57                   	push   %edi
    58cf:	b9 09 00 00 00       	mov    $0x9,%ecx
    58d4:	53                   	push   %ebx
    58d5:	89 d7                	mov    %edx,%edi
    58d7:	89 c3                	mov    %eax,%ebx
    58d9:	31 c0                	xor    %eax,%eax
    58db:	f3 ab                	rep stos %eax,%es:(%edi)
    58dd:	c6 02 03             	movb   $0x3,(%edx)
    58e0:	80 7b 46 00          	cmpb   $0x0,0x46(%ebx)
    58e4:	75 0d                	jne    58f3 <ide_create_request_sense_cmd+0x25>
    58e6:	c6 42 04 ff          	movb   $0xff,0x4(%edx)
    58ea:	c7 42 14 12 00 00 00 	movl   $0x12,0x14(%edx)
    58f1:	eb 0b                	jmp    58fe <ide_create_request_sense_cmd+0x30>
    58f3:	c6 42 04 14          	movb   $0x14,0x4(%edx)
    58f7:	c7 42 14 14 00 00 00 	movl   $0x14,0x14(%edx)
    58fe:	5b                   	pop    %ebx
    58ff:	5f                   	pop    %edi
    5900:	c3                   	ret    

00005901 <ide_cd_get_xferlen>:
    5901:	8b 50 28             	mov    0x28(%eax),%edx
    5904:	89 c1                	mov    %eax,%ecx
    5906:	b8 00 80 00 00       	mov    $0x8000,%eax
    590b:	83 fa 01             	cmp    $0x1,%edx
    590e:	74 12                	je     5922 <ide_cd_get_xferlen+0x21>
    5910:	8d 42 fe             	lea    -0x2(%edx),%eax
    5913:	83 f8 01             	cmp    $0x1,%eax
    5916:	76 07                	jbe    591f <ide_cd_get_xferlen+0x1e>
    5918:	31 c0                	xor    %eax,%eax
    591a:	83 fa 0a             	cmp    $0xa,%edx
    591d:	75 03                	jne    5922 <ide_cd_get_xferlen+0x21>
    591f:	8b 41 38             	mov    0x38(%ecx),%eax
    5922:	c3                   	ret    

00005923 <ide_read_bcount_and_ireason>:
    5923:	57                   	push   %edi
    5924:	89 cf                	mov    %ecx,%edi
    5926:	56                   	push   %esi
    5927:	89 d6                	mov    %edx,%esi
    5929:	53                   	push   %ebx
    592a:	b9 34 00 00 00       	mov    $0x34,%ecx
    592f:	83 ec 08             	sub    $0x8,%esp
    5932:	8b 50 28             	mov    0x28(%eax),%edx
    5935:	8b 5a 70             	mov    0x70(%edx),%ebx
    5938:	89 e2                	mov    %esp,%edx
    593a:	ff 53 18             	call   *0x18(%ebx)
    593d:	0f b6 54 24 05       	movzbl 0x5(%esp),%edx
    5942:	0f b6 44 24 04       	movzbl 0x4(%esp),%eax
    5947:	c1 e2 08             	shl    $0x8,%edx
    594a:	09 d0                	or     %edx,%eax
    594c:	66 89 06             	mov    %ax,(%esi)
    594f:	8a 44 24 02          	mov    0x2(%esp),%al
    5953:	83 e0 03             	and    $0x3,%eax
    5956:	88 07                	mov    %al,(%edi)
    5958:	58                   	pop    %eax
    5959:	5a                   	pop    %edx
    595a:	5b                   	pop    %ebx
    595b:	5e                   	pop    %esi
    595c:	5f                   	pop    %edi
    595d:	c3                   	ret    

0000595e <ide_delayed_transfer_pc>:
    595e:	53                   	push   %ebx
    595f:	8b 50 28             	mov    0x28(%eax),%edx
    5962:	8b 88 bc 01 00 00    	mov    0x1bc(%eax),%ecx
    5968:	8b 5a 70             	mov    0x70(%edx),%ebx
    596b:	31 d2                	xor    %edx,%edx
    596d:	6a 0c                	push   $0xc
    596f:	ff 53 20             	call   *0x20(%ebx)
    5972:	b8 d4 30 00 00       	mov    $0x30d4,%eax
    5977:	59                   	pop    %ecx
    5978:	5b                   	pop    %ebx
    5979:	c3                   	ret    

0000597a <ide_cd_expiry>:
    597a:	8b 40 28             	mov    0x28(%eax),%eax
    597d:	8b 88 38 02 00 00    	mov    0x238(%eax),%ecx
    5983:	8b 81 94 00 00 00    	mov    0x94(%ecx),%eax
    5989:	8a 10                	mov    (%eax),%dl
    598b:	80 fa 53             	cmp    $0x53,%dl
    598e:	74 16                	je     59a6 <ide_cd_expiry+0x2c>
    5990:	77 0a                	ja     599c <ide_cd_expiry+0x22>
    5992:	80 fa 04             	cmp    $0x4,%dl
    5995:	74 0f                	je     59a6 <ide_cd_expiry+0x2c>
    5997:	80 fa 35             	cmp    $0x35,%dl
    599a:	eb 08                	jmp    59a4 <ide_cd_expiry+0x2a>
    599c:	80 fa 5b             	cmp    $0x5b,%dl
    599f:	74 05                	je     59a6 <ide_cd_expiry+0x2c>
    59a1:	80 fa a1             	cmp    $0xa1,%dl
    59a4:	75 06                	jne    59ac <ide_cd_expiry+0x32>
    59a6:	b8 98 3a 00 00       	mov    $0x3a98,%eax
    59ab:	c3                   	ret    
    59ac:	31 c0                	xor    %eax,%eax
    59ae:	66 83 79 24 00       	cmpw   $0x0,0x24(%ecx)
    59b3:	78 12                	js     59c7 <ide_cd_expiry+0x4d>
    59b5:	0f b6 d2             	movzbl %dl,%edx
    59b8:	52                   	push   %edx
    59b9:	68 31 12 00 00       	push   $0x1231
			59ba: R_386_32	.rodata.str1.1
    59be:	e8 fc ff ff ff       	call   59bf <ide_cd_expiry+0x45>
			59bf: R_386_PC32	printk
    59c3:	31 c0                	xor    %eax,%eax
    59c5:	5a                   	pop    %edx
    59c6:	59                   	pop    %ecx
    59c7:	c3                   	ret    

000059c8 <ide_check_atapi_device>:
    59c8:	53                   	push   %ebx
    59c9:	83 ec 0c             	sub    $0xc,%esp
    59cc:	8b 48 1c             	mov    0x1c(%eax),%ecx
    59cf:	66 8b 09             	mov    (%ecx),%cx
    59d2:	66 89 4c 24 0a       	mov    %cx,0xa(%esp)
    59d7:	8a 4c 24 0b          	mov    0xb(%esp),%cl
    59db:	8a 5c 24 0a          	mov    0xa(%esp),%bl
    59df:	88 4c 24 03          	mov    %cl,0x3(%esp)
    59e3:	c0 e9 06             	shr    $0x6,%cl
    59e6:	80 f9 02             	cmp    $0x2,%cl
    59e9:	74 10                	je     59fb <ide_check_atapi_device+0x33>
    59eb:	0f b6 c9             	movzbl %cl,%ecx
    59ee:	51                   	push   %ecx
    59ef:	50                   	push   %eax
    59f0:	52                   	push   %edx
    59f1:	68 53 12 00 00       	push   $0x1253
			59f2: R_386_32	.rodata.str1.1
    59f6:	e9 82 00 00 00       	jmp    5a7d <ide_check_atapi_device+0xb5>
    59fb:	8a 48 46             	mov    0x46(%eax),%cl
    59fe:	84 c9                	test   %cl,%cl
    5a00:	88 4c 24 07          	mov    %cl,0x7(%esp)
    5a04:	8a 4c 24 03          	mov    0x3(%esp),%cl
    5a08:	0f 94 44 24 06       	sete   0x6(%esp)
    5a0d:	80 e1 1f             	and    $0x1f,%cl
    5a10:	74 07                	je     5a19 <ide_check_atapi_device+0x51>
    5a12:	80 7c 24 06 00       	cmpb   $0x0,0x6(%esp)
    5a17:	75 0c                	jne    5a25 <ide_check_atapi_device+0x5d>
    5a19:	80 f9 01             	cmp    $0x1,%cl
    5a1c:	74 14                	je     5a32 <ide_check_atapi_device+0x6a>
    5a1e:	80 7c 24 07 01       	cmpb   $0x1,0x7(%esp)
    5a23:	75 0d                	jne    5a32 <ide_check_atapi_device+0x6a>
    5a25:	0f b6 c9             	movzbl %cl,%ecx
    5a28:	51                   	push   %ecx
    5a29:	50                   	push   %eax
    5a2a:	52                   	push   %edx
    5a2b:	68 7e 12 00 00       	push   $0x127e
			5a2c: R_386_32	.rodata.str1.1
    5a30:	eb 4b                	jmp    5a7d <ide_check_atapi_device+0xb5>
    5a32:	84 db                	test   %bl,%bl
    5a34:	78 13                	js     5a49 <ide_check_atapi_device+0x81>
    5a36:	50                   	push   %eax
    5a37:	52                   	push   %edx
    5a38:	68 a7 12 00 00       	push   $0x12a7
			5a39: R_386_32	.rodata.str1.1
    5a3d:	e8 fc ff ff ff       	call   5a3e <ide_check_atapi_device+0x76>
			5a3e: R_386_PC32	printk
    5a42:	31 c9                	xor    %ecx,%ecx
    5a44:	83 c4 0c             	add    $0xc,%esp
    5a47:	eb 3e                	jmp    5a87 <ide_check_atapi_device+0xbf>
    5a49:	89 d9                	mov    %ebx,%ecx
    5a4b:	83 e1 60             	and    $0x60,%ecx
    5a4e:	c1 f9 05             	sar    $0x5,%ecx
    5a51:	80 f9 03             	cmp    $0x3,%cl
    5a54:	75 12                	jne    5a68 <ide_check_atapi_device+0xa0>
    5a56:	80 7c 24 06 00       	cmpb   $0x0,0x6(%esp)
    5a5b:	74 0b                	je     5a68 <ide_check_atapi_device+0xa0>
    5a5d:	6a 03                	push   $0x3
    5a5f:	50                   	push   %eax
    5a60:	52                   	push   %edx
    5a61:	68 d1 12 00 00       	push   $0x12d1
			5a62: R_386_32	.rodata.str1.1
    5a66:	eb 15                	jmp    5a7d <ide_check_atapi_device+0xb5>
    5a68:	80 e3 03             	and    $0x3,%bl
    5a6b:	b9 01 00 00 00       	mov    $0x1,%ecx
    5a70:	74 15                	je     5a87 <ide_check_atapi_device+0xbf>
    5a72:	0f b6 db             	movzbl %bl,%ebx
    5a75:	53                   	push   %ebx
    5a76:	50                   	push   %eax
    5a77:	52                   	push   %edx
    5a78:	68 04 13 00 00       	push   $0x1304
			5a79: R_386_32	.rodata.str1.1
    5a7d:	e8 fc ff ff ff       	call   5a7e <ide_check_atapi_device+0xb6>
			5a7e: R_386_PC32	printk
    5a82:	31 c9                	xor    %ecx,%ecx
    5a84:	83 c4 10             	add    $0x10,%esp
    5a87:	89 c8                	mov    %ecx,%eax
    5a89:	83 c4 0c             	add    $0xc,%esp
    5a8c:	5b                   	pop    %ebx
    5a8d:	c3                   	ret    

00005a8e <ide_transfer_pc>:
    5a8e:	55                   	push   %ebp
    5a8f:	b9 08 00 00 00       	mov    $0x8,%ecx
    5a94:	57                   	push   %edi
    5a95:	56                   	push   %esi
    5a96:	89 c6                	mov    %eax,%esi
    5a98:	53                   	push   %ebx
    5a99:	89 f2                	mov    %esi,%edx
    5a9b:	83 ec 24             	sub    $0x24,%esp
    5a9e:	8b 78 28             	mov    0x28(%eax),%edi
    5aa1:	8b 87 38 02 00 00    	mov    0x238(%edi),%eax
    5aa7:	89 44 24 08          	mov    %eax,0x8(%esp)
    5aab:	8d 44 24 20          	lea    0x20(%esp),%eax
    5aaf:	68 e2 04 00 00       	push   $0x4e2
    5ab4:	68 80 00 00 00       	push   $0x80
    5ab9:	e8 fc ff ff ff       	call   5aba <ide_transfer_pc+0x2c>
			5aba: R_386_PC32	ide_wait_stat
    5abe:	59                   	pop    %ecx
    5abf:	5b                   	pop    %ebx
    5ac0:	85 c0                	test   %eax,%eax
    5ac2:	74 14                	je     5ad8 <ide_transfer_pc+0x4a>
    5ac4:	56                   	push   %esi
    5ac5:	68 35 13 00 00       	push   $0x1335
			5ac6: R_386_32	.rodata.str1.1
    5aca:	e8 fc ff ff ff       	call   5acb <ide_transfer_pc+0x3d>
			5acb: R_386_PC32	printk
    5acf:	8b 44 24 28          	mov    0x28(%esp),%eax
    5ad3:	e9 29 01 00 00       	jmp    5c01 <ide_transfer_pc+0x173>
    5ad8:	f6 86 cc 01 00 00 01 	testb  $0x1,0x1cc(%esi)
    5adf:	74 0a                	je     5aeb <ide_transfer_pc+0x5d>
    5ae1:	80 7e 40 00          	cmpb   $0x0,0x40(%esi)
    5ae5:	74 04                	je     5aeb <ide_transfer_pc+0x5d>
    5ae7:	c6 46 3f 01          	movb   $0x1,0x3f(%esi)
    5aeb:	8a 46 46             	mov    0x46(%esi),%al
    5aee:	3c 07                	cmp    $0x7,%al
    5af0:	74 04                	je     5af6 <ide_transfer_pc+0x68>
    5af2:	3c 05                	cmp    $0x5,%al
    5af4:	75 37                	jne    5b2d <ide_transfer_pc+0x9f>
    5af6:	8b 54 24 08          	mov    0x8(%esp),%edx
    5afa:	8b 82 94 00 00 00    	mov    0x94(%edx),%eax
    5b00:	8b aa b4 00 00 00    	mov    0xb4(%edx),%ebp
    5b06:	8a 00                	mov    (%eax),%al
    5b08:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)
    5b0f:	00 
			5b0c: R_386_32	ide_cd_expiry
    5b10:	c0 e8 05             	shr    $0x5,%al
    5b13:	0f b6 c0             	movzbl %al,%eax
    5b16:	0f b6 98 00 00 00 00 	movzbl 0x0(%eax),%ebx
			5b19: R_386_32	scsi_command_size_tbl
    5b1d:	b8 0c 00 00 00       	mov    $0xc,%eax
    5b22:	83 fb 0b             	cmp    $0xb,%ebx
    5b25:	0f 4e d8             	cmovle %eax,%ebx
    5b28:	e9 d8 00 00 00       	jmp    5c05 <ide_transfer_pc+0x177>
    5b2d:	8b 96 bc 01 00 00    	mov    0x1bc(%esi),%edx
    5b33:	89 54 24 0c          	mov    %edx,0xc(%esp)
    5b37:	f6 86 ce 01 00 00 01 	testb  $0x1,0x1ce(%esi)
    5b3e:	74 0e                	je     5b4e <ide_transfer_pc+0xc0>
    5b40:	0f b6 6e 50          	movzbl 0x50(%esi),%ebp
    5b44:	c7 44 24 04 5e 59 00 	movl   $0x595e,0x4(%esp)
    5b4b:	00 
			5b48: R_386_32	.text
    5b4c:	eb 18                	jmp    5b66 <ide_transfer_pc+0xd8>
    5b4e:	3c 01                	cmp    $0x1,%al
    5b50:	19 ed                	sbb    %ebp,%ebp
    5b52:	81 e5 ec c1 fc ff    	and    $0xfffcc1ec,%ebp
    5b58:	81 c5 e8 6e 03 00    	add    $0x36ee8,%ebp
    5b5e:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)
    5b65:	00 
    5b66:	8b 46 28             	mov    0x28(%esi),%eax
    5b69:	8d 54 24 18          	lea    0x18(%esp),%edx
    5b6d:	b9 04 00 00 00       	mov    $0x4,%ecx
    5b72:	8b 58 70             	mov    0x70(%eax),%ebx
    5b75:	89 f0                	mov    %esi,%eax
    5b77:	ff 53 18             	call   *0x18(%ebx)
    5b7a:	8a 44 24 1a          	mov    0x1a(%esp),%al
    5b7e:	83 e0 03             	and    $0x3,%eax
    5b81:	80 7e 46 01          	cmpb   $0x1,0x46(%esi)
    5b85:	75 5d                	jne    5be4 <ide_transfer_pc+0x156>
    5b87:	c7 04 24 64 00 00 00 	movl   $0x64,(%esp)
    5b8e:	eb 4c                	jmp    5bdc <ide_transfer_pc+0x14e>
    5b90:	ff 0c 24             	decl   (%esp)
    5b93:	56                   	push   %esi
    5b94:	68 81 13 00 00       	push   $0x1381
			5b95: R_386_32	.rodata.str1.1
    5b99:	e8 fc ff ff ff       	call   5b9a <ide_transfer_pc+0x10c>
			5b9a: R_386_PC32	printk
    5b9e:	b8 bc 8d 06 00       	mov    $0x68dbc,%eax
    5ba3:	e8 fc ff ff ff       	call   5ba4 <ide_transfer_pc+0x116>
			5ba4: R_386_PC32	__const_udelay
    5ba8:	8b 46 28             	mov    0x28(%esi),%eax
    5bab:	b9 04 00 00 00       	mov    $0x4,%ecx
    5bb0:	8b 58 70             	mov    0x70(%eax),%ebx
    5bb3:	89 f0                	mov    %esi,%eax
    5bb5:	8d 54 24 18          	lea    0x18(%esp),%edx
    5bb9:	ff 53 18             	call   *0x18(%ebx)
    5bbc:	8a 44 24 1a          	mov    0x1a(%esp),%al
    5bc0:	5b                   	pop    %ebx
    5bc1:	5a                   	pop    %edx
    5bc2:	83 e0 03             	and    $0x3,%eax
    5bc5:	83 3c 24 00          	cmpl   $0x0,(%esp)
    5bc9:	75 11                	jne    5bdc <ide_transfer_pc+0x14e>
    5bcb:	56                   	push   %esi
    5bcc:	68 ce 13 00 00       	push   $0x13ce
			5bcd: R_386_32	.rodata.str1.1
    5bd1:	e8 fc ff ff ff       	call   5bd2 <ide_transfer_pc+0x144>
			5bd2: R_386_PC32	printk
    5bd6:	b0 01                	mov    $0x1,%al
    5bd8:	5a                   	pop    %edx
    5bd9:	59                   	pop    %ecx
    5bda:	eb 08                	jmp    5be4 <ide_transfer_pc+0x156>
    5bdc:	89 c2                	mov    %eax,%edx
    5bde:	83 e2 03             	and    $0x3,%edx
    5be1:	4a                   	dec    %edx
    5be2:	75 ac                	jne    5b90 <ide_transfer_pc+0x102>
    5be4:	83 e0 03             	and    $0x3,%eax
    5be7:	bb 0c 00 00 00       	mov    $0xc,%ebx
    5bec:	48                   	dec    %eax
    5bed:	74 16                	je     5c05 <ide_transfer_pc+0x177>
    5bef:	56                   	push   %esi
    5bf0:	68 1b 14 00 00       	push   $0x141b
			5bf1: R_386_32	.rodata.str1.1
    5bf5:	e8 fc ff ff ff       	call   5bf6 <ide_transfer_pc+0x168>
			5bf6: R_386_PC32	printk
    5bfa:	89 f0                	mov    %esi,%eax
    5bfc:	e8 fc ff ff ff       	call   5bfd <ide_transfer_pc+0x16f>
			5bfd: R_386_PC32	ide_do_reset
    5c01:	5e                   	pop    %esi
    5c02:	5f                   	pop    %edi
    5c03:	eb 79                	jmp    5c7e <ide_transfer_pc+0x1f0>
    5c05:	8b 44 24 04          	mov    0x4(%esp),%eax
    5c09:	89 87 70 02 00 00    	mov    %eax,0x270(%edi)
    5c0f:	8a 46 46             	mov    0x46(%esi),%al
    5c12:	3c 07                	cmp    $0x7,%al
    5c14:	74 09                	je     5c1f <ide_transfer_pc+0x191>
    5c16:	3c 05                	cmp    $0x5,%al
    5c18:	ba a0 5f 00 00       	mov    $0x5fa0,%edx
			5c19: R_386_32	.text
    5c1d:	75 06                	jne    5c25 <ide_transfer_pc+0x197>
    5c1f:	8b 96 c8 01 00 00    	mov    0x1c8(%esi),%edx
    5c25:	89 e9                	mov    %ebp,%ecx
    5c27:	89 f0                	mov    %esi,%eax
    5c29:	e8 fc ff ff ff       	call   5c2a <ide_transfer_pc+0x19c>
			5c2a: R_386_PC32	ide_set_handler
    5c2e:	f6 86 ce 01 00 00 01 	testb  $0x1,0x1ce(%esi)
    5c35:	75 16                	jne    5c4d <ide_transfer_pc+0x1bf>
    5c37:	8b 54 24 08          	mov    0x8(%esp),%edx
    5c3b:	89 f0                	mov    %esi,%eax
    5c3d:	8b 6f 70             	mov    0x70(%edi),%ebp
    5c40:	8b 8a 94 00 00 00    	mov    0x94(%edx),%ecx
    5c46:	31 d2                	xor    %edx,%edx
    5c48:	53                   	push   %ebx
    5c49:	ff 55 20             	call   *0x20(%ebp)
    5c4c:	5b                   	pop    %ebx
    5c4d:	8a 46 46             	mov    0x46(%esi),%al
    5c50:	3c 07                	cmp    $0x7,%al
    5c52:	74 04                	je     5c58 <ide_transfer_pc+0x1ca>
    5c54:	3c 05                	cmp    $0x5,%al
    5c56:	75 08                	jne    5c60 <ide_transfer_pc+0x1d2>
    5c58:	80 7e 40 00          	cmpb   $0x0,0x40(%esi)
    5c5c:	74 1b                	je     5c79 <ide_transfer_pc+0x1eb>
    5c5e:	eb 11                	jmp    5c71 <ide_transfer_pc+0x1e3>
    5c60:	8b 54 24 0c          	mov    0xc(%esp),%edx
    5c64:	8b 42 1c             	mov    0x1c(%edx),%eax
    5c67:	a8 08                	test   $0x8,%al
    5c69:	74 0e                	je     5c79 <ide_transfer_pc+0x1eb>
    5c6b:	83 c8 10             	or     $0x10,%eax
    5c6e:	89 42 1c             	mov    %eax,0x1c(%edx)
    5c71:	8b 57 78             	mov    0x78(%edi),%edx
    5c74:	89 f0                	mov    %esi,%eax
    5c76:	ff 52 08             	call   *0x8(%edx)
    5c79:	b8 01 00 00 00       	mov    $0x1,%eax
    5c7e:	83 c4 24             	add    $0x24,%esp
    5c81:	5b                   	pop    %ebx
    5c82:	5e                   	pop    %esi
    5c83:	5f                   	pop    %edi
    5c84:	5d                   	pop    %ebp
    5c85:	c3                   	ret    

00005c86 <ide_issue_pc>:
    5c86:	55                   	push   %ebp
    5c87:	57                   	push   %edi
    5c88:	56                   	push   %esi
    5c89:	89 d6                	mov    %edx,%esi
    5c8b:	53                   	push   %ebx
    5c8c:	89 c3                	mov    %eax,%ebx
    5c8e:	83 ec 0c             	sub    $0xc,%esp
    5c91:	8b 40 28             	mov    0x28(%eax),%eax
    5c94:	89 44 24 08          	mov    %eax,0x8(%esp)
    5c98:	8b 93 cc 01 00 00    	mov    0x1cc(%ebx),%edx
    5c9e:	8b 80 38 02 00 00    	mov    0x238(%eax),%eax
    5ca4:	83 e2 01             	and    $0x1,%edx
    5ca7:	88 54 24 07          	mov    %dl,0x7(%esp)
    5cab:	8a 4b 46             	mov    0x46(%ebx),%cl
    5cae:	80 f9 07             	cmp    $0x7,%cl
    5cb1:	74 05                	je     5cb8 <ide_issue_pc+0x32>
    5cb3:	80 f9 05             	cmp    $0x5,%cl
    5cb6:	75 43                	jne    5cfb <ide_issue_pc+0x75>
    5cb8:	8b 50 28             	mov    0x28(%eax),%edx
    5cbb:	bd 00 80 00 00       	mov    $0x8000,%ebp
    5cc0:	83 fa 01             	cmp    $0x1,%edx
    5cc3:	74 13                	je     5cd8 <ide_issue_pc+0x52>
    5cc5:	8d 4a fe             	lea    -0x2(%edx),%ecx
    5cc8:	83 f9 01             	cmp    $0x1,%ecx
    5ccb:	76 08                	jbe    5cd5 <ide_issue_pc+0x4f>
    5ccd:	66 31 ed             	xor    %bp,%bp
    5cd0:	83 fa 0a             	cmp    $0xa,%edx
    5cd3:	75 03                	jne    5cd8 <ide_issue_pc+0x52>
    5cd5:	8b 68 38             	mov    0x38(%eax),%ebp
    5cd8:	80 7b 40 00          	cmpb   $0x0,0x40(%ebx)
    5cdc:	74 0f                	je     5ced <ide_issue_pc+0x67>
    5cde:	89 f2                	mov    %esi,%edx
    5ce0:	89 d8                	mov    %ebx,%eax
    5ce2:	e8 fc ff ff ff       	call   5ce3 <ide_issue_pc+0x5d>
			5ce3: R_386_PC32	ide_dma_prepare
    5ce7:	85 c0                	test   %eax,%eax
    5ce9:	0f 94 43 40          	sete   0x40(%ebx)
    5ced:	b0 0c                	mov    $0xc,%al
    5cef:	bf 98 3a 00 00       	mov    $0x3a98,%edi
    5cf4:	b9 00 00 00 00       	mov    $0x0,%ecx
			5cf5: R_386_32	ide_cd_expiry
    5cf9:	eb 71                	jmp    5d6c <ide_issue_pc+0xe6>
    5cfb:	8b 50 38             	mov    0x38(%eax),%edx
    5cfe:	fe c9                	dec    %cl
    5d00:	8b bb bc 01 00 00    	mov    0x1bc(%ebx),%edi
    5d06:	89 d5                	mov    %edx,%ebp
    5d08:	74 10                	je     5d1a <ide_issue_pc+0x94>
    5d0a:	bd 00 fc 00 00       	mov    $0xfc00,%ebp
    5d0f:	81 fa 00 fc 00 00    	cmp    $0xfc00,%edx
    5d15:	0f 47 d5             	cmova  %ebp,%edx
    5d18:	89 d5                	mov    %edx,%ebp
    5d1a:	0f b7 d5             	movzwl %bp,%edx
    5d1d:	89 90 a0 00 00 00    	mov    %edx,0xa0(%eax)
    5d23:	8b 47 1c             	mov    0x1c(%edi),%eax
    5d26:	a8 20                	test   $0x20,%al
    5d28:	74 0d                	je     5d37 <ide_issue_pc+0xb1>
    5d2a:	83 e0 df             	and    $0xffffffdf,%eax
    5d2d:	89 47 1c             	mov    %eax,0x1c(%edi)
    5d30:	89 d8                	mov    %ebx,%eax
    5d32:	e8 fc ff ff ff       	call   5d33 <ide_issue_pc+0xad>
			5d33: R_386_PC32	ide_dma_off
    5d37:	f6 47 1c 08          	testb  $0x8,0x1c(%edi)
    5d3b:	74 0f                	je     5d4c <ide_issue_pc+0xc6>
    5d3d:	89 f2                	mov    %esi,%edx
    5d3f:	89 d8                	mov    %ebx,%eax
    5d41:	e8 fc ff ff ff       	call   5d42 <ide_issue_pc+0xbc>
			5d42: R_386_PC32	ide_dma_prepare
    5d46:	85 c0                	test   %eax,%eax
    5d48:	0f 94 43 40          	sete   0x40(%ebx)
    5d4c:	80 7b 40 00          	cmpb   $0x0,0x40(%ebx)
    5d50:	75 04                	jne    5d56 <ide_issue_pc+0xd0>
    5d52:	83 67 1c f7          	andl   $0xfffffff7,0x1c(%edi)
    5d56:	80 7b 46 01          	cmpb   $0x1,0x46(%ebx)
    5d5a:	b0 40                	mov    $0x40,%al
    5d5c:	19 ff                	sbb    %edi,%edi
    5d5e:	31 c9                	xor    %ecx,%ecx
    5d60:	81 e7 ec c1 fc ff    	and    $0xfffcc1ec,%edi
    5d66:	81 c7 e8 6e 03 00    	add    $0x36ee8,%edi
    5d6c:	8a 53 40             	mov    0x40(%ebx),%dl
    5d6f:	c6 46 07 a0          	movb   $0xa0,0x7(%esi)
    5d73:	80 fa 01             	cmp    $0x1,%dl
    5d76:	88 56 01             	mov    %dl,0x1(%esi)
    5d79:	19 d2                	sbb    %edx,%edx
    5d7b:	83 c8 32             	or     $0x32,%eax
    5d7e:	88 46 10             	mov    %al,0x10(%esi)
    5d81:	89 e8                	mov    %ebp,%eax
    5d83:	83 c2 07             	add    $0x7,%edx
    5d86:	88 46 04             	mov    %al,0x4(%esi)
    5d89:	89 e8                	mov    %ebp,%eax
    5d8b:	66 c1 e8 08          	shr    $0x8,%ax
    5d8f:	89 56 18             	mov    %edx,0x18(%esi)
    5d92:	89 f2                	mov    %esi,%edx
    5d94:	88 46 05             	mov    %al,0x5(%esi)
    5d97:	89 d8                	mov    %ebx,%eax
    5d99:	89 0c 24             	mov    %ecx,(%esp)
    5d9c:	e8 fc ff ff ff       	call   5d9d <ide_issue_pc+0x117>
			5d9d: R_386_PC32	do_rw_taskfile
    5da1:	80 7c 24 07 00       	cmpb   $0x0,0x7(%esp)
    5da6:	8b 0c 24             	mov    (%esp),%ecx
    5da9:	74 14                	je     5dbf <ide_issue_pc+0x139>
    5dab:	80 7b 40 00          	cmpb   $0x0,0x40(%ebx)
    5daf:	74 04                	je     5db5 <ide_issue_pc+0x12f>
    5db1:	c6 43 3f 00          	movb   $0x0,0x3f(%ebx)
    5db5:	8b 54 24 08          	mov    0x8(%esp),%edx
    5db9:	89 8a 70 02 00 00    	mov    %ecx,0x270(%edx)
    5dbf:	89 f2                	mov    %esi,%edx
    5dc1:	b9 8e 5a 00 00       	mov    $0x5a8e,%ecx
			5dc2: R_386_32	.text
    5dc6:	57                   	push   %edi
    5dc7:	89 d8                	mov    %ebx,%eax
    5dc9:	e8 fc ff ff ff       	call   5dca <ide_issue_pc+0x144>
			5dca: R_386_PC32	ide_execute_command
    5dce:	5e                   	pop    %esi
    5dcf:	80 7c 24 07 00       	cmpb   $0x0,0x7(%esp)
    5dd4:	74 0d                	je     5de3 <ide_issue_pc+0x15d>
    5dd6:	83 c4 0c             	add    $0xc,%esp
    5dd9:	b8 01 00 00 00       	mov    $0x1,%eax
    5dde:	5b                   	pop    %ebx
    5ddf:	5e                   	pop    %esi
    5de0:	5f                   	pop    %edi
    5de1:	5d                   	pop    %ebp
    5de2:	c3                   	ret    
    5de3:	83 c4 0c             	add    $0xc,%esp
    5de6:	89 d8                	mov    %ebx,%eax
    5de8:	5b                   	pop    %ebx
    5de9:	5e                   	pop    %esi
    5dea:	5f                   	pop    %edi
    5deb:	5d                   	pop    %ebp
    5dec:	e9 9d fc ff ff       	jmp    5a8e <ide_transfer_pc>

00005df1 <ide_check_ireason>:
    5df1:	55                   	push   %ebp
    5df2:	57                   	push   %edi
    5df3:	56                   	push   %esi
    5df4:	89 d6                	mov    %edx,%esi
    5df6:	53                   	push   %ebx
    5df7:	89 c3                	mov    %eax,%ebx
    5df9:	83 ec 04             	sub    $0x4,%esp
    5dfc:	8b 7c 24 1c          	mov    0x1c(%esp),%edi
    5e00:	8b 6c 24 18          	mov    0x18(%esp),%ebp
    5e04:	89 0c 24             	mov    %ecx,(%esp)
    5e07:	8b 48 28             	mov    0x28(%eax),%ecx
    5e0a:	83 ff 01             	cmp    $0x1,%edi
    5e0d:	19 d2                	sbb    %edx,%edx
    5e0f:	31 c0                	xor    %eax,%eax
    5e11:	83 e2 02             	and    $0x2,%edx
    5e14:	39 d5                	cmp    %edx,%ebp
    5e16:	0f 84 9f 00 00 00    	je     5ebb <ide_check_ireason+0xca>
    5e1c:	8d 04 3f             	lea    (%edi,%edi,1),%eax
    5e1f:	39 c5                	cmp    %eax,%ebp
    5e21:	75 2c                	jne    5e4f <ide_check_ireason+0x5e>
    5e23:	68 ec 02 00 00       	push   $0x2ec
			5e24: R_386_32	.rodata
    5e28:	53                   	push   %ebx
    5e29:	68 5f 14 00 00       	push   $0x145f
			5e2a: R_386_32	.rodata.str1.1
    5e2e:	e8 fc ff ff ff       	call   5e2f <ide_check_ireason+0x3e>
			5e2f: R_386_PC32	printk
    5e33:	8a 43 46             	mov    0x46(%ebx),%al
    5e36:	83 c4 0c             	add    $0xc,%esp
    5e39:	3c 07                	cmp    $0x7,%al
    5e3b:	74 04                	je     5e41 <ide_check_ireason+0x50>
    5e3d:	3c 05                	cmp    $0x5,%al
    5e3f:	75 5d                	jne    5e9e <ide_check_ireason+0xad>
    5e41:	8b 0c 24             	mov    (%esp),%ecx
    5e44:	89 fa                	mov    %edi,%edx
    5e46:	89 d8                	mov    %ebx,%eax
    5e48:	e8 fc ff ff ff       	call   5e49 <ide_check_ireason+0x58>
			5e49: R_386_PC32	ide_pad_transfer
    5e4d:	eb 4f                	jmp    5e9e <ide_check_ireason+0xad>
    5e4f:	85 ff                	test   %edi,%edi
    5e51:	75 1c                	jne    5e6f <ide_check_ireason+0x7e>
    5e53:	83 fd 01             	cmp    $0x1,%ebp
    5e56:	75 17                	jne    5e6f <ide_check_ireason+0x7e>
    5e58:	8a 43 46             	mov    0x46(%ebx),%al
    5e5b:	3c 07                	cmp    $0x7,%al
    5e5d:	74 04                	je     5e63 <ide_check_ireason+0x72>
    5e5f:	3c 05                	cmp    $0x5,%al
    5e61:	75 3b                	jne    5e9e <ide_check_ireason+0xad>
    5e63:	8b 51 70             	mov    0x70(%ecx),%edx
    5e66:	89 c8                	mov    %ecx,%eax
    5e68:	ff 52 04             	call   *0x4(%edx)
    5e6b:	31 c0                	xor    %eax,%eax
    5e6d:	eb 4c                	jmp    5ebb <ide_check_ireason+0xca>
    5e6f:	f7 c5 01 00 00 00    	test   $0x1,%ebp
    5e75:	74 13                	je     5e8a <ide_check_ireason+0x99>
    5e77:	68 ec 02 00 00       	push   $0x2ec
			5e78: R_386_32	.rodata
    5e7c:	53                   	push   %ebx
    5e7d:	68 90 14 00 00       	push   $0x1490
			5e7e: R_386_32	.rodata.str1.1
    5e82:	e8 fc ff ff ff       	call   5e83 <ide_check_ireason+0x92>
			5e83: R_386_PC32	printk
    5e87:	83 c4 0c             	add    $0xc,%esp
    5e8a:	55                   	push   %ebp
    5e8b:	68 ec 02 00 00       	push   $0x2ec
			5e8c: R_386_32	.rodata
    5e90:	53                   	push   %ebx
    5e91:	68 b2 14 00 00       	push   $0x14b2
			5e92: R_386_32	.rodata.str1.1
    5e96:	e8 fc ff ff ff       	call   5e97 <ide_check_ireason+0xa6>
			5e97: R_386_PC32	printk
    5e9b:	83 c4 10             	add    $0x10,%esp
    5e9e:	8a 43 46             	mov    0x46(%ebx),%al
    5ea1:	3c 07                	cmp    $0x7,%al
    5ea3:	74 04                	je     5ea9 <ide_check_ireason+0xb8>
    5ea5:	3c 05                	cmp    $0x5,%al
    5ea7:	75 0d                	jne    5eb6 <ide_check_ireason+0xc5>
    5ea9:	83 7e 28 0a          	cmpl   $0xa,0x28(%esi)
    5ead:	75 07                	jne    5eb6 <ide_check_ireason+0xc5>
    5eaf:	81 4e 24 00 40 00 00 	orl    $0x4000,0x24(%esi)
    5eb6:	b8 01 00 00 00       	mov    $0x1,%eax
    5ebb:	5f                   	pop    %edi
    5ebc:	5b                   	pop    %ebx
    5ebd:	5e                   	pop    %esi
    5ebe:	5f                   	pop    %edi
    5ebf:	5d                   	pop    %ebp
    5ec0:	c3                   	ret    

00005ec1 <ide_queue_sense_rq>:
    5ec1:	80 b8 f4 01 00 00 00 	cmpb   $0x0,0x1f4(%eax)
    5ec8:	75 13                	jne    5edd <ide_queue_sense_rq+0x1c>
    5eca:	50                   	push   %eax
    5ecb:	68 e5 14 00 00       	push   $0x14e5
			5ecc: R_386_32	.rodata.str1.1
    5ed0:	e8 fc ff ff ff       	call   5ed1 <ide_queue_sense_rq+0x10>
			5ed1: R_386_PC32	printk
    5ed5:	b8 f4 ff ff ff       	mov    $0xfffffff4,%eax
    5eda:	59                   	pop    %ecx
    5edb:	5a                   	pop    %edx
    5edc:	c3                   	ret    
    5edd:	89 90 64 02 00 00    	mov    %edx,0x264(%eax)
    5ee3:	8b 50 28             	mov    0x28(%eax),%edx
    5ee6:	b9 01 00 00 00       	mov    $0x1,%ecx
    5eeb:	c6 80 f4 01 00 00 00 	movb   $0x0,0x1f4(%eax)
    5ef2:	c7 82 38 02 00 00 00 	movl   $0x0,0x238(%edx)
    5ef9:	00 00 00 
    5efc:	8d 90 f8 01 00 00    	lea    0x1f8(%eax),%edx
    5f02:	8b 40 10             	mov    0x10(%eax),%eax
    5f05:	6a 00                	push   $0x0
    5f07:	e8 fc ff ff ff       	call   5f08 <ide_queue_sense_rq+0x47>
			5f08: R_386_PC32	elv_add_request
    5f0c:	31 c0                	xor    %eax,%eax
    5f0e:	5a                   	pop    %edx
    5f0f:	c3                   	ret    

00005f10 <ide_retry_pc>:
    5f10:	55                   	push   %ebp
    5f11:	57                   	push   %edi
    5f12:	56                   	push   %esi
    5f13:	53                   	push   %ebx
    5f14:	89 c3                	mov    %eax,%ebx
    5f16:	83 ec 04             	sub    $0x4,%esp
    5f19:	8b 40 28             	mov    0x28(%eax),%eax
    5f1c:	8b a8 38 02 00 00    	mov    0x238(%eax),%ebp
    5f22:	8d 83 d0 01 00 00    	lea    0x1d0(%ebx),%eax
    5f28:	89 04 24             	mov    %eax,(%esp)
    5f2b:	89 d8                	mov    %ebx,%eax
    5f2d:	e8 fc ff ff ff       	call   5f2e <ide_retry_pc+0x1e>
			5f2e: R_386_PC32	ide_read_error
    5f32:	b9 09 00 00 00       	mov    $0x9,%ecx
    5f37:	31 c0                	xor    %eax,%eax
    5f39:	8b 3c 24             	mov    (%esp),%edi
    5f3c:	f3 ab                	rep stos %eax,%es:(%edi)
    5f3e:	8b b3 8c 02 00 00    	mov    0x28c(%ebx),%esi
    5f44:	8b 3c 24             	mov    (%esp),%edi
    5f47:	a5                   	movsl  %ds:(%esi),%es:(%edi)
    5f48:	a5                   	movsl  %ds:(%esi),%es:(%edi)
    5f49:	a5                   	movsl  %ds:(%esi),%es:(%edi)
    5f4a:	80 7b 46 01          	cmpb   $0x1,0x46(%ebx)
    5f4e:	75 0a                	jne    5f5a <ide_retry_pc+0x4a>
    5f50:	81 8b cc 01 00 00 00 	orl    $0x40000,0x1cc(%ebx)
    5f57:	00 04 00 
    5f5a:	8b 45 20             	mov    0x20(%ebp),%eax
    5f5d:	89 ea                	mov    %ebp,%edx
    5f5f:	e8 fc ff ff ff       	call   5f60 <ide_retry_pc+0x50>
			5f60: R_386_PC32	blk_requeue_request
    5f64:	8b 43 28             	mov    0x28(%ebx),%eax
    5f67:	c7 80 38 02 00 00 00 	movl   $0x0,0x238(%eax)
    5f6e:	00 00 00 
    5f71:	8b 14 24             	mov    (%esp),%edx
    5f74:	89 d8                	mov    %ebx,%eax
    5f76:	e8 fc ff ff ff       	call   5f77 <ide_retry_pc+0x67>
			5f77: R_386_PC32	ide_queue_sense_rq
    5f7b:	85 c0                	test   %eax,%eax
    5f7d:	74 1b                	je     5f9a <ide_retry_pc+0x8a>
    5f7f:	89 e8                	mov    %ebp,%eax
    5f81:	e8 fc ff ff ff       	call   5f82 <ide_retry_pc+0x72>
			5f82: R_386_PC32	blk_start_request
    5f86:	8b 4d 38             	mov    0x38(%ebp),%ecx
    5f89:	89 d8                	mov    %ebx,%eax
    5f8b:	ba fb ff ff ff       	mov    $0xfffffffb,%edx
    5f90:	5b                   	pop    %ebx
    5f91:	5b                   	pop    %ebx
    5f92:	5e                   	pop    %esi
    5f93:	5f                   	pop    %edi
    5f94:	5d                   	pop    %ebp
    5f95:	e9 fc ff ff ff       	jmp    5f96 <ide_retry_pc+0x86>
			5f96: R_386_PC32	ide_complete_rq
    5f9a:	59                   	pop    %ecx
    5f9b:	5b                   	pop    %ebx
    5f9c:	5e                   	pop    %esi
    5f9d:	5f                   	pop    %edi
    5f9e:	5d                   	pop    %ebp
    5f9f:	c3                   	ret    

00005fa0 <ide_pc_intr>:
    5fa0:	55                   	push   %ebp
    5fa1:	57                   	push   %edi
    5fa2:	56                   	push   %esi
    5fa3:	53                   	push   %ebx
    5fa4:	89 c3                	mov    %eax,%ebx
    5fa6:	83 ec 18             	sub    $0x18,%esp
    5fa9:	8b 68 28             	mov    0x28(%eax),%ebp
    5fac:	8b b8 bc 01 00 00    	mov    0x1bc(%eax),%edi
    5fb2:	8d 85 94 00 00 00    	lea    0x94(%ebp),%eax
    5fb8:	89 44 24 0c          	mov    %eax,0xc(%esp)
    5fbc:	8b 47 1c             	mov    0x1c(%edi),%eax
    5fbf:	8b b5 38 02 00 00    	mov    0x238(%ebp),%esi
    5fc5:	8b 55 70             	mov    0x70(%ebp),%edx
    5fc8:	89 44 24 10          	mov    %eax,0x10(%esp)
    5fcc:	80 7b 46 01          	cmpb   $0x1,0x46(%ebx)
    5fd0:	19 c0                	sbb    %eax,%eax
    5fd2:	25 ec c1 fc ff       	and    $0xfffcc1ec,%eax
    5fd7:	05 e8 6e 03 00       	add    $0x36ee8,%eax
    5fdc:	89 44 24 08          	mov    %eax,0x8(%esp)
    5fe0:	89 e8                	mov    %ebp,%eax
    5fe2:	ff 52 04             	call   *0x4(%edx)
    5fe5:	f6 47 1c 10          	testb  $0x10,0x1c(%edi)
    5fe9:	88 c1                	mov    %al,%cl
    5feb:	74 73                	je     6060 <ide_pc_intr+0xc0>
    5fed:	c6 43 3f 00          	movb   $0x0,0x3f(%ebx)
    5ff1:	8b 55 78             	mov    0x78(%ebp),%edx
    5ff4:	89 d8                	mov    %ebx,%eax
    5ff6:	88 0c 24             	mov    %cl,(%esp)
    5ff9:	ff 52 0c             	call   *0xc(%edx)
    5ffc:	8b 54 24 0c          	mov    0xc(%esp),%edx
    6000:	89 44 24 04          	mov    %eax,0x4(%esp)
    6004:	89 d8                	mov    %ebx,%eax
    6006:	e8 fc ff ff ff       	call   6007 <ide_pc_intr+0x67>
			6007: R_386_PC32	ide_dma_unmap_sg
    600b:	83 7c 24 04 00       	cmpl   $0x0,0x4(%esp)
    6010:	8a 0c 24             	mov    (%esp),%cl
    6013:	75 0b                	jne    6020 <ide_pc_intr+0x80>
    6015:	80 7b 46 01          	cmpb   $0x1,0x46(%ebx)
    6019:	75 3b                	jne    6056 <ide_pc_intr+0xb6>
    601b:	f6 c1 01             	test   $0x1,%cl
    601e:	74 36                	je     6056 <ide_pc_intr+0xb6>
    6020:	80 7b 46 00          	cmpb   $0x0,0x46(%ebx)
    6024:	75 2a                	jne    6050 <ide_pc_intr+0xb0>
    6026:	8b 57 18             	mov    0x18(%edi),%edx
    6029:	b8 16 15 00 00       	mov    $0x1516,%eax
			602a: R_386_32	.rodata.str1.1
    602e:	f6 42 24 01          	testb  $0x1,0x24(%edx)
    6032:	ba 1b 15 00 00       	mov    $0x151b,%edx
			6033: R_386_32	.rodata.str1.1
    6037:	0f 45 c2             	cmovne %edx,%eax
    603a:	50                   	push   %eax
    603b:	53                   	push   %ebx
    603c:	68 21 15 00 00       	push   $0x1521
			603d: R_386_32	.rodata.str1.1
    6041:	88 4c 24 0c          	mov    %cl,0xc(%esp)
    6045:	e8 fc ff ff ff       	call   6046 <ide_pc_intr+0xa6>
			6046: R_386_PC32	printk
    604a:	83 c4 0c             	add    $0xc,%esp
    604d:	8a 0c 24             	mov    (%esp),%cl
    6050:	83 4f 1c 20          	orl    $0x20,0x1c(%edi)
    6054:	eb 0a                	jmp    6060 <ide_pc_intr+0xc0>
    6056:	c7 86 a0 00 00 00 00 	movl   $0x0,0xa0(%esi)
    605d:	00 00 00 
    6060:	0f b6 c1             	movzbl %cl,%eax
    6063:	a8 08                	test   $0x8,%al
    6065:	89 44 24 04          	mov    %eax,0x4(%esp)
    6069:	0f 85 dd 00 00 00    	jne    614c <ide_pc_intr+0x1ac>
    606f:	83 67 1c ef          	andl   $0xffffffef,0x1c(%edi)
    6073:	ff 15 0c 00 00 00    	call   *0xc
			6075: R_386_32	pv_irq_ops
    6079:	8a 43 46             	mov    0x46(%ebx),%al
    607c:	3c 01                	cmp    $0x1,%al
    607e:	75 19                	jne    6099 <ide_pc_intr+0xf9>
    6080:	f6 44 24 04 01       	testb  $0x1,0x4(%esp)
    6085:	74 12                	je     6099 <ide_pc_intr+0xf9>
    6087:	8b ae 94 00 00 00    	mov    0x94(%esi),%ebp
    608d:	88 ca                	mov    %cl,%dl
    608f:	83 e2 fe             	and    $0xfffffffe,%edx
    6092:	80 7d 00 03          	cmpb   $0x3,0x0(%ebp)
    6096:	0f 44 ca             	cmove  %edx,%ecx
    6099:	0f b6 c9             	movzbl %cl,%ecx
    609c:	f6 c1 01             	test   $0x1,%cl
    609f:	75 0b                	jne    60ac <ide_pc_intr+0x10c>
    60a1:	8b 6f 1c             	mov    0x1c(%edi),%ebp
    60a4:	f7 c5 20 00 00 00    	test   $0x20,%ebp
    60aa:	74 2e                	je     60da <ide_pc_intr+0x13a>
    60ac:	fe c8                	dec    %al
    60ae:	74 06                	je     60b6 <ide_pc_intr+0x116>
    60b0:	8b 47 18             	mov    0x18(%edi),%eax
    60b3:	ff 40 78             	incl   0x78(%eax)
    60b6:	8b 86 94 00 00 00    	mov    0x94(%esi),%eax
    60bc:	80 38 03             	cmpb   $0x3,(%eax)
    60bf:	75 10                	jne    60d1 <ide_pc_intr+0x131>
    60c1:	53                   	push   %ebx
    60c2:	68 41 15 00 00       	push   $0x1541
			60c3: R_386_32	.rodata.str1.1
    60c7:	e8 fc ff ff ff       	call   60c8 <ide_pc_intr+0x128>
			60c8: R_386_PC32	printk
    60cc:	e9 9a 00 00 00       	jmp    616b <ide_pc_intr+0x1cb>
    60d1:	89 d8                	mov    %ebx,%eax
    60d3:	e8 fc ff ff ff       	call   60d4 <ide_pc_intr+0x134>
			60d4: R_386_PC32	ide_retry_pc
    60d8:	eb 6b                	jmp    6145 <ide_pc_intr+0x1a5>
    60da:	31 d2                	xor    %edx,%edx
    60dc:	83 e5 04             	and    $0x4,%ebp
    60df:	c7 47 10 00 00 00 00 	movl   $0x0,0x10(%edi)
    60e6:	74 0b                	je     60f3 <ide_pc_intr+0x153>
    60e8:	c1 e9 04             	shr    $0x4,%ecx
    60eb:	83 f1 01             	xor    $0x1,%ecx
    60ee:	88 ca                	mov    %cl,%dl
    60f0:	83 e2 01             	and    $0x1,%edx
    60f3:	0f b6 d2             	movzbl %dl,%edx
    60f6:	89 d8                	mov    %ebx,%eax
    60f8:	ff 93 c4 01 00 00    	call   *0x1c4(%ebx)
    60fe:	85 c0                	test   %eax,%eax
    6100:	75 0a                	jne    610c <ide_pc_intr+0x16c>
    6102:	c7 83 c0 01 00 00 00 	movl   $0x0,0x1c0(%ebx)
    6109:	00 00 00 
    610c:	8b 56 28             	mov    0x28(%esi),%edx
    610f:	83 fa 07             	cmp    $0x7,%edx
    6112:	75 0b                	jne    611f <ide_pc_intr+0x17f>
    6114:	c7 46 78 00 00 00 00 	movl   $0x0,0x78(%esi)
    611b:	30 d2                	xor    %dl,%dl
    611d:	eb 1c                	jmp    613b <ide_pc_intr+0x19b>
    611f:	85 c0                	test   %eax,%eax
    6121:	7f 10                	jg     6133 <ide_pc_intr+0x193>
    6123:	4a                   	dec    %edx
    6124:	74 0d                	je     6133 <ide_pc_intr+0x193>
    6126:	83 7e 78 00          	cmpl   $0x0,0x78(%esi)
    612a:	75 07                	jne    6133 <ide_pc_intr+0x193>
    612c:	c7 46 78 fb ff ff ff 	movl   $0xfffffffb,0x78(%esi)
    6133:	83 f8 01             	cmp    $0x1,%eax
    6136:	19 d2                	sbb    %edx,%edx
    6138:	83 e2 fb             	and    $0xfffffffb,%edx
    613b:	8b 4e 38             	mov    0x38(%esi),%ecx
    613e:	89 d8                	mov    %ebx,%eax
    6140:	e8 fc ff ff ff       	call   6141 <ide_pc_intr+0x1a1>
			6141: R_386_PC32	ide_complete_rq
    6145:	31 c0                	xor    %eax,%eax
    6147:	e9 ce 00 00 00       	jmp    621a <ide_pc_intr+0x27a>
    614c:	8b 47 1c             	mov    0x1c(%edi),%eax
    614f:	a8 10                	test   $0x10,%al
    6151:	74 26                	je     6179 <ide_pc_intr+0x1d9>
    6153:	83 e0 ef             	and    $0xffffffef,%eax
    6156:	89 47 1c             	mov    %eax,0x1c(%edi)
    6159:	53                   	push   %ebx
    615a:	68 77 15 00 00       	push   $0x1577
			615b: R_386_32	.rodata.str1.1
    615f:	e8 fc ff ff ff       	call   6160 <ide_pc_intr+0x1c0>
			6160: R_386_PC32	printk
    6164:	89 d8                	mov    %ebx,%eax
    6166:	e8 fc ff ff ff       	call   6167 <ide_pc_intr+0x1c7>
			6167: R_386_PC32	ide_dma_off
    616b:	89 d8                	mov    %ebx,%eax
    616d:	e8 fc ff ff ff       	call   616e <ide_pc_intr+0x1ce>
			616e: R_386_PC32	ide_do_reset
    6172:	59                   	pop    %ecx
    6173:	5b                   	pop    %ebx
    6174:	e9 a1 00 00 00       	jmp    621a <ide_pc_intr+0x27a>
    6179:	8b 7c 24 10          	mov    0x10(%esp),%edi
    617d:	8d 4c 24 17          	lea    0x17(%esp),%ecx
    6181:	89 d8                	mov    %ebx,%eax
    6183:	8d 54 24 14          	lea    0x14(%esp),%edx
    6187:	e8 fc ff ff ff       	call   6188 <ide_pc_intr+0x1e8>
			6188: R_386_PC32	ide_read_bcount_and_ireason
    618c:	89 f2                	mov    %esi,%edx
    618e:	c1 ef 06             	shr    $0x6,%edi
    6191:	83 e7 01             	and    $0x1,%edi
    6194:	0f b7 4c 24 14       	movzwl 0x14(%esp),%ecx
    6199:	89 f8                	mov    %edi,%eax
    619b:	0f b6 f8             	movzbl %al,%edi
    619e:	89 7c 24 04          	mov    %edi,0x4(%esp)
    61a2:	57                   	push   %edi
    61a3:	0f b6 44 24 1b       	movzbl 0x1b(%esp),%eax
    61a8:	50                   	push   %eax
    61a9:	89 d8                	mov    %ebx,%eax
    61ab:	e8 fc ff ff ff       	call   61ac <ide_pc_intr+0x20c>
			61ac: R_386_PC32	ide_check_ireason
    61b0:	5f                   	pop    %edi
    61b1:	5a                   	pop    %edx
    61b2:	85 c0                	test   %eax,%eax
    61b4:	74 09                	je     61bf <ide_pc_intr+0x21f>
    61b6:	89 d8                	mov    %ebx,%eax
    61b8:	e8 fc ff ff ff       	call   61b9 <ide_pc_intr+0x219>
			61b9: R_386_PC32	ide_do_reset
    61bd:	eb 5b                	jmp    621a <ide_pc_intr+0x27a>
    61bf:	8b 85 c0 00 00 00    	mov    0xc0(%ebp),%eax
    61c5:	0f b7 7c 24 14       	movzwl 0x14(%esp),%edi
    61ca:	39 c7                	cmp    %eax,%edi
    61cc:	0f 47 f8             	cmova  %eax,%edi
    61cf:	89 d8                	mov    %ebx,%eax
    61d1:	57                   	push   %edi
    61d2:	8b 4c 24 08          	mov    0x8(%esp),%ecx
    61d6:	8b 54 24 10          	mov    0x10(%esp),%edx
    61da:	e8 fc ff ff ff       	call   61db <ide_pc_intr+0x23b>
			61db: R_386_PC32	ide_pio_bytes
    61df:	29 be a0 00 00 00    	sub    %edi,0xa0(%esi)
    61e5:	8b 4c 24 18          	mov    0x18(%esp),%ecx
    61e9:	66 29 f9             	sub    %di,%cx
    61ec:	66 85 c9             	test   %cx,%cx
    61ef:	66 89 4c 24 18       	mov    %cx,0x18(%esp)
    61f4:	5e                   	pop    %esi
    61f5:	74 0e                	je     6205 <ide_pc_intr+0x265>
    61f7:	8b 54 24 04          	mov    0x4(%esp),%edx
    61fb:	0f b7 c9             	movzwl %cx,%ecx
    61fe:	89 d8                	mov    %ebx,%eax
    6200:	e8 fc ff ff ff       	call   6201 <ide_pc_intr+0x261>
			6201: R_386_PC32	ide_pad_transfer
    6205:	8b 4c 24 08          	mov    0x8(%esp),%ecx
    6209:	89 d8                	mov    %ebx,%eax
    620b:	ba a0 5f 00 00       	mov    $0x5fa0,%edx
			620c: R_386_32	.text
    6210:	e8 fc ff ff ff       	call   6211 <ide_pc_intr+0x271>
			6211: R_386_PC32	ide_set_handler
    6215:	b8 01 00 00 00       	mov    $0x1,%eax
    621a:	83 c4 18             	add    $0x18,%esp
    621d:	5b                   	pop    %ebx
    621e:	5e                   	pop    %esi
    621f:	5f                   	pop    %edi
    6220:	5d                   	pop    %ebp
    6221:	c3                   	ret    

00006222 <ide_prep_sense>:
    6222:	55                   	push   %ebp
    6223:	57                   	push   %edi
    6224:	56                   	push   %esi
    6225:	89 d6                	mov    %edx,%esi
    6227:	53                   	push   %ebx
    6228:	89 c3                	mov    %eax,%ebx
    622a:	83 ec 0c             	sub    $0xc,%esp
    622d:	8a 40 46             	mov    0x46(%eax),%al
    6230:	3c 01                	cmp    $0x1,%al
    6232:	77 1d                	ja     6251 <ide_prep_sense+0x2f>
    6234:	0f b6 c0             	movzbl %al,%eax
    6237:	8b 2c 85 00 03 00 00 	mov    0x300(,%eax,4),%ebp
			623a: R_386_32	.rodata
    623e:	8b 04 85 08 03 00 00 	mov    0x308(,%eax,4),%eax
			6241: R_386_32	.rodata
    6245:	83 fd 40             	cmp    $0x40,%ebp
    6248:	89 04 24             	mov    %eax,(%esp)
    624b:	76 10                	jbe    625d <ide_prep_sense+0x3b>
    624d:	0f 0b                	ud2a   
    624f:	eb fe                	jmp    624f <ide_prep_sense+0x2d>
    6251:	c7 04 24 12 00 00 00 	movl   $0x12,(%esp)
    6258:	bd 12 00 00 00       	mov    $0x12,%ebp
    625d:	83 7e 28 03          	cmpl   $0x3,0x28(%esi)
    6261:	0f 84 b2 00 00 00    	je     6319 <ide_prep_sense+0xf7>
    6267:	80 bb f4 01 00 00 00 	cmpb   $0x0,0x1f4(%ebx)
    626e:	0f 85 a5 00 00 00    	jne    6319 <ide_prep_sense+0xf7>
    6274:	8d 83 c0 02 00 00    	lea    0x2c0(%ebx),%eax
    627a:	b9 10 00 00 00       	mov    $0x10,%ecx
    627f:	8d 93 f8 01 00 00    	lea    0x1f8(%ebx),%edx
    6285:	89 c7                	mov    %eax,%edi
    6287:	89 44 24 08          	mov    %eax,0x8(%esp)
    628b:	31 c0                	xor    %eax,%eax
    628d:	89 54 24 04          	mov    %edx,0x4(%esp)
    6291:	f3 ab                	rep stos %eax,%es:(%edi)
    6293:	8b 46 20             	mov    0x20(%esi),%eax
    6296:	8b 54 24 04          	mov    0x4(%esp),%edx
    629a:	e8 fc ff ff ff       	call   629b <ide_prep_sense+0x79>
			629b: R_386_PC32	blk_rq_init
    629f:	8b 43 10             	mov    0x10(%ebx),%eax
    62a2:	6a 10                	push   $0x10
    62a4:	55                   	push   %ebp
    62a5:	8b 54 24 0c          	mov    0xc(%esp),%edx
    62a9:	8b 4c 24 10          	mov    0x10(%esp),%ecx
    62ad:	e8 fc ff ff ff       	call   62ae <ide_prep_sense+0x8c>
			62ae: R_386_PC32	blk_rq_map_kern
    62b2:	5d                   	pop    %ebp
    62b3:	5a                   	pop    %edx
    62b4:	85 c0                	test   %eax,%eax
    62b6:	74 18                	je     62d0 <ide_prep_sense+0xae>
    62b8:	e8 fc ff ff ff       	call   62b9 <ide_prep_sense+0x97>
			62b9: R_386_PC32	printk_ratelimit
    62bd:	85 c0                	test   %eax,%eax
    62bf:	74 58                	je     6319 <ide_prep_sense+0xf7>
    62c1:	53                   	push   %ebx
    62c2:	68 d8 15 00 00       	push   $0x15d8
			62c3: R_386_32	.rodata.str1.1
    62c7:	e8 fc ff ff ff       	call   62c8 <ide_prep_sense+0xa6>
			62c8: R_386_PC32	printk
    62cc:	5e                   	pop    %esi
    62cd:	5f                   	pop    %edi
    62ce:	eb 49                	jmp    6319 <ide_prep_sense+0xf7>
    62d0:	8b 46 60             	mov    0x60(%esi),%eax
    62d3:	89 83 58 02 00 00    	mov    %eax,0x258(%ebx)
    62d9:	8b 83 8c 02 00 00    	mov    0x28c(%ebx),%eax
    62df:	c6 00 03             	movb   $0x3,(%eax)
    62e2:	8b 83 8c 02 00 00    	mov    0x28c(%ebx),%eax
    62e8:	8a 14 24             	mov    (%esp),%dl
    62eb:	88 50 04             	mov    %dl,0x4(%eax)
    62ee:	81 8b 1c 02 00 00 00 	orl    $0x10000,0x21c(%ebx)
    62f5:	00 01 00 
    62f8:	80 7b 46 01          	cmpb   $0x1,0x46(%ebx)
    62fc:	c7 83 20 02 00 00 03 	movl   $0x3,0x220(%ebx)
    6303:	00 00 00 
    6306:	75 0a                	jne    6312 <ide_prep_sense+0xf0>
    6308:	8b 83 8c 02 00 00    	mov    0x28c(%ebx),%eax
    630e:	c6 40 0d 01          	movb   $0x1,0xd(%eax)
    6312:	c6 83 f4 01 00 00 01 	movb   $0x1,0x1f4(%ebx)
    6319:	83 c4 0c             	add    $0xc,%esp
    631c:	5b                   	pop    %ebx
    631d:	5e                   	pop    %esi
    631e:	5f                   	pop    %edi
    631f:	5d                   	pop    %ebp
    6320:	c3                   	ret    

00006321 <ide_queue_pc_tail>:
    6321:	55                   	push   %ebp
    6322:	89 c5                	mov    %eax,%ebp
    6324:	57                   	push   %edi
    6325:	56                   	push   %esi
    6326:	89 ce                	mov    %ecx,%esi
    6328:	53                   	push   %ebx
    6329:	b9 10 00 00 00       	mov    $0x10,%ecx
    632e:	83 ec 04             	sub    $0x4,%esp
    6331:	89 14 24             	mov    %edx,(%esp)
    6334:	8b 40 10             	mov    0x10(%eax),%eax
    6337:	31 d2                	xor    %edx,%edx
    6339:	8b 7c 24 1c          	mov    0x1c(%esp),%edi
    633d:	e8 fc ff ff ff       	call   633e <ide_queue_pc_tail+0x1d>
			633e: R_386_PC32	blk_get_request
    6342:	85 ff                	test   %edi,%edi
    6344:	89 c3                	mov    %eax,%ebx
    6346:	c7 40 28 07 00 00 00 	movl   $0x7,0x28(%eax)
    634d:	89 70 6c             	mov    %esi,0x6c(%eax)
    6350:	74 20                	je     6372 <ide_queue_pc_tail+0x51>
    6352:	83 7c 24 18 00       	cmpl   $0x0,0x18(%esp)
    6357:	74 19                	je     6372 <ide_queue_pc_tail+0x51>
    6359:	8b 45 10             	mov    0x10(%ebp),%eax
    635c:	89 da                	mov    %ebx,%edx
    635e:	6a 10                	push   $0x10
    6360:	57                   	push   %edi
    6361:	8b 4c 24 20          	mov    0x20(%esp),%ecx
    6365:	e8 fc ff ff ff       	call   6366 <ide_queue_pc_tail+0x45>
			6366: R_386_PC32	blk_rq_map_kern
    636a:	89 c7                	mov    %eax,%edi
    636c:	85 ff                	test   %edi,%edi
    636e:	58                   	pop    %eax
    636f:	5a                   	pop    %edx
    6370:	75 2c                	jne    639e <ide_queue_pc_tail+0x7d>
    6372:	8b bb 94 00 00 00    	mov    0x94(%ebx),%edi
    6378:	a5                   	movsl  %ds:(%esi),%es:(%edi)
    6379:	a5                   	movsl  %ds:(%esi),%es:(%edi)
    637a:	a5                   	movsl  %ds:(%esi),%es:(%edi)
    637b:	80 7d 46 01          	cmpb   $0x1,0x46(%ebp)
    637f:	75 0a                	jne    638b <ide_queue_pc_tail+0x6a>
    6381:	8b 83 94 00 00 00    	mov    0x94(%ebx),%eax
    6387:	c6 40 0d 01          	movb   $0x1,0xd(%eax)
    638b:	8b 45 10             	mov    0x10(%ebp),%eax
    638e:	89 d9                	mov    %ebx,%ecx
    6390:	6a 00                	push   $0x0
    6392:	8b 54 24 04          	mov    0x4(%esp),%edx
    6396:	e8 fc ff ff ff       	call   6397 <ide_queue_pc_tail+0x76>
			6397: R_386_PC32	blk_execute_rq
    639b:	5e                   	pop    %esi
    639c:	89 c7                	mov    %eax,%edi
    639e:	89 d8                	mov    %ebx,%eax
    63a0:	e8 fc ff ff ff       	call   63a1 <ide_queue_pc_tail+0x80>
			63a1: R_386_PC32	blk_put_request
    63a5:	89 f8                	mov    %edi,%eax
    63a7:	59                   	pop    %ecx
    63a8:	5b                   	pop    %ebx
    63a9:	5e                   	pop    %esi
    63aa:	5f                   	pop    %edi
    63ab:	5d                   	pop    %ebp
    63ac:	c3                   	ret    

000063ad <ide_set_media_lock>:
    63ad:	55                   	push   %ebp
    63ae:	57                   	push   %edi
    63af:	56                   	push   %esi
    63b0:	89 ce                	mov    %ecx,%esi
    63b2:	53                   	push   %ebx
    63b3:	89 c3                	mov    %eax,%ebx
    63b5:	83 ec 28             	sub    $0x28,%esp
    63b8:	65 a1 14 00 00 00    	mov    %gs:0x14,%eax
    63be:	89 44 24 24          	mov    %eax,0x24(%esp)
    63c2:	31 c0                	xor    %eax,%eax
    63c4:	66 83 7b 30 00       	cmpw   $0x0,0x30(%ebx)
    63c9:	79 24                	jns    63ef <ide_set_media_lock+0x42>
    63cb:	89 e5                	mov    %esp,%ebp
    63cd:	b9 09 00 00 00       	mov    $0x9,%ecx
    63d2:	89 e7                	mov    %esp,%edi
    63d4:	f3 ab                	rep stos %eax,%es:(%edi)
    63d6:	89 f0                	mov    %esi,%eax
    63d8:	89 e9                	mov    %ebp,%ecx
    63da:	88 44 24 04          	mov    %al,0x4(%esp)
    63de:	89 d8                	mov    %ebx,%eax
    63e0:	c6 04 24 1e          	movb   $0x1e,(%esp)
    63e4:	6a 00                	push   $0x0
    63e6:	6a 00                	push   $0x0
    63e8:	e8 fc ff ff ff       	call   63e9 <ide_set_media_lock+0x3c>
			63e9: R_386_PC32	ide_queue_pc_tail
    63ed:	59                   	pop    %ecx
    63ee:	5b                   	pop    %ebx
    63ef:	8b 54 24 24          	mov    0x24(%esp),%edx
    63f3:	65 33 15 14 00 00 00 	xor    %gs:0x14,%edx
    63fa:	74 05                	je     6401 <ide_set_media_lock+0x54>
    63fc:	e8 fc ff ff ff       	call   63fd <ide_set_media_lock+0x50>
			63fd: R_386_PC32	__stack_chk_fail
    6401:	83 c4 28             	add    $0x28,%esp
    6404:	5b                   	pop    %ebx
    6405:	5e                   	pop    %esi
    6406:	5f                   	pop    %edi
    6407:	5d                   	pop    %ebp
    6408:	c3                   	ret    

00006409 <ide_do_start_stop>:
    6409:	57                   	push   %edi
    640a:	56                   	push   %esi
    640b:	89 ce                	mov    %ecx,%esi
    640d:	53                   	push   %ebx
    640e:	b9 09 00 00 00       	mov    $0x9,%ecx
    6413:	83 ec 28             	sub    $0x28,%esp
    6416:	89 c3                	mov    %eax,%ebx
    6418:	89 e7                	mov    %esp,%edi
    641a:	65 a1 14 00 00 00    	mov    %gs:0x14,%eax
    6420:	89 44 24 24          	mov    %eax,0x24(%esp)
    6424:	31 c0                	xor    %eax,%eax
    6426:	f3 ab                	rep stos %eax,%es:(%edi)
    6428:	80 7b 46 01          	cmpb   $0x1,0x46(%ebx)
    642c:	89 f0                	mov    %esi,%eax
    642e:	c6 04 24 1b          	movb   $0x1b,(%esp)
    6432:	88 44 24 04          	mov    %al,0x4(%esp)
    6436:	75 05                	jne    643d <ide_do_start_stop+0x34>
    6438:	83 4c 24 1c 04       	orl    $0x4,0x1c(%esp)
    643d:	89 e1                	mov    %esp,%ecx
    643f:	89 d8                	mov    %ebx,%eax
    6441:	6a 00                	push   $0x0
    6443:	6a 00                	push   $0x0
    6445:	e8 fc ff ff ff       	call   6446 <ide_do_start_stop+0x3d>
			6446: R_386_PC32	ide_queue_pc_tail
    644a:	5e                   	pop    %esi
    644b:	5f                   	pop    %edi
    644c:	8b 54 24 24          	mov    0x24(%esp),%edx
    6450:	65 33 15 14 00 00 00 	xor    %gs:0x14,%edx
    6457:	74 05                	je     645e <ide_do_start_stop+0x55>
    6459:	e8 fc ff ff ff       	call   645a <ide_do_start_stop+0x51>
			645a: R_386_PC32	__stack_chk_fail
    645e:	83 c4 28             	add    $0x28,%esp
    6461:	5b                   	pop    %ebx
    6462:	5e                   	pop    %esi
    6463:	5f                   	pop    %edi
    6464:	c3                   	ret    

00006465 <ide_do_test_unit_ready>:
    6465:	57                   	push   %edi
    6466:	b9 09 00 00 00       	mov    $0x9,%ecx
    646b:	56                   	push   %esi
    646c:	53                   	push   %ebx
    646d:	89 c3                	mov    %eax,%ebx
    646f:	83 ec 28             	sub    $0x28,%esp
    6472:	65 a1 14 00 00 00    	mov    %gs:0x14,%eax
    6478:	89 44 24 24          	mov    %eax,0x24(%esp)
    647c:	31 c0                	xor    %eax,%eax
    647e:	89 e6                	mov    %esp,%esi
    6480:	89 e7                	mov    %esp,%edi
    6482:	f3 ab                	rep stos %eax,%es:(%edi)
    6484:	c6 04 24 00          	movb   $0x0,(%esp)
    6488:	89 f1                	mov    %esi,%ecx
    648a:	89 d8                	mov    %ebx,%eax
    648c:	6a 00                	push   $0x0
    648e:	6a 00                	push   $0x0
    6490:	e8 fc ff ff ff       	call   6491 <ide_do_test_unit_ready+0x2c>
			6491: R_386_PC32	ide_queue_pc_tail
    6495:	5a                   	pop    %edx
    6496:	59                   	pop    %ecx
    6497:	8b 54 24 24          	mov    0x24(%esp),%edx
    649b:	65 33 15 14 00 00 00 	xor    %gs:0x14,%edx
    64a2:	74 05                	je     64a9 <ide_do_test_unit_ready+0x44>
    64a4:	e8 fc ff ff ff       	call   64a5 <ide_do_test_unit_ready+0x40>
			64a5: R_386_PC32	__stack_chk_fail
    64a9:	83 c4 28             	add    $0x28,%esp
    64ac:	5b                   	pop    %ebx
    64ad:	5e                   	pop    %esi
    64ae:	5f                   	pop    %edi
    64af:	c3                   	ret    

000064b0 <ide_pci_resume>:
    64b0:	57                   	push   %edi
    64b1:	56                   	push   %esi
    64b2:	53                   	push   %ebx
    64b3:	89 c3                	mov    %eax,%ebx
    64b5:	8d 40 5c             	lea    0x5c(%eax),%eax
    64b8:	e8 fc ff ff ff       	call   64b9 <ide_pci_resume+0x9>
			64b9: R_386_PC32	dev_get_drvdata
    64bd:	31 d2                	xor    %edx,%edx
    64bf:	89 c6                	mov    %eax,%esi
    64c1:	89 d8                	mov    %ebx,%eax
    64c3:	e8 fc ff ff ff       	call   64c4 <ide_pci_resume+0x14>
			64c4: R_386_PC32	pci_set_power_state
    64c8:	89 d8                	mov    %ebx,%eax
    64ca:	e8 fc ff ff ff       	call   64cb <ide_pci_resume+0x1b>
			64cb: R_386_PC32	pci_enable_device
    64cf:	85 c0                	test   %eax,%eax
    64d1:	89 c7                	mov    %eax,%edi
    64d3:	75 19                	jne    64ee <ide_pci_resume+0x3e>
    64d5:	89 d8                	mov    %ebx,%eax
    64d7:	e8 fc ff ff ff       	call   64d8 <ide_pci_resume+0x28>
			64d8: R_386_PC32	pci_restore_state
    64dc:	89 d8                	mov    %ebx,%eax
    64de:	e8 fc ff ff ff       	call   64df <ide_pci_resume+0x2f>
			64df: R_386_PC32	pci_set_master
    64e3:	8b 56 20             	mov    0x20(%esi),%edx
    64e6:	85 d2                	test   %edx,%edx
    64e8:	74 04                	je     64ee <ide_pci_resume+0x3e>
    64ea:	89 d8                	mov    %ebx,%eax
    64ec:	ff d2                	call   *%edx
    64ee:	89 f8                	mov    %edi,%eax
    64f0:	5b                   	pop    %ebx
    64f1:	5e                   	pop    %esi
    64f2:	5f                   	pop    %edi
    64f3:	c3                   	ret    

000064f4 <ide_pci_suspend>:
    64f4:	53                   	push   %ebx
    64f5:	89 c3                	mov    %eax,%ebx
    64f7:	83 ec 04             	sub    $0x4,%esp
    64fa:	89 14 24             	mov    %edx,(%esp)
    64fd:	e8 fc ff ff ff       	call   64fe <ide_pci_suspend+0xa>
			64fe: R_386_PC32	pci_save_state
    6502:	89 d8                	mov    %ebx,%eax
    6504:	e8 fc ff ff ff       	call   6505 <ide_pci_suspend+0x11>
			6505: R_386_PC32	pci_disable_device
    6509:	89 d8                	mov    %ebx,%eax
    650b:	8b 14 24             	mov    (%esp),%edx
    650e:	e8 fc ff ff ff       	call   650f <ide_pci_suspend+0x1b>
			650f: R_386_PC32	pci_choose_state
    6513:	89 c2                	mov    %eax,%edx
    6515:	89 d8                	mov    %ebx,%eax
    6517:	e8 fc ff ff ff       	call   6518 <ide_pci_suspend+0x24>
			6518: R_386_PC32	pci_set_power_state
    651c:	31 c0                	xor    %eax,%eax
    651e:	5a                   	pop    %edx
    651f:	5b                   	pop    %ebx
    6520:	c3                   	ret    

00006521 <ide_pci_remove>:
    6521:	57                   	push   %edi
    6522:	89 c7                	mov    %eax,%edi
    6524:	56                   	push   %esi
    6525:	31 f6                	xor    %esi,%esi
    6527:	53                   	push   %ebx
    6528:	8d 40 5c             	lea    0x5c(%eax),%eax
    652b:	e8 fc ff ff ff       	call   652c <ide_pci_remove+0xb>
			652c: R_386_PC32	dev_get_drvdata
    6530:	8b 50 1c             	mov    0x1c(%eax),%edx
    6533:	85 d2                	test   %edx,%edx
    6535:	8d 4a a4             	lea    -0x5c(%edx),%ecx
    6538:	8b 50 30             	mov    0x30(%eax),%edx
    653b:	0f 45 f1             	cmovne %ecx,%esi
    653e:	89 d1                	mov    %edx,%ecx
    6540:	83 e1 02             	and    $0x2,%ecx
    6543:	83 f9 01             	cmp    $0x1,%ecx
    6546:	19 db                	sbb    %ebx,%ebx
    6548:	83 e3 0c             	and    $0xc,%ebx
    654b:	83 c3 03             	add    $0x3,%ebx
    654e:	f6 c6 40             	test   $0x40,%dh
    6551:	75 0e                	jne    6561 <ide_pci_remove+0x40>
    6553:	89 d9                	mov    %ebx,%ecx
    6555:	83 cb 10             	or     $0x10,%ebx
    6558:	83 c9 04             	or     $0x4,%ecx
    655b:	80 e6 08             	and    $0x8,%dh
    655e:	0f 45 d9             	cmovne %ecx,%ebx
    6561:	e8 fc ff ff ff       	call   6562 <ide_pci_remove+0x41>
			6562: R_386_PC32	ide_host_remove
    6566:	85 f6                	test   %esi,%esi
    6568:	74 09                	je     6573 <ide_pci_remove+0x52>
    656a:	89 da                	mov    %ebx,%edx
    656c:	89 f0                	mov    %esi,%eax
    656e:	e8 fc ff ff ff       	call   656f <ide_pci_remove+0x4e>
			656f: R_386_PC32	pci_release_selected_regions
    6573:	89 da                	mov    %ebx,%edx
    6575:	89 f8                	mov    %edi,%eax
    6577:	e8 fc ff ff ff       	call   6578 <ide_pci_remove+0x57>
			6578: R_386_PC32	pci_release_selected_regions
    657c:	85 f6                	test   %esi,%esi
    657e:	74 07                	je     6587 <ide_pci_remove+0x66>
    6580:	89 f0                	mov    %esi,%eax
    6582:	e8 fc ff ff ff       	call   6583 <ide_pci_remove+0x62>
			6583: R_386_PC32	pci_disable_device
    6587:	89 f8                	mov    %edi,%eax
    6589:	5b                   	pop    %ebx
    658a:	5e                   	pop    %esi
    658b:	5f                   	pop    %edi
    658c:	e9 fc ff ff ff       	jmp    658d <ide_pci_remove+0x6c>
			658d: R_386_PC32	pci_disable_device

00006591 <ide_setup_pci_noise>:
    6591:	0f b6 48 2c          	movzbl 0x2c(%eax),%ecx
    6595:	51                   	push   %ecx
    6596:	0f b7 48 22          	movzwl 0x22(%eax),%ecx
    659a:	51                   	push   %ecx
    659b:	0f b7 48 20          	movzwl 0x20(%eax),%ecx
    659f:	51                   	push   %ecx
    65a0:	ff 70 64             	pushl  0x64(%eax)
    65a3:	ff 32                	pushl  (%edx)
    65a5:	68 06 16 00 00       	push   $0x1606
			65a6: R_386_32	.rodata.str1.1
    65aa:	e8 fc ff ff ff       	call   65ab <ide_setup_pci_noise+0x1a>
			65ab: R_386_PC32	printk
    65af:	83 c4 18             	add    $0x18,%esp
    65b2:	c3                   	ret    

000065b3 <ide_pci_check_simplex>:
    65b3:	57                   	push   %edi
    65b4:	56                   	push   %esi
    65b5:	89 d6                	mov    %edx,%esi
    65b7:	53                   	push   %ebx
    65b8:	89 c3                	mov    %eax,%ebx
    65ba:	8b 78 68             	mov    0x68(%eax),%edi
    65bd:	8b 42 34             	mov    0x34(%edx),%eax
    65c0:	a9 00 08 01 00       	test   $0x10800,%eax
    65c5:	75 62                	jne    6629 <ide_pci_check_simplex+0x76>
    65c7:	83 ef 5c             	sub    $0x5c,%edi
    65ca:	a9 00 00 00 10       	test   $0x10000000,%eax
    65cf:	74 26                	je     65f7 <ide_pci_check_simplex+0x44>
    65d1:	8b 93 dc 00 00 00    	mov    0xdc(%ebx),%edx
    65d7:	83 c2 02             	add    $0x2,%edx
    65da:	ec                   	in     (%dx),%al
    65db:	83 e0 60             	and    $0x60,%eax
    65de:	ee                   	out    %al,(%dx)
    65df:	ec                   	in     (%dx),%al
    65e0:	84 c0                	test   %al,%al
    65e2:	79 45                	jns    6629 <ide_pci_check_simplex+0x76>
    65e4:	ff 77 64             	pushl  0x64(%edi)
    65e7:	ff 36                	pushl  (%esi)
    65e9:	68 3b 16 00 00       	push   $0x163b
			65ea: R_386_32	.rodata.str1.1
    65ee:	e8 fc ff ff ff       	call   65ef <ide_pci_check_simplex+0x3c>
			65ef: R_386_PC32	printk
    65f3:	31 c0                	xor    %eax,%eax
    65f5:	eb 2d                	jmp    6624 <ide_pci_check_simplex+0x71>
    65f7:	8b 53 78             	mov    0x78(%ebx),%edx
    65fa:	89 d8                	mov    %ebx,%eax
    65fc:	ff 52 24             	call   *0x24(%edx)
    65ff:	84 c0                	test   %al,%al
    6601:	79 26                	jns    6629 <ide_pci_check_simplex+0x76>
    6603:	8b 03                	mov    (%ebx),%eax
    6605:	85 c0                	test   %eax,%eax
    6607:	74 20                	je     6629 <ide_pci_check_simplex+0x76>
    6609:	83 b8 dc 00 00 00 00 	cmpl   $0x0,0xdc(%eax)
    6610:	74 17                	je     6629 <ide_pci_check_simplex+0x76>
    6612:	ff 77 64             	pushl  0x64(%edi)
    6615:	ff 36                	pushl  (%esi)
    6617:	68 61 16 00 00       	push   $0x1661
			6618: R_386_32	.rodata.str1.1
    661c:	e8 fc ff ff ff       	call   661d <ide_pci_check_simplex+0x6a>
			661d: R_386_PC32	printk
    6621:	83 c8 ff             	or     $0xffffffff,%eax
    6624:	83 c4 0c             	add    $0xc,%esp
    6627:	eb 02                	jmp    662b <ide_pci_check_simplex+0x78>
    6629:	31 c0                	xor    %eax,%eax
    662b:	5b                   	pop    %ebx
    662c:	5e                   	pop    %esi
    662d:	5f                   	pop    %edi
    662e:	c3                   	ret    

0000662f <ide_pci_dma_base>:
    662f:	56                   	push   %esi
    6630:	53                   	push   %ebx
    6631:	8b 70 68             	mov    0x68(%eax),%esi
    6634:	f6 40 5e 01          	testb  $0x1,0x5e(%eax)
    6638:	74 08                	je     6642 <ide_pci_dma_base+0x13>
    663a:	8b 98 dc 00 00 00    	mov    0xdc(%eax),%ebx
    6640:	eb 63                	jmp    66a5 <ide_pci_dma_base+0x76>
    6642:	8b 08                	mov    (%eax),%ecx
    6644:	85 c9                	test   %ecx,%ecx
    6646:	74 17                	je     665f <ide_pci_dma_base+0x30>
    6648:	8b 99 dc 00 00 00    	mov    0xdc(%ecx),%ebx
    664e:	85 db                	test   %ebx,%ebx
    6650:	74 0d                	je     665f <ide_pci_dma_base+0x30>
    6652:	80 78 5a 01          	cmpb   $0x1,0x5a(%eax)
    6656:	19 d2                	sbb    %edx,%edx
    6658:	83 e2 08             	and    $0x8,%edx
    665b:	29 d3                	sub    %edx,%ebx
    665d:	eb 3c                	jmp    669b <ide_pci_dma_base+0x6c>
    665f:	8b 4a 34             	mov    0x34(%edx),%ecx
    6662:	81 e1 00 08 00 00    	and    $0x800,%ecx
    6668:	83 f9 01             	cmp    $0x1,%ecx
    666b:	19 c9                	sbb    %ecx,%ecx
    666d:	83 ee 5c             	sub    $0x5c,%esi
    6670:	83 e1 02             	and    $0x2,%ecx
    6673:	83 c1 02             	add    $0x2,%ecx
    6676:	0f b6 c9             	movzbl %cl,%ecx
    6679:	6b c9 1c             	imul   $0x1c,%ecx,%ecx
    667c:	8b 9c 0e 84 01 00 00 	mov    0x184(%esi,%ecx,1),%ebx
    6683:	85 db                	test   %ebx,%ebx
    6685:	75 14                	jne    669b <ide_pci_dma_base+0x6c>
    6687:	ff 76 64             	pushl  0x64(%esi)
    668a:	ff 32                	pushl  (%edx)
    668c:	68 89 16 00 00       	push   $0x1689
			668d: R_386_32	.rodata.str1.1
    6691:	e8 fc ff ff ff       	call   6692 <ide_pci_dma_base+0x63>
			6692: R_386_PC32	printk
    6696:	83 c4 0c             	add    $0xc,%esp
    6699:	eb 0a                	jmp    66a5 <ide_pci_dma_base+0x76>
    669b:	80 78 5a 00          	cmpb   $0x0,0x5a(%eax)
    669f:	8d 53 08             	lea    0x8(%ebx),%edx
    66a2:	0f 45 da             	cmovne %edx,%ebx
    66a5:	89 d8                	mov    %ebx,%eax
    66a7:	5b                   	pop    %ebx
    66a8:	5e                   	pop    %esi
    66a9:	c3                   	ret    

000066aa <ide_pci_set_master>:
    66aa:	57                   	push   %edi
    66ab:	89 d7                	mov    %edx,%edi
    66ad:	56                   	push   %esi
    66ae:	b9 04 00 00 00       	mov    $0x4,%ecx
    66b3:	53                   	push   %ebx
    66b4:	89 c3                	mov    %eax,%ebx
    66b6:	83 ec 04             	sub    $0x4,%esp
    66b9:	8b 50 1c             	mov    0x1c(%eax),%edx
    66bc:	8b 40 08             	mov    0x8(%eax),%eax
    66bf:	8d 74 24 02          	lea    0x2(%esp),%esi
    66c3:	56                   	push   %esi
    66c4:	e8 fc ff ff ff       	call   66c5 <ide_pci_set_master+0x1b>
			66c5: R_386_PC32	pci_bus_read_config_word
    66c9:	58                   	pop    %eax
    66ca:	f6 44 24 02 04       	testb  $0x4,0x2(%esp)
    66cf:	75 3c                	jne    670d <ide_pci_set_master+0x63>
    66d1:	89 d8                	mov    %ebx,%eax
    66d3:	e8 fc ff ff ff       	call   66d4 <ide_pci_set_master+0x2a>
			66d4: R_386_PC32	pci_set_master
    66d8:	8b 53 1c             	mov    0x1c(%ebx),%edx
    66db:	b9 04 00 00 00       	mov    $0x4,%ecx
    66e0:	8b 43 08             	mov    0x8(%ebx),%eax
    66e3:	56                   	push   %esi
    66e4:	e8 fc ff ff ff       	call   66e5 <ide_pci_set_master+0x3b>
			66e5: R_386_PC32	pci_bus_read_config_word
    66e9:	5e                   	pop    %esi
    66ea:	85 c0                	test   %eax,%eax
    66ec:	75 07                	jne    66f5 <ide_pci_set_master+0x4b>
    66ee:	f6 44 24 02 04       	testb  $0x4,0x2(%esp)
    66f3:	75 18                	jne    670d <ide_pci_set_master+0x63>
    66f5:	ff 73 64             	pushl  0x64(%ebx)
    66f8:	57                   	push   %edi
    66f9:	68 a8 16 00 00       	push   $0x16a8
			66fa: R_386_32	.rodata.str1.1
    66fe:	e8 fc ff ff ff       	call   66ff <ide_pci_set_master+0x55>
			66ff: R_386_PC32	printk
    6703:	b8 fb ff ff ff       	mov    $0xfffffffb,%eax
    6708:	83 c4 0c             	add    $0xc,%esp
    670b:	eb 02                	jmp    670f <ide_pci_set_master+0x65>
    670d:	31 c0                	xor    %eax,%eax
    670f:	59                   	pop    %ecx
    6710:	5b                   	pop    %ebx
    6711:	5e                   	pop    %esi
    6712:	5f                   	pop    %edi
    6713:	c3                   	ret    

00006714 <ide_pci_setup_ports>:
    6714:	55                   	push   %ebp
    6715:	89 d5                	mov    %edx,%ebp
    6717:	57                   	push   %edi
    6718:	56                   	push   %esi
    6719:	89 c6                	mov    %eax,%esi
    671b:	53                   	push   %ebx
    671c:	89 f3                	mov    %esi,%ebx
    671e:	83 ec 1c             	sub    $0x1c,%esp
    6721:	8b 42 34             	mov    0x34(%edx),%eax
    6724:	8d 56 5c             	lea    0x5c(%esi),%edx
    6727:	89 54 24 14          	mov    %edx,0x14(%esp)
    672b:	89 6c 24 0c          	mov    %ebp,0xc(%esp)
    672f:	83 e0 02             	and    $0x2,%eax
    6732:	83 f8 01             	cmp    $0x1,%eax
    6735:	19 c0                	sbb    %eax,%eax
    6737:	f7 d0                	not    %eax
    6739:	83 c0 02             	add    $0x2,%eax
    673c:	89 44 24 10          	mov    %eax,0x10(%esp)
    6740:	89 4c 24 04          	mov    %ecx,0x4(%esp)
    6744:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)
    674b:	8b 7c 24 0c          	mov    0xc(%esp),%edi
    674f:	8a 4f 28             	mov    0x28(%edi),%cl
    6752:	84 c9                	test   %cl,%cl
    6754:	74 40                	je     6796 <ide_pci_setup_ports+0x82>
    6756:	8b 56 1c             	mov    0x1c(%esi),%edx
    6759:	8d 7c 24 1b          	lea    0x1b(%esp),%edi
    675d:	0f b6 c9             	movzbl %cl,%ecx
    6760:	8b 46 08             	mov    0x8(%esi),%eax
    6763:	57                   	push   %edi
    6764:	e8 fc ff ff ff       	call   6765 <ide_pci_setup_ports+0x51>
			6765: R_386_PC32	pci_bus_read_config_byte
    6769:	5a                   	pop    %edx
    676a:	85 c0                	test   %eax,%eax
    676c:	75 10                	jne    677e <ide_pci_setup_ports+0x6a>
    676e:	8b 54 24 0c          	mov    0xc(%esp),%edx
    6772:	8a 42 29             	mov    0x29(%edx),%al
    6775:	22 44 24 1b          	and    0x1b(%esp),%al
    6779:	3a 42 2a             	cmp    0x2a(%edx),%al
    677c:	74 18                	je     6796 <ide_pci_setup_ports+0x82>
    677e:	ff 76 64             	pushl  0x64(%esi)
    6781:	ff 75 00             	pushl  0x0(%ebp)
    6784:	68 c9 16 00 00       	push   $0x16c9
			6785: R_386_32	.rodata.str1.1
    6789:	e8 fc ff ff ff       	call   678a <ide_pci_setup_ports+0x76>
			678a: R_386_PC32	printk
    678e:	83 c4 0c             	add    $0xc,%esp
    6791:	e9 0a 01 00 00       	jmp    68a0 <ide_pci_setup_ports+0x18c>
    6796:	f6 45 34 01          	testb  $0x1,0x34(%ebp)
    679a:	0f 85 80 00 00 00    	jne    6820 <ide_pci_setup_ports+0x10c>
    67a0:	8b 93 90 01 00 00    	mov    0x190(%ebx),%edx
    67a6:	85 d2                	test   %edx,%edx
    67a8:	74 23                	je     67cd <ide_pci_setup_ports+0xb9>
    67aa:	8b 8b 84 01 00 00    	mov    0x184(%ebx),%ecx
    67b0:	85 c9                	test   %ecx,%ecx
    67b2:	75 09                	jne    67bd <ide_pci_setup_ports+0xa9>
    67b4:	83 bb 88 01 00 00 00 	cmpl   $0x0,0x188(%ebx)
    67bb:	74 10                	je     67cd <ide_pci_setup_ports+0xb9>
    67bd:	8b 83 88 01 00 00    	mov    0x188(%ebx),%eax
    67c3:	29 c8                	sub    %ecx,%eax
    67c5:	40                   	inc    %eax
    67c6:	74 05                	je     67cd <ide_pci_setup_ports+0xb9>
    67c8:	80 e6 01             	and    $0x1,%dh
    67cb:	74 43                	je     6810 <ide_pci_setup_ports+0xfc>
    67cd:	8b 93 ac 01 00 00    	mov    0x1ac(%ebx),%edx
    67d3:	85 d2                	test   %edx,%edx
    67d5:	74 23                	je     67fa <ide_pci_setup_ports+0xe6>
    67d7:	8b 8b a0 01 00 00    	mov    0x1a0(%ebx),%ecx
    67dd:	85 c9                	test   %ecx,%ecx
    67df:	75 09                	jne    67ea <ide_pci_setup_ports+0xd6>
    67e1:	83 bb a4 01 00 00 00 	cmpl   $0x0,0x1a4(%ebx)
    67e8:	74 10                	je     67fa <ide_pci_setup_ports+0xe6>
    67ea:	8b 83 a4 01 00 00    	mov    0x1a4(%ebx),%eax
    67f0:	29 c8                	sub    %ecx,%eax
    67f2:	40                   	inc    %eax
    67f3:	74 05                	je     67fa <ide_pci_setup_ports+0xe6>
    67f5:	80 e6 01             	and    $0x1,%dh
    67f8:	74 16                	je     6810 <ide_pci_setup_ports+0xfc>
    67fa:	8b 8b a0 01 00 00    	mov    0x1a0(%ebx),%ecx
    6800:	85 c9                	test   %ecx,%ecx
    6802:	89 4c 24 08          	mov    %ecx,0x8(%esp)
    6806:	8b 93 84 01 00 00    	mov    0x184(%ebx),%edx
    680c:	75 3c                	jne    684a <ide_pci_setup_ports+0x136>
    680e:	eb 3e                	jmp    684e <ide_pci_setup_ports+0x13a>
    6810:	ff 34 24             	pushl  (%esp)
    6813:	ff 76 64             	pushl  0x64(%esi)
    6816:	ff 75 00             	pushl  0x0(%ebp)
    6819:	68 e6 16 00 00       	push   $0x16e6
			681a: R_386_32	.rodata.str1.1
    681e:	eb 3c                	jmp    685c <ide_pci_setup_ports+0x148>
    6820:	83 3c 24 01          	cmpl   $0x1,(%esp)
    6824:	19 d2                	sbb    %edx,%edx
    6826:	81 e2 80 00 00 00    	and    $0x80,%edx
    682c:	81 c2 70 01 00 00    	add    $0x170,%edx
    6832:	83 3c 24 01          	cmpl   $0x1,(%esp)
    6836:	19 ff                	sbb    %edi,%edi
    6838:	81 e7 80 00 00 00    	and    $0x80,%edi
    683e:	81 c7 74 03 00 00    	add    $0x374,%edi
    6844:	89 7c 24 08          	mov    %edi,0x8(%esp)
    6848:	eb 1c                	jmp    6866 <ide_pci_setup_ports+0x152>
    684a:	85 d2                	test   %edx,%edx
    684c:	75 18                	jne    6866 <ide_pci_setup_ports+0x152>
    684e:	ff 34 24             	pushl  (%esp)
    6851:	ff 76 64             	pushl  0x64(%esi)
    6854:	ff 75 00             	pushl  0x0(%ebp)
    6857:	68 26 17 00 00       	push   $0x1726
			6858: R_386_32	.rodata.str1.1
    685c:	e8 fc ff ff ff       	call   685d <ide_pci_setup_ports+0x149>
			685d: R_386_PC32	printk
    6861:	83 c4 10             	add    $0x10,%esp
    6864:	eb 3a                	jmp    68a0 <ide_pci_setup_ports+0x18c>
    6866:	8b 7c 24 04          	mov    0x4(%esp),%edi
    686a:	b9 0e 00 00 00       	mov    $0xe,%ecx
    686f:	31 c0                	xor    %eax,%eax
    6871:	f3 ab                	rep stos %eax,%es:(%edi)
    6873:	8b 7c 24 14          	mov    0x14(%esp),%edi
    6877:	8b 4c 24 04          	mov    0x4(%esp),%ecx
    687b:	89 79 2c             	mov    %edi,0x2c(%ecx)
    687e:	8b 4c 24 04          	mov    0x4(%esp),%ecx
    6882:	89 14 81             	mov    %edx,(%ecx,%eax,4)
    6885:	40                   	inc    %eax
    6886:	42                   	inc    %edx
    6887:	83 f8 08             	cmp    $0x8,%eax
    688a:	75 f2                	jne    687e <ide_pci_setup_ports+0x16a>
    688c:	8b 44 24 08          	mov    0x8(%esp),%eax
    6890:	83 c8 02             	or     $0x2,%eax
    6893:	89 41 20             	mov    %eax,0x20(%ecx)
    6896:	8b 3c 24             	mov    (%esp),%edi
    6899:	8b 44 24 30          	mov    0x30(%esp),%eax
    689d:	89 0c b8             	mov    %ecx,(%eax,%edi,4)
    68a0:	ff 04 24             	incl   (%esp)
    68a3:	83 c3 38             	add    $0x38,%ebx
    68a6:	8b 54 24 10          	mov    0x10(%esp),%edx
    68aa:	83 44 24 0c 03       	addl   $0x3,0xc(%esp)
    68af:	83 44 24 04 38       	addl   $0x38,0x4(%esp)
    68b4:	39 14 24             	cmp    %edx,(%esp)
    68b7:	0f 8c 8e fe ff ff    	jl     674b <ide_pci_setup_ports+0x37>
    68bd:	83 c4 1c             	add    $0x1c,%esp
    68c0:	5b                   	pop    %ebx
    68c1:	5e                   	pop    %esi
    68c2:	5f                   	pop    %edi
    68c3:	5d                   	pop    %ebp
    68c4:	c3                   	ret    

000068c5 <ide_pci_init_two>:
    68c5:	55                   	push   %ebp
    68c6:	89 d5                	mov    %edx,%ebp
    68c8:	57                   	push   %edi
    68c9:	56                   	push   %esi
    68ca:	89 ce                	mov    %ecx,%esi
    68cc:	53                   	push   %ebx
    68cd:	b9 04 00 00 00       	mov    $0x4,%ecx
    68d2:	81 ec 18 01 00 00    	sub    $0x118,%esp
    68d8:	83 fa 01             	cmp    $0x1,%edx
    68db:	89 44 24 14          	mov    %eax,0x14(%esp)
    68df:	8d bc 24 f8 00 00 00 	lea    0xf8(%esp),%edi
    68e6:	89 84 24 08 01 00 00 	mov    %eax,0x108(%esp)
    68ed:	19 c0                	sbb    %eax,%eax
    68ef:	83 e0 fe             	and    $0xfffffffe,%eax
    68f2:	83 c0 04             	add    $0x4,%eax
    68f5:	89 04 24             	mov    %eax,(%esp)
    68f8:	31 c0                	xor    %eax,%eax
    68fa:	f3 ab                	rep stos %eax,%es:(%edi)
    68fc:	8b 0c 24             	mov    (%esp),%ecx
    68ff:	8d 44 24 18          	lea    0x18(%esp),%eax
    6903:	89 94 24 0c 01 00 00 	mov    %edx,0x10c(%esp)
    690a:	89 44 24 0c          	mov    %eax,0xc(%esp)
    690e:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)
    6915:	00 
    6916:	d1 f9                	sar    %ecx
    6918:	89 4c 24 10          	mov    %ecx,0x10(%esp)
    691c:	8d 8c 24 f8 00 00 00 	lea    0xf8(%esp),%ecx
    6923:	89 4c 24 08          	mov    %ecx,0x8(%esp)
    6927:	8b 44 24 04          	mov    0x4(%esp),%eax
    692b:	85 c0                	test   %eax,%eax
    692d:	8b 9c 84 08 01 00 00 	mov    0x108(%esp,%eax,4),%ebx
    6934:	75 21                	jne    6957 <ide_pci_init_two+0x92>
    6936:	0f b6 43 2c          	movzbl 0x2c(%ebx),%eax
    693a:	50                   	push   %eax
    693b:	0f b7 43 22          	movzwl 0x22(%ebx),%eax
    693f:	50                   	push   %eax
    6940:	0f b7 43 20          	movzwl 0x20(%ebx),%eax
    6944:	50                   	push   %eax
    6945:	ff 73 64             	pushl  0x64(%ebx)
    6948:	ff 36                	pushl  (%esi)
    694a:	68 06 16 00 00       	push   $0x1606
			694b: R_386_32	.rodata.str1.1
    694f:	e8 fc ff ff ff       	call   6950 <ide_pci_init_two+0x8b>
			6950: R_386_PC32	printk
    6954:	83 c4 18             	add    $0x18,%esp
    6957:	89 d8                	mov    %ebx,%eax
    6959:	e8 fc ff ff ff       	call   695a <ide_pci_init_two+0x95>
			695a: R_386_PC32	pci_enable_device
    695e:	85 c0                	test   %eax,%eax
    6960:	74 2b                	je     698d <ide_pci_init_two+0xc8>
    6962:	89 d8                	mov    %ebx,%eax
    6964:	e8 fc ff ff ff       	call   6965 <ide_pci_init_two+0xa0>
			6965: R_386_PC32	pci_enable_device_io
    6969:	85 c0                	test   %eax,%eax
    696b:	79 0e                	jns    697b <ide_pci_init_two+0xb6>
    696d:	ff 73 64             	pushl  0x64(%ebx)
    6970:	89 c7                	mov    %eax,%edi
    6972:	ff 36                	pushl  (%esi)
    6974:	68 54 17 00 00       	push   $0x1754
			6975: R_386_32	.rodata.str1.1
    6979:	eb 2e                	jmp    69a9 <ide_pci_init_two+0xe4>
    697b:	ff 73 64             	pushl  0x64(%ebx)
    697e:	ff 36                	pushl  (%esi)
    6980:	68 76 17 00 00       	push   $0x1776
			6981: R_386_32	.rodata.str1.1
    6985:	e8 fc ff ff ff       	call   6986 <ide_pci_init_two+0xc1>
			6986: R_386_PC32	printk
    698a:	83 c4 0c             	add    $0xc,%esp
    698d:	83 ca ff             	or     $0xffffffff,%edx
    6990:	31 c9                	xor    %ecx,%ecx
    6992:	89 d8                	mov    %ebx,%eax
    6994:	e8 fc ff ff ff       	call   6995 <ide_pci_init_two+0xd0>
			6995: R_386_PC32	pci_set_dma_mask
    6999:	85 c0                	test   %eax,%eax
    699b:	79 16                	jns    69b3 <ide_pci_init_two+0xee>
    699d:	ff 73 64             	pushl  0x64(%ebx)
    69a0:	89 c7                	mov    %eax,%edi
    69a2:	ff 36                	pushl  (%esi)
    69a4:	68 9a 17 00 00       	push   $0x179a
			69a5: R_386_32	.rodata.str1.1
    69a9:	e8 fc ff ff ff       	call   69aa <ide_pci_init_two+0xe5>
			69aa: R_386_PC32	printk
    69ae:	e9 cd 01 00 00       	jmp    6b80 <ide_pci_init_two+0x2bb>
    69b3:	8b 46 34             	mov    0x34(%esi),%eax
    69b6:	89 c2                	mov    %eax,%edx
    69b8:	83 e2 02             	and    $0x2,%edx
    69bb:	83 fa 01             	cmp    $0x1,%edx
    69be:	19 d2                	sbb    %edx,%edx
    69c0:	83 e2 0c             	and    $0xc,%edx
    69c3:	83 c2 03             	add    $0x3,%edx
    69c6:	f6 c4 40             	test   $0x40,%ah
    69c9:	75 0e                	jne    69d9 <ide_pci_init_two+0x114>
    69cb:	89 d1                	mov    %edx,%ecx
    69cd:	83 ca 10             	or     $0x10,%edx
    69d0:	83 c9 04             	or     $0x4,%ecx
    69d3:	f6 c4 08             	test   $0x8,%ah
    69d6:	0f 45 d1             	cmovne %ecx,%edx
    69d9:	8b 0e                	mov    (%esi),%ecx
    69db:	89 d8                	mov    %ebx,%eax
    69dd:	e8 fc ff ff ff       	call   69de <ide_pci_init_two+0x119>
			69de: R_386_PC32	pci_request_selected_regions
    69e2:	85 c0                	test   %eax,%eax
    69e4:	0f 89 38 03 00 00    	jns    6d22 <ide_pci_init_two+0x45d>
    69ea:	ff 73 64             	pushl  0x64(%ebx)
    69ed:	89 c7                	mov    %eax,%edi
    69ef:	ff 36                	pushl  (%esi)
    69f1:	68 b8 17 00 00       	push   $0x17b8
			69f2: R_386_32	.rodata.str1.1
    69f6:	eb b1                	jmp    69a9 <ide_pci_init_two+0xe4>
    69f8:	f6 84 24 14 01 00 00 	testb  $0x1,0x114(%esp)
    69ff:	01 
    6a00:	0f 85 60 03 00 00    	jne    6d66 <ide_pci_init_two+0x4a1>
    6a06:	66 c7 84 24 12 01 00 	movw   $0x0,0x112(%esp)
    6a0d:	00 00 00 
    6a10:	8d 8c 24 17 01 00 00 	lea    0x117(%esp),%ecx
    6a17:	8b 3e                	mov    (%esi),%edi
    6a19:	c6 84 24 17 01 00 00 	movb   $0x0,0x117(%esp)
    6a20:	00 
    6a21:	8b 53 1c             	mov    0x1c(%ebx),%edx
    6a24:	8b 43 08             	mov    0x8(%ebx),%eax
    6a27:	51                   	push   %ecx
    6a28:	b9 09 00 00 00       	mov    $0x9,%ecx
    6a2d:	e8 fc ff ff ff       	call   6a2e <ide_pci_init_two+0x169>
			6a2e: R_386_PC32	pci_bus_read_config_byte
    6a32:	5a                   	pop    %edx
    6a33:	85 c0                	test   %eax,%eax
    6a35:	75 14                	jne    6a4b <ide_pci_init_two+0x186>
    6a37:	0f b6 84 24 17 01 00 	movzbl 0x117(%esp),%eax
    6a3e:	00 
    6a3f:	83 e0 05             	and    $0x5,%eax
    6a42:	83 f8 05             	cmp    $0x5,%eax
    6a45:	0f 84 a6 00 00 00    	je     6af1 <ide_pci_init_two+0x22c>
    6a4b:	0f b6 84 24 17 01 00 	movzbl 0x117(%esp),%eax
    6a52:	00 
    6a53:	83 e0 0a             	and    $0xa,%eax
    6a56:	83 f8 0a             	cmp    $0xa,%eax
    6a59:	74 16                	je     6a71 <ide_pci_init_two+0x1ac>
    6a5b:	ff 73 64             	pushl  0x64(%ebx)
    6a5e:	57                   	push   %edi
    6a5f:	68 ff 17 00 00       	push   $0x17ff
			6a60: R_386_32	.rodata.str1.1
    6a64:	e8 fc ff ff ff       	call   6a65 <ide_pci_init_two+0x1a0>
			6a65: R_386_PC32	printk
    6a69:	83 c4 0c             	add    $0xc,%esp
    6a6c:	e9 a4 00 00 00       	jmp    6b15 <ide_pci_init_two+0x250>
    6a71:	ff 73 64             	pushl  0x64(%ebx)
    6a74:	57                   	push   %edi
    6a75:	68 35 18 00 00       	push   $0x1835
			6a76: R_386_32	.rodata.str1.1
    6a7a:	e8 fc ff ff ff       	call   6a7b <ide_pci_init_two+0x1b6>
			6a7b: R_386_PC32	printk
    6a7f:	8b 53 1c             	mov    0x1c(%ebx),%edx
    6a82:	8b 43 08             	mov    0x8(%ebx),%eax
    6a85:	8a 8c 24 23 01 00 00 	mov    0x123(%esp),%cl
    6a8c:	83 c9 05             	or     $0x5,%ecx
    6a8f:	0f b6 c9             	movzbl %cl,%ecx
    6a92:	51                   	push   %ecx
    6a93:	b9 09 00 00 00       	mov    $0x9,%ecx
    6a98:	e8 fc ff ff ff       	call   6a99 <ide_pci_init_two+0x1d4>
			6a99: R_386_PC32	pci_bus_write_config_byte
    6a9d:	8b 53 1c             	mov    0x1c(%ebx),%edx
    6aa0:	8b 43 08             	mov    0x8(%ebx),%eax
    6aa3:	8d 8c 24 27 01 00 00 	lea    0x127(%esp),%ecx
    6aaa:	51                   	push   %ecx
    6aab:	b9 09 00 00 00       	mov    $0x9,%ecx
    6ab0:	e8 fc ff ff ff       	call   6ab1 <ide_pci_init_two+0x1ec>
			6ab1: R_386_PC32	pci_bus_read_config_byte
    6ab5:	83 c4 14             	add    $0x14,%esp
    6ab8:	85 c0                	test   %eax,%eax
    6aba:	75 10                	jne    6acc <ide_pci_init_two+0x207>
    6abc:	0f b6 84 24 17 01 00 	movzbl 0x117(%esp),%eax
    6ac3:	00 
    6ac4:	83 e0 05             	and    $0x5,%eax
    6ac7:	83 f8 05             	cmp    $0x5,%eax
    6aca:	74 25                	je     6af1 <ide_pci_init_two+0x22c>
    6acc:	8a 84 24 17 01 00 00 	mov    0x117(%esp),%al
    6ad3:	0f b6 d0             	movzbl %al,%edx
    6ad6:	83 c8 05             	or     $0x5,%eax
    6ad9:	52                   	push   %edx
    6ada:	0f b6 c0             	movzbl %al,%eax
    6add:	50                   	push   %eax
    6ade:	ff 73 64             	pushl  0x64(%ebx)
    6ae1:	57                   	push   %edi
    6ae2:	68 68 18 00 00       	push   $0x1868
			6ae3: R_386_32	.rodata.str1.1
    6ae7:	e8 fc ff ff ff       	call   6ae8 <ide_pci_init_two+0x223>
			6ae8: R_386_PC32	printk
    6aec:	83 c4 14             	add    $0x14,%esp
    6aef:	eb 24                	jmp    6b15 <ide_pci_init_two+0x250>
    6af1:	66 8b 8c 24 12 01 00 	mov    0x112(%esp),%cx
    6af8:	00 
    6af9:	8b 53 1c             	mov    0x1c(%ebx),%edx
    6afc:	8b 43 08             	mov    0x8(%ebx),%eax
    6aff:	83 c9 01             	or     $0x1,%ecx
    6b02:	0f b7 c9             	movzwl %cx,%ecx
    6b05:	51                   	push   %ecx
    6b06:	b9 04 00 00 00       	mov    $0x4,%ecx
    6b0b:	e8 fc ff ff ff       	call   6b0c <ide_pci_init_two+0x247>
			6b0c: R_386_PC32	pci_bus_write_config_word
    6b10:	59                   	pop    %ecx
    6b11:	85 c0                	test   %eax,%eax
    6b13:	74 16                	je     6b2b <ide_pci_init_two+0x266>
    6b15:	ff 73 64             	pushl  0x64(%ebx)
    6b18:	bf ed ff ff ff       	mov    $0xffffffed,%edi
    6b1d:	ff 36                	pushl  (%esi)
    6b1f:	68 a7 18 00 00       	push   $0x18a7
			6b20: R_386_32	.rodata.str1.1
    6b24:	e8 fc ff ff ff       	call   6b25 <ide_pci_init_two+0x260>
			6b25: R_386_PC32	printk
    6b29:	eb 55                	jmp    6b80 <ide_pci_init_two+0x2bb>
    6b2b:	8b 53 1c             	mov    0x1c(%ebx),%edx
    6b2e:	8d 8c 24 12 01 00 00 	lea    0x112(%esp),%ecx
    6b35:	8b 43 08             	mov    0x8(%ebx),%eax
    6b38:	51                   	push   %ecx
    6b39:	b9 04 00 00 00       	mov    $0x4,%ecx
    6b3e:	e8 fc ff ff ff       	call   6b3f <ide_pci_init_two+0x27a>
			6b3f: R_386_PC32	pci_bus_read_config_word
    6b43:	5a                   	pop    %edx
    6b44:	85 c0                	test   %eax,%eax
    6b46:	74 16                	je     6b5e <ide_pci_init_two+0x299>
    6b48:	ff 73 64             	pushl  0x64(%ebx)
    6b4b:	bf fb ff ff ff       	mov    $0xfffffffb,%edi
    6b50:	ff 36                	pushl  (%esi)
    6b52:	68 db 17 00 00       	push   $0x17db
			6b53: R_386_32	.rodata.str1.1
    6b57:	e8 fc ff ff ff       	call   6b58 <ide_pci_init_two+0x293>
			6b58: R_386_PC32	printk
    6b5c:	eb 22                	jmp    6b80 <ide_pci_init_two+0x2bb>
    6b5e:	f6 84 24 12 01 00 00 	testb  $0x1,0x112(%esp)
    6b65:	01 
    6b66:	0f 85 e8 01 00 00    	jne    6d54 <ide_pci_init_two+0x48f>
    6b6c:	ff 73 64             	pushl  0x64(%ebx)
    6b6f:	bf fa ff ff ff       	mov    $0xfffffffa,%edi
    6b74:	ff 36                	pushl  (%esi)
    6b76:	68 c9 18 00 00       	push   $0x18c9
			6b77: R_386_32	.rodata.str1.1
    6b7b:	e8 fc ff ff ff       	call   6b7c <ide_pci_init_two+0x2b7>
			6b7c: R_386_PC32	printk
    6b80:	83 c4 0c             	add    $0xc,%esp
    6b83:	e9 69 01 00 00       	jmp    6cf1 <ide_pci_init_two+0x42c>
    6b88:	8b 0c 24             	mov    (%esp),%ecx
    6b8b:	8d 94 24 f8 00 00 00 	lea    0xf8(%esp),%edx
    6b92:	89 f0                	mov    %esi,%eax
    6b94:	bf f4 ff ff ff       	mov    $0xfffffff4,%edi
    6b99:	e8 fc ff ff ff       	call   6b9a <ide_pci_init_two+0x2d5>
			6b9a: R_386_PC32	ide_host_alloc
    6b9e:	85 c0                	test   %eax,%eax
    6ba0:	89 c3                	mov    %eax,%ebx
    6ba2:	0f 84 49 01 00 00    	je     6cf1 <ide_pci_init_two+0x42c>
    6ba8:	8b 44 24 14          	mov    0x14(%esp),%eax
    6bac:	83 c0 5c             	add    $0x5c,%eax
    6baf:	85 ed                	test   %ebp,%ebp
    6bb1:	89 43 18             	mov    %eax,0x18(%ebx)
    6bb4:	74 06                	je     6bbc <ide_pci_init_two+0x2f7>
    6bb6:	8d 55 5c             	lea    0x5c(%ebp),%edx
    6bb9:	89 53 1c             	mov    %edx,0x1c(%ebx)
    6bbc:	8b 94 24 2c 01 00 00 	mov    0x12c(%esp),%edx
    6bc3:	c7 43 34 80 00 00 00 	movl   $0x80,0x34(%ebx)
    6bca:	89 53 38             	mov    %edx,0x38(%ebx)
    6bcd:	89 da                	mov    %ebx,%edx
    6bcf:	e8 fc ff ff ff       	call   6bd0 <ide_pci_init_two+0x30b>
			6bd0: R_386_PC32	dev_set_drvdata
    6bd4:	85 ed                	test   %ebp,%ebp
    6bd6:	74 0a                	je     6be2 <ide_pci_init_two+0x31d>
    6bd8:	8d 45 5c             	lea    0x5c(%ebp),%eax
    6bdb:	89 da                	mov    %ebx,%edx
    6bdd:	e8 fc ff ff ff       	call   6bde <ide_pci_init_two+0x319>
			6bde: R_386_PC32	dev_set_drvdata
    6be2:	8d 44 24 40          	lea    0x40(%esp),%eax
    6be6:	89 04 24             	mov    %eax,(%esp)
    6be9:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)
    6bf0:	00 
    6bf1:	89 5c 24 08          	mov    %ebx,0x8(%esp)
    6bf5:	8b 4c 24 04          	mov    0x4(%esp),%ecx
    6bf9:	8b 56 04             	mov    0x4(%esi),%edx
    6bfc:	8b ac 8c 08 01 00 00 	mov    0x108(%esp,%ecx,4),%ebp
    6c03:	85 d2                	test   %edx,%edx
    6c05:	8b 9d 80 01 00 00    	mov    0x180(%ebp),%ebx
    6c0b:	74 0e                	je     6c1b <ide_pci_init_two+0x356>
    6c0d:	89 e8                	mov    %ebp,%eax
    6c0f:	ff d2                	call   *%edx
    6c11:	85 c0                	test   %eax,%eax
    6c13:	89 c7                	mov    %eax,%edi
    6c15:	0f 88 d6 00 00 00    	js     6cf1 <ide_pci_init_two+0x42c>
    6c1b:	8b 55 28             	mov    0x28(%ebp),%edx
    6c1e:	83 7c 24 04 00       	cmpl   $0x0,0x4(%esp)
    6c23:	89 d1                	mov    %edx,%ecx
    6c25:	0f 94 c0             	sete   %al
    6c28:	c1 e9 08             	shr    $0x8,%ecx
    6c2b:	81 f9 01 01 00 00    	cmp    $0x101,%ecx
    6c31:	0f 85 c7 00 00 00    	jne    6cfe <ide_pci_init_two+0x439>
    6c37:	83 e2 05             	and    $0x5,%edx
    6c3a:	83 fa 05             	cmp    $0x5,%edx
    6c3d:	0f 84 bb 00 00 00    	je     6cfe <ide_pci_init_two+0x439>
    6c43:	84 c0                	test   %al,%al
    6c45:	0f 84 c6 00 00 00    	je     6d11 <ide_pci_init_two+0x44c>
    6c4b:	ff 75 64             	pushl  0x64(%ebp)
    6c4e:	ff 36                	pushl  (%esi)
    6c50:	68 f4 18 00 00       	push   $0x18f4
			6c51: R_386_32	.rodata.str1.1
    6c55:	e8 fc ff ff ff       	call   6c56 <ide_pci_init_two+0x391>
			6c56: R_386_PC32	printk
    6c5a:	83 c4 0c             	add    $0xc,%esp
    6c5d:	e9 af 00 00 00       	jmp    6d11 <ide_pci_init_two+0x44c>
    6c62:	6a 00                	push   $0x0
    6c64:	ff 75 64             	pushl  0x64(%ebp)
    6c67:	ff 36                	pushl  (%esi)
    6c69:	68 2c 19 00 00       	push   $0x192c
			6c6a: R_386_32	.rodata.str1.1
    6c6e:	e8 fc ff ff ff       	call   6c6f <ide_pci_init_two+0x3aa>
			6c6f: R_386_PC32	printk
    6c73:	83 c4 10             	add    $0x10,%esp
    6c76:	e9 96 00 00 00       	jmp    6d11 <ide_pci_init_two+0x44c>
    6c7b:	53                   	push   %ebx
    6c7c:	ff 75 64             	pushl  0x64(%ebp)
    6c7f:	ff 36                	pushl  (%esi)
    6c81:	68 56 19 00 00       	push   $0x1956
			6c82: R_386_32	.rodata.str1.1
    6c86:	e8 fc ff ff ff       	call   6c87 <ide_pci_init_two+0x3c2>
			6c87: R_386_PC32	printk
    6c8b:	83 c4 10             	add    $0x10,%esp
    6c8e:	85 db                	test   %ebx,%ebx
    6c90:	78 5f                	js     6cf1 <ide_pci_init_two+0x42c>
    6c92:	8b 45 28             	mov    0x28(%ebp),%eax
    6c95:	89 c2                	mov    %eax,%edx
    6c97:	c1 ea 08             	shr    $0x8,%edx
    6c9a:	81 fa 01 01 00 00    	cmp    $0x101,%edx
    6ca0:	75 76                	jne    6d18 <ide_pci_init_two+0x453>
    6ca2:	83 e0 05             	and    $0x5,%eax
    6ca5:	83 f8 05             	cmp    $0x5,%eax
    6ca8:	74 6e                	je     6d18 <ide_pci_init_two+0x453>
    6caa:	8b 04 24             	mov    (%esp),%eax
    6cad:	c7 00 0e 00 00 00    	movl   $0xe,(%eax)
    6cb3:	c7 40 38 0f 00 00 00 	movl   $0xf,0x38(%eax)
    6cba:	ff 44 24 04          	incl   0x4(%esp)
    6cbe:	8b 4c 24 10          	mov    0x10(%esp),%ecx
    6cc2:	83 04 24 70          	addl   $0x70,(%esp)
    6cc6:	39 4c 24 04          	cmp    %ecx,0x4(%esp)
    6cca:	0f 8c 25 ff ff ff    	jl     6bf5 <ide_pci_init_two+0x330>
    6cd0:	8b 5c 24 08          	mov    0x8(%esp),%ebx
    6cd4:	8d 8c 24 f8 00 00 00 	lea    0xf8(%esp),%ecx
    6cdb:	89 f2                	mov    %esi,%edx
    6cdd:	89 d8                	mov    %ebx,%eax
    6cdf:	e8 fc ff ff ff       	call   6ce0 <ide_pci_init_two+0x41b>
			6ce0: R_386_PC32	ide_host_register
    6ce4:	85 c0                	test   %eax,%eax
    6ce6:	89 c7                	mov    %eax,%edi
    6ce8:	74 07                	je     6cf1 <ide_pci_init_two+0x42c>
    6cea:	89 d8                	mov    %ebx,%eax
    6cec:	e8 fc ff ff ff       	call   6ced <ide_pci_init_two+0x428>
			6ced: R_386_PC32	ide_host_free
    6cf1:	81 c4 18 01 00 00    	add    $0x118,%esp
    6cf7:	89 f8                	mov    %edi,%eax
    6cf9:	5b                   	pop    %ebx
    6cfa:	5e                   	pop    %esi
    6cfb:	5f                   	pop    %edi
    6cfc:	5d                   	pop    %ebp
    6cfd:	c3                   	ret    
    6cfe:	84 c0                	test   %al,%al
    6d00:	89 df                	mov    %ebx,%edi
    6d02:	74 8a                	je     6c8e <ide_pci_init_two+0x3c9>
    6d04:	85 db                	test   %ebx,%ebx
    6d06:	0f 85 6f ff ff ff    	jne    6c7b <ide_pci_init_two+0x3b6>
    6d0c:	e9 51 ff ff ff       	jmp    6c62 <ide_pci_init_two+0x39d>
    6d11:	31 ff                	xor    %edi,%edi
    6d13:	e9 7a ff ff ff       	jmp    6c92 <ide_pci_init_two+0x3cd>
    6d18:	8b 04 24             	mov    (%esp),%eax
    6d1b:	89 38                	mov    %edi,(%eax)
    6d1d:	89 78 38             	mov    %edi,0x38(%eax)
    6d20:	eb 98                	jmp    6cba <ide_pci_init_two+0x3f5>
    6d22:	8b 53 1c             	mov    0x1c(%ebx),%edx
    6d25:	8d 8c 24 14 01 00 00 	lea    0x114(%esp),%ecx
    6d2c:	8b 43 08             	mov    0x8(%ebx),%eax
    6d2f:	51                   	push   %ecx
    6d30:	b9 04 00 00 00       	mov    $0x4,%ecx
    6d35:	e8 fc ff ff ff       	call   6d36 <ide_pci_init_two+0x471>
			6d36: R_386_PC32	pci_bus_read_config_word
    6d3a:	5f                   	pop    %edi
    6d3b:	85 c0                	test   %eax,%eax
    6d3d:	0f 89 b5 fc ff ff    	jns    69f8 <ide_pci_init_two+0x133>
    6d43:	ff 73 64             	pushl  0x64(%ebx)
    6d46:	89 c7                	mov    %eax,%edi
    6d48:	ff 36                	pushl  (%esi)
    6d4a:	68 db 17 00 00       	push   $0x17db
			6d4b: R_386_32	.rodata.str1.1
    6d4f:	e9 55 fc ff ff       	jmp    69a9 <ide_pci_init_two+0xe4>
    6d54:	ff 73 64             	pushl  0x64(%ebx)
    6d57:	ff 36                	pushl  (%esi)
    6d59:	68 7d 19 00 00       	push   $0x197d
			6d5a: R_386_32	.rodata.str1.1
    6d5e:	e8 fc ff ff ff       	call   6d5f <ide_pci_init_two+0x49a>
			6d5f: R_386_PC32	printk
    6d63:	83 c4 0c             	add    $0xc,%esp
    6d66:	ff 74 24 08          	pushl  0x8(%esp)
    6d6a:	89 d8                	mov    %ebx,%eax
    6d6c:	8b 4c 24 10          	mov    0x10(%esp),%ecx
    6d70:	89 f2                	mov    %esi,%edx
    6d72:	e8 fc ff ff ff       	call   6d73 <ide_pci_init_two+0x4ae>
			6d73: R_386_PC32	ide_pci_setup_ports
    6d77:	ff 44 24 08          	incl   0x8(%esp)
    6d7b:	83 44 24 10 70       	addl   $0x70,0x10(%esp)
    6d80:	83 44 24 0c 08       	addl   $0x8,0xc(%esp)
    6d85:	59                   	pop    %ecx
    6d86:	8b 44 24 10          	mov    0x10(%esp),%eax
    6d8a:	39 44 24 04          	cmp    %eax,0x4(%esp)
    6d8e:	0f 8c 93 fb ff ff    	jl     6927 <ide_pci_init_two+0x62>
    6d94:	e9 ef fd ff ff       	jmp    6b88 <ide_pci_init_two+0x2c3>

00006d99 <ide_pci_init_one>:
    6d99:	51                   	push   %ecx
    6d9a:	89 d1                	mov    %edx,%ecx
    6d9c:	31 d2                	xor    %edx,%edx
    6d9e:	e8 fc ff ff ff       	call   6d9f <ide_pci_init_one+0x6>
			6d9f: R_386_PC32	ide_pci_init_two
    6da3:	59                   	pop    %ecx
    6da4:	c3                   	ret    

00006da5 <ide_hwif_setup_dma>:
    6da5:	55                   	push   %ebp
    6da6:	57                   	push   %edi
    6da7:	89 d7                	mov    %edx,%edi
    6da9:	56                   	push   %esi
    6daa:	53                   	push   %ebx
    6dab:	8b 68 68             	mov    0x68(%eax),%ebp
    6dae:	89 c3                	mov    %eax,%ebx
    6db0:	83 ed 5c             	sub    $0x5c,%ebp
    6db3:	66 83 7a 34 00       	cmpw   $0x0,0x34(%edx)
    6db8:	79 1c                	jns    6dd6 <ide_hwif_setup_dma+0x31>
    6dba:	8b 45 28             	mov    0x28(%ebp),%eax
    6dbd:	89 c2                	mov    %eax,%edx
    6dbf:	c1 ea 08             	shr    $0x8,%edx
    6dc2:	81 fa 01 01 00 00    	cmp    $0x101,%edx
    6dc8:	0f 85 92 00 00 00    	jne    6e60 <ide_hwif_setup_dma+0xbb>
    6dce:	84 c0                	test   %al,%al
    6dd0:	0f 89 8a 00 00 00    	jns    6e60 <ide_hwif_setup_dma+0xbb>
    6dd6:	89 fa                	mov    %edi,%edx
    6dd8:	89 d8                	mov    %ebx,%eax
    6dda:	e8 fc ff ff ff       	call   6ddb <ide_hwif_setup_dma+0x36>
			6ddb: R_386_PC32	ide_pci_dma_base
    6ddf:	85 c0                	test   %eax,%eax
    6de1:	89 c6                	mov    %eax,%esi
    6de3:	74 76                	je     6e5b <ide_hwif_setup_dma+0xb6>
    6de5:	83 7b 78 00          	cmpl   $0x0,0x78(%ebx)
    6de9:	89 83 dc 00 00 00    	mov    %eax,0xdc(%ebx)
    6def:	75 07                	jne    6df8 <ide_hwif_setup_dma+0x53>
    6df1:	c7 43 78 00 00 00 00 	movl   $0x0,0x78(%ebx)
			6df4: R_386_32	sff_dma_ops
    6df8:	89 fa                	mov    %edi,%edx
    6dfa:	89 d8                	mov    %ebx,%eax
    6dfc:	e8 fc ff ff ff       	call   6dfd <ide_hwif_setup_dma+0x58>
			6dfd: R_386_PC32	ide_pci_check_simplex
    6e01:	85 c0                	test   %eax,%eax
    6e03:	78 56                	js     6e5b <ide_hwif_setup_dma+0xb6>
    6e05:	8b 17                	mov    (%edi),%edx
    6e07:	89 e8                	mov    %ebp,%eax
    6e09:	e8 fc ff ff ff       	call   6e0a <ide_hwif_setup_dma+0x65>
			6e0a: R_386_PC32	ide_pci_set_master
    6e0e:	85 c0                	test   %eax,%eax
    6e10:	78 49                	js     6e5b <ide_hwif_setup_dma+0xb6>
    6e12:	f6 43 5e 01          	testb  $0x1,0x5e(%ebx)
    6e16:	8d 43 0c             	lea    0xc(%ebx),%eax
    6e19:	74 0f                	je     6e2a <ide_hwif_setup_dma+0x85>
    6e1b:	50                   	push   %eax
    6e1c:	68 9f 19 00 00       	push   $0x199f
			6e1d: R_386_32	.rodata.str1.1
    6e21:	e8 fc ff ff ff       	call   6e22 <ide_hwif_setup_dma+0x7d>
			6e22: R_386_PC32	printk
    6e26:	5f                   	pop    %edi
    6e27:	5d                   	pop    %ebp
    6e28:	eb 13                	jmp    6e3d <ide_hwif_setup_dma+0x98>
    6e2a:	8d 56 07             	lea    0x7(%esi),%edx
    6e2d:	52                   	push   %edx
    6e2e:	56                   	push   %esi
    6e2f:	50                   	push   %eax
    6e30:	68 b4 19 00 00       	push   $0x19b4
			6e31: R_386_32	.rodata.str1.1
    6e35:	e8 fc ff ff ff       	call   6e36 <ide_hwif_setup_dma+0x91>
			6e36: R_386_PC32	printk
    6e3a:	83 c4 10             	add    $0x10,%esp
    6e3d:	80 7b 5a 01          	cmpb   $0x1,0x5a(%ebx)
    6e41:	19 c0                	sbb    %eax,%eax
    6e43:	83 e0 08             	and    $0x8,%eax
    6e46:	8d 44 06 08          	lea    0x8(%esi,%eax,1),%eax
    6e4a:	89 83 e8 00 00 00    	mov    %eax,0xe8(%ebx)
    6e50:	89 d8                	mov    %ebx,%eax
    6e52:	e8 fc ff ff ff       	call   6e53 <ide_hwif_setup_dma+0xae>
			6e53: R_386_PC32	ide_allocate_dma_engine
    6e57:	85 c0                	test   %eax,%eax
    6e59:	74 05                	je     6e60 <ide_hwif_setup_dma+0xbb>
    6e5b:	83 c8 ff             	or     $0xffffffff,%eax
    6e5e:	eb 02                	jmp    6e62 <ide_hwif_setup_dma+0xbd>
    6e60:	31 c0                	xor    %eax,%eax
    6e62:	5b                   	pop    %ebx
    6e63:	5e                   	pop    %esi
    6e64:	5f                   	pop    %edi
    6e65:	5d                   	pop    %ebp
    6e66:	c3                   	ret    
    6e67:	90                   	nop

00006e68 <ide_dma_unmap_sg>:
    6e68:	56                   	push   %esi
    6e69:	53                   	push   %ebx
    6e6a:	8b 72 24             	mov    0x24(%edx),%esi
    6e6d:	8b 40 28             	mov    0x28(%eax),%eax
    6e70:	8b 4a 20             	mov    0x20(%edx),%ecx
    6e73:	8b 1d 00 00 00 00    	mov    0x0,%ebx
			6e75: R_386_32	dma_ops
    6e79:	83 fe 02             	cmp    $0x2,%esi
    6e7c:	8b 90 8c 00 00 00    	mov    0x8c(%eax),%edx
    6e82:	8b 40 68             	mov    0x68(%eax),%eax
    6e85:	76 04                	jbe    6e8b <ide_dma_unmap_sg+0x23>
    6e87:	0f 0b                	ud2a   
    6e89:	eb fe                	jmp    6e89 <ide_dma_unmap_sg+0x21>
    6e8b:	8b 5b 14             	mov    0x14(%ebx),%ebx
    6e8e:	85 db                	test   %ebx,%ebx
    6e90:	74 07                	je     6e99 <ide_dma_unmap_sg+0x31>
    6e92:	6a 00                	push   $0x0
    6e94:	56                   	push   %esi
    6e95:	ff d3                	call   *%ebx
    6e97:	58                   	pop    %eax
    6e98:	5a                   	pop    %edx
    6e99:	5b                   	pop    %ebx
    6e9a:	5e                   	pop    %esi
    6e9b:	c3                   	ret    

00006e9c <ide_dma_prepare>:
    6e9c:	55                   	push   %ebp
    6e9d:	57                   	push   %edi
    6e9e:	56                   	push   %esi
    6e9f:	89 c6                	mov    %eax,%esi
    6ea1:	53                   	push   %ebx
    6ea2:	89 d3                	mov    %edx,%ebx
    6ea4:	83 ec 18             	sub    $0x18,%esp
    6ea7:	8b 40 28             	mov    0x28(%eax),%eax
    6eaa:	f6 46 30 02          	testb  $0x2,0x30(%esi)
    6eae:	8b 40 78             	mov    0x78(%eax),%eax
    6eb1:	89 44 24 0c          	mov    %eax,0xc(%esp)
    6eb5:	0f 84 d1 00 00 00    	je     6f8c <ide_dma_prepare+0xf0>
    6ebb:	8b 48 18             	mov    0x18(%eax),%ecx
    6ebe:	85 c9                	test   %ecx,%ecx
    6ec0:	74 0c                	je     6ece <ide_dma_prepare+0x32>
    6ec2:	89 f0                	mov    %esi,%eax
    6ec4:	ff d1                	call   *%ecx
    6ec6:	85 c0                	test   %eax,%eax
    6ec8:	0f 85 be 00 00 00    	jne    6f8c <ide_dma_prepare+0xf0>
    6ece:	89 da                	mov    %ebx,%edx
    6ed0:	89 f0                	mov    %esi,%eax
    6ed2:	e8 fc ff ff ff       	call   6ed3 <ide_dma_prepare+0x37>
			6ed3: R_386_PC32	ide_map_sg
    6ed7:	8b 46 28             	mov    0x28(%esi),%eax
    6eda:	8b 4b 1c             	mov    0x1c(%ebx),%ecx
    6edd:	8b 90 8c 00 00 00    	mov    0x8c(%eax),%edx
    6ee3:	89 54 24 08          	mov    %edx,0x8(%esp)
    6ee7:	0f b7 53 14          	movzwl 0x14(%ebx),%edx
    6eeb:	8b 6c 24 08          	mov    0x8(%esp),%ebp
    6eef:	83 e2 02             	and    $0x2,%edx
    6ef2:	83 fa 01             	cmp    $0x1,%edx
    6ef5:	19 d2                	sbb    %edx,%edx
    6ef7:	f7 d2                	not    %edx
    6ef9:	83 c2 02             	add    $0x2,%edx
    6efc:	89 53 24             	mov    %edx,0x24(%ebx)
    6eff:	8b 40 68             	mov    0x68(%eax),%eax
    6f02:	8b 3d 00 00 00 00    	mov    0x0,%edi
			6f04: R_386_32	dma_ops
    6f08:	89 44 24 10          	mov    %eax,0x10(%esp)
    6f0c:	89 7c 24 14          	mov    %edi,0x14(%esp)
    6f10:	31 ff                	xor    %edi,%edi
    6f12:	eb 23                	jmp    6f37 <ide_dma_prepare+0x9b>
    6f14:	8b 45 00             	mov    0x0(%ebp),%eax
    6f17:	47                   	inc    %edi
    6f18:	89 54 24 04          	mov    %edx,0x4(%esp)
    6f1c:	89 0c 24             	mov    %ecx,(%esp)
    6f1f:	83 e0 fc             	and    $0xfffffffc,%eax
    6f22:	e8 fc ff ff ff       	call   6f23 <ide_dma_prepare+0x87>
			6f23: R_386_PC32	page_address
    6f27:	89 e8                	mov    %ebp,%eax
    6f29:	e8 fc ff ff ff       	call   6f2a <ide_dma_prepare+0x8e>
			6f2a: R_386_PC32	sg_next
    6f2e:	8b 0c 24             	mov    (%esp),%ecx
    6f31:	8b 54 24 04          	mov    0x4(%esp),%edx
    6f35:	89 c5                	mov    %eax,%ebp
    6f37:	39 cf                	cmp    %ecx,%edi
    6f39:	7c d9                	jl     6f14 <ide_dma_prepare+0x78>
    6f3b:	83 fa 02             	cmp    $0x2,%edx
    6f3e:	76 04                	jbe    6f44 <ide_dma_prepare+0xa8>
    6f40:	0f 0b                	ud2a   
    6f42:	eb fe                	jmp    6f42 <ide_dma_prepare+0xa6>
    6f44:	6a 00                	push   $0x0
    6f46:	52                   	push   %edx
    6f47:	8b 7c 24 1c          	mov    0x1c(%esp),%edi
    6f4b:	8b 54 24 10          	mov    0x10(%esp),%edx
    6f4f:	8b 44 24 18          	mov    0x18(%esp),%eax
    6f53:	ff 57 10             	call   *0x10(%edi)
    6f56:	59                   	pop    %ecx
    6f57:	5f                   	pop    %edi
    6f58:	85 c0                	test   %eax,%eax
    6f5a:	74 27                	je     6f83 <ide_dma_prepare+0xe7>
    6f5c:	8b 53 1c             	mov    0x1c(%ebx),%edx
    6f5f:	8b 4c 24 0c          	mov    0xc(%esp),%ecx
    6f63:	89 43 1c             	mov    %eax,0x1c(%ebx)
    6f66:	89 f0                	mov    %esi,%eax
    6f68:	89 53 20             	mov    %edx,0x20(%ebx)
    6f6b:	89 da                	mov    %ebx,%edx
    6f6d:	ff 51 04             	call   *0x4(%ecx)
    6f70:	85 c0                	test   %eax,%eax
    6f72:	75 06                	jne    6f7a <ide_dma_prepare+0xde>
    6f74:	c6 46 3f 01          	movb   $0x1,0x3f(%esi)
    6f78:	eb 17                	jmp    6f91 <ide_dma_prepare+0xf5>
    6f7a:	89 da                	mov    %ebx,%edx
    6f7c:	89 f0                	mov    %esi,%eax
    6f7e:	e8 fc ff ff ff       	call   6f7f <ide_dma_prepare+0xe3>
			6f7f: R_386_PC32	ide_dma_unmap_sg
    6f83:	89 da                	mov    %ebx,%edx
    6f85:	89 f0                	mov    %esi,%eax
    6f87:	e8 fc ff ff ff       	call   6f88 <ide_dma_prepare+0xec>
			6f88: R_386_PC32	ide_map_sg
    6f8c:	b8 01 00 00 00       	mov    $0x1,%eax
    6f91:	83 c4 18             	add    $0x18,%esp
    6f94:	5b                   	pop    %ebx
    6f95:	5e                   	pop    %esi
    6f96:	5f                   	pop    %edi
    6f97:	5d                   	pop    %ebp
    6f98:	c3                   	ret    

00006f99 <ide_dma_lost_irq>:
    6f99:	50                   	push   %eax
    6f9a:	68 03 1a 00 00       	push   $0x1a03
			6f9b: R_386_32	.rodata.str1.1
    6f9f:	e8 fc ff ff ff       	call   6fa0 <ide_dma_lost_irq+0x7>
			6fa0: R_386_PC32	printk
    6fa4:	58                   	pop    %eax
    6fa5:	5a                   	pop    %edx
    6fa6:	c3                   	ret    

00006fa7 <ide_allocate_dma_engine>:
    6fa7:	55                   	push   %ebp
    6fa8:	57                   	push   %edi
    6fa9:	56                   	push   %esi
    6faa:	53                   	push   %ebx
    6fab:	89 c3                	mov    %eax,%ebx
    6fad:	83 ec 08             	sub    $0x8,%esp
    6fb0:	83 b8 84 00 00 00 00 	cmpl   $0x0,0x84(%eax)
    6fb7:	75 0a                	jne    6fc3 <ide_allocate_dma_engine+0x1c>
    6fb9:	c7 80 84 00 00 00 00 	movl   $0x100,0x84(%eax)
    6fc0:	01 00 00 
    6fc3:	83 bb 88 00 00 00 00 	cmpl   $0x0,0x88(%ebx)
    6fca:	75 0a                	jne    6fd6 <ide_allocate_dma_engine+0x2f>
    6fcc:	c7 83 88 00 00 00 08 	movl   $0x8,0x88(%ebx)
    6fd3:	00 00 00 
    6fd6:	8b bb 88 00 00 00    	mov    0x88(%ebx),%edi
    6fdc:	8d ab 80 00 00 00    	lea    0x80(%ebx),%ebp
    6fe2:	a1 00 00 00 00       	mov    0x0,%eax
			6fe3: R_386_32	dma_ops
    6fe7:	89 e9                	mov    %ebp,%ecx
    6fe9:	0f af bb 84 00 00 00 	imul   0x84(%ebx),%edi
    6ff0:	8b 73 68             	mov    0x68(%ebx),%esi
    6ff3:	89 04 24             	mov    %eax,(%esp)
    6ff6:	8d 44 24 04          	lea    0x4(%esp),%eax
    6ffa:	50                   	push   %eax
    6ffb:	89 fa                	mov    %edi,%edx
    6ffd:	89 f0                	mov    %esi,%eax
    6fff:	e8 fc ff ff ff       	call   7000 <ide_allocate_dma_engine+0x59>
			7000: R_386_PC32	dma_alloc_from_coherent
    7004:	5a                   	pop    %edx
    7005:	85 c0                	test   %eax,%eax
    7007:	74 06                	je     700f <ide_allocate_dma_engine+0x68>
    7009:	8b 44 24 04          	mov    0x4(%esp),%eax
    700d:	eb 57                	jmp    7066 <ide_allocate_dma_engine+0xbf>
    700f:	85 f6                	test   %esi,%esi
    7011:	b8 00 00 00 00       	mov    $0x0,%eax
			7012: R_386_32	x86_dma_fallback_dev
    7016:	0f 44 f0             	cmove  %eax,%esi
    7019:	8b 86 d0 00 00 00    	mov    0xd0(%esi),%eax
    701f:	85 c0                	test   %eax,%eax
    7021:	74 41                	je     7064 <ide_allocate_dma_engine+0xbd>
    7023:	8b 50 04             	mov    0x4(%eax),%edx
    7026:	0b 10                	or     (%eax),%edx
    7028:	74 3a                	je     7064 <ide_allocate_dma_engine+0xbd>
    702a:	8b 04 24             	mov    (%esp),%eax
    702d:	8b 00                	mov    (%eax),%eax
    702f:	85 c0                	test   %eax,%eax
    7031:	89 04 24             	mov    %eax,(%esp)
    7034:	74 2e                	je     7064 <ide_allocate_dma_engine+0xbd>
    7036:	8b 96 d4 00 00 00    	mov    0xd4(%esi),%edx
    703c:	85 d2                	test   %edx,%edx
    703e:	74 0d                	je     704d <ide_allocate_dma_engine+0xa6>
    7040:	81 fa ff ff ff 00    	cmp    $0xffffff,%edx
    7046:	b8 21 00 00 00       	mov    $0x21,%eax
    704b:	76 05                	jbe    7052 <ide_allocate_dma_engine+0xab>
    704d:	b8 20 00 00 00       	mov    $0x20,%eax
    7052:	50                   	push   %eax
    7053:	89 e9                	mov    %ebp,%ecx
    7055:	89 fa                	mov    %edi,%edx
    7057:	89 f0                	mov    %esi,%eax
    7059:	ff 54 24 04          	call   *0x4(%esp)
    705d:	89 44 24 08          	mov    %eax,0x8(%esp)
    7061:	5d                   	pop    %ebp
    7062:	eb 02                	jmp    7066 <ide_allocate_dma_engine+0xbf>
    7064:	31 c0                	xor    %eax,%eax
    7066:	31 d2                	xor    %edx,%edx
    7068:	85 c0                	test   %eax,%eax
    706a:	89 43 7c             	mov    %eax,0x7c(%ebx)
    706d:	75 15                	jne    7084 <ide_allocate_dma_engine+0xdd>
    706f:	83 c3 0c             	add    $0xc,%ebx
    7072:	53                   	push   %ebx
    7073:	68 22 1a 00 00       	push   $0x1a22
			7074: R_386_32	.rodata.str1.1
    7078:	e8 fc ff ff ff       	call   7079 <ide_allocate_dma_engine+0xd2>
			7079: R_386_PC32	printk
    707d:	ba f4 ff ff ff       	mov    $0xfffffff4,%edx
    7082:	5e                   	pop    %esi
    7083:	5f                   	pop    %edi
    7084:	59                   	pop    %ecx
    7085:	89 d0                	mov    %edx,%eax
    7087:	5b                   	pop    %ebx
    7088:	5b                   	pop    %ebx
    7089:	5e                   	pop    %esi
    708a:	5f                   	pop    %edi
    708b:	5d                   	pop    %ebp
    708c:	c3                   	ret    

0000708d <ide_release_dma_engine>:
    708d:	55                   	push   %ebp
    708e:	57                   	push   %edi
    708f:	56                   	push   %esi
    7090:	53                   	push   %ebx
    7091:	89 c3                	mov    %eax,%ebx
    7093:	83 ec 08             	sub    $0x8,%esp
    7096:	8b 78 7c             	mov    0x7c(%eax),%edi
    7099:	85 ff                	test   %edi,%edi
    709b:	74 76                	je     7113 <ide_release_dma_engine+0x86>
    709d:	8b 80 80 00 00 00    	mov    0x80(%eax),%eax
    70a3:	8b 2d 00 00 00 00    	mov    0x0,%ebp
			70a5: R_386_32	dma_ops
    70a9:	89 44 24 04          	mov    %eax,0x4(%esp)
    70ad:	8b 43 68             	mov    0x68(%ebx),%eax
    70b0:	8b b3 88 00 00 00    	mov    0x88(%ebx),%esi
    70b6:	0f af b3 84 00 00 00 	imul   0x84(%ebx),%esi
    70bd:	89 04 24             	mov    %eax,(%esp)
    70c0:	ff 15 00 00 00 00    	call   *0x0
			70c2: R_386_32	pv_irq_ops
    70c6:	f6 c4 02             	test   $0x2,%ah
    70c9:	75 0f                	jne    70da <ide_release_dma_engine+0x4d>
    70cb:	ba 9a 00 00 00       	mov    $0x9a,%edx
    70d0:	b8 47 1a 00 00       	mov    $0x1a47,%eax
			70d1: R_386_32	.rodata.str1.1
    70d5:	e8 fc ff ff ff       	call   70d6 <ide_release_dma_engine+0x49>
			70d6: R_386_PC32	warn_slowpath_null
    70da:	8d 46 ff             	lea    -0x1(%esi),%eax
    70dd:	83 ca ff             	or     $0xffffffff,%edx
    70e0:	c1 e8 0b             	shr    $0xb,%eax
    70e3:	42                   	inc    %edx
    70e4:	d1 e8                	shr    %eax
    70e6:	75 fb                	jne    70e3 <ide_release_dma_engine+0x56>
    70e8:	8b 04 24             	mov    (%esp),%eax
    70eb:	89 f9                	mov    %edi,%ecx
    70ed:	e8 fc ff ff ff       	call   70ee <ide_release_dma_engine+0x61>
			70ee: R_386_PC32	dma_release_from_coherent
    70f2:	85 c0                	test   %eax,%eax
    70f4:	75 16                	jne    710c <ide_release_dma_engine+0x7f>
    70f6:	8b 6d 04             	mov    0x4(%ebp),%ebp
    70f9:	85 ed                	test   %ebp,%ebp
    70fb:	74 0f                	je     710c <ide_release_dma_engine+0x7f>
    70fd:	ff 74 24 04          	pushl  0x4(%esp)
    7101:	89 f2                	mov    %esi,%edx
    7103:	8b 44 24 04          	mov    0x4(%esp),%eax
    7107:	89 f9                	mov    %edi,%ecx
    7109:	ff d5                	call   *%ebp
    710b:	5e                   	pop    %esi
    710c:	c7 43 7c 00 00 00 00 	movl   $0x0,0x7c(%ebx)
    7113:	59                   	pop    %ecx
    7114:	5b                   	pop    %ebx
    7115:	5b                   	pop    %ebx
    7116:	5e                   	pop    %esi
    7117:	5f                   	pop    %edi
    7118:	5d                   	pop    %ebp
    7119:	c3                   	ret    

0000711a <__ide_dma_bad_drive>:
    711a:	57                   	push   %edi
    711b:	ba 14 03 00 00       	mov    $0x314,%edx
			711c: R_386_32	.rodata
    7120:	56                   	push   %esi
    7121:	53                   	push   %ebx
    7122:	8b 70 1c             	mov    0x1c(%eax),%esi
    7125:	89 c3                	mov    %eax,%ebx
    7127:	89 f0                	mov    %esi,%eax
    7129:	e8 fc ff ff ff       	call   712a <__ide_dma_bad_drive+0x10>
			712a: R_386_PC32	ide_in_drive_list
    712e:	85 c0                	test   %eax,%eax
    7130:	89 c7                	mov    %eax,%edi
    7132:	74 12                	je     7146 <__ide_dma_bad_drive+0x2c>
    7134:	83 c6 36             	add    $0x36,%esi
    7137:	56                   	push   %esi
    7138:	53                   	push   %ebx
    7139:	68 7f 1a 00 00       	push   $0x1a7f
			713a: R_386_32	.rodata.str1.1
    713e:	e8 fc ff ff ff       	call   713f <__ide_dma_bad_drive+0x25>
			713f: R_386_PC32	printk
    7143:	83 c4 0c             	add    $0xc,%esp
    7146:	89 f8                	mov    %edi,%eax
    7148:	5b                   	pop    %ebx
    7149:	5e                   	pop    %esi
    714a:	5f                   	pop    %edi
    714b:	c3                   	ret    

0000714c <ide_dma_good_drive>:
    714c:	8b 40 1c             	mov    0x1c(%eax),%eax
    714f:	ba 14 04 00 00       	mov    $0x414,%edx
			7150: R_386_32	.rodata
    7154:	e9 fc ff ff ff       	jmp    7155 <ide_dma_good_drive+0x9>
			7155: R_386_PC32	ide_in_drive_list

00007159 <ide_find_dma_mode>:
    7159:	55                   	push   %ebp
    715a:	57                   	push   %edi
    715b:	56                   	push   %esi
    715c:	53                   	push   %ebx
    715d:	89 c3                	mov    %eax,%ebx
    715f:	83 ec 18             	sub    $0x18,%esp
    7162:	88 54 24 04          	mov    %dl,0x4(%esp)
    7166:	8b 40 28             	mov    0x28(%eax),%eax
    7169:	80 7b 46 20          	cmpb   $0x20,0x46(%ebx)
    716d:	89 44 24 14          	mov    %eax,0x14(%esp)
    7171:	74 0c                	je     717f <ide_find_dma_mode+0x26>
    7173:	31 f6                	xor    %esi,%esi
    7175:	f6 40 5d 10          	testb  $0x10,0x5d(%eax)
    7179:	0f 85 93 01 00 00    	jne    7312 <ide_find_dma_mode+0x1b9>
    717f:	31 f6                	xor    %esi,%esi
    7181:	8a 96 10 03 00 00    	mov    0x310(%esi),%dl
			7183: R_386_32	.rodata
    7187:	38 54 24 04          	cmp    %dl,0x4(%esp)
    718b:	88 54 24 03          	mov    %dl,0x3(%esp)
    718f:	0f 82 1d 01 00 00    	jb     72b2 <ide_find_dma_mode+0x159>
    7195:	8b 43 28             	mov    0x28(%ebx),%eax
    7198:	80 7c 24 03 20       	cmpb   $0x20,0x3(%esp)
    719d:	8b 4b 1c             	mov    0x1c(%ebx),%ecx
    71a0:	8b 50 74             	mov    0x74(%eax),%edx
    71a3:	74 71                	je     7216 <ide_find_dma_mode+0xbd>
    71a5:	80 7c 24 03 40       	cmpb   $0x40,0x3(%esp)
    71aa:	74 10                	je     71bc <ide_find_dma_mode+0x63>
    71ac:	80 7c 24 03 10       	cmpb   $0x10,0x3(%esp)
    71b1:	0f 85 e2 00 00 00    	jne    7299 <ide_find_dma_mode+0x140>
    71b7:	e9 b6 00 00 00       	jmp    7272 <ide_find_dma_mode+0x119>
    71bc:	31 ff                	xor    %edi,%edi
    71be:	f6 41 6a 04          	testb  $0x4,0x6a(%ecx)
    71c2:	0f 84 d5 00 00 00    	je     729d <ide_find_dma_mode+0x144>
    71c8:	85 d2                	test   %edx,%edx
    71ca:	0f b7 a9 b0 00 00 00 	movzwl 0xb0(%ecx),%ebp
    71d1:	74 10                	je     71e3 <ide_find_dma_mode+0x8a>
    71d3:	8b 52 2c             	mov    0x2c(%edx),%edx
    71d6:	85 d2                	test   %edx,%edx
    71d8:	74 09                	je     71e3 <ide_find_dma_mode+0x8a>
    71da:	89 d8                	mov    %ebx,%eax
    71dc:	ff d2                	call   *%edx
    71de:	0f b6 f8             	movzbl %al,%edi
    71e1:	eb 04                	jmp    71e7 <ide_find_dma_mode+0x8e>
    71e3:	0f b6 78 61          	movzbl 0x61(%eax),%edi
    71e7:	21 ef                	and    %ebp,%edi
    71e9:	80 7c 24 04 42       	cmpb   $0x42,0x4(%esp)
    71ee:	0f 86 a9 00 00 00    	jbe    729d <ide_find_dma_mode+0x144>
    71f4:	f7 c7 78 00 00 00    	test   $0x78,%edi
    71fa:	0f 84 9d 00 00 00    	je     729d <ide_find_dma_mode+0x144>
    7200:	89 d8                	mov    %ebx,%eax
    7202:	e8 fc ff ff ff       	call   7203 <ide_find_dma_mode+0xaa>
			7203: R_386_PC32	eighty_ninty_three
    7207:	89 fa                	mov    %edi,%edx
    7209:	83 e2 07             	and    $0x7,%edx
    720c:	84 c0                	test   %al,%al
    720e:	0f 44 fa             	cmove  %edx,%edi
    7211:	e9 87 00 00 00       	jmp    729d <ide_find_dma_mode+0x144>
    7216:	66 81 39 8a 84       	cmpw   $0x848a,(%ecx)
    721b:	0f b7 69 7e          	movzwl 0x7e(%ecx),%ebp
    721f:	74 15                	je     7236 <ide_find_dma_mode+0xdd>
    7221:	0f b7 b9 a6 00 00 00 	movzwl 0xa6(%ecx),%edi
    7228:	81 e7 04 c0 00 00    	and    $0xc004,%edi
    722e:	81 ff 04 40 00 00    	cmp    $0x4004,%edi
    7234:	75 20                	jne    7256 <ide_find_dma_mode+0xfd>
    7236:	0f b7 89 46 01 00 00 	movzwl 0x146(%ecx),%ecx
    723d:	83 e1 38             	and    $0x38,%ecx
    7240:	74 14                	je     7256 <ide_find_dma_mode+0xfd>
    7242:	c1 f9 03             	sar    $0x3,%ecx
    7245:	bf 02 00 00 00       	mov    $0x2,%edi
    724a:	49                   	dec    %ecx
    724b:	d3 e7                	shl    %cl,%edi
    724d:	8d 0c fd f8 ff ff ff 	lea    -0x8(,%edi,8),%ecx
    7254:	09 cd                	or     %ecx,%ebp
    7256:	85 d2                	test   %edx,%edx
    7258:	74 10                	je     726a <ide_find_dma_mode+0x111>
    725a:	8b 52 28             	mov    0x28(%edx),%edx
    725d:	85 d2                	test   %edx,%edx
    725f:	74 09                	je     726a <ide_find_dma_mode+0x111>
    7261:	89 d8                	mov    %ebx,%eax
    7263:	ff d2                	call   *%edx
    7265:	0f b6 f8             	movzbl %al,%edi
    7268:	eb 04                	jmp    726e <ide_find_dma_mode+0x115>
    726a:	0f b6 78 62          	movzbl 0x62(%eax),%edi
    726e:	21 ef                	and    %ebp,%edi
    7270:	eb 2b                	jmp    729d <ide_find_dma_mode+0x144>
    7272:	0f b7 51 7c          	movzwl 0x7c(%ecx),%edx
    7276:	f6 c2 07             	test   $0x7,%dl
    7279:	75 16                	jne    7291 <ide_find_dma_mode+0x138>
    727b:	0f b6 49 69          	movzbl 0x69(%ecx),%ecx
    727f:	66 85 c9             	test   %cx,%cx
    7282:	74 0d                	je     7291 <ide_find_dma_mode+0x138>
    7284:	80 f9 02             	cmp    $0x2,%cl
    7287:	77 08                	ja     7291 <ide_find_dma_mode+0x138>
    7289:	ba 02 00 00 00       	mov    $0x2,%edx
    728e:	d3 e2                	shl    %cl,%edx
    7290:	4a                   	dec    %edx
    7291:	0f b6 78 63          	movzbl 0x63(%eax),%edi
    7295:	21 d7                	and    %edx,%edi
    7297:	eb 04                	jmp    729d <ide_find_dma_mode+0x144>
    7299:	0f 0b                	ud2a   
    729b:	eb fe                	jmp    729b <ide_find_dma_mode+0x142>
    729d:	83 ca ff             	or     $0xffffffff,%edx
    72a0:	0f bd c7             	bsr    %edi,%eax
    72a3:	0f 44 c2             	cmove  %edx,%eax
    72a6:	85 c0                	test   %eax,%eax
    72a8:	78 08                	js     72b2 <ide_find_dma_mode+0x159>
    72aa:	02 44 24 03          	add    0x3(%esp),%al
    72ae:	75 35                	jne    72e5 <ide_find_dma_mode+0x18c>
    72b0:	eb 0c                	jmp    72be <ide_find_dma_mode+0x165>
    72b2:	46                   	inc    %esi
    72b3:	83 fe 03             	cmp    $0x3,%esi
    72b6:	0f 85 c5 fe ff ff    	jne    7181 <ide_find_dma_mode+0x28>
    72bc:	31 c0                	xor    %eax,%eax
    72be:	8b 7c 24 14          	mov    0x14(%esp),%edi
    72c2:	80 7f 65 0b          	cmpb   $0xb,0x65(%edi)
    72c6:	75 1d                	jne    72e5 <ide_find_dma_mode+0x18c>
    72c8:	89 d8                	mov    %ebx,%eax
    72ca:	e8 fc ff ff ff       	call   72cb <ide_find_dma_mode+0x172>
			72cb: R_386_PC32	ide_dma_good_drive
    72cf:	85 c0                	test   %eax,%eax
    72d1:	74 10                	je     72e3 <ide_find_dma_mode+0x18a>
    72d3:	8b 53 1c             	mov    0x1c(%ebx),%edx
    72d6:	b0 21                	mov    $0x21,%al
    72d8:	66 81 ba 84 00 00 00 	cmpw   $0x95,0x84(%edx)
    72df:	95 00 
    72e1:	76 02                	jbe    72e5 <ide_find_dma_mode+0x18c>
    72e3:	31 c0                	xor    %eax,%eax
    72e5:	8a 54 24 04          	mov    0x4(%esp),%dl
    72e9:	3a 44 24 04          	cmp    0x4(%esp),%al
    72ed:	0f 46 d0             	cmovbe %eax,%edx
    72f0:	b8 c3 1a 00 00       	mov    $0x1ac3,%eax
			72f1: R_386_32	.rodata.str1.1
    72f5:	84 d2                	test   %dl,%dl
    72f7:	89 d6                	mov    %edx,%esi
    72f9:	74 08                	je     7303 <ide_find_dma_mode+0x1aa>
    72fb:	0f b6 c2             	movzbl %dl,%eax
    72fe:	e8 fc ff ff ff       	call   72ff <ide_find_dma_mode+0x1a6>
			72ff: R_386_PC32	ide_xfer_verbose
    7303:	50                   	push   %eax
    7304:	53                   	push   %ebx
    7305:	68 ca 1a 00 00       	push   $0x1aca
			7306: R_386_32	.rodata.str1.1
    730a:	e8 fc ff ff ff       	call   730b <ide_find_dma_mode+0x1b2>
			730b: R_386_PC32	printk
    730f:	83 c4 0c             	add    $0xc,%esp
    7312:	83 c4 18             	add    $0x18,%esp
    7315:	89 f0                	mov    %esi,%eax
    7317:	5b                   	pop    %ebx
    7318:	5e                   	pop    %esi
    7319:	5f                   	pop    %edi
    731a:	5d                   	pop    %ebp
    731b:	c3                   	ret    

0000731c <ide_dma_on>:
    731c:	53                   	push   %ebx
    731d:	ba 01 00 00 00       	mov    $0x1,%edx
    7322:	83 48 30 02          	orl    $0x2,0x30(%eax)
    7326:	89 c3                	mov    %eax,%ebx
    7328:	e8 fc ff ff ff       	call   7329 <ide_dma_on+0xd>
			7329: R_386_PC32	ide_toggle_bounce
    732d:	8b 43 28             	mov    0x28(%ebx),%eax
    7330:	ba 01 00 00 00       	mov    $0x1,%edx
    7335:	8b 48 78             	mov    0x78(%eax),%ecx
    7338:	89 d8                	mov    %ebx,%eax
    733a:	ff 11                	call   *(%ecx)
    733c:	5b                   	pop    %ebx
    733d:	c3                   	ret    

0000733e <ide_dma_off_quietly>:
    733e:	53                   	push   %ebx
    733f:	31 d2                	xor    %edx,%edx
    7341:	83 60 30 fd          	andl   $0xfffffffd,0x30(%eax)
    7345:	89 c3                	mov    %eax,%ebx
    7347:	e8 fc ff ff ff       	call   7348 <ide_dma_off_quietly+0xa>
			7348: R_386_PC32	ide_toggle_bounce
    734c:	8b 43 28             	mov    0x28(%ebx),%eax
    734f:	31 d2                	xor    %edx,%edx
    7351:	8b 48 78             	mov    0x78(%eax),%ecx
    7354:	89 d8                	mov    %ebx,%eax
    7356:	ff 11                	call   *(%ecx)
    7358:	5b                   	pop    %ebx
    7359:	c3                   	ret    

0000735a <ide_dma_timeout_retry>:
    735a:	55                   	push   %ebp
    735b:	57                   	push   %edi
    735c:	56                   	push   %esi
    735d:	53                   	push   %ebx
    735e:	89 c3                	mov    %eax,%ebx
    7360:	83 ec 04             	sub    $0x4,%esp
    7363:	8b 70 28             	mov    0x28(%eax),%esi
    7366:	85 d2                	test   %edx,%edx
    7368:	8b 7e 78             	mov    0x78(%esi),%edi
    736b:	8d ae 94 00 00 00    	lea    0x94(%esi),%ebp
    7371:	79 3a                	jns    73ad <ide_dma_timeout_retry+0x53>
    7373:	50                   	push   %eax
    7374:	68 e3 1a 00 00       	push   $0x1ae3
			7375: R_386_32	.rodata.str1.1
    7379:	e8 fc ff ff ff       	call   737a <ide_dma_timeout_retry+0x20>
			737a: R_386_PC32	printk
    737e:	89 d8                	mov    %ebx,%eax
    7380:	c6 43 3f 00          	movb   $0x0,0x3f(%ebx)
    7384:	ff 57 0c             	call   *0xc(%edi)
    7387:	89 ea                	mov    %ebp,%edx
    7389:	89 d8                	mov    %ebx,%eax
    738b:	e8 fc ff ff ff       	call   738c <ide_dma_timeout_retry+0x32>
			738c: R_386_PC32	ide_dma_unmap_sg
    7390:	8b 56 70             	mov    0x70(%esi),%edx
    7393:	89 f0                	mov    %esi,%eax
    7395:	ff 52 04             	call   *0x4(%edx)
    7398:	ba fd 1a 00 00       	mov    $0x1afd,%edx
			7399: R_386_32	.rodata.str1.1
    739d:	0f b6 c8             	movzbl %al,%ecx
    73a0:	89 d8                	mov    %ebx,%eax
    73a2:	e8 fc ff ff ff       	call   73a3 <ide_dma_timeout_retry+0x49>
			73a3: R_386_PC32	ide_error
    73a7:	5f                   	pop    %edi
    73a8:	5d                   	pop    %ebp
    73a9:	89 c2                	mov    %eax,%edx
    73ab:	eb 5b                	jmp    7408 <ide_dma_timeout_retry+0xae>
    73ad:	50                   	push   %eax
    73ae:	68 0f 1b 00 00       	push   $0x1b0f
			73af: R_386_32	.rodata.str1.1
    73b3:	e8 fc ff ff ff       	call   73b4 <ide_dma_timeout_retry+0x5a>
			73b4: R_386_PC32	printk
    73b8:	8b 57 20             	mov    0x20(%edi),%edx
    73bb:	58                   	pop    %eax
    73bc:	85 d2                	test   %edx,%edx
    73be:	59                   	pop    %ecx
    73bf:	74 04                	je     73c5 <ide_dma_timeout_retry+0x6b>
    73c1:	89 d8                	mov    %ebx,%eax
    73c3:	ff d2                	call   *%edx
    73c5:	53                   	push   %ebx
    73c6:	68 29 1b 00 00       	push   $0x1b29
			73c7: R_386_32	.rodata.str1.1
    73cb:	e8 fc ff ff ff       	call   73cc <ide_dma_timeout_retry+0x72>
			73cc: R_386_PC32	printk
    73d0:	89 d8                	mov    %ebx,%eax
    73d2:	ff 57 10             	call   *0x10(%edi)
    73d5:	5a                   	pop    %edx
    73d6:	31 d2                	xor    %edx,%edx
    73d8:	59                   	pop    %ecx
    73d9:	85 c0                	test   %eax,%eax
    73db:	75 2b                	jne    7408 <ide_dma_timeout_retry+0xae>
    73dd:	8b 56 70             	mov    0x70(%esi),%edx
    73e0:	89 f0                	mov    %esi,%eax
    73e2:	ff 52 04             	call   *0x4(%edx)
    73e5:	ba 49 1b 00 00       	mov    $0x1b49,%edx
			73e6: R_386_32	.rodata.str1.1
    73ea:	0f b6 c8             	movzbl %al,%ecx
    73ed:	89 d8                	mov    %ebx,%eax
    73ef:	e8 fc ff ff ff       	call   73f0 <ide_dma_timeout_retry+0x96>
			73f0: R_386_PC32	ide_dump_status
    73f4:	89 d8                	mov    %ebx,%eax
    73f6:	c6 43 3f 00          	movb   $0x0,0x3f(%ebx)
    73fa:	ff 57 0c             	call   *0xc(%edi)
    73fd:	89 ea                	mov    %ebp,%edx
    73ff:	89 d8                	mov    %ebx,%eax
    7401:	e8 fc ff ff ff       	call   7402 <ide_dma_timeout_retry+0xa8>
			7402: R_386_PC32	ide_dma_unmap_sg
    7406:	31 d2                	xor    %edx,%edx
    7408:	81 4b 30 00 00 00 01 	orl    $0x1000000,0x30(%ebx)
    740f:	89 d8                	mov    %ebx,%eax
    7411:	fe 43 3e             	incb   0x3e(%ebx)
    7414:	89 14 24             	mov    %edx,(%esp)
    7417:	e8 fc ff ff ff       	call   7418 <ide_dma_timeout_retry+0xbe>
			7418: R_386_PC32	ide_dma_off_quietly
    741c:	8b 86 38 02 00 00    	mov    0x238(%esi),%eax
    7422:	8b 14 24             	mov    (%esp),%edx
    7425:	85 c0                	test   %eax,%eax
    7427:	74 11                	je     743a <ide_dma_timeout_retry+0xe0>
    7429:	c7 86 38 02 00 00 00 	movl   $0x0,0x238(%esi)
    7430:	00 00 00 
    7433:	c7 40 78 00 00 00 00 	movl   $0x0,0x78(%eax)
    743a:	5f                   	pop    %edi
    743b:	89 d0                	mov    %edx,%eax
    743d:	5b                   	pop    %ebx
    743e:	5e                   	pop    %esi
    743f:	5f                   	pop    %edi
    7440:	5d                   	pop    %ebp
    7441:	c3                   	ret    

00007442 <ide_check_dma_crc>:
    7442:	53                   	push   %ebx
    7443:	89 c3                	mov    %eax,%ebx
    7445:	e8 fc ff ff ff       	call   7446 <ide_check_dma_crc+0x4>
			7446: R_386_PC32	ide_dma_off_quietly
    744a:	8a 43 42             	mov    0x42(%ebx),%al
    744d:	b2 0c                	mov    $0xc,%dl
    744f:	c7 43 7c 00 00 00 00 	movl   $0x0,0x7c(%ebx)
    7456:	8d 48 bf             	lea    -0x41(%eax),%ecx
    7459:	48                   	dec    %eax
    745a:	80 f9 07             	cmp    $0x7,%cl
    745d:	0f 42 d0             	cmovb  %eax,%edx
    7460:	89 d8                	mov    %ebx,%eax
    7462:	0f b6 d2             	movzbl %dl,%edx
    7465:	e8 fc ff ff ff       	call   7466 <ide_check_dma_crc+0x24>
			7466: R_386_PC32	ide_set_xfer_rate
    746a:	80 7b 42 0f          	cmpb   $0xf,0x42(%ebx)
    746e:	76 08                	jbe    7478 <ide_check_dma_crc+0x36>
    7470:	89 d8                	mov    %ebx,%eax
    7472:	5b                   	pop    %ebx
    7473:	e9 fc ff ff ff       	jmp    7474 <ide_check_dma_crc+0x32>
			7474: R_386_PC32	ide_dma_on
    7478:	5b                   	pop    %ebx
    7479:	c3                   	ret    

0000747a <ide_set_dma>:
    747a:	56                   	push   %esi
    747b:	53                   	push   %ebx
    747c:	89 c3                	mov    %eax,%ebx
    747e:	e8 fc ff ff ff       	call   747f <ide_set_dma+0x5>
			747f: R_386_PC32	ide_dma_off_quietly
    7483:	8b 43 1c             	mov    0x1c(%ebx),%eax
    7486:	8b 73 28             	mov    0x28(%ebx),%esi
    7489:	f6 40 63 01          	testb  $0x1,0x63(%eax)
    748d:	74 42                	je     74d1 <ide_set_dma+0x57>
    748f:	f6 43 32 01          	testb  $0x1,0x32(%ebx)
    7493:	75 3c                	jne    74d1 <ide_set_dma+0x57>
    7495:	89 d8                	mov    %ebx,%eax
    7497:	e8 fc ff ff ff       	call   7498 <ide_set_dma+0x1e>
			7498: R_386_PC32	__ide_dma_bad_drive
    749c:	85 c0                	test   %eax,%eax
    749e:	75 31                	jne    74d1 <ide_set_dma+0x57>
    74a0:	f6 46 5d 04          	testb  $0x4,0x5d(%esi)
    74a4:	74 0d                	je     74b3 <ide_set_dma+0x39>
    74a6:	89 d8                	mov    %ebx,%eax
    74a8:	e8 fc ff ff ff       	call   74a9 <ide_set_dma+0x2f>
			74a9: R_386_PC32	config_drive_for_dma
    74ad:	85 c0                	test   %eax,%eax
    74af:	75 3a                	jne    74eb <ide_set_dma+0x71>
    74b1:	eb 1e                	jmp    74d1 <ide_set_dma+0x57>
    74b3:	ba 46 00 00 00       	mov    $0x46,%edx
    74b8:	89 d8                	mov    %ebx,%eax
    74ba:	e8 fc ff ff ff       	call   74bb <ide_set_dma+0x41>
			74bb: R_386_PC32	ide_find_dma_mode
    74bf:	84 c0                	test   %al,%al
    74c1:	74 0e                	je     74d1 <ide_set_dma+0x57>
    74c3:	0f b6 d0             	movzbl %al,%edx
    74c6:	89 d8                	mov    %ebx,%eax
    74c8:	e8 fc ff ff ff       	call   74c9 <ide_set_dma+0x4f>
			74c9: R_386_PC32	ide_set_dma_mode
    74cd:	85 c0                	test   %eax,%eax
    74cf:	74 1a                	je     74eb <ide_set_dma+0x71>
    74d1:	83 c8 ff             	or     $0xffffffff,%eax
    74d4:	f6 46 5d 04          	testb  $0x4,0x5d(%esi)
    74d8:	75 1a                	jne    74f4 <ide_set_dma+0x7a>
    74da:	89 d8                	mov    %ebx,%eax
    74dc:	ba ff 00 00 00       	mov    $0xff,%edx
    74e1:	e8 fc ff ff ff       	call   74e2 <ide_set_dma+0x68>
			74e2: R_386_PC32	ide_set_pio
    74e6:	83 c8 ff             	or     $0xffffffff,%eax
    74e9:	eb 09                	jmp    74f4 <ide_set_dma+0x7a>
    74eb:	89 d8                	mov    %ebx,%eax
    74ed:	e8 fc ff ff ff       	call   74ee <ide_set_dma+0x74>
			74ee: R_386_PC32	ide_dma_on
    74f2:	31 c0                	xor    %eax,%eax
    74f4:	5b                   	pop    %ebx
    74f5:	5e                   	pop    %esi
    74f6:	c3                   	ret    

000074f7 <ide_dma_off>:
    74f7:	53                   	push   %ebx
    74f8:	89 c3                	mov    %eax,%ebx
    74fa:	50                   	push   %eax
    74fb:	68 55 1b 00 00       	push   $0x1b55
			74fc: R_386_32	.rodata.str1.1
    7500:	e8 fc ff ff ff       	call   7501 <ide_dma_off+0xa>
			7501: R_386_PC32	printk
    7505:	58                   	pop    %eax
    7506:	89 d8                	mov    %ebx,%eax
    7508:	5a                   	pop    %edx
    7509:	5b                   	pop    %ebx
    750a:	e9 fc ff ff ff       	jmp    750b <ide_dma_off+0x14>
			750b: R_386_PC32	ide_dma_off_quietly

0000750f <ide_dma_intr>:
    750f:	55                   	push   %ebp
    7510:	57                   	push   %edi
    7511:	56                   	push   %esi
    7512:	53                   	push   %ebx
    7513:	89 c3                	mov    %eax,%ebx
    7515:	83 ec 04             	sub    $0x4,%esp
    7518:	8b 78 28             	mov    0x28(%eax),%edi
    751b:	c6 40 3f 00          	movb   $0x0,0x3f(%eax)
    751f:	8b 57 78             	mov    0x78(%edi),%edx
    7522:	8d b7 94 00 00 00    	lea    0x94(%edi),%esi
    7528:	ff 52 0c             	call   *0xc(%edx)
    752b:	89 f2                	mov    %esi,%edx
    752d:	89 c5                	mov    %eax,%ebp
    752f:	89 d8                	mov    %ebx,%eax
    7531:	e8 fc ff ff ff       	call   7532 <ide_dma_intr+0x23>
			7532: R_386_PC32	ide_dma_unmap_sg
    7536:	8b 57 70             	mov    0x70(%edi),%edx
    7539:	89 f8                	mov    %edi,%eax
    753b:	ff 52 04             	call   *0x4(%edx)
    753e:	88 c1                	mov    %al,%cl
    7540:	8a 43 4b             	mov    0x4b(%ebx),%al
    7543:	83 c8 58             	or     $0x58,%eax
    7546:	21 c8                	and    %ecx,%eax
    7548:	3c 50                	cmp    $0x50,%al
    754a:	75 58                	jne    75a4 <ide_dma_intr+0x95>
    754c:	89 e8                	mov    %ebp,%eax
    754e:	84 c0                	test   %al,%al
    7550:	75 31                	jne    7583 <ide_dma_intr+0x74>
    7552:	f6 87 a8 00 00 00 40 	testb  $0x40,0xa8(%edi)
    7559:	75 0e                	jne    7569 <ide_dma_intr+0x5a>
    755b:	0f b6 c9             	movzbl %cl,%ecx
    755e:	89 f2                	mov    %esi,%edx
    7560:	89 d8                	mov    %ebx,%eax
    7562:	e8 fc ff ff ff       	call   7563 <ide_dma_intr+0x54>
			7563: R_386_PC32	ide_finish_cmd
    7567:	eb 4f                	jmp    75b8 <ide_dma_intr+0xa9>
    7569:	8b 87 d0 00 00 00    	mov    0xd0(%edi),%eax
    756f:	31 d2                	xor    %edx,%edx
    7571:	8b 48 38             	mov    0x38(%eax),%ecx
    7574:	89 d8                	mov    %ebx,%eax
    7576:	81 e1 00 fe ff ff    	and    $0xfffffe00,%ecx
    757c:	e8 fc ff ff ff       	call   757d <ide_dma_intr+0x6e>
			757d: R_386_PC32	ide_complete_rq
    7581:	eb 35                	jmp    75b8 <ide_dma_intr+0xa9>
    7583:	81 e5 ff 00 00 00    	and    $0xff,%ebp
    7589:	55                   	push   %ebp
    758a:	68 3c 04 00 00       	push   $0x43c
			758b: R_386_32	.rodata
    758f:	53                   	push   %ebx
    7590:	68 6a 1b 00 00       	push   $0x1b6a
			7591: R_386_32	.rodata.str1.1
    7595:	88 4c 24 10          	mov    %cl,0x10(%esp)
    7599:	e8 fc ff ff ff       	call   759a <ide_dma_intr+0x8b>
			759a: R_386_PC32	printk
    759e:	83 c4 10             	add    $0x10,%esp
    75a1:	8a 0c 24             	mov    (%esp),%cl
    75a4:	89 d8                	mov    %ebx,%eax
    75a6:	0f b6 c9             	movzbl %cl,%ecx
    75a9:	5b                   	pop    %ebx
    75aa:	ba 8e 1b 00 00       	mov    $0x1b8e,%edx
			75ab: R_386_32	.rodata.str1.1
    75af:	5b                   	pop    %ebx
    75b0:	5e                   	pop    %esi
    75b1:	5f                   	pop    %edi
    75b2:	5d                   	pop    %ebp
    75b3:	e9 fc ff ff ff       	jmp    75b4 <ide_dma_intr+0xa5>
			75b4: R_386_PC32	ide_error
    75b8:	59                   	pop    %ecx
    75b9:	31 c0                	xor    %eax,%eax
    75bb:	5b                   	pop    %ebx
    75bc:	5e                   	pop    %esi
    75bd:	5f                   	pop    %edi
    75be:	5d                   	pop    %ebp
    75bf:	c3                   	ret    

000075c0 <ide_dma_sff_read_status>:
    75c0:	8b 88 dc 00 00 00    	mov    0xdc(%eax),%ecx
    75c6:	f6 40 5e 01          	testb  $0x1,0x5e(%eax)
    75ca:	8d 51 02             	lea    0x2(%ecx),%edx
    75cd:	74 04                	je     75d3 <ide_dma_sff_read_status+0x13>
    75cf:	8a 41 02             	mov    0x2(%ecx),%al
    75d2:	c3                   	ret    
    75d3:	ec                   	in     (%dx),%al
    75d4:	c3                   	ret    

000075d5 <ide_dma_host_set>:
    75d5:	57                   	push   %edi
    75d6:	89 d7                	mov    %edx,%edi
    75d8:	56                   	push   %esi
    75d9:	53                   	push   %ebx
    75da:	8b 58 28             	mov    0x28(%eax),%ebx
    75dd:	8b 70 44             	mov    0x44(%eax),%esi
    75e0:	8b 53 78             	mov    0x78(%ebx),%edx
    75e3:	89 d8                	mov    %ebx,%eax
    75e5:	83 e6 01             	and    $0x1,%esi
    75e8:	ff 52 24             	call   *0x24(%edx)
    75eb:	85 ff                	test   %edi,%edi
    75ed:	74 14                	je     7603 <ide_dma_host_set+0x2e>
    75ef:	81 e6 ff 00 00 00    	and    $0xff,%esi
    75f5:	ba 01 00 00 00       	mov    $0x1,%edx
    75fa:	8d 4e 05             	lea    0x5(%esi),%ecx
    75fd:	d3 e2                	shl    %cl,%edx
    75ff:	09 d0                	or     %edx,%eax
    7601:	eb 12                	jmp    7615 <ide_dma_host_set+0x40>
    7603:	81 e6 ff 00 00 00    	and    $0xff,%esi
    7609:	ba fe ff ff ff       	mov    $0xfffffffe,%edx
    760e:	8d 4e 05             	lea    0x5(%esi),%ecx
    7611:	d3 c2                	rol    %cl,%edx
    7613:	21 d0                	and    %edx,%eax
    7615:	8b 93 dc 00 00 00    	mov    0xdc(%ebx),%edx
    761b:	83 c2 02             	add    $0x2,%edx
    761e:	f6 43 5e 01          	testb  $0x1,0x5e(%ebx)
    7622:	74 04                	je     7628 <ide_dma_host_set+0x53>
    7624:	88 02                	mov    %al,(%edx)
    7626:	eb 01                	jmp    7629 <ide_dma_host_set+0x54>
    7628:	ee                   	out    %al,(%dx)
    7629:	5b                   	pop    %ebx
    762a:	5e                   	pop    %esi
    762b:	5f                   	pop    %edi
    762c:	c3                   	ret    

0000762d <ide_dma_start>:
    762d:	8b 48 28             	mov    0x28(%eax),%ecx
    7630:	f6 41 5e 01          	testb  $0x1,0x5e(%ecx)
    7634:	8b 91 dc 00 00 00    	mov    0xdc(%ecx),%edx
    763a:	74 0e                	je     764a <ide_dma_start+0x1d>
    763c:	8a 02                	mov    (%edx),%al
    763e:	83 c8 01             	or     $0x1,%eax
    7641:	8b 91 dc 00 00 00    	mov    0xdc(%ecx),%edx
    7647:	88 02                	mov    %al,(%edx)
    7649:	c3                   	ret    
    764a:	ec                   	in     (%dx),%al
    764b:	83 c8 01             	or     $0x1,%eax
    764e:	ee                   	out    %al,(%dx)
    764f:	c3                   	ret    

00007650 <ide_dma_end>:
    7650:	53                   	push   %ebx
    7651:	8b 58 28             	mov    0x28(%eax),%ebx
    7654:	f6 43 5e 01          	testb  $0x1,0x5e(%ebx)
    7658:	8b 93 dc 00 00 00    	mov    0xdc(%ebx),%edx
    765e:	74 0f                	je     766f <ide_dma_end+0x1f>
    7660:	8a 02                	mov    (%edx),%al
    7662:	83 e0 fe             	and    $0xfffffffe,%eax
    7665:	8b 93 dc 00 00 00    	mov    0xdc(%ebx),%edx
    766b:	88 02                	mov    %al,(%edx)
    766d:	eb 07                	jmp    7676 <ide_dma_end+0x26>
    766f:	ec                   	in     (%dx),%al
    7670:	25 fe 00 00 00       	and    $0xfe,%eax
    7675:	ee                   	out    %al,(%dx)
    7676:	8b 53 78             	mov    0x78(%ebx),%edx
    7679:	89 d8                	mov    %ebx,%eax
    767b:	ff 52 24             	call   *0x24(%edx)
    767e:	8b 93 dc 00 00 00    	mov    0xdc(%ebx),%edx
    7684:	83 c2 02             	add    $0x2,%edx
    7687:	88 c1                	mov    %al,%cl
    7689:	83 c8 06             	or     $0x6,%eax
    768c:	f6 43 5e 01          	testb  $0x1,0x5e(%ebx)
    7690:	74 04                	je     7696 <ide_dma_end+0x46>
    7692:	88 02                	mov    %al,(%edx)
    7694:	eb 01                	jmp    7697 <ide_dma_end+0x47>
    7696:	ee                   	out    %al,(%dx)
    7697:	89 ca                	mov    %ecx,%edx
    7699:	31 c0                	xor    %eax,%eax
    769b:	83 e2 07             	and    $0x7,%edx
    769e:	83 fa 04             	cmp    $0x4,%edx
    76a1:	74 06                	je     76a9 <ide_dma_end+0x59>
    76a3:	83 c9 10             	or     $0x10,%ecx
    76a6:	0f b6 c1             	movzbl %cl,%eax
    76a9:	5b                   	pop    %ebx
    76aa:	c3                   	ret    

000076ab <ide_dma_test_irq>:
    76ab:	8b 40 28             	mov    0x28(%eax),%eax
    76ae:	8b 50 78             	mov    0x78(%eax),%edx
    76b1:	ff 52 24             	call   *0x24(%edx)
    76b4:	c1 e8 02             	shr    $0x2,%eax
    76b7:	83 e0 01             	and    $0x1,%eax
    76ba:	c3                   	ret    

000076bb <ide_dma_sff_timer_expiry>:
    76bb:	57                   	push   %edi
    76bc:	89 c7                	mov    %eax,%edi
    76be:	56                   	push   %esi
    76bf:	53                   	push   %ebx
    76c0:	8b 70 28             	mov    0x28(%eax),%esi
    76c3:	8b 56 78             	mov    0x78(%esi),%edx
    76c6:	89 f0                	mov    %esi,%eax
    76c8:	ff 52 24             	call   *0x24(%edx)
    76cb:	0f b6 d8             	movzbl %al,%ebx
    76ce:	53                   	push   %ebx
    76cf:	68 74 04 00 00       	push   $0x474
			76d0: R_386_32	.rodata
    76d4:	57                   	push   %edi
    76d5:	68 d9 1d 00 00       	push   $0x1dd9
			76d6: R_386_32	.rodata.str1.1
    76da:	e8 fc ff ff ff       	call   76db <ide_dma_sff_timer_expiry+0x20>
			76db: R_386_PC32	printk
    76df:	89 d8                	mov    %ebx,%eax
    76e1:	83 e0 18             	and    $0x18,%eax
    76e4:	83 c4 10             	add    $0x10,%esp
    76e7:	83 f8 18             	cmp    $0x18,%eax
    76ea:	74 1e                	je     770a <ide_dma_sff_timer_expiry+0x4f>
    76ec:	83 c8 ff             	or     $0xffffffff,%eax
    76ef:	f6 c3 02             	test   $0x2,%bl
    76f2:	c7 86 70 02 00 00 00 	movl   $0x0,0x270(%esi)
    76f9:	00 00 00 
    76fc:	75 11                	jne    770f <ide_dma_sff_timer_expiry+0x54>
    76fe:	f6 c3 01             	test   $0x1,%bl
    7701:	75 07                	jne    770a <ide_dma_sff_timer_expiry+0x4f>
    7703:	31 c0                	xor    %eax,%eax
    7705:	80 e3 04             	and    $0x4,%bl
    7708:	74 05                	je     770f <ide_dma_sff_timer_expiry+0x54>
    770a:	b8 c4 09 00 00       	mov    $0x9c4,%eax
    770f:	5b                   	pop    %ebx
    7710:	5e                   	pop    %esi
    7711:	5f                   	pop    %edi
    7712:	c3                   	ret    

00007713 <ide_build_dmatable>:
    7713:	55                   	push   %ebp
    7714:	57                   	push   %edi
    7715:	56                   	push   %esi
    7716:	53                   	push   %ebx
    7717:	31 db                	xor    %ebx,%ebx
    7719:	83 ec 18             	sub    $0x18,%esp
    771c:	89 44 24 10          	mov    %eax,0x10(%esp)
    7720:	89 54 24 14          	mov    %edx,0x14(%esp)
    7724:	8b 40 28             	mov    0x28(%eax),%eax
    7727:	8b 50 5c             	mov    0x5c(%eax),%edx
    772a:	8b 70 7c             	mov    0x7c(%eax),%esi
    772d:	c1 ea 17             	shr    $0x17,%edx
    7730:	83 e2 01             	and    $0x1,%edx
    7733:	88 54 24 0f          	mov    %dl,0xf(%esp)
    7737:	8b 80 8c 00 00 00    	mov    0x8c(%eax),%eax
    773d:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)
    7744:	00 
    7745:	e9 a2 00 00 00       	jmp    77ec <ide_build_dmatable+0xd9>
    774a:	8b 48 08             	mov    0x8(%eax),%ecx
    774d:	8b 78 0c             	mov    0xc(%eax),%edi
    7750:	89 0c 24             	mov    %ecx,(%esp)
    7753:	e9 81 00 00 00       	jmp    77d9 <ide_build_dmatable+0xc6>
    7758:	81 fb ff 00 00 00    	cmp    $0xff,%ebx
    775e:	8d 4b 01             	lea    0x1(%ebx),%ecx
    7761:	0f 87 ae 00 00 00    	ja     7815 <ide_build_dmatable+0x102>
    7767:	89 fa                	mov    %edi,%edx
    7769:	bd 00 00 01 00       	mov    $0x10000,%ebp
    776e:	81 e2 ff ff 00 00    	and    $0xffff,%edx
    7774:	29 d5                	sub    %edx,%ebp
    7776:	89 ea                	mov    %ebp,%edx
    7778:	3b 2c 24             	cmp    (%esp),%ebp
    777b:	0f 47 14 24          	cmova  (%esp),%edx
    777f:	8d 6e 04             	lea    0x4(%esi),%ebp
    7782:	89 54 24 04          	mov    %edx,0x4(%esp)
    7786:	89 3e                	mov    %edi,(%esi)
    7788:	0f b7 54 24 04       	movzwl 0x4(%esp),%edx
    778d:	80 7c 24 0f 00       	cmpb   $0x0,0xf(%esp)
    7792:	74 09                	je     779d <ide_build_dmatable+0x8a>
    7794:	c1 ea 02             	shr    $0x2,%edx
    7797:	4a                   	dec    %edx
    7798:	c1 e2 10             	shl    $0x10,%edx
    779b:	eb 04                	jmp    77a1 <ide_build_dmatable+0x8e>
    779d:	85 d2                	test   %edx,%edx
    779f:	74 04                	je     77a5 <ide_build_dmatable+0x92>
    77a1:	89 cb                	mov    %ecx,%ebx
    77a3:	eb 23                	jmp    77c8 <ide_build_dmatable+0xb5>
    77a5:	83 c3 02             	add    $0x2,%ebx
    77a8:	81 f9 ff 00 00 00    	cmp    $0xff,%ecx
    77ae:	77 63                	ja     7813 <ide_build_dmatable+0x100>
    77b0:	8d 97 00 80 00 00    	lea    0x8000(%edi),%edx
    77b6:	c7 45 00 00 80 00 00 	movl   $0x8000,0x0(%ebp)
    77bd:	8d 6e 0c             	lea    0xc(%esi),%ebp
    77c0:	89 56 08             	mov    %edx,0x8(%esi)
    77c3:	ba 00 80 00 00       	mov    $0x8000,%edx
    77c8:	89 55 00             	mov    %edx,0x0(%ebp)
    77cb:	8b 54 24 04          	mov    0x4(%esp),%edx
    77cf:	8d 75 04             	lea    0x4(%ebp),%esi
    77d2:	29 14 24             	sub    %edx,(%esp)
    77d5:	03 7c 24 04          	add    0x4(%esp),%edi
    77d9:	83 3c 24 00          	cmpl   $0x0,(%esp)
    77dd:	0f 85 75 ff ff ff    	jne    7758 <ide_build_dmatable+0x45>
    77e3:	ff 44 24 08          	incl   0x8(%esp)
    77e7:	e8 fc ff ff ff       	call   77e8 <ide_build_dmatable+0xd5>
			77e8: R_386_PC32	sg_next
    77ec:	8b 4c 24 14          	mov    0x14(%esp),%ecx
    77f0:	8b 6c 24 08          	mov    0x8(%esp),%ebp
    77f4:	3b 69 1c             	cmp    0x1c(%ecx),%ebp
    77f7:	0f 8c 4d ff ff ff    	jl     774a <ide_build_dmatable+0x37>
    77fd:	85 db                	test   %ebx,%ebx
    77ff:	74 1d                	je     781e <ide_build_dmatable+0x10b>
    7801:	80 7c 24 0f 00       	cmpb   $0x0,0xf(%esp)
    7806:	75 07                	jne    780f <ide_build_dmatable+0xfc>
    7808:	81 4e fc 00 00 00 80 	orl    $0x80000000,-0x4(%esi)
    780f:	89 d8                	mov    %ebx,%eax
    7811:	eb 24                	jmp    7837 <ide_build_dmatable+0x124>
    7813:	89 d9                	mov    %ebx,%ecx
    7815:	85 c9                	test   %ecx,%ecx
    7817:	b8 f9 1d 00 00       	mov    $0x1df9,%eax
			7818: R_386_32	.rodata.str1.1
    781c:	75 05                	jne    7823 <ide_build_dmatable+0x110>
    781e:	b8 0d 1e 00 00       	mov    $0x1e0d,%eax
			781f: R_386_32	.rodata.str1.1
    7823:	50                   	push   %eax
    7824:	ff 74 24 14          	pushl  0x14(%esp)
    7828:	68 1e 1e 00 00       	push   $0x1e1e
			7829: R_386_32	.rodata.str1.1
    782d:	e8 fc ff ff ff       	call   782e <ide_build_dmatable+0x11b>
			782e: R_386_PC32	printk
    7832:	31 c0                	xor    %eax,%eax
    7834:	83 c4 0c             	add    $0xc,%esp
    7837:	83 c4 18             	add    $0x18,%esp
    783a:	5b                   	pop    %ebx
    783b:	5e                   	pop    %esi
    783c:	5f                   	pop    %edi
    783d:	5d                   	pop    %ebp
    783e:	c3                   	ret    

0000783f <ide_dma_setup>:
    783f:	55                   	push   %ebp
    7840:	57                   	push   %edi
    7841:	89 d7                	mov    %edx,%edi
    7843:	56                   	push   %esi
    7844:	89 c6                	mov    %eax,%esi
    7846:	53                   	push   %ebx
    7847:	83 ec 04             	sub    $0x4,%esp
    784a:	8b 58 28             	mov    0x28(%eax),%ebx
    784d:	8b 43 5c             	mov    0x5c(%ebx),%eax
    7850:	89 04 24             	mov    %eax,(%esp)
    7853:	0f b7 42 14          	movzwl 0x14(%edx),%eax
    7857:	83 e0 02             	and    $0x2,%eax
    785a:	83 f8 01             	cmp    $0x1,%eax
    785d:	89 f0                	mov    %esi,%eax
    785f:	19 d2                	sbb    %edx,%edx
    7861:	89 d5                	mov    %edx,%ebp
    7863:	89 fa                	mov    %edi,%edx
    7865:	e8 fc ff ff ff       	call   7866 <ide_dma_setup+0x27>
			7866: R_386_PC32	ide_build_dmatable
    786a:	83 e5 08             	and    $0x8,%ebp
    786d:	85 c0                	test   %eax,%eax
    786f:	75 10                	jne    7881 <ide_dma_setup+0x42>
    7871:	89 f0                	mov    %esi,%eax
    7873:	89 fa                	mov    %edi,%edx
    7875:	e8 fc ff ff ff       	call   7876 <ide_dma_setup+0x37>
			7876: R_386_PC32	ide_map_sg
    787a:	b8 01 00 00 00       	mov    $0x1,%eax
    787f:	eb 4e                	jmp    78cf <ide_dma_setup+0x90>
    7881:	f7 04 24 00 00 01 00 	testl  $0x10000,(%esp)
    7888:	8b 83 80 00 00 00    	mov    0x80(%ebx),%eax
    788e:	8b 8b dc 00 00 00    	mov    0xdc(%ebx),%ecx
    7894:	74 0f                	je     78a5 <ide_dma_setup+0x66>
    7896:	89 41 04             	mov    %eax,0x4(%ecx)
    7899:	8b 83 dc 00 00 00    	mov    0xdc(%ebx),%eax
    789f:	89 ea                	mov    %ebp,%edx
    78a1:	88 10                	mov    %dl,(%eax)
    78a3:	eb 09                	jmp    78ae <ide_dma_setup+0x6f>
    78a5:	8d 51 04             	lea    0x4(%ecx),%edx
    78a8:	ef                   	out    %eax,(%dx)
    78a9:	89 e8                	mov    %ebp,%eax
    78ab:	89 ca                	mov    %ecx,%edx
    78ad:	ee                   	out    %al,(%dx)
    78ae:	8b 53 78             	mov    0x78(%ebx),%edx
    78b1:	89 d8                	mov    %ebx,%eax
    78b3:	ff 52 24             	call   *0x24(%edx)
    78b6:	8b 93 dc 00 00 00    	mov    0xdc(%ebx),%edx
    78bc:	83 c2 02             	add    $0x2,%edx
    78bf:	83 c8 06             	or     $0x6,%eax
    78c2:	f6 43 5e 01          	testb  $0x1,0x5e(%ebx)
    78c6:	74 04                	je     78cc <ide_dma_setup+0x8d>
    78c8:	88 02                	mov    %al,(%edx)
    78ca:	eb 01                	jmp    78cd <ide_dma_setup+0x8e>
    78cc:	ee                   	out    %al,(%dx)
    78cd:	31 c0                	xor    %eax,%eax
    78cf:	5a                   	pop    %edx
    78d0:	5b                   	pop    %ebx
    78d1:	5e                   	pop    %esi
    78d2:	5f                   	pop    %edi
    78d3:	5d                   	pop    %ebp
    78d4:	c3                   	ret    

000078d5 <config_drive_for_dma>:
    78d5:	53                   	push   %ebx
    78d6:	8b 58 28             	mov    0x28(%eax),%ebx
    78d9:	80 78 46 20          	cmpb   $0x20,0x46(%eax)
    78dd:	8b 50 1c             	mov    0x1c(%eax),%edx
    78e0:	74 08                	je     78ea <config_drive_for_dma+0x15>
    78e2:	31 c9                	xor    %ecx,%ecx
    78e4:	f6 43 5d 10          	testb  $0x10,0x5d(%ebx)
    78e8:	75 46                	jne    7930 <config_drive_for_dma+0x5b>
    78ea:	f6 42 6a 04          	testb  $0x4,0x6a(%edx)
    78ee:	74 09                	je     78f9 <config_drive_for_dma+0x24>
    78f0:	f6 82 b1 00 00 00 7f 	testb  $0x7f,0xb1(%edx)
    78f7:	75 32                	jne    792b <config_drive_for_dma+0x56>
    78f9:	0f b7 4a 7e          	movzwl 0x7e(%edx),%ecx
    78fd:	81 e1 04 04 00 00    	and    $0x404,%ecx
    7903:	81 f9 04 04 00 00    	cmp    $0x404,%ecx
    7909:	74 20                	je     792b <config_drive_for_dma+0x56>
    790b:	0f b7 52 7c          	movzwl 0x7c(%edx),%edx
    790f:	81 e2 04 04 00 00    	and    $0x404,%edx
    7915:	81 fa 04 04 00 00    	cmp    $0x404,%edx
    791b:	74 0e                	je     792b <config_drive_for_dma+0x56>
    791d:	e8 fc ff ff ff       	call   791e <config_drive_for_dma+0x49>
			791e: R_386_PC32	ide_dma_good_drive
    7922:	31 c9                	xor    %ecx,%ecx
    7924:	85 c0                	test   %eax,%eax
    7926:	0f 95 c1             	setne  %cl
    7929:	eb 05                	jmp    7930 <config_drive_for_dma+0x5b>
    792b:	b9 01 00 00 00       	mov    $0x1,%ecx
    7930:	89 c8                	mov    %ecx,%eax
    7932:	5b                   	pop    %ebx
    7933:	c3                   	ret    

00007934 <get_xfer_rate>:
    7934:	0f b6 40 42          	movzbl 0x42(%eax),%eax
    7938:	c3                   	ret    

00007939 <get_init_speed>:
    7939:	0f b6 40 41          	movzbl 0x41(%eax),%eax
    793d:	c3                   	ret    

0000793e <set_init_speed>:
    793e:	88 50 41             	mov    %dl,0x41(%eax)
    7941:	31 c0                	xor    %eax,%eax
    7943:	c3                   	ret    

00007944 <get_nice1>:
    7944:	8b 40 30             	mov    0x30(%eax),%eax
    7947:	c1 e8 05             	shr    $0x5,%eax
    794a:	83 e0 01             	and    $0x1,%eax
    794d:	c3                   	ret    

0000794e <set_nice1>:
    794e:	85 d2                	test   %edx,%edx
    7950:	74 06                	je     7958 <set_nice1+0xa>
    7952:	83 48 30 20          	orl    $0x20,0x30(%eax)
    7956:	eb 04                	jmp    795c <set_nice1+0xe>
    7958:	83 60 30 df          	andl   $0xffffffdf,0x30(%eax)
    795c:	31 c0                	xor    %eax,%eax
    795e:	c3                   	ret    

0000795f <get_number>:
    795f:	0f b6 40 44          	movzbl 0x44(%eax),%eax
    7963:	c3                   	ret    

00007964 <set_number>:
    7964:	88 50 44             	mov    %dl,0x44(%eax)
    7967:	31 c0                	xor    %eax,%eax
    7969:	c3                   	ret    

0000796a <ide_geometry_proc_open>:
    796a:	89 c1                	mov    %eax,%ecx
    796c:	89 d0                	mov    %edx,%eax
    796e:	8b 51 f4             	mov    -0xc(%ecx),%edx
    7971:	8b 4a 34             	mov    0x34(%edx),%ecx
    7974:	ba 3a 7a 00 00       	mov    $0x7a3a,%edx
			7975: R_386_32	.text
    7979:	e9 fc ff ff ff       	jmp    797a <ide_geometry_proc_open+0x10>
			797a: R_386_PC32	single_open

0000797e <ide_capacity_proc_open>:
    797e:	89 d0                	mov    %edx,%eax
    7980:	31 c9                	xor    %ecx,%ecx
    7982:	ba 79 7a 00 00       	mov    $0x7a79,%edx
			7983: R_386_32	.text
    7987:	e9 fc ff ff ff       	jmp    7988 <ide_capacity_proc_open+0xa>
			7988: R_386_PC32	single_open

0000798c <ide_drivers_open>:
    798c:	89 d0                	mov    %edx,%eax
    798e:	31 c9                	xor    %ecx,%ecx
    7990:	ba 1d 7c 00 00       	mov    $0x7c1d,%edx
			7991: R_386_32	.text
    7995:	e9 fc ff ff ff       	jmp    7996 <ide_drivers_open+0xa>
			7996: R_386_PC32	single_open

0000799a <ide_imodel_proc_open>:
    799a:	89 c1                	mov    %eax,%ecx
    799c:	89 d0                	mov    %edx,%eax
    799e:	8b 51 f4             	mov    -0xc(%ecx),%edx
    79a1:	8b 4a 34             	mov    0x34(%edx),%ecx
    79a4:	ba a7 7a 00 00       	mov    $0x7aa7,%edx
			79a5: R_386_32	.text
    79a9:	e9 fc ff ff ff       	jmp    79aa <ide_imodel_proc_open+0x10>
			79aa: R_386_PC32	single_open

000079ae <ide_mate_proc_open>:
    79ae:	89 c1                	mov    %eax,%ecx
    79b0:	89 d0                	mov    %edx,%eax
    79b2:	8b 51 f4             	mov    -0xc(%ecx),%edx
    79b5:	8b 4a 34             	mov    0x34(%edx),%ecx
    79b8:	ba d4 7a 00 00       	mov    $0x7ad4,%edx
			79b9: R_386_32	.text
    79bd:	e9 fc ff ff ff       	jmp    79be <ide_mate_proc_open+0x10>
			79be: R_386_PC32	single_open

000079c2 <ide_channel_proc_open>:
    79c2:	89 c1                	mov    %eax,%ecx
    79c4:	89 d0                	mov    %edx,%eax
    79c6:	8b 51 f4             	mov    -0xc(%ecx),%edx
    79c9:	8b 4a 34             	mov    0x34(%edx),%ecx
    79cc:	ba 05 7b 00 00       	mov    $0x7b05,%edx
			79cd: R_386_32	.text
    79d1:	e9 fc ff ff ff       	jmp    79d2 <ide_channel_proc_open+0x10>
			79d2: R_386_PC32	single_open

000079d6 <ide_settings_proc_open>:
    79d6:	89 c1                	mov    %eax,%ecx
    79d8:	89 d0                	mov    %edx,%eax
    79da:	8b 51 f4             	mov    -0xc(%ecx),%edx
    79dd:	8b 4a 34             	mov    0x34(%edx),%ecx
    79e0:	ba d7 7c 00 00       	mov    $0x7cd7,%edx
			79e1: R_386_32	.text
    79e5:	e9 fc ff ff ff       	jmp    79e6 <ide_settings_proc_open+0x10>
			79e6: R_386_PC32	single_open

000079ea <ide_dmodel_proc_open>:
    79ea:	89 c1                	mov    %eax,%ecx
    79ec:	89 d0                	mov    %edx,%eax
    79ee:	8b 51 f4             	mov    -0xc(%ecx),%edx
    79f1:	8b 4a 34             	mov    0x34(%edx),%ecx
    79f4:	ba 23 7b 00 00       	mov    $0x7b23,%edx
			79f5: R_386_32	.text
    79f9:	e9 fc ff ff ff       	jmp    79fa <ide_dmodel_proc_open+0x10>
			79fa: R_386_PC32	single_open

000079fe <ide_media_proc_open>:
    79fe:	89 c1                	mov    %eax,%ecx
    7a00:	89 d0                	mov    %edx,%eax
    7a02:	8b 51 f4             	mov    -0xc(%ecx),%edx
    7a05:	8b 4a 34             	mov    0x34(%edx),%ecx
    7a08:	ba f8 81 00 00       	mov    $0x81f8,%edx
			7a09: R_386_32	.text
    7a0d:	e9 fc ff ff ff       	jmp    7a0e <ide_media_proc_open+0x10>
			7a0e: R_386_PC32	single_open

00007a12 <ide_identify_proc_open>:
    7a12:	89 c1                	mov    %eax,%ecx
    7a14:	89 d0                	mov    %edx,%eax
    7a16:	8b 51 f4             	mov    -0xc(%ecx),%edx
    7a19:	8b 4a 34             	mov    0x34(%edx),%ecx
    7a1c:	ba c4 83 00 00       	mov    $0x83c4,%edx
			7a1d: R_386_32	.text
    7a21:	e9 fc ff ff ff       	jmp    7a22 <ide_identify_proc_open+0x10>
			7a22: R_386_PC32	single_open

00007a26 <ide_driver_proc_open>:
    7a26:	89 c1                	mov    %eax,%ecx
    7a28:	89 d0                	mov    %edx,%eax
    7a2a:	8b 51 f4             	mov    -0xc(%ecx),%edx
    7a2d:	8b 4a 34             	mov    0x34(%edx),%ecx
    7a30:	ba 4a 7b 00 00       	mov    $0x7b4a,%edx
			7a31: R_386_32	.text
    7a35:	e9 fc ff ff ff       	jmp    7a36 <ide_driver_proc_open+0x10>
			7a36: R_386_PC32	single_open

00007a3a <ide_geometry_proc_show>:
    7a3a:	56                   	push   %esi
    7a3b:	89 c6                	mov    %eax,%esi
    7a3d:	53                   	push   %ebx
    7a3e:	8b 58 40             	mov    0x40(%eax),%ebx
    7a41:	0f b6 43 4d          	movzbl 0x4d(%ebx),%eax
    7a45:	50                   	push   %eax
    7a46:	0f b6 43 4c          	movzbl 0x4c(%ebx),%eax
    7a4a:	50                   	push   %eax
    7a4b:	ff 73 58             	pushl  0x58(%ebx)
    7a4e:	68 29 1e 00 00       	push   $0x1e29
			7a4f: R_386_32	.rodata.str1.1
    7a53:	56                   	push   %esi
    7a54:	e8 fc ff ff ff       	call   7a55 <ide_geometry_proc_show+0x1b>
			7a55: R_386_PC32	seq_printf
    7a59:	0f b6 43 4f          	movzbl 0x4f(%ebx),%eax
    7a5d:	50                   	push   %eax
    7a5e:	0f b6 43 4e          	movzbl 0x4e(%ebx),%eax
    7a62:	50                   	push   %eax
    7a63:	ff 73 54             	pushl  0x54(%ebx)
    7a66:	68 40 1e 00 00       	push   $0x1e40
			7a67: R_386_32	.rodata.str1.1
    7a6b:	56                   	push   %esi
    7a6c:	e8 fc ff ff ff       	call   7a6d <ide_geometry_proc_show+0x33>
			7a6d: R_386_PC32	seq_printf
    7a71:	31 c0                	xor    %eax,%eax
    7a73:	83 c4 28             	add    $0x28,%esp
    7a76:	5b                   	pop    %ebx
    7a77:	5e                   	pop    %esi
    7a78:	c3                   	ret    

00007a79 <ide_capacity_proc_show>:
    7a79:	6a 00                	push   $0x0
    7a7b:	68 ff ff ff 7f       	push   $0x7fffffff
    7a80:	68 57 1e 00 00       	push   $0x1e57
			7a81: R_386_32	.rodata.str1.1
    7a85:	50                   	push   %eax
    7a86:	e8 fc ff ff ff       	call   7a87 <ide_capacity_proc_show+0xe>
			7a87: R_386_PC32	seq_printf
    7a8b:	31 c0                	xor    %eax,%eax
    7a8d:	83 c4 10             	add    $0x10,%esp
    7a90:	c3                   	ret    

00007a91 <proc_print_driver>:
    7a91:	ff 70 f8             	pushl  -0x8(%eax)
    7a94:	ff 30                	pushl  (%eax)
    7a96:	68 5d 1e 00 00       	push   $0x1e5d
			7a97: R_386_32	.rodata.str1.1
    7a9b:	52                   	push   %edx
    7a9c:	e8 fc ff ff ff       	call   7a9d <proc_print_driver+0xc>
			7a9d: R_386_PC32	seq_printf
    7aa1:	31 c0                	xor    %eax,%eax
    7aa3:	83 c4 10             	add    $0x10,%esp
    7aa6:	c3                   	ret    

00007aa7 <ide_imodel_proc_show>:
    7aa7:	8b 50 40             	mov    0x40(%eax),%edx
    7aaa:	8a 4a 65             	mov    0x65(%edx),%cl
    7aad:	ba 6c 1e 00 00       	mov    $0x1e6c,%edx
			7aae: R_386_32	.rodata.str1.1
    7ab2:	49                   	dec    %ecx
    7ab3:	80 f9 0c             	cmp    $0xc,%cl
    7ab6:	77 0a                	ja     7ac2 <ide_imodel_proc_show+0x1b>
    7ab8:	0f b6 c9             	movzbl %cl,%ecx
    7abb:	8b 14 8d fc 06 00 00 	mov    0x6fc(,%ecx,4),%edx
			7abe: R_386_32	.rodata
    7ac2:	52                   	push   %edx
    7ac3:	68 76 1e 00 00       	push   $0x1e76
			7ac4: R_386_32	.rodata.str1.1
    7ac8:	50                   	push   %eax
    7ac9:	e8 fc ff ff ff       	call   7aca <ide_imodel_proc_show+0x23>
			7aca: R_386_PC32	seq_printf
    7ace:	31 c0                	xor    %eax,%eax
    7ad0:	83 c4 0c             	add    $0xc,%esp
    7ad3:	c3                   	ret    

00007ad4 <ide_mate_proc_show>:
    7ad4:	8b 50 40             	mov    0x40(%eax),%edx
    7ad7:	85 d2                	test   %edx,%edx
    7ad9:	74 1a                	je     7af5 <ide_mate_proc_show+0x21>
    7adb:	8b 12                	mov    (%edx),%edx
    7add:	85 d2                	test   %edx,%edx
    7adf:	74 14                	je     7af5 <ide_mate_proc_show+0x21>
    7ae1:	83 c2 0c             	add    $0xc,%edx
    7ae4:	52                   	push   %edx
    7ae5:	68 76 1e 00 00       	push   $0x1e76
			7ae6: R_386_32	.rodata.str1.1
    7aea:	50                   	push   %eax
    7aeb:	e8 fc ff ff ff       	call   7aec <ide_mate_proc_show+0x18>
			7aec: R_386_PC32	seq_printf
    7af0:	83 c4 0c             	add    $0xc,%esp
    7af3:	eb 0d                	jmp    7b02 <ide_mate_proc_show+0x2e>
    7af5:	68 7a 1e 00 00       	push   $0x1e7a
			7af6: R_386_32	.rodata.str1.1
    7afa:	50                   	push   %eax
    7afb:	e8 fc ff ff ff       	call   7afc <ide_mate_proc_show+0x28>
			7afc: R_386_PC32	seq_printf
    7b00:	58                   	pop    %eax
    7b01:	5a                   	pop    %edx
    7b02:	31 c0                	xor    %eax,%eax
    7b04:	c3                   	ret    

00007b05 <ide_channel_proc_show>:
    7b05:	8b 50 40             	mov    0x40(%eax),%edx
    7b08:	80 7a 5a 01          	cmpb   $0x1,0x5a(%edx)
    7b0c:	19 d2                	sbb    %edx,%edx
    7b0e:	83 c2 31             	add    $0x31,%edx
    7b11:	52                   	push   %edx
    7b12:	68 82 1e 00 00       	push   $0x1e82
			7b13: R_386_32	.rodata.str1.1
    7b17:	50                   	push   %eax
    7b18:	e8 fc ff ff ff       	call   7b19 <ide_channel_proc_show+0x14>
			7b19: R_386_PC32	seq_printf
    7b1d:	31 c0                	xor    %eax,%eax
    7b1f:	83 c4 0c             	add    $0xc,%esp
    7b22:	c3                   	ret    

00007b23 <ide_dmodel_proc_show>:
    7b23:	8b 50 40             	mov    0x40(%eax),%edx
    7b26:	8b 4a 1c             	mov    0x1c(%edx),%ecx
    7b29:	80 79 36 00          	cmpb   $0x0,0x36(%ecx)
    7b2d:	8d 51 36             	lea    0x36(%ecx),%edx
    7b30:	b9 86 1e 00 00       	mov    $0x1e86,%ecx
			7b31: R_386_32	.rodata.str1.1
    7b35:	0f 44 d1             	cmove  %ecx,%edx
    7b38:	52                   	push   %edx
    7b39:	68 8d 1e 00 00       	push   $0x1e8d
			7b3a: R_386_32	.rodata.str1.1
    7b3e:	50                   	push   %eax
    7b3f:	e8 fc ff ff ff       	call   7b40 <ide_dmodel_proc_show+0x1d>
			7b40: R_386_PC32	seq_printf
    7b44:	31 c0                	xor    %eax,%eax
    7b46:	83 c4 0c             	add    $0xc,%esp
    7b49:	c3                   	ret    

00007b4a <ide_driver_proc_show>:
    7b4a:	8b 50 40             	mov    0x40(%eax),%edx
    7b4d:	8b 92 d4 00 00 00    	mov    0xd4(%edx),%edx
    7b53:	85 d2                	test   %edx,%edx
    7b55:	74 15                	je     7b6c <ide_driver_proc_show+0x22>
    7b57:	ff 72 f8             	pushl  -0x8(%edx)
    7b5a:	ff 32                	pushl  (%edx)
    7b5c:	68 5d 1e 00 00       	push   $0x1e5d
			7b5d: R_386_32	.rodata.str1.1
    7b61:	50                   	push   %eax
    7b62:	e8 fc ff ff ff       	call   7b63 <ide_driver_proc_show+0x19>
			7b63: R_386_PC32	seq_printf
    7b67:	83 c4 10             	add    $0x10,%esp
    7b6a:	eb 0d                	jmp    7b79 <ide_driver_proc_show+0x2f>
    7b6c:	68 94 1e 00 00       	push   $0x1e94
			7b6d: R_386_32	.rodata.str1.1
    7b71:	50                   	push   %eax
    7b72:	e8 fc ff ff ff       	call   7b73 <ide_driver_proc_show+0x29>
			7b73: R_386_PC32	seq_printf
    7b77:	59                   	pop    %ecx
    7b78:	58                   	pop    %eax
    7b79:	31 c0                	xor    %eax,%eax
    7b7b:	c3                   	ret    

00007b7c <proc_ide_destroy>:
    7b7c:	8b 15 dc 00 00 00    	mov    0xdc,%edx
			7b7e: R_386_32	.bss
    7b82:	b8 b4 1e 00 00       	mov    $0x1eb4,%eax
			7b83: R_386_32	.rodata.str1.1
    7b87:	e8 fc ff ff ff       	call   7b88 <proc_ide_destroy+0xc>
			7b88: R_386_PC32	remove_proc_entry
    7b8c:	31 d2                	xor    %edx,%edx
    7b8e:	b8 bc 1e 00 00       	mov    $0x1ebc,%eax
			7b8f: R_386_32	.rodata.str1.1
    7b93:	e9 fc ff ff ff       	jmp    7b94 <proc_ide_destroy+0x18>
			7b94: R_386_PC32	remove_proc_entry

00007b98 <ide_remove_proc_entries>:
    7b98:	56                   	push   %esi
    7b99:	85 d2                	test   %edx,%edx
    7b9b:	53                   	push   %ebx
    7b9c:	89 c6                	mov    %eax,%esi
    7b9e:	89 d3                	mov    %edx,%ebx
    7ba0:	74 16                	je     7bb8 <ide_remove_proc_entries+0x20>
    7ba2:	85 c0                	test   %eax,%eax
    7ba4:	75 0c                	jne    7bb2 <ide_remove_proc_entries+0x1a>
    7ba6:	eb 10                	jmp    7bb8 <ide_remove_proc_entries+0x20>
    7ba8:	89 f2                	mov    %esi,%edx
    7baa:	83 c3 0c             	add    $0xc,%ebx
    7bad:	e8 fc ff ff ff       	call   7bae <ide_remove_proc_entries+0x16>
			7bae: R_386_PC32	remove_proc_entry
    7bb2:	8b 03                	mov    (%ebx),%eax
    7bb4:	85 c0                	test   %eax,%eax
    7bb6:	75 f0                	jne    7ba8 <ide_remove_proc_entries+0x10>
    7bb8:	5b                   	pop    %ebx
    7bb9:	5e                   	pop    %esi
    7bba:	c3                   	ret    

00007bbb <ide_proc_unregister_port>:
    7bbb:	53                   	push   %ebx
    7bbc:	89 c3                	mov    %eax,%ebx
    7bbe:	8b 40 04             	mov    0x4(%eax),%eax
    7bc1:	85 c0                	test   %eax,%eax
    7bc3:	74 1f                	je     7be4 <ide_proc_unregister_port+0x29>
    7bc5:	ba e8 02 00 00       	mov    $0x2e8,%edx
			7bc6: R_386_32	.data
    7bca:	e8 c9 ff ff ff       	call   7b98 <ide_remove_proc_entries>
    7bcf:	8b 15 dc 00 00 00    	mov    0xdc,%edx
			7bd1: R_386_32	.bss
    7bd5:	8d 43 0c             	lea    0xc(%ebx),%eax
    7bd8:	e8 fc ff ff ff       	call   7bd9 <ide_proc_unregister_port+0x1e>
			7bd9: R_386_PC32	remove_proc_entry
    7bdd:	c7 43 04 00 00 00 00 	movl   $0x0,0x4(%ebx)
    7be4:	5b                   	pop    %ebx
    7be5:	c3                   	ret    

00007be6 <ide_proc_unregister_device>:
    7be6:	53                   	push   %ebx
    7be7:	89 c3                	mov    %eax,%ebx
    7be9:	8b 40 20             	mov    0x20(%eax),%eax
    7bec:	85 c0                	test   %eax,%eax
    7bee:	74 2b                	je     7c1b <ide_proc_unregister_device+0x35>
    7bf0:	ba 18 03 00 00       	mov    $0x318,%edx
			7bf1: R_386_32	.data
    7bf5:	e8 9e ff ff ff       	call   7b98 <ide_remove_proc_entries>
    7bfa:	8b 15 dc 00 00 00    	mov    0xdc,%edx
			7bfc: R_386_32	.bss
    7c00:	89 d8                	mov    %ebx,%eax
    7c02:	e8 fc ff ff ff       	call   7c03 <ide_proc_unregister_device+0x1d>
			7c03: R_386_PC32	remove_proc_entry
    7c07:	8b 43 28             	mov    0x28(%ebx),%eax
    7c0a:	8b 50 04             	mov    0x4(%eax),%edx
    7c0d:	89 d8                	mov    %ebx,%eax
    7c0f:	e8 fc ff ff ff       	call   7c10 <ide_proc_unregister_device+0x2a>
			7c10: R_386_PC32	remove_proc_entry
    7c14:	c7 43 20 00 00 00 00 	movl   $0x0,0x20(%ebx)
    7c1b:	5b                   	pop    %ebx
    7c1c:	c3                   	ret    

00007c1d <ide_drivers_show>:
    7c1d:	31 d2                	xor    %edx,%edx
    7c1f:	89 c1                	mov    %eax,%ecx
    7c21:	68 91 7a 00 00       	push   $0x7a91
			7c22: R_386_32	.text
    7c26:	b8 00 00 00 00       	mov    $0x0,%eax
			7c27: R_386_32	ide_bus_type
    7c2b:	e8 fc ff ff ff       	call   7c2c <ide_drivers_show+0xf>
			7c2c: R_386_PC32	bus_for_each_drv
    7c30:	5a                   	pop    %edx
    7c31:	85 c0                	test   %eax,%eax
    7c33:	79 13                	jns    7c48 <ide_drivers_show+0x2b>
    7c35:	50                   	push   %eax
    7c36:	68 c8 05 00 00       	push   $0x5c8
			7c37: R_386_32	.rodata
    7c3b:	68 c0 1e 00 00       	push   $0x1ec0
			7c3c: R_386_32	.rodata.str1.1
    7c40:	e8 fc ff ff ff       	call   7c41 <ide_drivers_show+0x24>
			7c41: R_386_PC32	printk
    7c45:	83 c4 0c             	add    $0xc,%esp
    7c48:	31 c0                	xor    %eax,%eax
    7c4a:	c3                   	ret    

00007c4b <proc_ide_create>:
    7c4b:	31 d2                	xor    %edx,%edx
    7c4d:	b8 bc 1e 00 00       	mov    $0x1ebc,%eax
			7c4e: R_386_32	.rodata.str1.1
    7c52:	e8 fc ff ff ff       	call   7c53 <proc_ide_create+0x8>
			7c53: R_386_PC32	proc_mkdir
    7c57:	85 c0                	test   %eax,%eax
    7c59:	a3 dc 00 00 00       	mov    %eax,0xdc
			7c5a: R_386_32	.bss
    7c5e:	74 17                	je     7c77 <proc_ide_create+0x2c>
    7c60:	6a 00                	push   $0x0
    7c62:	89 c1                	mov    %eax,%ecx
    7c64:	68 60 05 00 00       	push   $0x560
			7c65: R_386_32	.rodata
    7c69:	31 d2                	xor    %edx,%edx
    7c6b:	b8 b4 1e 00 00       	mov    $0x1eb4,%eax
			7c6c: R_386_32	.rodata.str1.1
    7c70:	e8 fc ff ff ff       	call   7c71 <proc_ide_create+0x26>
			7c71: R_386_PC32	proc_create_data
    7c75:	59                   	pop    %ecx
    7c76:	58                   	pop    %eax
    7c77:	c3                   	ret    

00007c78 <ide_add_proc_entries>:
    7c78:	57                   	push   %edi
    7c79:	85 d2                	test   %edx,%edx
    7c7b:	56                   	push   %esi
    7c7c:	89 cf                	mov    %ecx,%edi
    7c7e:	53                   	push   %ebx
    7c7f:	89 c6                	mov    %eax,%esi
    7c81:	89 d3                	mov    %edx,%ebx
    7c83:	74 24                	je     7ca9 <ide_add_proc_entries+0x31>
    7c85:	85 c0                	test   %eax,%eax
    7c87:	75 1a                	jne    7ca3 <ide_add_proc_entries+0x2b>
    7c89:	eb 1e                	jmp    7ca9 <ide_add_proc_entries+0x31>
    7c8b:	0f b7 53 04          	movzwl 0x4(%ebx),%edx
    7c8f:	89 f1                	mov    %esi,%ecx
    7c91:	57                   	push   %edi
    7c92:	ff 73 08             	pushl  0x8(%ebx)
    7c95:	e8 fc ff ff ff       	call   7c96 <ide_add_proc_entries+0x1e>
			7c96: R_386_PC32	proc_create_data
    7c9a:	5a                   	pop    %edx
    7c9b:	59                   	pop    %ecx
    7c9c:	85 c0                	test   %eax,%eax
    7c9e:	74 09                	je     7ca9 <ide_add_proc_entries+0x31>
    7ca0:	83 c3 0c             	add    $0xc,%ebx
    7ca3:	8b 03                	mov    (%ebx),%eax
    7ca5:	85 c0                	test   %eax,%eax
    7ca7:	75 e2                	jne    7c8b <ide_add_proc_entries+0x13>
    7ca9:	5b                   	pop    %ebx
    7caa:	5e                   	pop    %esi
    7cab:	5f                   	pop    %edi
    7cac:	c3                   	ret    

00007cad <ide_proc_register_port>:
    7cad:	53                   	push   %ebx
    7cae:	89 c3                	mov    %eax,%ebx
    7cb0:	83 78 04 00          	cmpl   $0x0,0x4(%eax)
    7cb4:	75 1f                	jne    7cd5 <ide_proc_register_port+0x28>
    7cb6:	8b 15 dc 00 00 00    	mov    0xdc,%edx
			7cb8: R_386_32	.bss
    7cbc:	8d 40 0c             	lea    0xc(%eax),%eax
    7cbf:	e8 fc ff ff ff       	call   7cc0 <ide_proc_register_port+0x13>
			7cc0: R_386_PC32	proc_mkdir
    7cc4:	85 c0                	test   %eax,%eax
    7cc6:	89 43 04             	mov    %eax,0x4(%ebx)
    7cc9:	74 0a                	je     7cd5 <ide_proc_register_port+0x28>
    7ccb:	89 d9                	mov    %ebx,%ecx
    7ccd:	ba e8 02 00 00       	mov    $0x2e8,%edx
			7cce: R_386_32	.data
    7cd2:	5b                   	pop    %ebx
    7cd3:	eb a3                	jmp    7c78 <ide_add_proc_entries>
    7cd5:	5b                   	pop    %ebx
    7cd6:	c3                   	ret    

00007cd7 <ide_settings_proc_show>:
    7cd7:	55                   	push   %ebp
    7cd8:	57                   	push   %edi
    7cd9:	56                   	push   %esi
    7cda:	89 c6                	mov    %eax,%esi
    7cdc:	53                   	push   %ebx
    7cdd:	83 ec 0c             	sub    $0xc,%esp
    7ce0:	8b 40 40             	mov    0x40(%eax),%eax
    7ce3:	80 3d 60 03 00 00 00 	cmpb   $0x0,0x360
			7ce5: R_386_32	.data
    7cea:	89 44 24 08          	mov    %eax,0x8(%esp)
    7cee:	74 12                	je     7d02 <ide_settings_proc_show+0x2b>
    7cf0:	68 e8 1e 00 00       	push   $0x1ee8
			7cf1: R_386_32	.rodata.str1.1
    7cf5:	c6 05 60 03 00 00 00 	movb   $0x0,0x360
			7cf7: R_386_32	.data
    7cfc:	e8 fc ff ff ff       	call   7cfd <ide_settings_proc_show+0x26>
			7cfd: R_386_PC32	printk
    7d01:	59                   	pop    %ecx
    7d02:	b8 00 00 00 00       	mov    $0x0,%eax
			7d03: R_386_32	ide_setting_mtx
    7d07:	bd dc 05 00 00       	mov    $0x5dc,%ebp
			7d08: R_386_32	.rodata
    7d0c:	e8 fc ff ff ff       	call   7d0d <ide_settings_proc_show+0x36>
			7d0d: R_386_PC32	mutex_lock
    7d11:	8b 54 24 08          	mov    0x8(%esp),%edx
    7d15:	8b 5a 24             	mov    0x24(%edx),%ebx
    7d18:	68 3d 1f 00 00       	push   $0x1f3d
			7d19: R_386_32	.rodata.str1.1
    7d1d:	56                   	push   %esi
    7d1e:	e8 fc ff ff ff       	call   7d1f <ide_settings_proc_show+0x48>
			7d1f: R_386_PC32	seq_printf
    7d23:	68 5b 1f 00 00       	push   $0x1f5b
			7d24: R_386_32	.rodata.str1.1
    7d28:	56                   	push   %esi
    7d29:	e8 fc ff ff ff       	call   7d2a <ide_settings_proc_show+0x53>
			7d2a: R_386_PC32	seq_printf
    7d2e:	83 c4 10             	add    $0x10,%esp
    7d31:	e9 07 01 00 00       	jmp    7e3d <ide_settings_proc_show+0x166>
    7d36:	85 db                	test   %ebx,%ebx
    7d38:	74 21                	je     7d5b <ide_settings_proc_show+0x84>
    7d3a:	85 d2                	test   %edx,%edx
    7d3c:	74 11                	je     7d4f <ide_settings_proc_show+0x78>
    7d3e:	8b 03                	mov    (%ebx),%eax
    7d40:	85 c0                	test   %eax,%eax
    7d42:	74 0b                	je     7d4f <ide_settings_proc_show+0x78>
    7d44:	e8 fc ff ff ff       	call   7d45 <ide_settings_proc_show+0x6e>
			7d45: R_386_PC32	strcmp
    7d49:	85 c0                	test   %eax,%eax
    7d4b:	79 0e                	jns    7d5b <ide_settings_proc_show+0x84>
    7d4d:	eb 05                	jmp    7d54 <ide_settings_proc_show+0x7d>
    7d4f:	83 3b 00             	cmpl   $0x0,(%ebx)
    7d52:	74 07                	je     7d5b <ide_settings_proc_show+0x84>
    7d54:	89 df                	mov    %ebx,%edi
    7d56:	83 c3 18             	add    $0x18,%ebx
    7d59:	eb 05                	jmp    7d60 <ide_settings_proc_show+0x89>
    7d5b:	89 ef                	mov    %ebp,%edi
    7d5d:	83 c5 18             	add    $0x18,%ebp
    7d60:	8b 57 10             	mov    0x10(%edi),%edx
    7d63:	c7 44 24 04 01 00 00 	movl   $0x1,0x4(%esp)
    7d6a:	00 
    7d6b:	85 d2                	test   %edx,%edx
    7d6d:	74 0a                	je     7d79 <ide_settings_proc_show+0xa2>
    7d6f:	8b 44 24 08          	mov    0x8(%esp),%eax
    7d73:	ff d2                	call   *%edx
    7d75:	89 44 24 04          	mov    %eax,0x4(%esp)
    7d79:	8b 57 14             	mov    0x14(%edi),%edx
    7d7c:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)
    7d83:	85 d2                	test   %edx,%edx
    7d85:	74 09                	je     7d90 <ide_settings_proc_show+0xb9>
    7d87:	8b 44 24 08          	mov    0x8(%esp),%eax
    7d8b:	ff d2                	call   *%edx
    7d8d:	89 04 24             	mov    %eax,(%esp)
    7d90:	ff 37                	pushl  (%edi)
    7d92:	68 79 1f 00 00       	push   $0x1f79
			7d93: R_386_32	.rodata.str1.1
    7d97:	56                   	push   %esi
    7d98:	e8 fc ff ff ff       	call   7d99 <ide_settings_proc_show+0xc2>
			7d99: R_386_PC32	seq_printf
    7d9d:	8b 47 04             	mov    0x4(%edi),%eax
    7da0:	8b 10                	mov    (%eax),%edx
    7da2:	83 c4 0c             	add    $0xc,%esp
    7da5:	85 d2                	test   %edx,%edx
    7da7:	74 1b                	je     7dc4 <ide_settings_proc_show+0xed>
    7da9:	8b 44 24 08          	mov    0x8(%esp),%eax
    7dad:	ff d2                	call   *%edx
    7daf:	85 c0                	test   %eax,%eax
    7db1:	78 11                	js     7dc4 <ide_settings_proc_show+0xed>
    7db3:	0f af 44 24 04       	imul   0x4(%esp),%eax
    7db8:	99                   	cltd   
    7db9:	f7 3c 24             	idivl  (%esp)
    7dbc:	50                   	push   %eax
    7dbd:	68 7f 1f 00 00       	push   $0x1f7f
			7dbe: R_386_32	.rodata.str1.1
    7dc2:	eb 0a                	jmp    7dce <ide_settings_proc_show+0xf7>
    7dc4:	68 85 1f 00 00       	push   $0x1f85
			7dc5: R_386_32	.rodata.str1.1
    7dc9:	68 90 1f 00 00       	push   $0x1f90
			7dca: R_386_32	.rodata.str1.1
    7dce:	56                   	push   %esi
    7dcf:	e8 fc ff ff ff       	call   7dd0 <ide_settings_proc_show+0xf9>
			7dd0: R_386_PC32	seq_printf
    7dd4:	83 c4 0c             	add    $0xc,%esp
    7dd7:	8b 44 24 04          	mov    0x4(%esp),%eax
    7ddb:	0f af 47 0c          	imul   0xc(%edi),%eax
    7ddf:	99                   	cltd   
    7de0:	f7 3c 24             	idivl  (%esp)
    7de3:	50                   	push   %eax
    7de4:	8b 44 24 08          	mov    0x8(%esp),%eax
    7de8:	0f af 47 08          	imul   0x8(%edi),%eax
    7dec:	8b 54 24 04          	mov    0x4(%esp),%edx
    7df0:	8d 44 02 ff          	lea    -0x1(%edx,%eax,1),%eax
    7df4:	99                   	cltd   
    7df5:	f7 7c 24 04          	idivl  0x4(%esp)
    7df9:	50                   	push   %eax
    7dfa:	68 96 1f 00 00       	push   $0x1f96
			7dfb: R_386_32	.rodata.str1.1
    7dff:	56                   	push   %esi
    7e00:	e8 fc ff ff ff       	call   7e01 <ide_settings_proc_show+0x12a>
			7e01: R_386_PC32	seq_printf
    7e05:	8b 7f 04             	mov    0x4(%edi),%edi
    7e08:	83 c4 10             	add    $0x10,%esp
    7e0b:	83 3f 00             	cmpl   $0x0,(%edi)
    7e0e:	74 0d                	je     7e1d <ide_settings_proc_show+0x146>
    7e10:	68 a1 1f 00 00       	push   $0x1fa1
			7e11: R_386_32	.rodata.str1.1
    7e15:	56                   	push   %esi
    7e16:	e8 fc ff ff ff       	call   7e17 <ide_settings_proc_show+0x140>
			7e17: R_386_PC32	seq_printf
    7e1b:	58                   	pop    %eax
    7e1c:	5a                   	pop    %edx
    7e1d:	83 7f 04 00          	cmpl   $0x0,0x4(%edi)
    7e21:	74 0d                	je     7e30 <ide_settings_proc_show+0x159>
    7e23:	68 a3 1f 00 00       	push   $0x1fa3
			7e24: R_386_32	.rodata.str1.1
    7e28:	56                   	push   %esi
    7e29:	e8 fc ff ff ff       	call   7e2a <ide_settings_proc_show+0x153>
			7e2a: R_386_PC32	seq_printf
    7e2e:	5a                   	pop    %edx
    7e2f:	59                   	pop    %ecx
    7e30:	68 a5 1f 00 00       	push   $0x1fa5
			7e31: R_386_32	.rodata.str1.1
    7e35:	56                   	push   %esi
    7e36:	e8 fc ff ff ff       	call   7e37 <ide_settings_proc_show+0x160>
			7e37: R_386_PC32	seq_printf
    7e3b:	5f                   	pop    %edi
    7e3c:	58                   	pop    %eax
    7e3d:	8b 55 00             	mov    0x0(%ebp),%edx
    7e40:	85 d2                	test   %edx,%edx
    7e42:	0f 85 ee fe ff ff    	jne    7d36 <ide_settings_proc_show+0x5f>
    7e48:	85 db                	test   %ebx,%ebx
    7e4a:	74 09                	je     7e55 <ide_settings_proc_show+0x17e>
    7e4c:	83 3b 00             	cmpl   $0x0,(%ebx)
    7e4f:	0f 85 e1 fe ff ff    	jne    7d36 <ide_settings_proc_show+0x5f>
    7e55:	b8 00 00 00 00       	mov    $0x0,%eax
			7e56: R_386_32	ide_setting_mtx
    7e5a:	e8 fc ff ff ff       	call   7e5b <ide_settings_proc_show+0x184>
			7e5b: R_386_PC32	mutex_unlock
    7e5f:	31 c0                	xor    %eax,%eax
    7e61:	83 c4 0c             	add    $0xc,%esp
    7e64:	5b                   	pop    %ebx
    7e65:	5e                   	pop    %esi
    7e66:	5f                   	pop    %edi
    7e67:	5d                   	pop    %ebp
    7e68:	c3                   	ret    

00007e69 <ide_proc_unregister_driver>:
    7e69:	53                   	push   %ebx
    7e6a:	89 c3                	mov    %eax,%ebx
    7e6c:	ff 52 4c             	call   *0x4c(%edx)
    7e6f:	89 c2                	mov    %eax,%edx
    7e71:	8b 43 20             	mov    0x20(%ebx),%eax
    7e74:	e8 1f fd ff ff       	call   7b98 <ide_remove_proc_entries>
    7e79:	b8 00 00 00 00       	mov    $0x0,%eax
			7e7a: R_386_32	ide_setting_mtx
    7e7e:	e8 fc ff ff ff       	call   7e7f <ide_proc_unregister_driver+0x16>
			7e7f: R_386_PC32	mutex_lock
    7e83:	b8 00 00 00 00       	mov    $0x0,%eax
			7e84: R_386_32	ide_setting_mtx
    7e88:	c7 43 24 00 00 00 00 	movl   $0x0,0x24(%ebx)
    7e8f:	5b                   	pop    %ebx
    7e90:	e9 fc ff ff ff       	jmp    7e91 <ide_proc_unregister_driver+0x28>
			7e91: R_386_PC32	mutex_unlock

00007e95 <ide_proc_register_driver>:
    7e95:	56                   	push   %esi
    7e96:	89 d6                	mov    %edx,%esi
    7e98:	53                   	push   %ebx
    7e99:	89 c3                	mov    %eax,%ebx
    7e9b:	b8 00 00 00 00       	mov    $0x0,%eax
			7e9c: R_386_32	ide_setting_mtx
    7ea0:	e8 fc ff ff ff       	call   7ea1 <ide_proc_register_driver+0xc>
			7ea1: R_386_PC32	mutex_lock
    7ea5:	89 d8                	mov    %ebx,%eax
    7ea7:	ff 56 50             	call   *0x50(%esi)
    7eaa:	89 43 24             	mov    %eax,0x24(%ebx)
    7ead:	b8 00 00 00 00       	mov    $0x0,%eax
			7eae: R_386_32	ide_setting_mtx
    7eb2:	e8 fc ff ff ff       	call   7eb3 <ide_proc_register_driver+0x1e>
			7eb3: R_386_PC32	mutex_unlock
    7eb7:	89 d8                	mov    %ebx,%eax
    7eb9:	ff 56 4c             	call   *0x4c(%esi)
    7ebc:	89 d9                	mov    %ebx,%ecx
    7ebe:	89 c2                	mov    %eax,%edx
    7ec0:	8b 43 20             	mov    0x20(%ebx),%eax
    7ec3:	5b                   	pop    %ebx
    7ec4:	5e                   	pop    %esi
    7ec5:	e9 ae fd ff ff       	jmp    7c78 <ide_add_proc_entries>

00007eca <set_xfer_rate>:
    7eca:	57                   	push   %edi
    7ecb:	56                   	push   %esi
    7ecc:	53                   	push   %ebx
    7ecd:	89 c3                	mov    %eax,%ebx
    7ecf:	8d 4a f8             	lea    -0x8(%edx),%ecx
    7ed2:	83 ec 40             	sub    $0x40,%esp
    7ed5:	83 f9 3e             	cmp    $0x3e,%ecx
    7ed8:	b8 ea ff ff ff       	mov    $0xffffffea,%eax
    7edd:	77 33                	ja     7f12 <set_xfer_rate+0x48>
    7edf:	b9 10 00 00 00       	mov    $0x10,%ecx
    7ee4:	89 e7                	mov    %esp,%edi
    7ee6:	31 c0                	xor    %eax,%eax
    7ee8:	f3 ab                	rep stos %eax,%es:(%edi)
    7eea:	88 54 24 02          	mov    %dl,0x2(%esp)
    7eee:	89 d8                	mov    %ebx,%eax
    7ef0:	89 e2                	mov    %esp,%edx
    7ef2:	c6 44 24 07 ef       	movb   $0xef,0x7(%esp)
    7ef7:	c6 44 24 01 03       	movb   $0x3,0x1(%esp)
    7efc:	c6 44 24 10 06       	movb   $0x6,0x10(%esp)
    7f01:	c6 44 24 12 04       	movb   $0x4,0x12(%esp)
    7f06:	66 c7 44 24 14 00 01 	movw   $0x100,0x14(%esp)
    7f0d:	e8 fc ff ff ff       	call   7f0e <set_xfer_rate+0x44>
			7f0e: R_386_PC32	ide_no_data_taskfile
    7f12:	83 c4 40             	add    $0x40,%esp
    7f15:	5b                   	pop    %ebx
    7f16:	5e                   	pop    %esi
    7f17:	5f                   	pop    %edi
    7f18:	c3                   	ret    

00007f19 <ide_settings_proc_write>:
    7f19:	55                   	push   %ebp
    7f1a:	89 cd                	mov    %ecx,%ebp
    7f1c:	57                   	push   %edi
    7f1d:	56                   	push   %esi
    7f1e:	53                   	push   %ebx
    7f1f:	89 d3                	mov    %edx,%ebx
    7f21:	83 ec 48             	sub    $0x48,%esp
    7f24:	65 8b 15 14 00 00 00 	mov    %gs:0x14,%edx
    7f2b:	89 54 24 44          	mov    %edx,0x44(%esp)
    7f2f:	31 d2                	xor    %edx,%edx
    7f31:	8b 40 0c             	mov    0xc(%eax),%eax
    7f34:	8b 40 10             	mov    0x10(%eax),%eax
    7f37:	8b 40 f4             	mov    -0xc(%eax),%eax
    7f3a:	8b 40 34             	mov    0x34(%eax),%eax
    7f3d:	89 44 24 08          	mov    %eax,0x8(%esp)
    7f41:	b8 15 00 00 00       	mov    $0x15,%eax
    7f46:	e8 fc ff ff ff       	call   7f47 <ide_settings_proc_write+0x2e>
			7f47: R_386_PC32	capable
    7f4b:	89 c2                	mov    %eax,%edx
    7f4d:	b8 f3 ff ff ff       	mov    $0xfffffff3,%eax
    7f52:	85 d2                	test   %edx,%edx
    7f54:	0f 84 84 02 00 00    	je     81de <ide_settings_proc_write+0x2c5>
    7f5a:	80 3d 60 03 00 00 00 	cmpb   $0x0,0x360
			7f5c: R_386_32	.data
    7f61:	74 12                	je     7f75 <ide_settings_proc_write+0x5c>
    7f63:	68 e8 1e 00 00       	push   $0x1ee8
			7f64: R_386_32	.rodata.str1.1
    7f68:	c6 05 60 03 00 00 00 	movb   $0x0,0x360
			7f6a: R_386_32	.data
    7f6f:	e8 fc ff ff ff       	call   7f70 <ide_settings_proc_write+0x57>
			7f70: R_386_PC32	printk
    7f74:	5f                   	pop    %edi
    7f75:	81 fd ff 0f 00 00    	cmp    $0xfff,%ebp
    7f7b:	b8 ea ff ff ff       	mov    $0xffffffea,%eax
    7f80:	0f 87 58 02 00 00    	ja     81de <ide_settings_proc_write+0x2c5>
    7f86:	31 d2                	xor    %edx,%edx
    7f88:	b8 d0 00 02 00       	mov    $0x200d0,%eax
    7f8d:	e8 fc ff ff ff       	call   7f8e <ide_settings_proc_write+0x75>
			7f8e: R_386_PC32	__get_free_pages
    7f92:	89 44 24 04          	mov    %eax,0x4(%esp)
    7f96:	b8 f4 ff ff ff       	mov    $0xfffffff4,%eax
    7f9b:	83 7c 24 04 00       	cmpl   $0x0,0x4(%esp)
    7fa0:	0f 84 38 02 00 00    	je     81de <ide_settings_proc_write+0x2c5>
    7fa6:	8b 44 24 04          	mov    0x4(%esp),%eax
    7faa:	89 e9                	mov    %ebp,%ecx
    7fac:	89 da                	mov    %ebx,%edx
    7fae:	e8 fc ff ff ff       	call   7faf <ide_settings_proc_write+0x96>
			7faf: R_386_PC32	copy_from_user
    7fb3:	85 c0                	test   %eax,%eax
    7fb5:	74 15                	je     7fcc <ide_settings_proc_write+0xb3>
    7fb7:	8b 44 24 04          	mov    0x4(%esp),%eax
    7fbb:	31 d2                	xor    %edx,%edx
    7fbd:	e8 fc ff ff ff       	call   7fbe <ide_settings_proc_write+0xa5>
			7fbe: R_386_PC32	free_pages
    7fc2:	b8 f2 ff ff ff       	mov    $0xfffffff2,%eax
    7fc7:	e9 12 02 00 00       	jmp    81de <ide_settings_proc_write+0x2c5>
    7fcc:	8b 44 24 04          	mov    0x4(%esp),%eax
    7fd0:	c6 04 28 00          	movb   $0x0,(%eax,%ebp,1)
    7fd4:	89 44 24 0c          	mov    %eax,0xc(%esp)
    7fd8:	eb 02                	jmp    7fdc <ide_settings_proc_write+0xc3>
    7fda:	4d                   	dec    %ebp
    7fdb:	40                   	inc    %eax
    7fdc:	85 ed                	test   %ebp,%ebp
    7fde:	74 0c                	je     7fec <ide_settings_proc_write+0xd3>
    7fe0:	0f b6 10             	movzbl (%eax),%edx
    7fe3:	f6 82 00 00 00 00 20 	testb  $0x20,0x0(%edx)
			7fe5: R_386_32	_ctype
    7fea:	75 ee                	jne    7fda <ide_settings_proc_write+0xc1>
    7fec:	89 44 24 0c          	mov    %eax,0xc(%esp)
    7ff0:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
    7ff7:	00 
    7ff8:	89 6c 24 18          	mov    %ebp,0x18(%esp)
    7ffc:	8b 74 24 0c          	mov    0xc(%esp),%esi
    8000:	8b 5c 24 18          	mov    0x18(%esp),%ebx
    8004:	e9 85 01 00 00       	jmp    818e <ide_settings_proc_write+0x275>
    8009:	89 74 24 20          	mov    %esi,0x20(%esp)
    800d:	89 f0                	mov    %esi,%eax
    800f:	eb 04                	jmp    8015 <ide_settings_proc_write+0xfc>
    8011:	40                   	inc    %eax
    8012:	4b                   	dec    %ebx
    8013:	74 05                	je     801a <ide_settings_proc_write+0x101>
    8015:	80 38 3a             	cmpb   $0x3a,(%eax)
    8018:	75 f7                	jne    8011 <ide_settings_proc_write+0xf8>
    801a:	80 38 3a             	cmpb   $0x3a,(%eax)
    801d:	0f 85 9a 01 00 00    	jne    81bd <ide_settings_proc_write+0x2a4>
    8023:	89 c2                	mov    %eax,%edx
    8025:	29 f2                	sub    %esi,%edx
    8027:	83 fa 1e             	cmp    $0x1e,%edx
    802a:	0f 8f 8d 01 00 00    	jg     81bd <ide_settings_proc_write+0x2a4>
    8030:	89 d1                	mov    %edx,%ecx
    8032:	c1 e9 02             	shr    $0x2,%ecx
    8035:	8d 7c 24 25          	lea    0x25(%esp),%edi
    8039:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)
    803b:	89 d1                	mov    %edx,%ecx
    803d:	83 e1 03             	and    $0x3,%ecx
    8040:	74 02                	je     8044 <ide_settings_proc_write+0x12b>
    8042:	f3 a4                	rep movsb %ds:(%esi),%es:(%edi)
    8044:	89 c2                	mov    %eax,%edx
    8046:	2b 54 24 20          	sub    0x20(%esp),%edx
    804a:	85 db                	test   %ebx,%ebx
    804c:	c6 44 14 25 00       	movb   $0x0,0x25(%esp,%edx,1)
    8051:	0f 84 66 01 00 00    	je     81bd <ide_settings_proc_write+0x2a4>
    8057:	8d 7b ff             	lea    -0x1(%ebx),%edi
    805a:	b9 0a 00 00 00       	mov    $0xa,%ecx
    805f:	8d 58 01             	lea    0x1(%eax),%ebx
    8062:	89 d8                	mov    %ebx,%eax
    8064:	8d 54 24 20          	lea    0x20(%esp),%edx
    8068:	e8 fc ff ff ff       	call   8069 <ide_settings_proc_write+0x150>
			8069: R_386_PC32	simple_strtoul
    806d:	8b 74 24 20          	mov    0x20(%esp),%esi
    8071:	89 44 24 1c          	mov    %eax,0x1c(%esp)
    8075:	29 f3                	sub    %esi,%ebx
    8077:	01 fb                	add    %edi,%ebx
    8079:	74 23                	je     809e <ide_settings_proc_write+0x185>
    807b:	0f b6 06             	movzbl (%esi),%eax
    807e:	f6 80 00 00 00 00 20 	testb  $0x20,0x0(%eax)
			8080: R_386_32	_ctype
    8085:	75 07                	jne    808e <ide_settings_proc_write+0x175>
    8087:	e9 31 01 00 00       	jmp    81bd <ide_settings_proc_write+0x2a4>
    808c:	4b                   	dec    %ebx
    808d:	46                   	inc    %esi
    808e:	85 db                	test   %ebx,%ebx
    8090:	74 0c                	je     809e <ide_settings_proc_write+0x185>
    8092:	0f b6 06             	movzbl (%esi),%eax
    8095:	f6 80 00 00 00 00 20 	testb  $0x20,0x0(%eax)
			8097: R_386_32	_ctype
    809c:	75 ee                	jne    808c <ide_settings_proc_write+0x173>
    809e:	b8 00 00 00 00       	mov    $0x0,%eax
			809f: R_386_32	ide_setting_mtx
    80a3:	bf dc 05 00 00       	mov    $0x5dc,%edi
			80a4: R_386_32	.rodata
    80a8:	e8 fc ff ff ff       	call   80a9 <ide_settings_proc_write+0x190>
			80a9: R_386_PC32	mutex_lock
    80ad:	eb 10                	jmp    80bf <ide_settings_proc_write+0x1a6>
    80af:	8d 54 24 25          	lea    0x25(%esp),%edx
    80b3:	e8 fc ff ff ff       	call   80b4 <ide_settings_proc_write+0x19b>
			80b4: R_386_PC32	strcmp
    80b8:	85 c0                	test   %eax,%eax
    80ba:	74 09                	je     80c5 <ide_settings_proc_write+0x1ac>
    80bc:	83 c7 18             	add    $0x18,%edi
    80bf:	8b 07                	mov    (%edi),%eax
    80c1:	85 c0                	test   %eax,%eax
    80c3:	75 ea                	jne    80af <ide_settings_proc_write+0x196>
    80c5:	83 3f 00             	cmpl   $0x0,(%edi)
    80c8:	74 04                	je     80ce <ide_settings_proc_write+0x1b5>
    80ca:	85 ff                	test   %edi,%edi
    80cc:	75 3b                	jne    8109 <ide_settings_proc_write+0x1f0>
    80ce:	8b 54 24 08          	mov    0x8(%esp),%edx
    80d2:	8b 7a 24             	mov    0x24(%edx),%edi
    80d5:	85 ff                	test   %edi,%edi
    80d7:	75 12                	jne    80eb <ide_settings_proc_write+0x1d2>
    80d9:	eb 1f                	jmp    80fa <ide_settings_proc_write+0x1e1>
    80db:	8d 54 24 25          	lea    0x25(%esp),%edx
    80df:	e8 fc ff ff ff       	call   80e0 <ide_settings_proc_write+0x1c7>
			80e0: R_386_PC32	strcmp
    80e4:	85 c0                	test   %eax,%eax
    80e6:	74 09                	je     80f1 <ide_settings_proc_write+0x1d8>
    80e8:	83 c7 18             	add    $0x18,%edi
    80eb:	8b 07                	mov    (%edi),%eax
    80ed:	85 c0                	test   %eax,%eax
    80ef:	75 ea                	jne    80db <ide_settings_proc_write+0x1c2>
    80f1:	83 3f 00             	cmpl   $0x0,(%edi)
    80f4:	74 04                	je     80fa <ide_settings_proc_write+0x1e1>
    80f6:	85 ff                	test   %edi,%edi
    80f8:	75 0f                	jne    8109 <ide_settings_proc_write+0x1f0>
    80fa:	b8 00 00 00 00       	mov    $0x0,%eax
			80fb: R_386_32	ide_setting_mtx
    80ff:	e8 fc ff ff ff       	call   8100 <ide_settings_proc_write+0x1e7>
			8100: R_386_PC32	mutex_unlock
    8104:	e9 b4 00 00 00       	jmp    81bd <ide_settings_proc_write+0x2a4>
    8109:	83 7c 24 14 00       	cmpl   $0x0,0x14(%esp)
    810e:	74 74                	je     8184 <ide_settings_proc_write+0x26b>
    8110:	8b 57 10             	mov    0x10(%edi),%edx
    8113:	c7 44 24 10 01 00 00 	movl   $0x1,0x10(%esp)
    811a:	00 
    811b:	85 d2                	test   %edx,%edx
    811d:	74 0a                	je     8129 <ide_settings_proc_write+0x210>
    811f:	8b 44 24 08          	mov    0x8(%esp),%eax
    8123:	ff d2                	call   *%edx
    8125:	89 44 24 10          	mov    %eax,0x10(%esp)
    8129:	8b 57 14             	mov    0x14(%edi),%edx
    812c:	b9 01 00 00 00       	mov    $0x1,%ecx
    8131:	85 d2                	test   %edx,%edx
    8133:	74 08                	je     813d <ide_settings_proc_write+0x224>
    8135:	8b 44 24 08          	mov    0x8(%esp),%eax
    8139:	ff d2                	call   *%edx
    813b:	89 c1                	mov    %eax,%ecx
    813d:	b8 15 00 00 00       	mov    $0x15,%eax
    8142:	8b 6f 04             	mov    0x4(%edi),%ebp
    8145:	89 0c 24             	mov    %ecx,(%esp)
    8148:	e8 fc ff ff ff       	call   8149 <ide_settings_proc_write+0x230>
			8149: R_386_PC32	capable
    814d:	8b 0c 24             	mov    (%esp),%ecx
    8150:	85 c0                	test   %eax,%eax
    8152:	74 30                	je     8184 <ide_settings_proc_write+0x26b>
    8154:	83 7d 04 00          	cmpl   $0x0,0x4(%ebp)
    8158:	74 2a                	je     8184 <ide_settings_proc_write+0x26b>
    815a:	0f af 4c 24 1c       	imul   0x1c(%esp),%ecx
    815f:	31 d2                	xor    %edx,%edx
    8161:	89 c8                	mov    %ecx,%eax
    8163:	f7 74 24 10          	divl   0x10(%esp)
    8167:	f6 45 08 01          	testb  $0x1,0x8(%ebp)
    816b:	89 c1                	mov    %eax,%ecx
    816d:	74 0a                	je     8179 <ide_settings_proc_write+0x260>
    816f:	3b 47 08             	cmp    0x8(%edi),%eax
    8172:	7c 10                	jl     8184 <ide_settings_proc_write+0x26b>
    8174:	3b 47 0c             	cmp    0xc(%edi),%eax
    8177:	7f 0b                	jg     8184 <ide_settings_proc_write+0x26b>
    8179:	8b 44 24 08          	mov    0x8(%esp),%eax
    817d:	89 ea                	mov    %ebp,%edx
    817f:	e8 fc ff ff ff       	call   8180 <ide_settings_proc_write+0x267>
			8180: R_386_PC32	ide_devset_execute
    8184:	b8 00 00 00 00       	mov    $0x0,%eax
			8185: R_386_32	ide_setting_mtx
    8189:	e8 fc ff ff ff       	call   818a <ide_settings_proc_write+0x271>
			818a: R_386_PC32	mutex_unlock
    818e:	85 db                	test   %ebx,%ebx
    8190:	0f 85 73 fe ff ff    	jne    8009 <ide_settings_proc_write+0xf0>
    8196:	83 7c 24 14 01       	cmpl   $0x1,0x14(%esp)
    819b:	74 0d                	je     81aa <ide_settings_proc_write+0x291>
    819d:	c7 44 24 14 01 00 00 	movl   $0x1,0x14(%esp)
    81a4:	00 
    81a5:	e9 52 fe ff ff       	jmp    7ffc <ide_settings_proc_write+0xe3>
    81aa:	8b 6c 24 18          	mov    0x18(%esp),%ebp
    81ae:	31 d2                	xor    %edx,%edx
    81b0:	8b 44 24 04          	mov    0x4(%esp),%eax
    81b4:	e8 fc ff ff ff       	call   81b5 <ide_settings_proc_write+0x29c>
			81b5: R_386_PC32	free_pages
    81b9:	89 e8                	mov    %ebp,%eax
    81bb:	eb 21                	jmp    81de <ide_settings_proc_write+0x2c5>
    81bd:	8b 44 24 04          	mov    0x4(%esp),%eax
    81c1:	31 d2                	xor    %edx,%edx
    81c3:	e8 fc ff ff ff       	call   81c4 <ide_settings_proc_write+0x2ab>
			81c4: R_386_PC32	free_pages
    81c8:	68 cc 06 00 00       	push   $0x6cc
			81c9: R_386_32	.rodata
    81cd:	68 a7 1f 00 00       	push   $0x1fa7
			81ce: R_386_32	.rodata.str1.1
    81d2:	e8 fc ff ff ff       	call   81d3 <ide_settings_proc_write+0x2ba>
			81d3: R_386_PC32	printk
    81d7:	b8 ea ff ff ff       	mov    $0xffffffea,%eax
    81dc:	5b                   	pop    %ebx
    81dd:	5e                   	pop    %esi
    81de:	8b 54 24 44          	mov    0x44(%esp),%edx
    81e2:	65 33 15 14 00 00 00 	xor    %gs:0x14,%edx
    81e9:	74 05                	je     81f0 <ide_settings_proc_write+0x2d7>
    81eb:	e8 fc ff ff ff       	call   81ec <ide_settings_proc_write+0x2d3>
			81ec: R_386_PC32	__stack_chk_fail
    81f0:	83 c4 48             	add    $0x48,%esp
    81f3:	5b                   	pop    %ebx
    81f4:	5e                   	pop    %esi
    81f5:	5f                   	pop    %edi
    81f6:	5d                   	pop    %ebp
    81f7:	c3                   	ret    

000081f8 <ide_media_proc_show>:
    81f8:	8b 50 40             	mov    0x40(%eax),%edx
    81fb:	8a 4a 46             	mov    0x46(%edx),%cl
    81fe:	ba ba 1f 00 00       	mov    $0x1fba,%edx
			81ff: R_386_32	.rodata.str1.1
    8203:	80 f9 20             	cmp    $0x20,%cl
    8206:	77 0a                	ja     8212 <ide_media_proc_show+0x1a>
    8208:	0f b6 c9             	movzbl %cl,%ecx
    820b:	8b 14 8d 30 07 00 00 	mov    0x730(,%ecx,4),%edx
			820e: R_386_32	.rodata
    8212:	e8 fc ff ff ff       	call   8213 <ide_media_proc_show+0x1b>
			8213: R_386_PC32	seq_puts
    8217:	31 c0                	xor    %eax,%eax
    8219:	c3                   	ret    

0000821a <ide_driver_proc_write>:
    821a:	55                   	push   %ebp
    821b:	57                   	push   %edi
    821c:	89 cf                	mov    %ecx,%edi
    821e:	56                   	push   %esi
    821f:	53                   	push   %ebx
    8220:	83 ec 28             	sub    $0x28,%esp
    8223:	65 8b 0d 14 00 00 00 	mov    %gs:0x14,%ecx
    822a:	89 4c 24 24          	mov    %ecx,0x24(%esp)
    822e:	31 c9                	xor    %ecx,%ecx
    8230:	8b 40 0c             	mov    0xc(%eax),%eax
    8233:	8b 40 10             	mov    0x10(%eax),%eax
    8236:	8b 40 f4             	mov    -0xc(%eax),%eax
    8239:	8b 58 34             	mov    0x34(%eax),%ebx
    823c:	b8 15 00 00 00       	mov    $0x15,%eax
    8241:	89 14 24             	mov    %edx,(%esp)
    8244:	e8 fc ff ff ff       	call   8245 <ide_driver_proc_write+0x2b>
			8245: R_386_PC32	capable
    8249:	b9 f3 ff ff ff       	mov    $0xfffffff3,%ecx
    824e:	8b 14 24             	mov    (%esp),%edx
    8251:	85 c0                	test   %eax,%eax
    8253:	0f 84 af 00 00 00    	je     8308 <ide_driver_proc_write+0xee>
    8259:	83 ff 1f             	cmp    $0x1f,%edi
    825c:	be 1f 00 00 00       	mov    $0x1f,%esi
    8261:	0f 46 f7             	cmovbe %edi,%esi
    8264:	8d 6c 24 04          	lea    0x4(%esp),%ebp
    8268:	89 f1                	mov    %esi,%ecx
    826a:	89 e8                	mov    %ebp,%eax
    826c:	e8 fc ff ff ff       	call   826d <ide_driver_proc_write+0x53>
			826d: R_386_PC32	copy_from_user
    8271:	b9 f2 ff ff ff       	mov    $0xfffffff2,%ecx
    8276:	85 c0                	test   %eax,%eax
    8278:	0f 85 8a 00 00 00    	jne    8308 <ide_driver_proc_write+0xee>
    827e:	8d bb 8c 00 00 00    	lea    0x8c(%ebx),%edi
    8284:	89 f8                	mov    %edi,%eax
    8286:	c6 44 34 04 00       	movb   $0x0,0x4(%esp,%esi,1)
    828b:	e8 fc ff ff ff       	call   828c <ide_driver_proc_write+0x72>
			828c: R_386_PC32	device_release_driver
    8290:	b9 0a 00 00 00       	mov    $0xa,%ecx
    8295:	89 ea                	mov    %ebp,%edx
    8297:	8d 43 04             	lea    0x4(%ebx),%eax
    829a:	e8 fc ff ff ff       	call   829b <ide_driver_proc_write+0x81>
			829b: R_386_PC32	strlcpy
    829f:	89 f8                	mov    %edi,%eax
    82a1:	e8 fc ff ff ff       	call   82a2 <ide_driver_proc_write+0x88>
			82a2: R_386_PC32	device_attach
    82a6:	85 c0                	test   %eax,%eax
    82a8:	79 13                	jns    82bd <ide_driver_proc_write+0xa3>
    82aa:	50                   	push   %eax
    82ab:	68 e4 06 00 00       	push   $0x6e4
			82ac: R_386_32	.rodata
    82b0:	68 c3 1f 00 00       	push   $0x1fc3
			82b1: R_386_32	.rodata.str1.1
    82b5:	e8 fc ff ff ff       	call   82b6 <ide_driver_proc_write+0x9c>
			82b6: R_386_PC32	printk
    82ba:	83 c4 0c             	add    $0xc,%esp
    82bd:	83 bb d4 00 00 00 00 	cmpl   $0x0,0xd4(%ebx)
    82c4:	c6 43 04 00          	movb   $0x0,0x4(%ebx)
    82c8:	75 1e                	jne    82e8 <ide_driver_proc_write+0xce>
    82ca:	89 f8                	mov    %edi,%eax
    82cc:	e8 fc ff ff ff       	call   82cd <ide_driver_proc_write+0xb3>
			82cd: R_386_PC32	device_attach
    82d1:	85 c0                	test   %eax,%eax
    82d3:	79 13                	jns    82e8 <ide_driver_proc_write+0xce>
    82d5:	50                   	push   %eax
    82d6:	68 e4 06 00 00       	push   $0x6e4
			82d7: R_386_32	.rodata
    82db:	68 e8 1f 00 00       	push   $0x1fe8
			82dc: R_386_32	.rodata.str1.1
    82e0:	e8 fc ff ff ff       	call   82e1 <ide_driver_proc_write+0xc7>
			82e1: R_386_PC32	printk
    82e5:	83 c4 0c             	add    $0xc,%esp
    82e8:	8b 83 d4 00 00 00    	mov    0xd4(%ebx),%eax
    82ee:	85 c0                	test   %eax,%eax
    82f0:	74 11                	je     8303 <ide_driver_proc_write+0xe9>
    82f2:	8b 00                	mov    (%eax),%eax
    82f4:	8d 54 24 04          	lea    0x4(%esp),%edx
    82f8:	e8 fc ff ff ff       	call   82f9 <ide_driver_proc_write+0xdf>
			82f9: R_386_PC32	strcmp
    82fd:	89 f1                	mov    %esi,%ecx
    82ff:	85 c0                	test   %eax,%eax
    8301:	74 05                	je     8308 <ide_driver_proc_write+0xee>
    8303:	b9 ea ff ff ff       	mov    $0xffffffea,%ecx
    8308:	8b 54 24 24          	mov    0x24(%esp),%edx
    830c:	65 33 15 14 00 00 00 	xor    %gs:0x14,%edx
    8313:	89 c8                	mov    %ecx,%eax
    8315:	74 05                	je     831c <ide_driver_proc_write+0x102>
    8317:	e8 fc ff ff ff       	call   8318 <ide_driver_proc_write+0xfe>
			8318: R_386_PC32	__stack_chk_fail
    831c:	83 c4 28             	add    $0x28,%esp
    831f:	5b                   	pop    %ebx
    8320:	5e                   	pop    %esi
    8321:	5f                   	pop    %edi
    8322:	5d                   	pop    %ebp
    8323:	c3                   	ret    

00008324 <ide_proc_port_register_devices>:
    8324:	55                   	push   %ebp
    8325:	57                   	push   %edi
    8326:	89 c7                	mov    %eax,%edi
    8328:	56                   	push   %esi
    8329:	31 f6                	xor    %esi,%esi
    832b:	53                   	push   %ebx
    832c:	83 ec 48             	sub    $0x48,%esp
    832f:	8b 4f 04             	mov    0x4(%edi),%ecx
    8332:	65 a1 14 00 00 00    	mov    %gs:0x14,%eax
    8338:	89 44 24 44          	mov    %eax,0x44(%esp)
    833c:	31 c0                	xor    %eax,%eax
    833e:	8d 6c 24 04          	lea    0x4(%esp),%ebp
    8342:	89 0c 24             	mov    %ecx,(%esp)
    8345:	eb 56                	jmp    839d <ide_proc_port_register_devices+0x79>
    8347:	f6 43 30 40          	testb  $0x40,0x30(%ebx)
    834b:	74 4f                	je     839c <ide_proc_port_register_devices+0x78>
    834d:	8b 14 24             	mov    (%esp),%edx
    8350:	89 d8                	mov    %ebx,%eax
    8352:	e8 fc ff ff ff       	call   8353 <ide_proc_port_register_devices+0x2f>
			8353: R_386_PC32	proc_mkdir
    8357:	85 c0                	test   %eax,%eax
    8359:	89 43 20             	mov    %eax,0x20(%ebx)
    835c:	74 0c                	je     836a <ide_proc_port_register_devices+0x46>
    835e:	89 d9                	mov    %ebx,%ecx
    8360:	ba 18 03 00 00       	mov    $0x318,%edx
			8361: R_386_32	.data
    8365:	e8 0e f9 ff ff       	call   7c78 <ide_add_proc_entries>
    836a:	53                   	push   %ebx
    836b:	0f be 43 02          	movsbl 0x2(%ebx),%eax
    836f:	b9 02 00 00 00       	mov    $0x2,%ecx
    8374:	83 e8 61             	sub    $0x61,%eax
    8377:	99                   	cltd   
    8378:	f7 f9                	idiv   %ecx
    837a:	50                   	push   %eax
    837b:	68 10 20 00 00       	push   $0x2010
			837c: R_386_32	.rodata.str1.1
    8380:	55                   	push   %ebp
    8381:	e8 fc ff ff ff       	call   8382 <ide_proc_port_register_devices+0x5e>
			8382: R_386_PC32	sprintf
    8386:	8b 15 dc 00 00 00    	mov    0xdc,%edx
			8388: R_386_32	.bss
    838c:	89 e9                	mov    %ebp,%ecx
    838e:	89 d8                	mov    %ebx,%eax
    8390:	e8 fc ff ff ff       	call   8391 <ide_proc_port_register_devices+0x6d>
			8391: R_386_PC32	proc_symlink
    8395:	83 c4 10             	add    $0x10,%esp
    8398:	85 c0                	test   %eax,%eax
    839a:	74 0e                	je     83aa <ide_proc_port_register_devices+0x86>
    839c:	46                   	inc    %esi
    839d:	8b 5c b7 48          	mov    0x48(%edi,%esi,4),%ebx
    83a1:	85 db                	test   %ebx,%ebx
    83a3:	75 a2                	jne    8347 <ide_proc_port_register_devices+0x23>
    83a5:	83 fe 01             	cmp    $0x1,%esi
    83a8:	7e 9d                	jle    8347 <ide_proc_port_register_devices+0x23>
    83aa:	8b 44 24 44          	mov    0x44(%esp),%eax
    83ae:	65 33 05 14 00 00 00 	xor    %gs:0x14,%eax
    83b5:	74 05                	je     83bc <ide_proc_port_register_devices+0x98>
    83b7:	e8 fc ff ff ff       	call   83b8 <ide_proc_port_register_devices+0x94>
			83b8: R_386_PC32	__stack_chk_fail
    83bc:	83 c4 48             	add    $0x48,%esp
    83bf:	5b                   	pop    %ebx
    83c0:	5e                   	pop    %esi
    83c1:	5f                   	pop    %edi
    83c2:	5d                   	pop    %ebp
    83c3:	c3                   	ret    

000083c4 <ide_identify_proc_show>:
    83c4:	55                   	push   %ebp
    83c5:	57                   	push   %edi
    83c6:	89 c7                	mov    %eax,%edi
    83c8:	56                   	push   %esi
    83c9:	53                   	push   %ebx
    83ca:	83 ec 04             	sub    $0x4,%esp
    83cd:	8b 68 40             	mov    0x40(%eax),%ebp
    83d0:	85 ed                	test   %ebp,%ebp
    83d2:	75 0f                	jne    83e3 <ide_identify_proc_show+0x1f>
    83d4:	ba 0a 00 00 00       	mov    $0xa,%edx
    83d9:	e8 fc ff ff ff       	call   83da <ide_identify_proc_show+0x16>
			83da: R_386_PC32	seq_putc
    83de:	e9 aa 00 00 00       	jmp    848d <ide_identify_proc_show+0xc9>
    83e3:	ba d0 00 00 00       	mov    $0xd0,%edx
    83e8:	b8 24 09 00 00       	mov    $0x924,%eax
			83e9: R_386_32	kmalloc_caches
    83ed:	e8 fc ff ff ff       	call   83ee <ide_identify_proc_show+0x2a>
			83ee: R_386_PC32	kmem_cache_alloc
    83f2:	83 3d 04 00 00 00 00 	cmpl   $0x0,0x4
			83f4: R_386_32	__tracepoint_kmalloc
    83f9:	89 c3                	mov    %eax,%ebx
    83fb:	a1 28 09 00 00       	mov    0x928,%eax
			83fc: R_386_32	kmalloc_caches
    8400:	89 04 24             	mov    %eax,(%esp)
    8403:	74 2b                	je     8430 <ide_identify_proc_show+0x6c>
    8405:	8b 35 10 00 00 00    	mov    0x10,%esi
			8407: R_386_32	__tracepoint_kmalloc
    840b:	85 f6                	test   %esi,%esi
    840d:	74 21                	je     8430 <ide_identify_proc_show+0x6c>
    840f:	68 d0 00 00 00       	push   $0xd0
    8414:	89 da                	mov    %ebx,%edx
    8416:	ff 74 24 04          	pushl  0x4(%esp)
    841a:	b8 e3 83 00 00       	mov    $0x83e3,%eax
			841b: R_386_32	.text
    841f:	b9 00 02 00 00       	mov    $0x200,%ecx
    8424:	ff 16                	call   *(%esi)
    8426:	83 c6 04             	add    $0x4,%esi
    8429:	83 3e 00             	cmpl   $0x0,(%esi)
    842c:	58                   	pop    %eax
    842d:	5a                   	pop    %edx
    842e:	eb dd                	jmp    840d <ide_identify_proc_show+0x49>
    8430:	85 db                	test   %ebx,%ebx
    8432:	b8 f4 ff ff ff       	mov    $0xfffffff4,%eax
    8437:	74 56                	je     848f <ide_identify_proc_show+0xcb>
    8439:	89 da                	mov    %ebx,%edx
    843b:	89 e8                	mov    %ebp,%eax
    843d:	e8 fc ff ff ff       	call   843e <ide_identify_proc_show+0x7a>
			843e: R_386_PC32	taskfile_lib_get_identify
    8442:	85 c0                	test   %eax,%eax
    8444:	75 36                	jne    847c <ide_identify_proc_show+0xb8>
    8446:	31 f6                	xor    %esi,%esi
    8448:	bd 20 00 00 00       	mov    $0x20,%ebp
    844d:	89 f0                	mov    %esi,%eax
    844f:	83 e0 07             	and    $0x7,%eax
    8452:	83 f8 07             	cmp    $0x7,%eax
    8455:	b8 0a 00 00 00       	mov    $0xa,%eax
    845a:	0f 45 c5             	cmovne %ebp,%eax
    845d:	50                   	push   %eax
    845e:	0f b7 04 73          	movzwl (%ebx,%esi,2),%eax
    8462:	46                   	inc    %esi
    8463:	50                   	push   %eax
    8464:	68 19 20 00 00       	push   $0x2019
			8465: R_386_32	.rodata.str1.1
    8469:	57                   	push   %edi
    846a:	e8 fc ff ff ff       	call   846b <ide_identify_proc_show+0xa7>
			846b: R_386_PC32	seq_printf
    846f:	83 c4 10             	add    $0x10,%esp
    8472:	81 fe 00 01 00 00    	cmp    $0x100,%esi
    8478:	75 d3                	jne    844d <ide_identify_proc_show+0x89>
    847a:	eb 0a                	jmp    8486 <ide_identify_proc_show+0xc2>
    847c:	0f be 13             	movsbl (%ebx),%edx
    847f:	89 f8                	mov    %edi,%eax
    8481:	e8 fc ff ff ff       	call   8482 <ide_identify_proc_show+0xbe>
			8482: R_386_PC32	seq_putc
    8486:	89 d8                	mov    %ebx,%eax
    8488:	e8 fc ff ff ff       	call   8489 <ide_identify_proc_show+0xc5>
			8489: R_386_PC32	kfree
    848d:	31 c0                	xor    %eax,%eax
    848f:	5d                   	pop    %ebp
    8490:	5b                   	pop    %ebx
    8491:	5e                   	pop    %esi
    8492:	5f                   	pop    %edi
    8493:	5d                   	pop    %ebp
    8494:	c3                   	ret    
    8495:	00 00                	add    %al,(%eax)
	...

Disassembly of section .exit.text:

00000000 <cleanup_module>:
   0:	e8 fc ff ff ff       	call   1 <cleanup_module+0x1>
			1: R_386_PC32	proc_ide_destroy
   5:	a1 00 00 00 00       	mov    0x0,%eax
			6: R_386_32	ide_port_class
   a:	e8 fc ff ff ff       	call   b <cleanup_module+0xb>
			b: R_386_PC32	class_destroy
   f:	b8 00 00 00 00       	mov    $0x0,%eax
			10: R_386_32	ide_bus_type
  14:	e9 fc ff ff ff       	jmp    15 <cleanup_module+0x15>
			15: R_386_PC32	bus_unregister

Disassembly of section .init.text:

00000000 <init_module>:
   0:	53                   	push   %ebx
   1:	68 7f 01 00 00       	push   $0x17f
			2: R_386_32	.rodata.str1.1
   6:	e8 fc ff ff ff       	call   7 <init_module+0x7>
			7: R_386_PC32	printk
   b:	b8 00 00 00 00       	mov    $0x0,%eax
			c: R_386_32	ide_bus_type
  10:	e8 fc ff ff ff       	call   11 <init_module+0x11>
			11: R_386_PC32	bus_register
  15:	59                   	pop    %ecx
  16:	85 c0                	test   %eax,%eax
  18:	89 c3                	mov    %eax,%ebx
  1a:	79 0f                	jns    2b <init_module+0x2b>
  1c:	50                   	push   %eax
  1d:	68 a7 01 00 00       	push   $0x1a7
			1e: R_386_32	.rodata.str1.1
  22:	e8 fc ff ff ff       	call   23 <init_module+0x23>
			23: R_386_PC32	printk
  27:	58                   	pop    %eax
  28:	5a                   	pop    %edx
  29:	eb 35                	jmp    60 <init_module+0x60>
  2b:	b9 0c 00 00 00       	mov    $0xc,%ecx
			2c: R_386_32	.bss
  30:	ba c7 01 00 00       	mov    $0x1c7,%edx
			31: R_386_32	.rodata.str1.1
  35:	b8 00 00 00 00       	mov    $0x0,%eax
			36: R_386_32	__this_module
  3a:	e8 fc ff ff ff       	call   3b <init_module+0x3b>
			3b: R_386_PC32	__class_create
  3f:	3d 00 f0 ff ff       	cmp    $0xfffff000,%eax
  44:	a3 00 00 00 00       	mov    %eax,0x0
			45: R_386_32	ide_port_class
  49:	77 09                	ja     54 <init_module+0x54>
  4b:	e8 fc ff ff ff       	call   4c <init_module+0x4c>
			4c: R_386_PC32	proc_ide_create
  50:	31 db                	xor    %ebx,%ebx
  52:	eb 0c                	jmp    60 <init_module+0x60>
  54:	89 c3                	mov    %eax,%ebx
  56:	b8 00 00 00 00       	mov    $0x0,%eax
			57: R_386_32	ide_bus_type
  5b:	e8 fc ff ff ff       	call   5c <init_module+0x5c>
			5c: R_386_PC32	bus_unregister
  60:	89 d8                	mov    %ebx,%eax
  62:	5b                   	pop    %ebx
  63:	c3                   	ret    
