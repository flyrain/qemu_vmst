!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
AC_MASK	cpu.h	119;"	d
Addr	hash_helper.h	/^typedef  unsigned int Addr;$/;"	t
AddrH	hash_helper.h	/^typedef UWord                  AddrH;     \/\/ 32             64$/;"	t
B	ops_sse.h	2083;"	d
B	ops_sse.h	23;"	d
B	ops_sse.h	31;"	d
BIASEXPONENT	op_helper.c	69;"	d	file:
BUGGY_64	translate.c	48;"	d	file:
BUS_MCEERR_AO	kvm.c	50;"	d	file:
BUS_MCEERR_AR	kvm.c	47;"	d	file:
BasicBlockHashTable	hash_helper.h	/^typedef struct _BasicBlockHashTable * BasicBlockHashTable;$/;"	t	typeref:struct:_BasicBlockHashTable
Bool	hash_helper.h	/^typedef  unsigned char  Bool;$/;"	t
CCTable	cpu.h	/^typedef struct CCTable {$/;"	s
CCTable	cpu.h	/^} CCTable;$/;"	t	typeref:struct:CCTable
CC_A	cpu.h	103;"	d
CC_C	cpu.h	101;"	d
CC_DST	cpu.h	984;"	d
CC_O	cpu.h	106;"	d
CC_OP	cpu.h	985;"	d
CC_OP_ADCB	cpu.h	/^    CC_OP_ADCB, \/* modify all flags, CC_DST = res, CC_SRC = src1 *\/$/;"	e	enum:__anon1
CC_OP_ADCL	cpu.h	/^    CC_OP_ADCL,$/;"	e	enum:__anon1
CC_OP_ADCQ	cpu.h	/^    CC_OP_ADCQ,$/;"	e	enum:__anon1
CC_OP_ADCW	cpu.h	/^    CC_OP_ADCW,$/;"	e	enum:__anon1
CC_OP_ADDB	cpu.h	/^    CC_OP_ADDB, \/* modify all flags, CC_DST = res, CC_SRC = src1 *\/$/;"	e	enum:__anon1
CC_OP_ADDL	cpu.h	/^    CC_OP_ADDL,$/;"	e	enum:__anon1
CC_OP_ADDQ	cpu.h	/^    CC_OP_ADDQ,$/;"	e	enum:__anon1
CC_OP_ADDW	cpu.h	/^    CC_OP_ADDW,$/;"	e	enum:__anon1
CC_OP_DECB	cpu.h	/^    CC_OP_DECB, \/* modify all flags except, CC_DST = res, CC_SRC = C  *\/$/;"	e	enum:__anon1
CC_OP_DECL	cpu.h	/^    CC_OP_DECL,$/;"	e	enum:__anon1
CC_OP_DECQ	cpu.h	/^    CC_OP_DECQ,$/;"	e	enum:__anon1
CC_OP_DECW	cpu.h	/^    CC_OP_DECW,$/;"	e	enum:__anon1
CC_OP_DYNAMIC	cpu.h	/^    CC_OP_DYNAMIC, \/* must use dynamic code to get cc_op *\/$/;"	e	enum:__anon1
CC_OP_EFLAGS	cpu.h	/^    CC_OP_EFLAGS,  \/* all cc are explicitly computed, CC_SRC = flags *\/$/;"	e	enum:__anon1
CC_OP_INCB	cpu.h	/^    CC_OP_INCB, \/* modify all flags except, CC_DST = res, CC_SRC = C *\/$/;"	e	enum:__anon1
CC_OP_INCL	cpu.h	/^    CC_OP_INCL,$/;"	e	enum:__anon1
CC_OP_INCQ	cpu.h	/^    CC_OP_INCQ,$/;"	e	enum:__anon1
CC_OP_INCW	cpu.h	/^    CC_OP_INCW,$/;"	e	enum:__anon1
CC_OP_LOGICB	cpu.h	/^    CC_OP_LOGICB, \/* modify all flags, CC_DST = res *\/$/;"	e	enum:__anon1
CC_OP_LOGICL	cpu.h	/^    CC_OP_LOGICL,$/;"	e	enum:__anon1
CC_OP_LOGICQ	cpu.h	/^    CC_OP_LOGICQ,$/;"	e	enum:__anon1
CC_OP_LOGICW	cpu.h	/^    CC_OP_LOGICW,$/;"	e	enum:__anon1
CC_OP_MULB	cpu.h	/^    CC_OP_MULB, \/* modify all flags, C, O = (CC_SRC != 0) *\/$/;"	e	enum:__anon1
CC_OP_MULL	cpu.h	/^    CC_OP_MULL,$/;"	e	enum:__anon1
CC_OP_MULQ	cpu.h	/^    CC_OP_MULQ,$/;"	e	enum:__anon1
CC_OP_MULW	cpu.h	/^    CC_OP_MULW,$/;"	e	enum:__anon1
CC_OP_NB	cpu.h	/^    CC_OP_NB,$/;"	e	enum:__anon1
CC_OP_SARB	cpu.h	/^    CC_OP_SARB, \/* modify all flags, CC_DST = res, CC_SRC.lsb = C *\/$/;"	e	enum:__anon1
CC_OP_SARL	cpu.h	/^    CC_OP_SARL,$/;"	e	enum:__anon1
CC_OP_SARQ	cpu.h	/^    CC_OP_SARQ,$/;"	e	enum:__anon1
CC_OP_SARW	cpu.h	/^    CC_OP_SARW,$/;"	e	enum:__anon1
CC_OP_SBBB	cpu.h	/^    CC_OP_SBBB, \/* modify all flags, CC_DST = res, CC_SRC = src1 *\/$/;"	e	enum:__anon1
CC_OP_SBBL	cpu.h	/^    CC_OP_SBBL,$/;"	e	enum:__anon1
CC_OP_SBBQ	cpu.h	/^    CC_OP_SBBQ,$/;"	e	enum:__anon1
CC_OP_SBBW	cpu.h	/^    CC_OP_SBBW,$/;"	e	enum:__anon1
CC_OP_SHLB	cpu.h	/^    CC_OP_SHLB, \/* modify all flags, CC_DST = res, CC_SRC.msb = C *\/$/;"	e	enum:__anon1
CC_OP_SHLL	cpu.h	/^    CC_OP_SHLL,$/;"	e	enum:__anon1
CC_OP_SHLQ	cpu.h	/^    CC_OP_SHLQ,$/;"	e	enum:__anon1
CC_OP_SHLW	cpu.h	/^    CC_OP_SHLW,$/;"	e	enum:__anon1
CC_OP_SUBB	cpu.h	/^    CC_OP_SUBB, \/* modify all flags, CC_DST = res, CC_SRC = src1 *\/$/;"	e	enum:__anon1
CC_OP_SUBL	cpu.h	/^    CC_OP_SUBL,$/;"	e	enum:__anon1
CC_OP_SUBQ	cpu.h	/^    CC_OP_SUBQ,$/;"	e	enum:__anon1
CC_OP_SUBW	cpu.h	/^    CC_OP_SUBW,$/;"	e	enum:__anon1
CC_P	cpu.h	102;"	d
CC_S	cpu.h	105;"	d
CC_SRC	cpu.h	983;"	d
CC_Z	cpu.h	104;"	d
CHAIN_NO	hash_helper.h	111;"	d
CODE64	translate.c	43;"	d	file:
CODE64	translate.c	53;"	d	file:
CPUID_ACPI	cpu.h	367;"	d
CPUID_APIC	cpu.h	356;"	d
CPUID_CLFLUSH	cpu.h	365;"	d
CPUID_CMOV	cpu.h	361;"	d
CPUID_CX8	cpu.h	355;"	d
CPUID_DE	cpu.h	349;"	d
CPUID_DTS	cpu.h	366;"	d
CPUID_EXT2_3DNOW	cpu.h	410;"	d
CPUID_EXT2_3DNOWEXT	cpu.h	409;"	d
CPUID_EXT2_FFXSR	cpu.h	405;"	d
CPUID_EXT2_LM	cpu.h	408;"	d
CPUID_EXT2_MMXEXT	cpu.h	404;"	d
CPUID_EXT2_MP	cpu.h	402;"	d
CPUID_EXT2_NX	cpu.h	403;"	d
CPUID_EXT2_PDPE1GB	cpu.h	406;"	d
CPUID_EXT2_RDTSCP	cpu.h	407;"	d
CPUID_EXT2_SYSCALL	cpu.h	401;"	d
CPUID_EXT3_3DNOWPREFETCH	cpu.h	420;"	d
CPUID_EXT3_ABM	cpu.h	417;"	d
CPUID_EXT3_CMP_LEG	cpu.h	413;"	d
CPUID_EXT3_CR8LEG	cpu.h	416;"	d
CPUID_EXT3_EXTAPIC	cpu.h	415;"	d
CPUID_EXT3_IBS	cpu.h	422;"	d
CPUID_EXT3_LAHF_LM	cpu.h	412;"	d
CPUID_EXT3_MISALIGNSSE	cpu.h	419;"	d
CPUID_EXT3_OSVW	cpu.h	421;"	d
CPUID_EXT3_SKINIT	cpu.h	423;"	d
CPUID_EXT3_SSE4A	cpu.h	418;"	d
CPUID_EXT3_SVM	cpu.h	414;"	d
CPUID_EXT_CID	cpu.h	387;"	d
CPUID_EXT_CX16	cpu.h	388;"	d
CPUID_EXT_DCA	cpu.h	391;"	d
CPUID_EXT_DSCPL	cpu.h	381;"	d
CPUID_EXT_DTES64	cpu.h	379;"	d
CPUID_EXT_EST	cpu.h	384;"	d
CPUID_EXT_HYPERVISOR	cpu.h	399;"	d
CPUID_EXT_MONITOR	cpu.h	380;"	d
CPUID_EXT_MOVBE	cpu.h	395;"	d
CPUID_EXT_OSXSAVE	cpu.h	398;"	d
CPUID_EXT_PDCM	cpu.h	390;"	d
CPUID_EXT_POPCNT	cpu.h	396;"	d
CPUID_EXT_SMX	cpu.h	383;"	d
CPUID_EXT_SSE3	cpu.h	378;"	d
CPUID_EXT_SSE41	cpu.h	392;"	d
CPUID_EXT_SSE42	cpu.h	393;"	d
CPUID_EXT_SSSE3	cpu.h	386;"	d
CPUID_EXT_TM2	cpu.h	385;"	d
CPUID_EXT_VMX	cpu.h	382;"	d
CPUID_EXT_X2APIC	cpu.h	394;"	d
CPUID_EXT_XSAVE	cpu.h	397;"	d
CPUID_EXT_XTPR	cpu.h	389;"	d
CPUID_FP87	cpu.h	347;"	d
CPUID_FXSR	cpu.h	369;"	d
CPUID_HT	cpu.h	373;"	d
CPUID_IA64	cpu.h	375;"	d
CPUID_MCA	cpu.h	360;"	d
CPUID_MCE	cpu.h	354;"	d
CPUID_MMX	cpu.h	368;"	d
CPUID_MSR	cpu.h	352;"	d
CPUID_MTRR	cpu.h	358;"	d
CPUID_MWAIT_EMX	cpu.h	449;"	d
CPUID_MWAIT_IBE	cpu.h	448;"	d
CPUID_PAE	cpu.h	353;"	d
CPUID_PAT	cpu.h	362;"	d
CPUID_PBE	cpu.h	376;"	d
CPUID_PGE	cpu.h	359;"	d
CPUID_PN	cpu.h	364;"	d
CPUID_PSE	cpu.h	350;"	d
CPUID_PSE36	cpu.h	363;"	d
CPUID_SEP	cpu.h	357;"	d
CPUID_SS	cpu.h	372;"	d
CPUID_SSE	cpu.h	370;"	d
CPUID_SSE2	cpu.h	371;"	d
CPUID_SVM_DECODEASSIST	cpu.h	432;"	d
CPUID_SVM_FLUSHASID	cpu.h	431;"	d
CPUID_SVM_LBRV	cpu.h	426;"	d
CPUID_SVM_NPT	cpu.h	425;"	d
CPUID_SVM_NRIPSAVE	cpu.h	428;"	d
CPUID_SVM_PAUSEFILTER	cpu.h	433;"	d
CPUID_SVM_PFTHRESHOLD	cpu.h	434;"	d
CPUID_SVM_SVMLOCK	cpu.h	427;"	d
CPUID_SVM_TSCSCALE	cpu.h	429;"	d
CPUID_SVM_VMCBCLEAN	cpu.h	430;"	d
CPUID_TM	cpu.h	374;"	d
CPUID_TSC	cpu.h	351;"	d
CPUID_VENDOR_AMD_1	cpu.h	440;"	d
CPUID_VENDOR_AMD_2	cpu.h	441;"	d
CPUID_VENDOR_AMD_3	cpu.h	442;"	d
CPUID_VENDOR_INTEL_1	cpu.h	436;"	d
CPUID_VENDOR_INTEL_2	cpu.h	437;"	d
CPUID_VENDOR_INTEL_3	cpu.h	438;"	d
CPUID_VENDOR_VIA_1	cpu.h	444;"	d
CPUID_VENDOR_VIA_2	cpu.h	445;"	d
CPUID_VENDOR_VIA_3	cpu.h	446;"	d
CPUID_VME	cpu.h	348;"	d
CPUState	cpu.h	45;"	d
CPUX86State	cpu.h	/^typedef struct CPUX86State {$/;"	s
CPUX86State	cpu.h	/^} CPUX86State;$/;"	t	typeref:struct:CPUX86State
CPU_I386_H	cpu.h	20;"	d
CPU_INTERRUPT_INIT	cpu.h	478;"	d
CPU_INTERRUPT_MCE	cpu.h	476;"	d
CPU_INTERRUPT_NMI	cpu.h	475;"	d
CPU_INTERRUPT_SIPI	cpu.h	479;"	d
CPU_INTERRUPT_SMI	cpu.h	474;"	d
CPU_INTERRUPT_VIRQ	cpu.h	477;"	d
CPU_NB_REGS	cpu.h	604;"	d
CPU_NB_REGS	cpu.h	606;"	d
CPU_NB_REGS32	cpu.h	601;"	d
CPU_NB_REGS64	cpu.h	600;"	d
CPU_SAVE_VERSION	cpu.h	952;"	d
CR0_AM_MASK	cpu.h	198;"	d
CR0_EM_MASK	cpu.h	193;"	d
CR0_ET_MASK	cpu.h	195;"	d
CR0_MP_MASK	cpu.h	192;"	d
CR0_MP_SHIFT	cpu.h	189;"	d
CR0_NE_MASK	cpu.h	196;"	d
CR0_PE_MASK	cpu.h	191;"	d
CR0_PE_SHIFT	cpu.h	188;"	d
CR0_PG_MASK	cpu.h	199;"	d
CR0_TS_MASK	cpu.h	194;"	d
CR0_WP_MASK	cpu.h	197;"	d
CR4_DE_MASK	cpu.h	204;"	d
CR4_MCE_MASK	cpu.h	207;"	d
CR4_OSFXSR_MASK	cpu.h	211;"	d
CR4_OSFXSR_SHIFT	cpu.h	210;"	d
CR4_OSXMMEXCPT_MASK	cpu.h	212;"	d
CR4_PAE_MASK	cpu.h	206;"	d
CR4_PCE_MASK	cpu.h	209;"	d
CR4_PGE_MASK	cpu.h	208;"	d
CR4_PSE_MASK	cpu.h	205;"	d
CR4_PVI_MASK	cpu.h	202;"	d
CR4_TSD_MASK	cpu.h	203;"	d
CR4_VME_MASK	cpu.h	201;"	d
CRCPOLY	ops_sse.h	2042;"	d
CRCPOLY_BITREV	ops_sse.h	2043;"	d
Char	hash_helper.h	/^typedef    signed char   Char;$/;"	t
DATA_BITS	helper_template.h	19;"	d
DATA_BITS	helper_template.h	327;"	d
DATA_MASK	helper_template.h	32;"	d
DATA_MASK	helper_template.h	333;"	d
DATA_MASK	helper_template.h	37;"	d
DATA_MASK	helper_template.h	42;"	d
DATA_MASK	helper_template.h	47;"	d
DATA_STYPE	helper_template.h	31;"	d
DATA_STYPE	helper_template.h	332;"	d
DATA_STYPE	helper_template.h	36;"	d
DATA_STYPE	helper_template.h	41;"	d
DATA_STYPE	helper_template.h	46;"	d
DATA_TYPE	helper_template.h	30;"	d
DATA_TYPE	helper_template.h	331;"	d
DATA_TYPE	helper_template.h	35;"	d
DATA_TYPE	helper_template.h	40;"	d
DATA_TYPE	helper_template.h	45;"	d
DEBUG_HASH	hash_helper.c	40;"	d	file:
DECLTYPE	uthash.h	37;"	d
DECLTYPE	uthash.h	40;"	d
DECLTYPE	uthash.h	43;"	d
DECLTYPE_ASSIGN	uthash.h	47;"	d
DECLTYPE_ASSIGN	uthash.h	53;"	d
DESC_AVL_MASK	cpu.h	82;"	d
DESC_A_MASK	cpu.h	89;"	d
DESC_B_MASK	cpu.h	79;"	d
DESC_B_SHIFT	cpu.h	78;"	d
DESC_CS_MASK	cpu.h	91;"	d
DESC_C_MASK	cpu.h	92;"	d
DESC_DPL_MASK	cpu.h	85;"	d
DESC_DPL_SHIFT	cpu.h	84;"	d
DESC_E_MASK	cpu.h	95;"	d
DESC_G_MASK	cpu.h	77;"	d
DESC_L_MASK	cpu.h	81;"	d
DESC_L_SHIFT	cpu.h	80;"	d
DESC_P_MASK	cpu.h	83;"	d
DESC_R_MASK	cpu.h	93;"	d
DESC_S_MASK	cpu.h	86;"	d
DESC_TSS_BUSY_MASK	cpu.h	98;"	d
DESC_TYPE_MASK	cpu.h	88;"	d
DESC_TYPE_SHIFT	cpu.h	87;"	d
DESC_W_MASK	cpu.h	96;"	d
DF	cpu.h	981;"	d
DF_MASK	cpu.h	114;"	d
DPRINTF	kvm.c	36;"	d	file:
DPRINTF	kvm.c	39;"	d	file:
DR6_BD	cpu.h	214;"	d
DR6_BS	cpu.h	215;"	d
DR6_BT	cpu.h	216;"	d
DR6_FIXED_1	cpu.h	217;"	d
DR7_FIXED_1	cpu.h	222;"	d
DR7_GD	cpu.h	219;"	d
DR7_LEN_SHIFT	cpu.h	221;"	d
DR7_TYPE_SHIFT	cpu.h	220;"	d
DUMP_CODE_BYTES_BACKWARD	helper.c	254;"	d	file:
DUMP_CODE_BYTES_TOTAL	helper.c	253;"	d	file:
DisasContext	translate.c	/^typedef struct DisasContext {$/;"	s	file:
DisasContext	translate.c	/^} DisasContext;$/;"	t	typeref:struct:DisasContext	file:
Double	hash_helper.h	/^typedef  double  Double;   \/* IEEE754 double-precision (64-bit) value *\/$/;"	t
EAX	cpu.h	963;"	d
EAX	cpu.h	964;"	d
EBP	cpu.h	973;"	d
EBP	cpu.h	974;"	d
EBX	cpu.h	969;"	d
EBX	cpu.h	970;"	d
ECX	cpu.h	965;"	d
ECX	cpu.h	966;"	d
EDI	cpu.h	977;"	d
EDI	cpu.h	978;"	d
EDX	cpu.h	967;"	d
EDX	cpu.h	968;"	d
EIP	cpu.h	979;"	d
EIP	cpu.h	980;"	d
ELF_MACHINE	cpu.h	40;"	d
ELF_MACHINE	cpu.h	42;"	d
ELMT_FROM_HH	uthash.h	82;"	d
ENSURE_MAPPABLE	backup/mem_write_shadow.c	25;"	d	file:
ENSURE_MAPPABLE	mem_shadow.c	25;"	d	file:
ENSURE_MAPPABLE_BYTE_GRANUITY	backup/mem_write_shadow.c	32;"	d	file:
ENSURE_MAPPABLE_BYTE_GRANUITY	mem_shadow.c	32;"	d	file:
ESI	cpu.h	975;"	d
ESI	cpu.h	976;"	d
ESP	cpu.h	971;"	d
ESP	cpu.h	972;"	d
EXCP00_DIVZ	cpu.h	451;"	d
EXCP01_DB	cpu.h	452;"	d
EXCP02_NMI	cpu.h	453;"	d
EXCP03_INT3	cpu.h	454;"	d
EXCP04_INTO	cpu.h	455;"	d
EXCP05_BOUND	cpu.h	456;"	d
EXCP06_ILLOP	cpu.h	457;"	d
EXCP07_PREX	cpu.h	458;"	d
EXCP08_DBLE	cpu.h	459;"	d
EXCP09_XERR	cpu.h	460;"	d
EXCP0A_TSS	cpu.h	461;"	d
EXCP0B_NOSEG	cpu.h	462;"	d
EXCP0C_STACK	cpu.h	463;"	d
EXCP0D_GPF	cpu.h	464;"	d
EXCP0E_PAGE	cpu.h	465;"	d
EXCP10_COPR	cpu.h	466;"	d
EXCP11_ALGN	cpu.h	467;"	d
EXCP12_MCHK	cpu.h	468;"	d
EXCP_SYSCALL	cpu.h	470;"	d
EXPBIAS	op_helper.c	65;"	d	file:
EXPBIAS1	machine.c	94;"	d	file:
EXPD	op_helper.c	66;"	d	file:
EXPD1	machine.c	95;"	d	file:
EXT2_FEATURE_MASK	cpuid.c	250;"	d	file:
FABSB	ops_sse.h	1418;"	d
FABSL	ops_sse.h	1420;"	d
FABSW	ops_sse.h	1419;"	d
FADD	ops_sse.h	327;"	d
FADDSB	ops_sse.h	330;"	d
FADDSW	ops_sse.h	331;"	d
FADDUB	ops_sse.h	328;"	d
FADDUW	ops_sse.h	329;"	d
FAND	ops_sse.h	343;"	d
FANDN	ops_sse.h	344;"	d
FAVG	ops_sse.h	358;"	d
FBLENDP	ops_sse.h	1766;"	d
FBLENDVB	ops_sse.h	1523;"	d
FBLENDVPD	ops_sse.h	1525;"	d
FBLENDVPS	ops_sse.h	1524;"	d
FCMPEQ	ops_sse.h	351;"	d
FCMPEQQ	ops_sse.h	1574;"	d
FCMPGTB	ops_sse.h	348;"	d
FCMPGTL	ops_sse.h	350;"	d
FCMPGTQ	ops_sse.h	1833;"	d
FCMPGTW	ops_sse.h	349;"	d
FMAXSB	ops_sse.h	1591;"	d
FMAXSD	ops_sse.h	1592;"	d
FMAXSW	ops_sse.h	341;"	d
FMAXUB	ops_sse.h	340;"	d
FMINSB	ops_sse.h	1589;"	d
FMINSD	ops_sse.h	1590;"	d
FMINSW	ops_sse.h	339;"	d
FMINUB	ops_sse.h	338;"	d
FMULHRSW	ops_sse.h	1425;"	d
FMULHRW	ops_sse.h	354;"	d
FMULHUW	ops_sse.h	355;"	d
FMULHW	ops_sse.h	356;"	d
FMULLD	ops_sse.h	1602;"	d
FMULLW	ops_sse.h	353;"	d
FOR	ops_sse.h	345;"	d
FPReg	cpu.h	/^} FPReg;$/;"	t	typeref:union:__anon4
FPUC_EM	op_helper.c	111;"	d	file:
FPUS_B	op_helper.c	109;"	d	file:
FPUS_DE	op_helper.c	102;"	d	file:
FPUS_IE	op_helper.c	101;"	d	file:
FPUS_OE	op_helper.c	104;"	d	file:
FPUS_PE	op_helper.c	106;"	d	file:
FPUS_SE	op_helper.c	108;"	d	file:
FPUS_SF	op_helper.c	107;"	d	file:
FPUS_UE	op_helper.c	105;"	d	file:
FPUS_ZE	op_helper.c	103;"	d	file:
FPU_ADD	ops_sse.h	583;"	d
FPU_CMPEQ	ops_sse.h	934;"	d
FPU_CMPLE	ops_sse.h	936;"	d
FPU_CMPLT	ops_sse.h	935;"	d
FPU_CMPNEQ	ops_sse.h	938;"	d
FPU_CMPNLE	ops_sse.h	940;"	d
FPU_CMPNLT	ops_sse.h	939;"	d
FPU_CMPORD	ops_sse.h	941;"	d
FPU_CMPUNORD	ops_sse.h	937;"	d
FPU_DIV	ops_sse.h	586;"	d
FPU_MAX	ops_sse.h	588;"	d
FPU_MIN	ops_sse.h	587;"	d
FPU_MUL	ops_sse.h	585;"	d
FPU_SQRT	ops_sse.h	589;"	d
FPU_SUB	ops_sse.h	584;"	d
FSIGNB	ops_sse.h	1428;"	d
FSIGNL	ops_sse.h	1430;"	d
FSIGNW	ops_sse.h	1429;"	d
FSUB	ops_sse.h	333;"	d
FSUBSB	ops_sse.h	336;"	d
FSUBSW	ops_sse.h	337;"	d
FSUBUB	ops_sse.h	334;"	d
FSUBUW	ops_sse.h	335;"	d
FT0	cpu.h	988;"	d
FXOR	ops_sse.h	346;"	d
False	hash_helper.h	70;"	d
Float	hash_helper.h	/^typedef  float   Float;    \/* IEEE754 single-precision (32-bit) value *\/$/;"	t
GEN_HELPER	translate.c	31;"	d	file:
GEN_HELPER	translate.c	7727;"	d	file:
GEN_REPZ	translate.c	1218;"	d	file:
GEN_REPZ2	translate.c	1234;"	d	file:
GetEBP	backup/main.c	/^uint32_t GetEBP()$/;"	f
GetEBP	main.c	/^uint32_t GetEBP()$/;"	f
HASH_ADD	uthash.h	149;"	d
HASH_ADD_INT	uthash.h	237;"	d
HASH_ADD_KEYPTR	uthash.h	152;"	d
HASH_ADD_PTR	uthash.h	241;"	d
HASH_ADD_STR	uthash.h	233;"	d
HASH_ADD_TO_BKT	uthash.h	582;"	d
HASH_BER	uthash.h	328;"	d
HASH_BKT_CAPACITY_THRESH	uthash.h	79;"	d
HASH_BLOOM_ADD	uthash.h	117;"	d
HASH_BLOOM_ADD	uthash.h	126;"	d
HASH_BLOOM_BITLEN	uthash.h	98;"	d
HASH_BLOOM_BITSET	uthash.h	114;"	d
HASH_BLOOM_BITTEST	uthash.h	115;"	d
HASH_BLOOM_BYTELEN	uthash.h	99;"	d
HASH_BLOOM_FREE	uthash.h	109;"	d
HASH_BLOOM_FREE	uthash.h	125;"	d
HASH_BLOOM_MAKE	uthash.h	100;"	d
HASH_BLOOM_MAKE	uthash.h	124;"	d
HASH_BLOOM_SIGNATURE	uthash.h	858;"	d
HASH_BLOOM_TEST	uthash.h	120;"	d
HASH_BLOOM_TEST	uthash.h	127;"	d
HASH_CLEAR	uthash.h	812;"	d
HASH_CNT	uthash.h	834;"	d
HASH_COUNT	uthash.h	833;"	d
HASH_DEL	uthash.h	243;"	d
HASH_DELETE	uthash.h	194;"	d
HASH_DEL_IN_BKT	uthash.h	596;"	d
HASH_EMIT_KEY	uthash.h	310;"	d
HASH_EMIT_KEY	uthash.h	317;"	d
HASH_EXPAND_BUCKETS	uthash.h	637;"	d
HASH_FCN	uthash.h	322;"	d
HASH_FCN	uthash.h	324;"	d
HASH_FIND	uthash.h	84;"	d
HASH_FIND_INT	uthash.h	235;"	d
HASH_FIND_IN_BKT	uthash.h	568;"	d
HASH_FIND_PTR	uthash.h	239;"	d
HASH_FIND_STR	uthash.h	231;"	d
HASH_FNV	uthash.h	350;"	d
HASH_FSCK	uthash.h	251;"	d
HASH_FSCK	uthash.h	303;"	d
HASH_INITIAL_NUM_BUCKETS	uthash.h	77;"	d
HASH_INITIAL_NUM_BUCKETS_LOG2	uthash.h	78;"	d
HASH_ITER	uthash.h	823;"	d
HASH_ITER	uthash.h	827;"	d
HASH_JEN	uthash.h	389;"	d
HASH_JEN_MIX	uthash.h	376;"	d
HASH_KEYCMP	uthash.h	565;"	d
HASH_MAKE_TABLE	uthash.h	130;"	d
HASH_MUR	uthash.h	527;"	d
HASH_OAT	uthash.h	360;"	d
HASH_OOPS	uthash.h	250;"	d
HASH_SAX	uthash.h	340;"	d
HASH_SELECT	uthash.h	774;"	d
HASH_SFH	uthash.h	441;"	d
HASH_SIGNATURE	uthash.h	857;"	d
HASH_SORT	uthash.h	689;"	d
HASH_SRT	uthash.h	690;"	d
HASH_TO_BKT	uthash.h	177;"	d
HChar	hash_helper.h	/^typedef           char   HChar; \/* signfulness depends on host *\/$/;"	t
HF2_GIF_MASK	cpu.h	183;"	d
HF2_GIF_SHIFT	cpu.h	178;"	d
HF2_HIF_MASK	cpu.h	184;"	d
HF2_HIF_SHIFT	cpu.h	179;"	d
HF2_NMI_MASK	cpu.h	185;"	d
HF2_NMI_SHIFT	cpu.h	180;"	d
HF2_VINTR_MASK	cpu.h	186;"	d
HF2_VINTR_SHIFT	cpu.h	181;"	d
HFLAG_COPY_MASK	kvm.c	1072;"	d	file:
HF_ADDSEG_MASK	cpu.h	160;"	d
HF_ADDSEG_SHIFT	cpu.h	138;"	d
HF_CPL_MASK	cpu.h	155;"	d
HF_CPL_SHIFT	cpu.h	129;"	d
HF_CS32_MASK	cpu.h	158;"	d
HF_CS32_SHIFT	cpu.h	135;"	d
HF_CS64_MASK	cpu.h	168;"	d
HF_CS64_SHIFT	cpu.h	147;"	d
HF_EM_MASK	cpu.h	164;"	d
HF_EM_SHIFT	cpu.h	143;"	d
HF_INHIBIT_IRQ_MASK	cpu.h	157;"	d
HF_INHIBIT_IRQ_SHIFT	cpu.h	133;"	d
HF_IOPL_MASK	cpu.h	166;"	d
HF_IOPL_SHIFT	cpu.h	145;"	d
HF_LMA_MASK	cpu.h	167;"	d
HF_LMA_SHIFT	cpu.h	146;"	d
HF_MP_MASK	cpu.h	163;"	d
HF_MP_SHIFT	cpu.h	142;"	d
HF_OSFXSR_MASK	cpu.h	174;"	d
HF_OSFXSR_SHIFT	cpu.h	153;"	d
HF_PE_MASK	cpu.h	161;"	d
HF_PE_SHIFT	cpu.h	140;"	d
HF_RF_MASK	cpu.h	169;"	d
HF_RF_SHIFT	cpu.h	148;"	d
HF_SMM_MASK	cpu.h	171;"	d
HF_SMM_SHIFT	cpu.h	150;"	d
HF_SOFTMMU_MASK	cpu.h	156;"	d
HF_SOFTMMU_SHIFT	cpu.h	131;"	d
HF_SS32_MASK	cpu.h	159;"	d
HF_SS32_SHIFT	cpu.h	136;"	d
HF_SVME_MASK	cpu.h	172;"	d
HF_SVME_SHIFT	cpu.h	151;"	d
HF_SVMI_MASK	cpu.h	173;"	d
HF_SVMI_SHIFT	cpu.h	152;"	d
HF_TF_MASK	cpu.h	162;"	d
HF_TF_SHIFT	cpu.h	141;"	d
HF_TS_MASK	cpu.h	165;"	d
HF_TS_SHIFT	cpu.h	144;"	d
HF_VM_MASK	cpu.h	170;"	d
HF_VM_SHIFT	cpu.h	149;"	d
HT_Next	hash_helper.c	/^void* HT_Next(BasicBlockHashTable table)$/;"	f
HT_ResetIter	hash_helper.c	/^void HT_ResetIter(BasicBlockHashTable table)$/;"	f
HT_add_node	hash_helper.c	/^void HT_add_node ( BasicBlockHashTable table, void* vnode )$/;"	f
HT_construct	hash_helper.c	/^BasicBlockHashTable HT_construct(UInt n_chains)$/;"	f
HT_count_nodes	hash_helper.c	/^Int HT_count_nodes ( BasicBlockHashTable table )$/;"	f
HT_destruct	hash_helper.c	/^void HT_destruct(BasicBlockHashTable table)$/;"	f
HT_get_node	hash_helper.c	/^void* HT_get_node ( BasicBlockHashTable table, UWord key,$/;"	f
HT_lookup	hash_helper.c	/^void* HT_lookup ( BasicBlockHashTable table, UWord key )$/;"	f
HT_remove	hash_helper.c	/^void* HT_remove( BasicBlockHashTable table, UWord key )$/;"	f
HWPoisonPage	kvm.c	/^typedef struct HWPoisonPage {$/;"	s	file:
HWPoisonPage	kvm.c	/^} HWPoisonPage;$/;"	t	typeref:struct:HWPoisonPage	file:
HWord	hash_helper.h	/^typedef  unsigned int HWord;$/;"	t
HashNode	hash_helper.h	/^} HashNode;$/;"	t	typeref:struct:_HashNode
I486_FEATURES	cpuid.c	239;"	d	file:
ID_MASK	cpu.h	122;"	d
IF_MASK	cpu.h	113;"	d
INS	backup/hook_inst.h	/^typedef const xed_inst_t *INS;$/;"	t
INS	hook_inst.h	/^typedef const xed_inst_t *INS;$/;"	t
IOPL_MASK	cpu.h	115;"	d
IOPL_SHIFT	cpu.h	109;"	d
IS_DISTINGUISHED_SM	backup/mem_write_shadow.c	22;"	d	file:
IS_DISTINGUISHED_SM	mem_shadow.c	22;"	d	file:
InstrumentFunction	backup/hook_inst.h	/^typedef void (*InstrumentFunction)(INS ins);$/;"	t
InstrumentFunction	hook_inst.h	/^typedef void (*InstrumentFunction)(INS ins);$/;"	t
Instrument_AAA	backup/hook_inst.c	/^static void Instrument_AAA(INS ins) {$/;"	f	file:
Instrument_AAA	hook_inst.c	/^static void Instrument_AAA(INS ins) {$/;"	f	file:
Instrument_AAS	backup/hook_inst.c	/^static void Instrument_AAS(INS ins) {$/;"	f	file:
Instrument_AAS	hook_inst.c	/^static void Instrument_AAS(INS ins) {$/;"	f	file:
Instrument_ADC	backup/hook_inst.c	/^static void Instrument_ADC(INS ins) {$/;"	f	file:
Instrument_ADC	hook_inst.c	/^static void Instrument_ADC(INS ins) {$/;"	f	file:
Instrument_ADD	backup/hook_inst.c	/^static void Instrument_ADD(INS ins) {$/;"	f	file:
Instrument_ADD	hook_inst.c	/^static void Instrument_ADD(INS ins) {$/;"	f	file:
Instrument_AND	backup/hook_inst.c	/^static void Instrument_AND(INS ins) {$/;"	f	file:
Instrument_AND	hook_inst.c	/^static void Instrument_AND(INS ins) {$/;"	f	file:
Instrument_BSWAP	backup/hook_inst.c	/^static void Instrument_BSWAP(INS ins) {$/;"	f	file:
Instrument_BSWAP	hook_inst.c	/^static void Instrument_BSWAP(INS ins) {$/;"	f	file:
Instrument_CALL_FAR	backup/hook_inst.c	/^static void Instrument_CALL_FAR(INS ins) {$/;"	f	file:
Instrument_CALL_FAR	hook_inst.c	/^static void Instrument_CALL_FAR(INS ins) {$/;"	f	file:
Instrument_CALL_NEAR	backup/hook_inst.c	/^static void Instrument_CALL_NEAR(INS ins) {$/;"	f	file:
Instrument_CALL_NEAR	hook_inst.c	/^static void Instrument_CALL_NEAR(INS ins) {$/;"	f	file:
Instrument_CDQ	backup/hook_inst.c	/^static void Instrument_CDQ(INS ins) {$/;"	f	file:
Instrument_CDQ	hook_inst.c	/^static void Instrument_CDQ(INS ins) {$/;"	f	file:
Instrument_CLD	backup/hook_inst.c	/^static void Instrument_CLD(INS ins) {$/;"	f	file:
Instrument_CLD	hook_inst.c	/^static void Instrument_CLD(INS ins) {$/;"	f	file:
Instrument_CMOVcc	backup/hook_inst.c	/^static void Instrument_CMOVcc(INS ins) {$/;"	f	file:
Instrument_CMOVcc	hook_inst.c	/^static void Instrument_CMOVcc(INS ins) {$/;"	f	file:
Instrument_CMP	backup/hook_inst.c	/^static void Instrument_CMP(INS ins) {$/;"	f	file:
Instrument_CMP	hook_inst.c	/^static void Instrument_CMP(INS ins) {$/;"	f	file:
Instrument_CMPSB	backup/hook_inst.c	/^static void Instrument_CMPSB(INS ins) {$/;"	f	file:
Instrument_CMPSB	hook_inst.c	/^static void Instrument_CMPSB(INS ins) {$/;"	f	file:
Instrument_CMPXCHG	backup/hook_inst.c	/^static void Instrument_CMPXCHG(INS ins) {$/;"	f	file:
Instrument_CMPXCHG	hook_inst.c	/^static void Instrument_CMPXCHG(INS ins) {$/;"	f	file:
Instrument_CWDE	backup/hook_inst.c	/^static void Instrument_CWDE(INS ins) {$/;"	f	file:
Instrument_CWDE	hook_inst.c	/^static void Instrument_CWDE(INS ins) {$/;"	f	file:
Instrument_DAA	backup/hook_inst.c	/^static void Instrument_DAA(INS ins) {$/;"	f	file:
Instrument_DAA	hook_inst.c	/^static void Instrument_DAA(INS ins) {$/;"	f	file:
Instrument_DAS	backup/hook_inst.c	/^static void Instrument_DAS(INS ins) {$/;"	f	file:
Instrument_DAS	hook_inst.c	/^static void Instrument_DAS(INS ins) {$/;"	f	file:
Instrument_DEC	backup/hook_inst.c	/^static void Instrument_DEC(INS ins) {$/;"	f	file:
Instrument_DEC	hook_inst.c	/^static void Instrument_DEC(INS ins) {$/;"	f	file:
Instrument_DIV	backup/hook_inst.c	/^static void Instrument_DIV(INS ins) {$/;"	f	file:
Instrument_DIV	hook_inst.c	/^static void Instrument_DIV(INS ins) {$/;"	f	file:
Instrument_FLDCW	backup/hook_inst.c	/^static void Instrument_FLDCW(INS ins) {	\/\/TODO: Floating point instruction$/;"	f	file:
Instrument_FLDCW	hook_inst.c	/^static void Instrument_FLDCW(INS ins) {	\/\/TODO: Floating point instruction$/;"	f	file:
Instrument_FNSTCW	backup/hook_inst.c	/^static void Instrument_FNSTCW(INS ins) {$/;"	f	file:
Instrument_FNSTCW	hook_inst.c	/^static void Instrument_FNSTCW(INS ins) {$/;"	f	file:
Instrument_HLT	backup/hook_inst.c	/^static void Instrument_HLT(INS ins) {$/;"	f	file:
Instrument_HLT	hook_inst.c	/^static void Instrument_HLT(INS ins) {$/;"	f	file:
Instrument_IDIV	backup/hook_inst.c	/^static void Instrument_IDIV(INS ins) {$/;"	f	file:
Instrument_IDIV	hook_inst.c	/^static void Instrument_IDIV(INS ins) {$/;"	f	file:
Instrument_IMUL	backup/hook_inst.c	/^static void Instrument_IMUL(INS ins) {$/;"	f	file:
Instrument_IMUL	hook_inst.c	/^static void Instrument_IMUL(INS ins) {$/;"	f	file:
Instrument_INC	backup/hook_inst.c	/^static void Instrument_INC(INS ins) {$/;"	f	file:
Instrument_INC	hook_inst.c	/^static void Instrument_INC(INS ins) {$/;"	f	file:
Instrument_INT	backup/hook_inst.c	/^static void Instrument_INT(INS ins) {$/;"	f	file:
Instrument_INT	hook_inst.c	/^static void Instrument_INT(INS ins) {$/;"	f	file:
Instrument_JMP	backup/hook_inst.c	/^static void Instrument_JMP(INS ins) {$/;"	f	file:
Instrument_JMP	hook_inst.c	/^static void Instrument_JMP(INS ins) {$/;"	f	file:
Instrument_Jcc	backup/hook_inst.c	/^static void Instrument_Jcc(INS ins) {$/;"	f	file:
Instrument_Jcc	hook_inst.c	/^static void Instrument_Jcc(INS ins) {$/;"	f	file:
Instrument_LDMXCSR	backup/hook_inst.c	/^static void Instrument_LDMXCSR(INS ins) {$/;"	f	file:
Instrument_LDMXCSR	hook_inst.c	/^static void Instrument_LDMXCSR(INS ins) {$/;"	f	file:
Instrument_LEA	backup/hook_inst.c	/^static void Instrument_LEA(INS xi) {$/;"	f	file:
Instrument_LEA	hook_inst.c	/^static void Instrument_LEA(INS xi) {$/;"	f	file:
Instrument_LEAVE	backup/hook_inst.c	/^static void Instrument_LEAVE(INS ins) {	\/\/Stack variable life time ends$/;"	f	file:
Instrument_LEAVE	hook_inst.c	/^static void Instrument_LEAVE(INS ins) {	\/\/Stack variable life time ends$/;"	f	file:
Instrument_MOV	backup/hook_inst.c	/^static void Instrument_MOV(INS xi) {$/;"	f	file:
Instrument_MOV	hook_inst.c	/^static void Instrument_MOV(INS xi) {$/;"	f	file:
Instrument_MOVSB	backup/hook_inst.c	/^static void Instrument_MOVSB(INS ins) {$/;"	f	file:
Instrument_MOVSB	hook_inst.c	/^static void Instrument_MOVSB(INS ins) {$/;"	f	file:
Instrument_MOVSD	backup/hook_inst.c	/^static void Instrument_MOVSD(INS ins) {$/;"	f	file:
Instrument_MOVSD	hook_inst.c	/^static void Instrument_MOVSD(INS ins) {$/;"	f	file:
Instrument_MOVSW	backup/hook_inst.c	/^static void Instrument_MOVSW(INS ins) {$/;"	f	file:
Instrument_MOVSW	hook_inst.c	/^static void Instrument_MOVSW(INS ins) {$/;"	f	file:
Instrument_MOVSX	backup/hook_inst.c	/^static void Instrument_MOVSX(INS ins) {$/;"	f	file:
Instrument_MOVSX	hook_inst.c	/^static void Instrument_MOVSX(INS ins) {$/;"	f	file:
Instrument_MOVZX	backup/hook_inst.c	/^static void Instrument_MOVZX(INS ins) {	\/\/ movzx r\/m, r$/;"	f	file:
Instrument_MOVZX	hook_inst.c	/^static void Instrument_MOVZX(INS ins) {	\/\/ movzx r\/m, r$/;"	f	file:
Instrument_MUL	backup/hook_inst.c	/^static void Instrument_MUL(INS ins) {$/;"	f	file:
Instrument_MUL	hook_inst.c	/^static void Instrument_MUL(INS ins) {$/;"	f	file:
Instrument_NEG	backup/hook_inst.c	/^static void Instrument_NEG(INS ins) {$/;"	f	file:
Instrument_NEG	hook_inst.c	/^static void Instrument_NEG(INS ins) {$/;"	f	file:
Instrument_NOT	backup/hook_inst.c	/^static void Instrument_NOT(INS ins) {$/;"	f	file:
Instrument_NOT	hook_inst.c	/^static void Instrument_NOT(INS ins) {$/;"	f	file:
Instrument_OR	backup/hook_inst.c	/^static void Instrument_OR(INS ins) {$/;"	f	file:
Instrument_OR	hook_inst.c	/^static void Instrument_OR(INS ins) {$/;"	f	file:
Instrument_PAUSE	backup/hook_inst.c	/^static void Instrument_PAUSE(INS ins) {$/;"	f	file:
Instrument_PAUSE	hook_inst.c	/^static void Instrument_PAUSE(INS ins) {$/;"	f	file:
Instrument_POP	backup/hook_inst.c	/^static void Instrument_POP(INS ins) {$/;"	f	file:
Instrument_POP	hook_inst.c	/^static void Instrument_POP(INS ins) {$/;"	f	file:
Instrument_POPFD	backup/hook_inst.c	/^static void Instrument_POPFD(INS ins) {$/;"	f	file:
Instrument_POPFD	hook_inst.c	/^static void Instrument_POPFD(INS ins) {$/;"	f	file:
Instrument_PUSH	backup/hook_inst.c	/^static void Instrument_PUSH(INS xi) {$/;"	f	file:
Instrument_PUSH	hook_inst.c	/^static void Instrument_PUSH(INS xi) {$/;"	f	file:
Instrument_PUSHFD	backup/hook_inst.c	/^static void Instrument_PUSHFD(INS ins) {$/;"	f	file:
Instrument_PUSHFD	hook_inst.c	/^static void Instrument_PUSHFD(INS ins) {$/;"	f	file:
Instrument_RDTSC	backup/hook_inst.c	/^static void Instrument_RDTSC(INS ins) {$/;"	f	file:
Instrument_RDTSC	hook_inst.c	/^static void Instrument_RDTSC(INS ins) {$/;"	f	file:
Instrument_RET_NEAR	backup/hook_inst.c	/^static void Instrument_RET_NEAR(INS ins) {$/;"	f	file:
Instrument_RET_NEAR	hook_inst.c	/^static void Instrument_RET_NEAR(INS ins) {$/;"	f	file:
Instrument_ROL	backup/hook_inst.c	/^static void Instrument_ROL(INS ins) {$/;"	f	file:
Instrument_ROL	hook_inst.c	/^static void Instrument_ROL(INS ins) {$/;"	f	file:
Instrument_SAR	backup/hook_inst.c	/^static void Instrument_SAR(INS ins) {$/;"	f	file:
Instrument_SAR	hook_inst.c	/^static void Instrument_SAR(INS ins) {$/;"	f	file:
Instrument_SBB	backup/hook_inst.c	/^static void Instrument_SBB(INS ins) {$/;"	f	file:
Instrument_SBB	hook_inst.c	/^static void Instrument_SBB(INS ins) {$/;"	f	file:
Instrument_SCASB	backup/hook_inst.c	/^static void Instrument_SCASB(INS ins) {$/;"	f	file:
Instrument_SCASB	hook_inst.c	/^static void Instrument_SCASB(INS ins) {$/;"	f	file:
Instrument_SETcc	backup/hook_inst.c	/^static void Instrument_SETcc(INS ins) {$/;"	f	file:
Instrument_SETcc	hook_inst.c	/^static void Instrument_SETcc(INS ins) {$/;"	f	file:
Instrument_SHL	backup/hook_inst.c	/^static void Instrument_SHL(INS ins) {$/;"	f	file:
Instrument_SHL	hook_inst.c	/^static void Instrument_SHL(INS ins) {$/;"	f	file:
Instrument_SHLD	backup/hook_inst.c	/^static void Instrument_SHLD(INS ins) {$/;"	f	file:
Instrument_SHLD	hook_inst.c	/^static void Instrument_SHLD(INS ins) {$/;"	f	file:
Instrument_SHR	backup/hook_inst.c	/^static void Instrument_SHR(INS ins) {$/;"	f	file:
Instrument_SHR	hook_inst.c	/^static void Instrument_SHR(INS ins) {$/;"	f	file:
Instrument_SHRD	backup/hook_inst.c	/^static void Instrument_SHRD(INS ins) {$/;"	f	file:
Instrument_SHRD	hook_inst.c	/^static void Instrument_SHRD(INS ins) {$/;"	f	file:
Instrument_STD	backup/hook_inst.c	/^static void Instrument_STD(INS ins) {$/;"	f	file:
Instrument_STD	hook_inst.c	/^static void Instrument_STD(INS ins) {$/;"	f	file:
Instrument_STMXCSR	backup/hook_inst.c	/^static void Instrument_STMXCSR(INS ins) {$/;"	f	file:
Instrument_STMXCSR	hook_inst.c	/^static void Instrument_STMXCSR(INS ins) {$/;"	f	file:
Instrument_STOSB	backup/hook_inst.c	/^static void Instrument_STOSB(INS ins) {$/;"	f	file:
Instrument_STOSB	hook_inst.c	/^static void Instrument_STOSB(INS ins) {$/;"	f	file:
Instrument_STOSD	backup/hook_inst.c	/^static void Instrument_STOSD(INS ins) {$/;"	f	file:
Instrument_STOSD	hook_inst.c	/^static void Instrument_STOSD(INS ins) {$/;"	f	file:
Instrument_SUB	backup/hook_inst.c	/^static void Instrument_SUB(INS ins) {$/;"	f	file:
Instrument_SUB	hook_inst.c	/^static void Instrument_SUB(INS ins) {$/;"	f	file:
Instrument_TEST	backup/hook_inst.c	/^static void Instrument_TEST(INS ins) {$/;"	f	file:
Instrument_TEST	hook_inst.c	/^static void Instrument_TEST(INS ins) {$/;"	f	file:
Instrument_XADD	backup/hook_inst.c	/^static void Instrument_XADD(INS ins) {$/;"	f	file:
Instrument_XADD	hook_inst.c	/^static void Instrument_XADD(INS ins) {$/;"	f	file:
Instrument_XCHG	backup/hook_inst.c	/^static void Instrument_XCHG(INS ins) {$/;"	f	file:
Instrument_XCHG	hook_inst.c	/^static void Instrument_XCHG(INS ins) {$/;"	f	file:
Instrument_XOR	backup/hook_inst.c	/^static void Instrument_XOR(INS xi) {$/;"	f	file:
Instrument_XOR	hook_inst.c	/^static void Instrument_XOR(INS xi) {$/;"	f	file:
Int	hash_helper.h	/^typedef    signed int    Int;$/;"	t
JCC_B	translate.c	/^    JCC_B,$/;"	e	enum:__anon12	file:
JCC_BE	translate.c	/^    JCC_BE,$/;"	e	enum:__anon12	file:
JCC_L	translate.c	/^    JCC_L,$/;"	e	enum:__anon12	file:
JCC_LE	translate.c	/^    JCC_LE,$/;"	e	enum:__anon12	file:
JCC_O	translate.c	/^    JCC_O,$/;"	e	enum:__anon12	file:
JCC_P	translate.c	/^    JCC_P,$/;"	e	enum:__anon12	file:
JCC_S	translate.c	/^    JCC_S,$/;"	e	enum:__anon12	file:
JCC_Z	translate.c	/^    JCC_Z,$/;"	e	enum:__anon12	file:
KERNEL_STACK	cpu.h	1084;"	d
KERNEL_STACK_MASK	cpu.h	1085;"	d
L	ops_sse.h	2085;"	d
L	ops_sse.h	25;"	d
L	ops_sse.h	33;"	d
LOG_PCALL	op_helper.c	37;"	d	file:
LOG_PCALL	op_helper.c	41;"	d	file:
LOG_PCALL_STATE	op_helper.c	38;"	d	file:
LOG_PCALL_STATE	op_helper.c	42;"	d	file:
Long	hash_helper.h	/^typedef    signed long long int   Long;$/;"	t
MANTD	op_helper.c	68;"	d	file:
MANTD1	machine.c	93;"	d	file:
MAXEXPD	op_helper.c	64;"	d	file:
MAXTAN	op_helper.c	61;"	d	file:
MCEInjectionParams	helper.c	/^typedef struct MCEInjectionParams {$/;"	s	file:
MCEInjectionParams	helper.c	/^} MCEInjectionParams;$/;"	t	typeref:struct:MCEInjectionParams	file:
MCE_BANKS_DEF	cpu.h	258;"	d
MCE_CAP_DEF	cpu.h	257;"	d
MCE_INJECT_BROADCAST	cpu.h	1046;"	d
MCE_INJECT_UNCOND_AO	cpu.h	1047;"	d
MCG_CTL_P	cpu.h	254;"	d
MCG_SER_P	cpu.h	255;"	d
MCG_STATUS_EIPV	cpu.h	261;"	d
MCG_STATUS_MCIP	cpu.h	262;"	d
MCG_STATUS_RIPV	cpu.h	260;"	d
MCI_STATUS_ADDRV	cpu.h	269;"	d
MCI_STATUS_AR	cpu.h	272;"	d
MCI_STATUS_EN	cpu.h	267;"	d
MCI_STATUS_MISCV	cpu.h	268;"	d
MCI_STATUS_OVER	cpu.h	265;"	d
MCI_STATUS_PCC	cpu.h	270;"	d
MCI_STATUS_S	cpu.h	271;"	d
MCI_STATUS_UC	cpu.h	266;"	d
MCI_STATUS_VAL	cpu.h	264;"	d
MCM_ADDR_GENERIC	cpu.h	279;"	d
MCM_ADDR_LINEAR	cpu.h	276;"	d
MCM_ADDR_MEM	cpu.h	278;"	d
MCM_ADDR_PHYS	cpu.h	277;"	d
MCM_ADDR_SEGOFF	cpu.h	275;"	d
MMUSUFFIX	op_helper.c	4984;"	d	file:
MMUSUFFIX	op_helper.c	5001;"	d	file:
MMUSUFFIX_kmmu	op_helper.c	5002;"	d	file:
MMUSUFFIX_kmmu	op_helper.c	5016;"	d	file:
MMUSUFFIX_mmu	op_helper.c	4985;"	d	file:
MMUSUFFIX_mmu	op_helper.c	4999;"	d	file:
MMU_MODE0_SUFFIX	cpu.h	955;"	d
MMU_MODE1_SUFFIX	cpu.h	956;"	d
MMU_USER_IDX	cpu.h	957;"	d
MMXReg	cpu.h	/^} MMXReg;$/;"	t	typeref:union:__anon3
MMX_B	cpu.h	571;"	d
MMX_B	cpu.h	583;"	d
MMX_L	cpu.h	573;"	d
MMX_L	cpu.h	585;"	d
MMX_OP2	translate.c	2782;"	d	file:
MMX_Q	cpu.h	588;"	d
MMX_S	cpu.h	574;"	d
MMX_S	cpu.h	586;"	d
MMX_W	cpu.h	572;"	d
MMX_W	cpu.h	584;"	d
MSR_CSTAR	cpu.h	337;"	d
MSR_EFER	cpu.h	326;"	d
MSR_EFER_FFXSR	cpu.h	333;"	d
MSR_EFER_LMA	cpu.h	330;"	d
MSR_EFER_LME	cpu.h	329;"	d
MSR_EFER_NXE	cpu.h	331;"	d
MSR_EFER_SCE	cpu.h	328;"	d
MSR_EFER_SVME	cpu.h	332;"	d
MSR_FMASK	cpu.h	338;"	d
MSR_FSBASE	cpu.h	339;"	d
MSR_GSBASE	cpu.h	340;"	d
MSR_IA32_APICBASE	cpu.h	282;"	d
MSR_IA32_APICBASE_BASE	cpu.h	285;"	d
MSR_IA32_APICBASE_BSP	cpu.h	283;"	d
MSR_IA32_APICBASE_ENABLE	cpu.h	284;"	d
MSR_IA32_PERF_STATUS	cpu.h	300;"	d
MSR_IA32_SYSENTER_CS	cpu.h	292;"	d
MSR_IA32_SYSENTER_EIP	cpu.h	294;"	d
MSR_IA32_SYSENTER_ESP	cpu.h	293;"	d
MSR_IA32_TSC	cpu.h	281;"	d
MSR_KERNELGSBASE	cpu.h	341;"	d
MSR_KVM_SYSTEM_TIME	kvm.c	44;"	d	file:
MSR_KVM_WALL_CLOCK	kvm.c	43;"	d	file:
MSR_LSTAR	cpu.h	336;"	d
MSR_MC0_ADDR	cpu.h	323;"	d
MSR_MC0_CTL	cpu.h	321;"	d
MSR_MC0_MISC	cpu.h	324;"	d
MSR_MC0_STATUS	cpu.h	322;"	d
MSR_MCG_CAP	cpu.h	296;"	d
MSR_MCG_CTL	cpu.h	298;"	d
MSR_MCG_STATUS	cpu.h	297;"	d
MSR_MTRRcap	cpu.h	287;"	d
MSR_MTRRcap_FIXRANGE_SUPPORT	cpu.h	289;"	d
MSR_MTRRcap_VCNT	cpu.h	288;"	d
MSR_MTRRcap_WC_SUPPORTED	cpu.h	290;"	d
MSR_MTRRdefType	cpu.h	319;"	d
MSR_MTRRfix16K_80000	cpu.h	306;"	d
MSR_MTRRfix16K_A0000	cpu.h	307;"	d
MSR_MTRRfix4K_C0000	cpu.h	308;"	d
MSR_MTRRfix4K_C8000	cpu.h	309;"	d
MSR_MTRRfix4K_D0000	cpu.h	310;"	d
MSR_MTRRfix4K_D8000	cpu.h	311;"	d
MSR_MTRRfix4K_E0000	cpu.h	312;"	d
MSR_MTRRfix4K_E8000	cpu.h	313;"	d
MSR_MTRRfix4K_F0000	cpu.h	314;"	d
MSR_MTRRfix4K_F8000	cpu.h	315;"	d
MSR_MTRRfix64K_00000	cpu.h	305;"	d
MSR_MTRRphysBase	cpu.h	302;"	d
MSR_MTRRphysMask	cpu.h	303;"	d
MSR_PAT	cpu.h	317;"	d
MSR_STAR	cpu.h	335;"	d
MSR_TSC_AUX	cpu.h	342;"	d
MSR_VM_HSAVE_PA	cpu.h	344;"	d
MTRRVar	cpu.h	/^} MTRRVar;$/;"	t	typeref:struct:__anon5
MUR_FMIX	uthash.h	518;"	d
MUR_GETBLOCK	uthash.h	496;"	d
MUR_GETBLOCK	uthash.h	512;"	d
MUR_ONE_THREE	uthash.h	506;"	d
MUR_ONE_THREE	uthash.h	510;"	d
MUR_PLUS0_ALIGNED	uthash.h	498;"	d
MUR_PLUS1_ALIGNED	uthash.h	499;"	d
MUR_PLUS2_ALIGNED	uthash.h	500;"	d
MUR_PLUS3_ALIGNED	uthash.h	501;"	d
MUR_ROTL32	uthash.h	517;"	d
MUR_THREE_ONE	uthash.h	504;"	d
MUR_THREE_ONE	uthash.h	508;"	d
MUR_TWO_TWO	uthash.h	505;"	d
MUR_TWO_TWO	uthash.h	509;"	d
MmLoadSystemImage_call	backup/main.c	/^static int MmLoadSystemImage_call(void *opaque)$/;"	f	file:
MmLoadSystemImage_call	main.c	/^static int MmLoadSystemImage_call(void *opaque)$/;"	f	file:
MmLoadSystemImage_ret	backup/main.c	/^static int MmLoadSystemImage_ret(void *opaque)$/;"	f	file:
MmLoadSystemImage_ret	main.c	/^static int MmLoadSystemImage_ret(void *opaque)$/;"	f	file:
NB_MMU_MODES	cpu.h	609;"	d
NB_OP_SIZES	translate.c	252;"	d	file:
NB_OP_SIZES	translate.c	256;"	d	file:
NO_DECLTYPE	uthash.h	39;"	d
NT_MASK	cpu.h	116;"	d
NULL	hash_helper.h	92;"	d
OP_ADCL	translate.c	/^    OP_ADCL,$/;"	e	enum:__anon10	file:
OP_ADDL	translate.c	/^    OP_ADDL,$/;"	e	enum:__anon10	file:
OP_ANDL	translate.c	/^    OP_ANDL,$/;"	e	enum:__anon10	file:
OP_CMPL	translate.c	/^    OP_CMPL,$/;"	e	enum:__anon10	file:
OP_ORL	translate.c	/^    OP_ORL,$/;"	e	enum:__anon10	file:
OP_RCL	translate.c	/^    OP_RCL,$/;"	e	enum:__anon11	file:
OP_RCR	translate.c	/^    OP_RCR,$/;"	e	enum:__anon11	file:
OP_ROL	translate.c	/^    OP_ROL,$/;"	e	enum:__anon11	file:
OP_ROR	translate.c	/^    OP_ROR,$/;"	e	enum:__anon11	file:
OP_SAR	translate.c	/^    OP_SAR = 7,$/;"	e	enum:__anon11	file:
OP_SBBL	translate.c	/^    OP_SBBL,$/;"	e	enum:__anon10	file:
OP_SHL	translate.c	/^    OP_SHL,$/;"	e	enum:__anon11	file:
OP_SHL1	translate.c	/^    OP_SHL1, \/* undocumented *\/$/;"	e	enum:__anon11	file:
OP_SHR	translate.c	/^    OP_SHR,$/;"	e	enum:__anon11	file:
OP_SUBL	translate.c	/^    OP_SUBL,$/;"	e	enum:__anon10	file:
OP_XORL	translate.c	/^    OP_XORL,$/;"	e	enum:__anon10	file:
OR_A0	translate.c	/^    OR_A0, \/* temporary register used when doing address evaluation *\/$/;"	e	enum:__anon14	file:
OR_EAX	translate.c	/^    OR_EAX,   \/* MUST be even numbered *\/$/;"	e	enum:__anon14	file:
OR_EBP	translate.c	/^    OR_EBP,$/;"	e	enum:__anon14	file:
OR_EBX	translate.c	/^    OR_EBX,$/;"	e	enum:__anon14	file:
OR_ECX	translate.c	/^    OR_ECX,$/;"	e	enum:__anon14	file:
OR_EDI	translate.c	/^    OR_EDI,$/;"	e	enum:__anon14	file:
OR_EDX	translate.c	/^    OR_EDX,$/;"	e	enum:__anon14	file:
OR_ESI	translate.c	/^    OR_ESI,$/;"	e	enum:__anon14	file:
OR_ESP	translate.c	/^    OR_ESP,$/;"	e	enum:__anon14	file:
OR_TMP0	translate.c	/^    OR_TMP0 = 16,    \/* temporary operand register *\/$/;"	e	enum:__anon14	file:
OR_TMP1	translate.c	/^    OR_TMP1,$/;"	e	enum:__anon14	file:
OT_BYTE	translate.c	/^    OT_BYTE = 0,$/;"	e	enum:__anon13	file:
OT_LONG	translate.c	/^    OT_LONG,$/;"	e	enum:__anon13	file:
OT_QUAD	translate.c	/^    OT_QUAD,$/;"	e	enum:__anon13	file:
OT_WORD	translate.c	/^    OT_WORD,$/;"	e	enum:__anon13	file:
Off64T	hash_helper.h	/^typedef ULong                 Off64T;     \/\/ 64             64$/;"	t
OffT	hash_helper.h	/^typedef  Word                   OffT;     \/\/ 32             64$/;"	t
PAGE_NUM	backup/mem_write_shadow.c	20;"	d	file:
PAGE_NUM	mem_shadow.c	20;"	d	file:
PAGE_SIZE	backup/mem_write_shadow.c	19;"	d	file:
PAGE_SIZE	mem_shadow.c	19;"	d	file:
PATCH_BEGIN_VICTIM_INST_FOR_NEXT_EIP	backup/main.c	183;"	d	file:
PATCH_BEGIN_VICTIM_INST_FOR_NEXT_EIP	main.c	183;"	d	file:
PATCH_END_VICTIM_INST_FOR_NEXT_EIP	backup/main.c	193;"	d	file:
PATCH_END_VICTIM_INST_FOR_NEXT_EIP	main.c	193;"	d	file:
PATCH_VICTIM_INST_FOR_NEXT_EIP	backup/main.c	172;"	d	file:
PATCH_VICTIM_INST_FOR_NEXT_EIP	main.c	172;"	d	file:
PENTIUM2_FEATURES	cpuid.c	242;"	d	file:
PENTIUM3_FEATURES	cpuid.c	245;"	d	file:
PENTIUM_FEATURES	cpuid.c	240;"	d	file:
PG_ACCESSED_BIT	cpu.h	229;"	d
PG_ACCESSED_MASK	cpu.h	240;"	d
PG_DIRTY_BIT	cpu.h	230;"	d
PG_DIRTY_MASK	cpu.h	241;"	d
PG_ERROR_I_D_MASK	cpu.h	252;"	d
PG_ERROR_P_MASK	cpu.h	248;"	d
PG_ERROR_RSVD_MASK	cpu.h	251;"	d
PG_ERROR_U_MASK	cpu.h	250;"	d
PG_ERROR_W_BIT	cpu.h	246;"	d
PG_ERROR_W_MASK	cpu.h	249;"	d
PG_GLOBAL_BIT	cpu.h	232;"	d
PG_GLOBAL_MASK	cpu.h	243;"	d
PG_NX_BIT	cpu.h	233;"	d
PG_NX_MASK	cpu.h	244;"	d
PG_PCD_BIT	cpu.h	228;"	d
PG_PCD_MASK	cpu.h	239;"	d
PG_PRESENT_BIT	cpu.h	224;"	d
PG_PRESENT_MASK	cpu.h	235;"	d
PG_PSE_BIT	cpu.h	231;"	d
PG_PSE_MASK	cpu.h	242;"	d
PG_PWT_BIT	cpu.h	227;"	d
PG_PWT_MASK	cpu.h	238;"	d
PG_RW_BIT	cpu.h	225;"	d
PG_RW_MASK	cpu.h	236;"	d
PG_USER_BIT	cpu.h	226;"	d
PG_USER_MASK	cpu.h	237;"	d
PHYS_ADDR_MASK	helper.c	1525;"	d	file:
PHYS_ADDR_MASK	helper.c	1527;"	d	file:
PHYS_ADDR_MASK	helper.c	785;"	d	file:
PHYS_ADDR_MASK	helper.c	787;"	d	file:
POPCOUNT	ops_sse.h	2056;"	d
POPL	op_helper.c	753;"	d	file:
POPMASK	ops_sse.h	2055;"	d
POPQ	op_helper.c	961;"	d	file:
POPW	op_helper.c	747;"	d	file:
PPRO_FEATURES	cpuid.c	246;"	d	file:
PREFIX_ADR	translate.c	38;"	d	file:
PREFIX_DATA	translate.c	37;"	d	file:
PREFIX_LOCK	translate.c	36;"	d	file:
PREFIX_REPNZ	translate.c	35;"	d	file:
PREFIX_REPZ	translate.c	34;"	d	file:
PUSHL	op_helper.c	741;"	d	file:
PUSHQ	op_helper.c	955;"	d	file:
PUSHW	op_helper.c	735;"	d	file:
Q	ops_sse.h	2086;"	d
Q	ops_sse.h	26;"	d
Q	ops_sse.h	34;"	d
RC_CHOP	op_helper.c	59;"	d	file:
RC_DOWN	op_helper.c	57;"	d	file:
RC_MASK	op_helper.c	55;"	d	file:
RC_NEAR	op_helper.c	56;"	d	file:
RC_UP	op_helper.c	58;"	d	file:
REG_B_OFFSET	translate.c	261;"	d	file:
REG_B_OFFSET	translate.c	267;"	d	file:
REG_H_OFFSET	translate.c	262;"	d	file:
REG_H_OFFSET	translate.c	268;"	d	file:
REG_LH_OFFSET	translate.c	265;"	d	file:
REG_LH_OFFSET	translate.c	271;"	d	file:
REG_L_OFFSET	translate.c	264;"	d	file:
REG_L_OFFSET	translate.c	270;"	d	file:
REG_W_OFFSET	translate.c	263;"	d	file:
REG_W_OFFSET	translate.c	269;"	d	file:
RESTORE_CONTEXT_TO_NEXT_EIP	backup/main.c	163;"	d	file:
RESTORE_CONTEXT_TO_NEXT_EIP	main.c	163;"	d	file:
REX_B	translate.c	45;"	d	file:
REX_B	translate.c	55;"	d	file:
REX_X	translate.c	44;"	d	file:
REX_X	translate.c	54;"	d	file:
RF_MASK	cpu.h	117;"	d
R_AH	cpu.h	64;"	d
R_AL	cpu.h	60;"	d
R_BH	cpu.h	67;"	d
R_BL	cpu.h	63;"	d
R_CH	cpu.h	65;"	d
R_CL	cpu.h	61;"	d
R_CS	cpu.h	70;"	d
R_DH	cpu.h	66;"	d
R_DL	cpu.h	62;"	d
R_DS	cpu.h	72;"	d
R_EAX	cpu.h	51;"	d
R_EBP	cpu.h	56;"	d
R_EBX	cpu.h	54;"	d
R_ECX	cpu.h	52;"	d
R_EDI	cpu.h	58;"	d
R_EDX	cpu.h	53;"	d
R_ES	cpu.h	69;"	d
R_ESI	cpu.h	57;"	d
R_ESP	cpu.h	55;"	d
R_FS	cpu.h	73;"	d
R_GS	cpu.h	74;"	d
R_SS	cpu.h	71;"	d
Reg	ops_sse.h	2082;"	d
Reg	ops_sse.h	21;"	d
Reg	ops_sse.h	29;"	d
Reg	ops_sse_header.h	/^DEF_HELPER_2(glue(blendvpd, SUFFIX), void, Reg, Reg)$/;"	v
Reg	ops_sse_header.h	/^DEF_HELPER_2(glue(blendvps, SUFFIX), void, Reg, Reg)$/;"	v
Reg	ops_sse_header.h	/^DEF_HELPER_2(glue(movl_mm_T0, SUFFIX), void, Reg, i32)$/;"	v
Reg	ops_sse_header.h	/^DEF_HELPER_2(glue(movq_mm_T0, SUFFIX), void, Reg, i64)$/;"	v
Reg	ops_sse_header.h	/^DEF_HELPER_2(glue(pabsb, SUFFIX), void, Reg, Reg)$/;"	v
Reg	ops_sse_header.h	/^DEF_HELPER_2(glue(pabsd, SUFFIX), void, Reg, Reg)$/;"	v
Reg	ops_sse_header.h	/^DEF_HELPER_2(glue(pabsw, SUFFIX), void, Reg, Reg)$/;"	v
Reg	ops_sse_header.h	/^DEF_HELPER_2(glue(packssdw, SUFFIX), void, Reg, Reg)$/;"	v
Reg	ops_sse_header.h	/^DEF_HELPER_2(glue(packsswb, SUFFIX), void, Reg, Reg)$/;"	v
Reg	ops_sse_header.h	/^DEF_HELPER_2(glue(packusdw, SUFFIX), void, Reg, Reg)$/;"	v
Reg	ops_sse_header.h	/^DEF_HELPER_2(glue(packuswb, SUFFIX), void, Reg, Reg)$/;"	v
Reg	ops_sse_header.h	/^DEF_HELPER_2(glue(pblendvb, SUFFIX), void, Reg, Reg)$/;"	v
Reg	ops_sse_header.h	/^DEF_HELPER_2(glue(pcmpeqq, SUFFIX), void, Reg, Reg)$/;"	v
Reg	ops_sse_header.h	/^DEF_HELPER_2(glue(pcmpgtq, SUFFIX), void, Reg, Reg)$/;"	v
Reg	ops_sse_header.h	/^DEF_HELPER_2(glue(phaddd, SUFFIX), void, Reg, Reg)$/;"	v
Reg	ops_sse_header.h	/^DEF_HELPER_2(glue(phaddsw, SUFFIX), void, Reg, Reg)$/;"	v
Reg	ops_sse_header.h	/^DEF_HELPER_2(glue(phaddw, SUFFIX), void, Reg, Reg)$/;"	v
Reg	ops_sse_header.h	/^DEF_HELPER_2(glue(phminposuw, SUFFIX), void, Reg, Reg)$/;"	v
Reg	ops_sse_header.h	/^DEF_HELPER_2(glue(phsubd, SUFFIX), void, Reg, Reg)$/;"	v
Reg	ops_sse_header.h	/^DEF_HELPER_2(glue(phsubsw, SUFFIX), void, Reg, Reg)$/;"	v
Reg	ops_sse_header.h	/^DEF_HELPER_2(glue(phsubw, SUFFIX), void, Reg, Reg)$/;"	v
Reg	ops_sse_header.h	/^DEF_HELPER_2(glue(pmaddubsw, SUFFIX), void, Reg, Reg)$/;"	v
Reg	ops_sse_header.h	/^DEF_HELPER_2(glue(pmaddwd, SUFFIX), void, Reg, Reg)$/;"	v
Reg	ops_sse_header.h	/^DEF_HELPER_2(glue(pmaxsb, SUFFIX), void, Reg, Reg)$/;"	v
Reg	ops_sse_header.h	/^DEF_HELPER_2(glue(pmaxsd, SUFFIX), void, Reg, Reg)$/;"	v
Reg	ops_sse_header.h	/^DEF_HELPER_2(glue(pmaxud, SUFFIX), void, Reg, Reg)$/;"	v
Reg	ops_sse_header.h	/^DEF_HELPER_2(glue(pmaxuw, SUFFIX), void, Reg, Reg)$/;"	v
Reg	ops_sse_header.h	/^DEF_HELPER_2(glue(pminsb, SUFFIX), void, Reg, Reg)$/;"	v
Reg	ops_sse_header.h	/^DEF_HELPER_2(glue(pminsd, SUFFIX), void, Reg, Reg)$/;"	v
Reg	ops_sse_header.h	/^DEF_HELPER_2(glue(pminud, SUFFIX), void, Reg, Reg)$/;"	v
Reg	ops_sse_header.h	/^DEF_HELPER_2(glue(pminuw, SUFFIX), void, Reg, Reg)$/;"	v
Reg	ops_sse_header.h	/^DEF_HELPER_2(glue(pmovsxbd, SUFFIX), void, Reg, Reg)$/;"	v
Reg	ops_sse_header.h	/^DEF_HELPER_2(glue(pmovsxbq, SUFFIX), void, Reg, Reg)$/;"	v
Reg	ops_sse_header.h	/^DEF_HELPER_2(glue(pmovsxbw, SUFFIX), void, Reg, Reg)$/;"	v
Reg	ops_sse_header.h	/^DEF_HELPER_2(glue(pmovsxdq, SUFFIX), void, Reg, Reg)$/;"	v
Reg	ops_sse_header.h	/^DEF_HELPER_2(glue(pmovsxwd, SUFFIX), void, Reg, Reg)$/;"	v
Reg	ops_sse_header.h	/^DEF_HELPER_2(glue(pmovsxwq, SUFFIX), void, Reg, Reg)$/;"	v
Reg	ops_sse_header.h	/^DEF_HELPER_2(glue(pmovzxbd, SUFFIX), void, Reg, Reg)$/;"	v
Reg	ops_sse_header.h	/^DEF_HELPER_2(glue(pmovzxbq, SUFFIX), void, Reg, Reg)$/;"	v
Reg	ops_sse_header.h	/^DEF_HELPER_2(glue(pmovzxbw, SUFFIX), void, Reg, Reg)$/;"	v
Reg	ops_sse_header.h	/^DEF_HELPER_2(glue(pmovzxdq, SUFFIX), void, Reg, Reg)$/;"	v
Reg	ops_sse_header.h	/^DEF_HELPER_2(glue(pmovzxwd, SUFFIX), void, Reg, Reg)$/;"	v
Reg	ops_sse_header.h	/^DEF_HELPER_2(glue(pmovzxwq, SUFFIX), void, Reg, Reg)$/;"	v
Reg	ops_sse_header.h	/^DEF_HELPER_2(glue(pmuldq, SUFFIX), void, Reg, Reg)$/;"	v
Reg	ops_sse_header.h	/^DEF_HELPER_2(glue(pmulhrsw, SUFFIX), void, Reg, Reg)$/;"	v
Reg	ops_sse_header.h	/^DEF_HELPER_2(glue(pmulld, SUFFIX), void, Reg, Reg)$/;"	v
Reg	ops_sse_header.h	/^DEF_HELPER_2(glue(pmuludq, SUFFIX), void, Reg, Reg)$/;"	v
Reg	ops_sse_header.h	/^DEF_HELPER_2(glue(psadbw, SUFFIX), void, Reg, Reg)$/;"	v
Reg	ops_sse_header.h	/^DEF_HELPER_2(glue(pshufb, SUFFIX), void, Reg, Reg)$/;"	v
Reg	ops_sse_header.h	/^DEF_HELPER_2(glue(psignb, SUFFIX), void, Reg, Reg)$/;"	v
Reg	ops_sse_header.h	/^DEF_HELPER_2(glue(psignd, SUFFIX), void, Reg, Reg)$/;"	v
Reg	ops_sse_header.h	/^DEF_HELPER_2(glue(psignw, SUFFIX), void, Reg, Reg)$/;"	v
Reg	ops_sse_header.h	/^DEF_HELPER_2(glue(pslld, SUFFIX), void, Reg, Reg)$/;"	v
Reg	ops_sse_header.h	/^DEF_HELPER_2(glue(pslldq, SUFFIX), void, Reg, Reg)$/;"	v
Reg	ops_sse_header.h	/^DEF_HELPER_2(glue(psllq, SUFFIX), void, Reg, Reg)$/;"	v
Reg	ops_sse_header.h	/^DEF_HELPER_2(glue(psllw, SUFFIX), void, Reg, Reg)$/;"	v
Reg	ops_sse_header.h	/^DEF_HELPER_2(glue(psrad, SUFFIX), void, Reg, Reg)$/;"	v
Reg	ops_sse_header.h	/^DEF_HELPER_2(glue(psraw, SUFFIX), void, Reg, Reg)$/;"	v
Reg	ops_sse_header.h	/^DEF_HELPER_2(glue(psrld, SUFFIX), void, Reg, Reg)$/;"	v
Reg	ops_sse_header.h	/^DEF_HELPER_2(glue(psrldq, SUFFIX), void, Reg, Reg)$/;"	v
Reg	ops_sse_header.h	/^DEF_HELPER_2(glue(psrlq, SUFFIX), void, Reg, Reg)$/;"	v
Reg	ops_sse_header.h	/^DEF_HELPER_2(glue(psrlw, SUFFIX), void, Reg, Reg)$/;"	v
Reg	ops_sse_header.h	/^DEF_HELPER_2(glue(ptest, SUFFIX), void, Reg, Reg)$/;"	v
Reg	ops_sse_header.h	/^DEF_HELPER_2(glue(punpckhqdq, SUFFIX), void, Reg, Reg)$/;"	v
Reg	ops_sse_header.h	/^DEF_HELPER_2(glue(punpcklqdq, SUFFIX), void, Reg, Reg)$/;"	v
Reg	ops_sse_header.h	/^DEF_HELPER_3(glue(blendpd, SUFFIX), void, Reg, Reg, i32)$/;"	v
Reg	ops_sse_header.h	/^DEF_HELPER_3(glue(blendps, SUFFIX), void, Reg, Reg, i32)$/;"	v
Reg	ops_sse_header.h	/^DEF_HELPER_3(glue(dppd, SUFFIX), void, Reg, Reg, i32)$/;"	v
Reg	ops_sse_header.h	/^DEF_HELPER_3(glue(dpps, SUFFIX), void, Reg, Reg, i32)$/;"	v
Reg	ops_sse_header.h	/^DEF_HELPER_3(glue(maskmov, SUFFIX), void, Reg, Reg, tl)$/;"	v
Reg	ops_sse_header.h	/^DEF_HELPER_3(glue(mpsadbw, SUFFIX), void, Reg, Reg, i32)$/;"	v
Reg	ops_sse_header.h	/^DEF_HELPER_3(glue(palignr, SUFFIX), void, Reg, Reg, s32)$/;"	v
Reg	ops_sse_header.h	/^DEF_HELPER_3(glue(pblendw, SUFFIX), void, Reg, Reg, i32)$/;"	v
Reg	ops_sse_header.h	/^DEF_HELPER_3(glue(pcmpestri, SUFFIX), void, Reg, Reg, i32)$/;"	v
Reg	ops_sse_header.h	/^DEF_HELPER_3(glue(pcmpestrm, SUFFIX), void, Reg, Reg, i32)$/;"	v
Reg	ops_sse_header.h	/^DEF_HELPER_3(glue(pcmpistri, SUFFIX), void, Reg, Reg, i32)$/;"	v
Reg	ops_sse_header.h	/^DEF_HELPER_3(glue(pcmpistrm, SUFFIX), void, Reg, Reg, i32)$/;"	v
Reg	ops_sse_header.h	/^DEF_HELPER_3(glue(pshufw, SUFFIX), void, Reg, Reg, int)$/;"	v
Reg	ops_sse_header.h	/^DEF_HELPER_3(glue(roundpd, SUFFIX), void, Reg, Reg, i32)$/;"	v
Reg	ops_sse_header.h	/^DEF_HELPER_3(glue(roundps, SUFFIX), void, Reg, Reg, i32)$/;"	v
Reg	ops_sse_header.h	/^DEF_HELPER_3(glue(roundsd, SUFFIX), void, Reg, Reg, i32)$/;"	v
Reg	ops_sse_header.h	/^DEF_HELPER_3(glue(roundss, SUFFIX), void, Reg, Reg, i32)$/;"	v
Reg	ops_sse_header.h	20;"	d
Reg	ops_sse_header.h	23;"	d
Reg	ops_sse_header.h	340;"	d
SEG_ADDL	op_helper.c	732;"	d	file:
SET_ESP	op_helper.c	717;"	d	file:
SET_ESP	op_helper.c	727;"	d	file:
SHADOW_PAGE_BIT	cpu.h	1082;"	d
SHADOW_PAGE_MASK	cpu.h	1083;"	d
SHIFT	helper.h	211;"	d
SHIFT	helper.h	213;"	d
SHIFT	op_helper.c	4987;"	d	file:
SHIFT	op_helper.c	4990;"	d	file:
SHIFT	op_helper.c	4993;"	d	file:
SHIFT	op_helper.c	4996;"	d	file:
SHIFT	op_helper.c	5004;"	d	file:
SHIFT	op_helper.c	5007;"	d	file:
SHIFT	op_helper.c	5010;"	d	file:
SHIFT	op_helper.c	5013;"	d	file:
SHIFT	op_helper.c	5704;"	d	file:
SHIFT	op_helper.c	5707;"	d	file:
SHIFT	op_helper.c	5710;"	d	file:
SHIFT	op_helper.c	5712;"	d	file:
SHIFT	op_helper.c	5714;"	d	file:
SHIFT	op_helper.c	5716;"	d	file:
SHIFT	op_helper.c	5718;"	d	file:
SHIFT	op_helper.c	5720;"	d	file:
SHIFT	op_helper.c	5724;"	d	file:
SHIFT	op_helper.c	5726;"	d	file:
SHIFT	ops_sse.h	2080;"	d
SHIFT	ops_sse_header.h	339;"	d
SHIFT1_MASK	helper_template.h	23;"	d
SHIFT1_MASK	helper_template.h	25;"	d
SHIFT1_MASK	helper_template.h	329;"	d
SHIFT_MASK	helper_template.h	20;"	d
SHIFT_MASK	helper_template.h	328;"	d
SHR	ops_sse.h	1445;"	d
SHR	ops_sse.h	1459;"	d
SIGND	op_helper.c	67;"	d	file:
SIGND1	machine.c	96;"	d	file:
SIGN_MASK	helper_template.h	21;"	d
SIGN_MASK	helper_template.h	330;"	d
SMM_REVISION_ID	op_helper.c	1533;"	d	file:
SMM_REVISION_ID	op_helper.c	1535;"	d	file:
SSE41_OP	translate.c	2989;"	d	file:
SSE41_SPECIAL	translate.c	2991;"	d	file:
SSE42_OP	translate.c	2990;"	d	file:
SSE_DUMMY	translate.c	2780;"	d	file:
SSE_FOP	translate.c	2783;"	d	file:
SSE_HELPER_B	ops_sse.h	228;"	d
SSE_HELPER_B	ops_sse_header.h	343;"	d
SSE_HELPER_B	ops_sse_header.h	51;"	d
SSE_HELPER_CMP	ops_sse.h	910;"	d
SSE_HELPER_CMP	ops_sse_header.h	204;"	d
SSE_HELPER_CMP	ops_sse_header.h	348;"	d
SSE_HELPER_F	ops_sse.h	1538;"	d
SSE_HELPER_I	ops_sse.h	1495;"	d
SSE_HELPER_L	ops_sse.h	266;"	d
SSE_HELPER_L	ops_sse_header.h	345;"	d
SSE_HELPER_L	ops_sse_header.h	57;"	d
SSE_HELPER_Q	ops_sse.h	277;"	d
SSE_HELPER_Q	ops_sse_header.h	346;"	d
SSE_HELPER_Q	ops_sse_header.h	60;"	d
SSE_HELPER_S	ops_sse.h	559;"	d
SSE_HELPER_S	ops_sse_header.h	136;"	d
SSE_HELPER_S	ops_sse_header.h	347;"	d
SSE_HELPER_V	ops_sse.h	1468;"	d
SSE_HELPER_W	ops_sse.h	251;"	d
SSE_HELPER_W	ops_sse_header.h	344;"	d
SSE_HELPER_W	ops_sse_header.h	54;"	d
SSE_SPECIAL	translate.c	2779;"	d	file:
SSSE3_OP	translate.c	2988;"	d	file:
SSizeT	hash_helper.h	/^typedef  Word                 SSizeT;     \/\/ 32             64$/;"	t
ST	cpu.h	990;"	d
ST0	cpu.h	989;"	d
ST1	cpu.h	991;"	d
SUFFIX	helper_template.h	29;"	d
SUFFIX	helper_template.h	334;"	d
SUFFIX	helper_template.h	34;"	d
SUFFIX	helper_template.h	39;"	d
SUFFIX	helper_template.h	44;"	d
SUFFIX	ops_sse.h	2087;"	d
SUFFIX	ops_sse.h	27;"	d
SUFFIX	ops_sse.h	35;"	d
SUFFIX	ops_sse_header.h	21;"	d
SUFFIX	ops_sse_header.h	24;"	d
SUFFIX	ops_sse_header.h	341;"	d
SVM_CR0_SELECTIVE_MASK	svm.h	131;"	d
SVM_EVTINJ_TYPE_EXEPT	svm.h	41;"	d
SVM_EVTINJ_TYPE_INTR	svm.h	39;"	d
SVM_EVTINJ_TYPE_MASK	svm.h	37;"	d
SVM_EVTINJ_TYPE_NMI	svm.h	40;"	d
SVM_EVTINJ_TYPE_SHIFT	svm.h	36;"	d
SVM_EVTINJ_TYPE_SOFT	svm.h	42;"	d
SVM_EVTINJ_VALID	svm.h	44;"	d
SVM_EVTINJ_VALID_ERR	svm.h	45;"	d
SVM_EVTINJ_VEC_MASK	svm.h	34;"	d
SVM_EXITINTINFO_TYPE_EXEPT	svm.h	51;"	d
SVM_EXITINTINFO_TYPE_INTR	svm.h	49;"	d
SVM_EXITINTINFO_TYPE_NMI	svm.h	50;"	d
SVM_EXITINTINFO_TYPE_SOFT	svm.h	52;"	d
SVM_EXITINTINFO_VALID	svm.h	54;"	d
SVM_EXITINTINFO_VALID_ERR	svm.h	55;"	d
SVM_EXITINTINFO_VEC_MASK	svm.h	47;"	d
SVM_EXIT_CLGI	svm.h	119;"	d
SVM_EXIT_CPUID	svm.h	100;"	d
SVM_EXIT_CR0_SEL_WRITE	svm.h	87;"	d
SVM_EXIT_ERR	svm.h	129;"	d
SVM_EXIT_EXCP_BASE	svm.h	81;"	d
SVM_EXIT_FERR_FREEZE	svm.h	112;"	d
SVM_EXIT_GDTR_READ	svm.h	89;"	d
SVM_EXIT_GDTR_WRITE	svm.h	93;"	d
SVM_EXIT_HLT	svm.h	106;"	d
SVM_EXIT_ICEBP	svm.h	122;"	d
SVM_EXIT_IDTR_READ	svm.h	88;"	d
SVM_EXIT_IDTR_WRITE	svm.h	92;"	d
SVM_EXIT_INIT	svm.h	85;"	d
SVM_EXIT_INTR	svm.h	82;"	d
SVM_EXIT_INVD	svm.h	104;"	d
SVM_EXIT_INVLPG	svm.h	107;"	d
SVM_EXIT_INVLPGA	svm.h	108;"	d
SVM_EXIT_IOIO	svm.h	109;"	d
SVM_EXIT_IRET	svm.h	102;"	d
SVM_EXIT_LDTR_READ	svm.h	90;"	d
SVM_EXIT_LDTR_WRITE	svm.h	94;"	d
SVM_EXIT_MONITOR	svm.h	125;"	d
SVM_EXIT_MSR	svm.h	110;"	d
SVM_EXIT_MWAIT	svm.h	126;"	d
SVM_EXIT_NMI	svm.h	83;"	d
SVM_EXIT_NPF	svm.h	127;"	d
SVM_EXIT_PAUSE	svm.h	105;"	d
SVM_EXIT_POPF	svm.h	99;"	d
SVM_EXIT_PUSHF	svm.h	98;"	d
SVM_EXIT_RDPMC	svm.h	97;"	d
SVM_EXIT_RDTSC	svm.h	96;"	d
SVM_EXIT_RDTSCP	svm.h	121;"	d
SVM_EXIT_READ_CR0	svm.h	57;"	d
SVM_EXIT_READ_CR3	svm.h	58;"	d
SVM_EXIT_READ_CR4	svm.h	59;"	d
SVM_EXIT_READ_CR8	svm.h	60;"	d
SVM_EXIT_READ_DR0	svm.h	65;"	d
SVM_EXIT_READ_DR1	svm.h	66;"	d
SVM_EXIT_READ_DR2	svm.h	67;"	d
SVM_EXIT_READ_DR3	svm.h	68;"	d
SVM_EXIT_READ_DR4	svm.h	69;"	d
SVM_EXIT_READ_DR5	svm.h	70;"	d
SVM_EXIT_READ_DR6	svm.h	71;"	d
SVM_EXIT_READ_DR7	svm.h	72;"	d
SVM_EXIT_RSM	svm.h	101;"	d
SVM_EXIT_SHUTDOWN	svm.h	113;"	d
SVM_EXIT_SKINIT	svm.h	120;"	d
SVM_EXIT_SMI	svm.h	84;"	d
SVM_EXIT_STGI	svm.h	118;"	d
SVM_EXIT_SWINT	svm.h	103;"	d
SVM_EXIT_TASK_SWITCH	svm.h	111;"	d
SVM_EXIT_TR_READ	svm.h	91;"	d
SVM_EXIT_TR_WRITE	svm.h	95;"	d
SVM_EXIT_VINTR	svm.h	86;"	d
SVM_EXIT_VMLOAD	svm.h	116;"	d
SVM_EXIT_VMMCALL	svm.h	115;"	d
SVM_EXIT_VMRUN	svm.h	114;"	d
SVM_EXIT_VMSAVE	svm.h	117;"	d
SVM_EXIT_WBINVD	svm.h	123;"	d
SVM_EXIT_WRITE_CR0	svm.h	61;"	d
SVM_EXIT_WRITE_CR3	svm.h	62;"	d
SVM_EXIT_WRITE_CR4	svm.h	63;"	d
SVM_EXIT_WRITE_CR8	svm.h	64;"	d
SVM_EXIT_WRITE_DR0	svm.h	73;"	d
SVM_EXIT_WRITE_DR1	svm.h	74;"	d
SVM_EXIT_WRITE_DR2	svm.h	75;"	d
SVM_EXIT_WRITE_DR3	svm.h	76;"	d
SVM_EXIT_WRITE_DR4	svm.h	77;"	d
SVM_EXIT_WRITE_DR5	svm.h	78;"	d
SVM_EXIT_WRITE_DR6	svm.h	79;"	d
SVM_EXIT_WRITE_DR7	svm.h	80;"	d
SVM_INTERRUPT_SHADOW_MASK	svm.h	21;"	d
SVM_IOIO_ASIZE_MASK	svm.h	32;"	d
SVM_IOIO_ASIZE_SHIFT	svm.h	26;"	d
SVM_IOIO_REP_MASK	svm.h	30;"	d
SVM_IOIO_REP_SHIFT	svm.h	24;"	d
SVM_IOIO_SIZE_MASK	svm.h	31;"	d
SVM_IOIO_SIZE_SHIFT	svm.h	25;"	d
SVM_IOIO_STR_MASK	svm.h	29;"	d
SVM_IOIO_STR_SHIFT	svm.h	23;"	d
SVM_IOIO_TYPE_MASK	svm.h	28;"	d
SWITCH_TSS_CALL	op_helper.c	372;"	d	file:
SWITCH_TSS_IRET	op_helper.c	371;"	d	file:
SWITCH_TSS_JMP	op_helper.c	370;"	d	file:
SecMap	backup/mem_write_shadow.c	/^} SecMap;$/;"	t	typeref:struct:__anon7	file:
SecMap	mem_shadow.c	/^} SecMap;$/;"	t	typeref:struct:__anon15	file:
SegmentCache	cpu.h	/^typedef struct SegmentCache {$/;"	s
SegmentCache	cpu.h	/^} SegmentCache;$/;"	t	typeref:struct:SegmentCache
Short	hash_helper.h	/^typedef    signed short  Short;$/;"	t
SizeT	hash_helper.h	/^typedef UWord                  SizeT;     \/\/ 32             64$/;"	t
TARGET_HAS_ICE	cpu.h	37;"	d
TARGET_HAS_PRECISE_SMC	cpu.h	35;"	d
TARGET_HAS_SMC	cpu.h	32;"	d
TARGET_LONG_BITS	cpu.h	26;"	d
TARGET_LONG_BITS	cpu.h	28;"	d
TARGET_PAGE_BITS	cpu.h	932;"	d
TARGET_PHYS_ADDR_SPACE_BITS	cpu.h	935;"	d
TARGET_PHYS_ADDR_SPACE_BITS	cpu.h	941;"	d
TARGET_VIRT_ADDR_SPACE_BITS	cpu.h	939;"	d
TARGET_VIRT_ADDR_SPACE_BITS	cpu.h	942;"	d
TCG_EXT2_FEATURES	cpuid.c	268;"	d	file:
TCG_EXT3_FEATURES	cpuid.c	273;"	d	file:
TCG_EXT_FEATURES	cpuid.c	262;"	d	file:
TCG_FEATURES	cpuid.c	252;"	d	file:
TCG_SVM_FEATURES	cpuid.c	275;"	d	file:
TF_MASK	cpu.h	112;"	d
TF_SHIFT	cpu.h	108;"	d
TLB_CONTROL_DO_NOTHING	svm.h	4;"	d
TLB_CONTROL_FLUSH_ALL_ASID	svm.h	5;"	d
True	hash_helper.h	69;"	d
UChar	hash_helper.h	/^typedef  unsigned char   UChar;$/;"	t
UINT	hash_helper.h	/^typedef  unsigned int    UINT;$/;"	t
UInt	hash_helper.h	/^typedef  unsigned int    UInt;$/;"	t
ULong	hash_helper.h	/^typedef  unsigned long long int   ULong;$/;"	t
UNPCK_OP	ops_sse.h	1116;"	d
UNPCK_OP	ops_sse_header.h	231;"	d
UNPCK_OP	ops_sse_header.h	349;"	d
UShort	hash_helper.h	/^typedef  unsigned short  UShort;$/;"	t
UTHASH_H	uthash.h	25;"	d
UTHASH_VERSION	uthash.h	67;"	d
UT_hash_bucket	uthash.h	/^typedef struct UT_hash_bucket {$/;"	s
UT_hash_bucket	uthash.h	/^} UT_hash_bucket;$/;"	t	typeref:struct:UT_hash_bucket
UT_hash_handle	uthash.h	/^typedef struct UT_hash_handle {$/;"	s
UT_hash_handle	uthash.h	/^} UT_hash_handle;$/;"	t	typeref:struct:UT_hash_handle
UT_hash_table	uthash.h	/^typedef struct UT_hash_table {$/;"	s
UT_hash_table	uthash.h	/^} UT_hash_table;$/;"	t	typeref:struct:UT_hash_table
UWord	hash_helper.h	/^typedef unsigned int          UWord;     \/\/ 32             64$/;"	t
UnimplementedInstruction	backup/hook_inst.c	/^void UnimplementedInstruction(INS ins) {$/;"	f
UnimplementedInstruction	hook_inst.c	/^void UnimplementedInstruction(INS ins) {$/;"	f
VGM_BYTE_INVALID	backup/mem_write_shadow.h	16;"	d
VGM_BYTE_INVALID	mem_shadow.h	16;"	d
VIF_MASK	cpu.h	120;"	d
VIP_MASK	cpu.h	121;"	d
VMSTATE_FP_REGS	machine.c	199;"	d	file:
VMSTATE_HACK_UINT32	machine.c	234;"	d	file:
VMSTATE_MTRR_VARS	machine.c	78;"	d	file:
VMSTATE_SEGMENT	machine.c	23;"	d	file:
VMSTATE_SEGMENT_ARRAY	machine.c	32;"	d	file:
VMSTATE_XMM_REGS	machine.c	47;"	d	file:
VMSTATE_YMMH_REGS_VARS	machine.c	63;"	d	file:
VMX_INVALID_GUEST_STATE	kvm.c	1798;"	d	file:
VM_MASK	cpu.h	118;"	d
VM_SHIFT	cpu.h	110;"	d
V_IGN_TPR_MASK	svm.h	16;"	d
V_IGN_TPR_SHIFT	svm.h	15;"	d
V_INTR_MASKING_MASK	svm.h	19;"	d
V_INTR_MASKING_SHIFT	svm.h	18;"	d
V_INTR_PRIO_MASK	svm.h	13;"	d
V_INTR_PRIO_SHIFT	svm.h	12;"	d
V_IRQ_MASK	svm.h	10;"	d
V_IRQ_SHIFT	svm.h	9;"	d
V_TPR_MASK	svm.h	7;"	d
W	ops_sse.h	2084;"	d
W	ops_sse.h	24;"	d
W	ops_sse.h	32;"	d
WP	uthash.h	502;"	d
Word	hash_helper.h	/^typedef signed int            Word;      \/\/ 32             64$/;"	t
X86_64_DEF	translate.c	42;"	d	file:
X86_64_DEF	translate.c	52;"	d	file:
X86_64_ONLY	translate.c	41;"	d	file:
X86_64_ONLY	translate.c	51;"	d	file:
X86_DUMP_CCOP	cpu.h	930;"	d
X86_DUMP_FPU	cpu.h	929;"	d
XMM0	ops_sse.h	1465;"	d
XMMReg	cpu.h	/^} XMMReg;$/;"	t	typeref:union:__anon2
XMM_B	cpu.h	564;"	d
XMM_B	cpu.h	576;"	d
XMM_D	cpu.h	569;"	d
XMM_D	cpu.h	581;"	d
XMM_L	cpu.h	566;"	d
XMM_L	cpu.h	578;"	d
XMM_ONLY	ops_sse.h	2081;"	d
XMM_ONLY	ops_sse.h	22;"	d
XMM_ONLY	ops_sse.h	30;"	d
XMM_Q	cpu.h	568;"	d
XMM_Q	cpu.h	580;"	d
XMM_S	cpu.h	567;"	d
XMM_S	cpu.h	579;"	d
XMM_W	cpu.h	565;"	d
XMM_W	cpu.h	577;"	d
XSAVE_CWD_RDP	kvm.c	753;"	d	file:
XSAVE_CWD_RIP	kvm.c	752;"	d	file:
XSAVE_MXCSR	kvm.c	754;"	d	file:
XSAVE_ST_SPACE	kvm.c	755;"	d	file:
XSAVE_XMM_SPACE	kvm.c	756;"	d	file:
XSAVE_XSTATE_BV	kvm.c	757;"	d	file:
XSAVE_YMMH_SPACE	kvm.c	758;"	d	file:
_BasicBlockHashTable	hash_helper.h	/^struct _BasicBlockHashTable {$/;"	s
_HASH_HELPER_H	hash_helper.h	43;"	d
_HashNode	hash_helper.h	/^typedef struct _HashNode {$/;"	s
__SVM_H	svm.h	2;"	d
__UTILITY_H	backup/mem_write_shadow.h	14;"	d
__UTILITY_H	mem_shadow.h	14;"	d
_b	cpu.h	/^    uint8_t _b[16];$/;"	m	union:__anon2
_b	cpu.h	/^    uint8_t _b[8];$/;"	m	union:__anon3
_d	cpu.h	/^    float64 _d[2];$/;"	m	union:__anon2
_l	cpu.h	/^    uint32_t _l[2];$/;"	m	union:__anon3
_l	cpu.h	/^    uint32_t _l[4];$/;"	m	union:__anon2
_q	cpu.h	/^    uint64_t _q[2];$/;"	m	union:__anon2
_s	cpu.h	/^    float32 _s[2];$/;"	m	union:__anon3
_s	cpu.h	/^    float32 _s[4];$/;"	m	union:__anon2
_w	cpu.h	/^    uint16_t _w[4];$/;"	m	union:__anon3
_w	cpu.h	/^    uint16_t _w[8];$/;"	m	union:__anon2
a20_mask	cpu.h	/^    int32_t a20_mask;$/;"	m	struct:CPUX86State
abs1	ops_sse.h	/^static inline int abs1(int a)$/;"	f
add128	op_helper.c	/^static void add128(uint64_t *plow, uint64_t *phigh, uint64_t a, uint64_t b)$/;"	f	file:
add_cr3_node	helper.c	/^static void add_cr3_node(target_ulong cr3, target_ulong esp)$/;"	f	file:
add_flagname_to_bitmaps	cpuid.c	/^static void add_flagname_to_bitmaps(const char *flagname, uint32_t *features,$/;"	f	file:
addr	helper.c	/^    uint64_t addr;$/;"	m	struct:MCEInjectionParams	file:
addr	kvm.c	/^    target_ulong addr;$/;"	m	struct:__anon16	file:
addseg	translate.c	/^    int addseg; \/* non zero if either DS\/ES\/SS have a non zero base *\/$/;"	m	struct:DisasContext	file:
aflag	translate.c	/^    int aflag, dflag;$/;"	m	struct:DisasContext	file:
alloc_secondary_map	backup/mem_write_shadow.c	/^static SecMap* alloc_secondary_map ()$/;"	f	file:
alloc_secondary_map	mem_shadow.c	/^static SecMap* alloc_secondary_map ()$/;"	f	file:
alloclog	backup/main.c	/^FILE *alloclog = 0;$/;"	v
alloclog	main.c	/^FILE *alloclog = 0;$/;"	v
altcmp	cpuid.c	/^static int altcmp(const char *s, const char *e, const char *altstr)$/;"	f	file:
apic_state	cpu.h	/^    struct DeviceState *apic_state;$/;"	m	struct:CPUX86State	typeref:struct:CPUX86State::DeviceState
asid	svm.h	/^	uint32_t asid;$/;"	m	struct:vmcb_control_area
async_pf_en_msr	cpu.h	/^    uint64_t async_pf_en_msr;$/;"	m	struct:CPUX86State
async_pf_msr_needed	machine.c	/^static bool async_pf_msr_needed(void *opaque)$/;"	f	file:
attrib	svm.h	/^	uint16_t attrib;$/;"	m	struct:vmcb_seg
bank	helper.c	/^    int bank;$/;"	m	struct:MCEInjectionParams	file:
base	cpu.h	/^    target_ulong base;$/;"	m	struct:SegmentCache
base	cpu.h	/^    uint64_t base;$/;"	m	struct:__anon5
base	svm.h	/^	uint64_t base;$/;"	m	struct:vmcb_seg
basic_block_inst	backup/main.c	/^char basic_block_inst[1024 * 4];$/;"	v
basic_block_inst	main.c	/^char basic_block_inst[1024 * 4];$/;"	v
begin_fault_count	backup/main.c	/^uint32_t begin_fault_count;$/;"	v
begin_fault_count	main.c	/^uint32_t begin_fault_count;$/;"	v
begin_retry_count	backup/main.c	/^uint32_t begin_retry_count;$/;"	v
begin_retry_count	main.c	/^uint32_t begin_retry_count;$/;"	v
bloom_bv	uthash.h	/^   uint8_t *bloom_bv;$/;"	m	struct:UT_hash_table
bloom_nbits	uthash.h	/^   char bloom_nbits;$/;"	m	struct:UT_hash_table
bloom_sig	uthash.h	/^   uint32_t bloom_sig; \/* used only to test bloom exists in external analysis *\/$/;"	m	struct:UT_hash_table
br_from	svm.h	/^	uint64_t br_from;$/;"	m	struct:vmcb_save_area
br_to	svm.h	/^	uint64_t br_to;$/;"	m	struct:vmcb_save_area
breakpoint_handler	helper.c	/^static void breakpoint_handler(CPUState *env)$/;"	f	file:
buckets	uthash.h	/^   UT_hash_bucket *buckets;$/;"	m	struct:UT_hash_table
builtin_x86_defs	cpuid.c	/^static x86_def_t builtin_x86_defs[] = {$/;"	v	file:
byte	backup/mem_write_shadow.c	/^   UChar byte[PAGE_SIZE];$/;"	m	struct:__anon7	file:
byte	mem_shadow.c	/^   UChar byte[PAGE_SIZE];$/;"	m	struct:__anon15	file:
calllog	backup/main.c	/^FILE *calllog = 0;$/;"	v
calllog	main.c	/^FILE *calllog = 0;$/;"	v
cap	kvm.c	/^    int cap;$/;"	m	struct:kvm_para_features	file:
cc_dst	cpu.h	/^    target_ulong cc_dst;$/;"	m	struct:CPUX86State
cc_op	cpu.h	/^    uint32_t cc_op;$/;"	m	struct:CPUX86State
cc_op	translate.c	/^    int cc_op;  \/* current CC operation *\/$/;"	m	struct:DisasContext	file:
cc_op_str	helper.c	/^static const char *cc_op_str[] = {$/;"	v	file:
cc_src	cpu.h	/^    target_ulong cc_src;$/;"	m	struct:CPUX86State
cc_tmp	cpu.h	/^    target_ulong cc_tmp; \/* temporary for rcr\/rcl *\/$/;"	m	struct:CPUX86State
chains	hash_helper.h	/^   HashNode* chains[0];     \/\/ must be last field in the struct!$/;"	m	struct:_BasicBlockHashTable
check_and_update_fault_count	backup/main.c	/^void check_and_update_fault_count()$/;"	f
check_and_update_fault_count	main.c	/^void check_and_update_fault_count()$/;"	f
check_and_update_retry_count	backup/main.c	/^void check_and_update_retry_count()$/;"	f
check_and_update_retry_count	main.c	/^void check_and_update_retry_count()$/;"	f
check_cpuid	cpuid.c	/^int check_cpuid = 0;$/;"	v
check_exception	op_helper.c	/^static int check_exception(int intno, int *error_code)$/;"	f	file:
check_feat	cpuid.c	/^    uint32_t check_feat;$/;"	m	struct:model_features_t	file:
check_features_against_host	cpuid.c	/^static int check_features_against_host(x86_def_t *guest_def)$/;"	f	file:
check_hw_breakpoints	helper.c	/^int check_hw_breakpoints(CPUState *env, int force_dr6_update)$/;"	f
check_io	op_helper.c	/^static inline void check_io(int addr, int size)$/;"	f	file:
code32	translate.c	/^    int code32; \/* 32 bit code segment *\/$/;"	m	struct:DisasContext	file:
code64	translate.c	/^    int code64; \/* 64 bit code segment *\/$/;"	m	struct:DisasContext	file:
comis_eflags	ops_sse.h	/^static const int comis_eflags[4] = {CC_C, CC_Z, 0, CC_Z | CC_P | CC_C};$/;"	v
compute_all	cpu.h	/^    int (*compute_all)(void); \/* return all the flags *\/$/;"	m	struct:CCTable
compute_all_eflags	op_helper.c	/^static int compute_all_eflags(void)$/;"	f	file:
compute_c	cpu.h	/^    int (*compute_c)(void);  \/* return the C flag *\/$/;"	m	struct:CCTable
compute_c_eflags	op_helper.c	/^static int compute_c_eflags(void)$/;"	f	file:
compute_eflags	op_helper.c	/^static inline uint32_t compute_eflags(void)$/;"	f	file:
continued_fault	backup/main.c	/^uint32_t continued_fault;$/;"	v
continued_fault	main.c	/^uint32_t continued_fault;$/;"	v
continued_retry	backup/main.c	/^uint32_t continued_retry;$/;"	v
continued_retry	main.c	/^uint32_t continued_retry;$/;"	v
control	svm.h	/^	struct vmcb_control_area control;$/;"	m	struct:vmcb	typeref:struct:vmcb::vmcb_control_area
count	uthash.h	/^   unsigned count;$/;"	m	struct:UT_hash_bucket
cpl	svm.h	/^	uint8_t cpl;$/;"	m	struct:vmcb_save_area
cpl	translate.c	/^    int cpl;$/;"	m	struct:DisasContext	file:
cpu_A0	translate.c	/^static TCGv cpu_A0, cpu_cc_src, cpu_cc_dst, cpu_cc_tmp;$/;"	v	file:
cpu_T	translate.c	/^static TCGv cpu_T[2], cpu_T3;$/;"	v	file:
cpu_T3	translate.c	/^static TCGv cpu_T[2], cpu_T3;$/;"	v	file:
cpu_breakpoint	cpu.h	/^        CPUBreakpoint *cpu_breakpoint[4];$/;"	m	union:CPUX86State::__anon6
cpu_cc_compute_all	op_helper.c	/^uint32_t cpu_cc_compute_all(CPUState *env1, int op)$/;"	f
cpu_cc_dst	translate.c	/^static TCGv cpu_A0, cpu_cc_src, cpu_cc_dst, cpu_cc_tmp;$/;"	v	file:
cpu_cc_op	translate.c	/^static TCGv_i32 cpu_cc_op;$/;"	v	file:
cpu_cc_src	translate.c	/^static TCGv cpu_A0, cpu_cc_src, cpu_cc_dst, cpu_cc_tmp;$/;"	v	file:
cpu_cc_tmp	translate.c	/^static TCGv cpu_A0, cpu_cc_src, cpu_cc_dst, cpu_cc_tmp;$/;"	v	file:
cpu_clear_apic_feature	cpuid.c	/^void cpu_clear_apic_feature(CPUX86State *env)$/;"	f
cpu_clone_regs	cpu.h	/^static inline void cpu_clone_regs(CPUState *env, target_ulong newsp)$/;"	f
cpu_dump_state	helper.c	/^void cpu_dump_state(CPUState *env, FILE *f, fprintf_function cpu_fprintf,$/;"	f
cpu_env	translate.c	/^static TCGv_ptr cpu_env;$/;"	v	file:
cpu_exec	cpu.h	946;"	d
cpu_gen_code	cpu.h	947;"	d
cpu_get_fp80	op_helper.c	/^void cpu_get_fp80(uint64_t *pmant, uint16_t *pexp, floatx80 f)$/;"	f
cpu_get_phys_page_debug	helper.c	/^target_phys_addr_t cpu_get_phys_page_debug(CPUState *env, target_ulong addr)$/;"	f
cpu_get_tb_cpu_state	cpu.h	/^static inline void cpu_get_tb_cpu_state(CPUState *env, target_ulong *pc,$/;"	f
cpu_handle_mmu_fault	cpu.h	896;"	d
cpu_has_work	cpu.h	/^static inline bool cpu_has_work(CPUState *env)$/;"	f
cpu_init	cpu.h	945;"	d
cpu_list_id	cpu.h	949;"	d
cpu_load	machine.c	/^int cpu_load(QEMUFile *f, void *opaque, int version_id)$/;"	f
cpu_load_efer	op_helper.c	/^static inline void cpu_load_efer(CPUState *env, uint64_t val)$/;"	f	file:
cpu_mmu_index	cpu.h	/^static inline int cpu_mmu_index (CPUState *env)$/;"	f
cpu_pc_from_tb	cpu.h	/^static inline void cpu_pc_from_tb(CPUState *env, TranslationBlock *tb)$/;"	f
cpu_post_load	machine.c	/^static int cpu_post_load(void *opaque, int version_id)$/;"	f	file:
cpu_pre_save	machine.c	/^static void cpu_pre_save(void *opaque)$/;"	f	file:
cpu_ptr0	translate.c	/^static TCGv_ptr cpu_ptr0, cpu_ptr1;$/;"	v	file:
cpu_ptr1	translate.c	/^static TCGv_ptr cpu_ptr0, cpu_ptr1;$/;"	v	file:
cpu_regs	translate.c	/^static TCGv cpu_regs[CPU_NB_REGS];$/;"	v	file:
cpu_reset	helper.c	/^void cpu_reset(CPUX86State *env)$/;"	f
cpu_save	machine.c	/^void cpu_save(QEMUFile *f, void *opaque)$/;"	f
cpu_set_fp80	op_helper.c	/^floatx80 cpu_set_fp80(uint64_t mant, uint16_t upper)$/;"	f
cpu_signal_handler	cpu.h	948;"	d
cpu_tmp0	translate.c	/^static TCGv cpu_tmp0, cpu_tmp4;$/;"	v	file:
cpu_tmp1_i64	translate.c	/^static TCGv_i64 cpu_tmp1_i64;$/;"	v	file:
cpu_tmp2_i32	translate.c	/^static TCGv_i32 cpu_tmp2_i32, cpu_tmp3_i32;$/;"	v	file:
cpu_tmp3_i32	translate.c	/^static TCGv_i32 cpu_tmp2_i32, cpu_tmp3_i32;$/;"	v	file:
cpu_tmp4	translate.c	/^static TCGv cpu_tmp0, cpu_tmp4;$/;"	v	file:
cpu_tmp5	translate.c	/^static TCGv cpu_tmp5;$/;"	v	file:
cpu_update_state	kvm.c	/^static void cpu_update_state(void *opaque, int running, int reason)$/;"	f	file:
cpu_watchpoint	cpu.h	/^        CPUWatchpoint *cpu_watchpoint[4];$/;"	m	union:CPUX86State::__anon6
cpu_x86_close	helper.c	/^void cpu_x86_close(CPUX86State *env)$/;"	f
cpu_x86_cpuid	cpuid.c	/^void cpu_x86_cpuid(CPUX86State *env, uint32_t index, uint32_t count,$/;"	f
cpu_x86_dump_seg_cache	helper.c	/^cpu_x86_dump_seg_cache(CPUState *env, FILE *f, fprintf_function cpu_fprintf,$/;"	f	file:
cpu_x86_fill_host	cpuid.c	/^static int cpu_x86_fill_host(x86_def_t *x86_cpu_def)$/;"	f	file:
cpu_x86_fill_model_id	cpuid.c	/^static int cpu_x86_fill_model_id(char *str)$/;"	f	file:
cpu_x86_find_by_name	cpuid.c	/^static int cpu_x86_find_by_name(x86_def_t *x86_cpu_def, const char *cpu_model)$/;"	f	file:
cpu_x86_frstor	op_helper.c	/^void cpu_x86_frstor(CPUX86State *s, target_ulong ptr, int data32)$/;"	f
cpu_x86_fsave	op_helper.c	/^void cpu_x86_fsave(CPUX86State *s, target_ulong ptr, int data32)$/;"	f
cpu_x86_get_descr_debug	helper.c	/^int cpu_x86_get_descr_debug(CPUX86State *env, unsigned int selector,$/;"	f
cpu_x86_handle_mmu_fault	helper.c	/^int cpu_x86_handle_mmu_fault(CPUX86State *env, target_ulong addr,$/;"	f
cpu_x86_init	helper.c	/^CPUX86State *cpu_x86_init(const char *cpu_model)$/;"	f
cpu_x86_inject_mce	helper.c	/^void cpu_x86_inject_mce(Monitor *mon, CPUState *cenv, int bank,$/;"	f
cpu_x86_load_seg	op_helper.c	/^void cpu_x86_load_seg(CPUX86State *s, int seg_reg, int selector)$/;"	f
cpu_x86_load_seg_cache	cpu.h	/^static inline void cpu_x86_load_seg_cache(CPUX86State *env,$/;"	f
cpu_x86_load_seg_cache_sipi	cpu.h	/^static inline void cpu_x86_load_seg_cache_sipi(CPUX86State *env,$/;"	f
cpu_x86_register	cpuid.c	/^int cpu_x86_register (CPUX86State *env, const char *cpu_model)$/;"	f
cpu_x86_set_a20	helper.c	/^void cpu_x86_set_a20(CPUX86State *env, int a20_state)$/;"	f
cpu_x86_set_cpl	cpu.h	/^static inline void cpu_x86_set_cpl(CPUX86State *s, int cpl)$/;"	f
cpu_x86_support_mca_broadcast	helper.c	/^int cpu_x86_support_mca_broadcast(CPUState *env)$/;"	f
cpu_x86_update_cr0	helper.c	/^void cpu_x86_update_cr0(CPUX86State *env, uint32_t new_cr0)$/;"	f
cpu_x86_update_cr3	helper.c	/^void cpu_x86_update_cr3(CPUX86State *env, target_ulong new_cr3)$/;"	f
cpu_x86_update_cr4	helper.c	/^void cpu_x86_update_cr4(CPUX86State *env, uint32_t new_cr4)$/;"	f
cpu_x86_version	helper.c	/^static void cpu_x86_version(CPUState *env, int *family, int *model)$/;"	f	file:
cpudef_register	cpuid.c	/^static int cpudef_register(QemuOpts *opts, void *opaque)$/;"	f	file:
cpudef_setfield	cpuid.c	/^static int cpudef_setfield(const char *name, const char *str, void *opaque)$/;"	f	file:
cpudef_setup	cpu.h	950;"	d
cpuid	cpuid.c	/^    uint32_t cpuid;$/;"	m	struct:model_features_t	file:
cpuid_apic_id	cpu.h	/^    uint32_t cpuid_apic_id;$/;"	m	struct:CPUX86State
cpuid_ext2_features	cpu.h	/^    uint32_t cpuid_ext2_features;$/;"	m	struct:CPUX86State
cpuid_ext2_features	translate.c	/^    int cpuid_ext2_features;$/;"	m	struct:DisasContext	file:
cpuid_ext3_features	cpu.h	/^    uint32_t cpuid_ext3_features;$/;"	m	struct:CPUX86State
cpuid_ext3_features	translate.c	/^    int cpuid_ext3_features;$/;"	m	struct:DisasContext	file:
cpuid_ext4_features	cpu.h	/^    uint32_t cpuid_ext4_features;$/;"	m	struct:CPUX86State
cpuid_ext_features	cpu.h	/^    uint32_t cpuid_ext_features;$/;"	m	struct:CPUX86State
cpuid_ext_features	translate.c	/^    int cpuid_ext_features;$/;"	m	struct:DisasContext	file:
cpuid_features	cpu.h	/^    uint32_t cpuid_features;$/;"	m	struct:CPUX86State
cpuid_features	translate.c	/^    int cpuid_features;$/;"	m	struct:DisasContext	file:
cpuid_kvm_features	cpu.h	/^    uint32_t cpuid_kvm_features;$/;"	m	struct:CPUX86State
cpuid_level	cpu.h	/^    uint32_t cpuid_level;$/;"	m	struct:CPUX86State
cpuid_model	cpu.h	/^    uint32_t cpuid_model[12];$/;"	m	struct:CPUX86State
cpuid_svm_features	cpu.h	/^    uint32_t cpuid_svm_features;$/;"	m	struct:CPUX86State
cpuid_vendor1	cpu.h	/^    uint32_t cpuid_vendor1;$/;"	m	struct:CPUX86State
cpuid_vendor2	cpu.h	/^    uint32_t cpuid_vendor2;$/;"	m	struct:CPUX86State
cpuid_vendor3	cpu.h	/^    uint32_t cpuid_vendor3;$/;"	m	struct:CPUX86State
cpuid_vendor_override	cpu.h	/^    int cpuid_vendor_override;$/;"	m	struct:CPUX86State
cpuid_version	cpu.h	/^    uint32_t cpuid_version;$/;"	m	struct:CPUX86State
cpuid_xlevel	cpu.h	/^    uint32_t cpuid_xlevel;$/;"	m	struct:CPUX86State
cpuid_xlevel2	cpu.h	/^    uint32_t cpuid_xlevel2;$/;"	m	struct:CPUX86State
cpyid	cpuid.c	/^static void cpyid(const char *s, uint32_t *id)$/;"	f	file:
cr	cpu.h	/^    target_ulong cr[5]; \/* NOTE: cr1 is unused *\/$/;"	m	struct:CPUX86State
cr0	svm.h	/^	uint64_t cr0;$/;"	m	struct:vmcb_save_area
cr2	svm.h	/^	uint64_t cr2;$/;"	m	struct:vmcb_save_area
cr3	helper.c	/^	target_ulong cr3;$/;"	m	struct:cr3_node	file:
cr3	svm.h	/^	uint64_t cr3;$/;"	m	struct:vmcb_save_area
cr3_hash	helper.c	/^struct cr3_node *cr3_hash = NULL;$/;"	v	typeref:struct:cr3_node
cr3_node	helper.c	/^struct cr3_node {$/;"	s	file:
cr4	svm.h	/^	uint64_t cr4;$/;"	m	struct:vmcb_save_area
create_tb_for_pc	backup/main.c	/^uint8_t *create_tb_for_pc(uint32_t pc)$/;"	f
create_tb_for_pc	main.c	/^uint8_t *create_tb_for_pc(uint32_t pc)$/;"	f
cs	svm.h	/^	struct vmcb_seg cs;$/;"	m	struct:vmcb_save_area	typeref:struct:vmcb_save_area::vmcb_seg
cs_base	translate.c	/^    target_ulong cs_base; \/* base of CS segment *\/$/;"	m	struct:DisasContext	file:
cstar	cpu.h	/^    target_ulong cstar;$/;"	m	struct:CPUX86State
cstar	svm.h	/^	uint64_t cstar;$/;"	m	struct:vmcb_save_area
curr_basic_block_addr	backup/main.c	/^static uint32_t curr_basic_block_addr;$/;"	v	file:
curr_basic_block_addr	main.c	/^static uint32_t curr_basic_block_addr;$/;"	v	file:
curr_basic_block_end_type	backup/main.c	/^T_Type curr_basic_block_end_type;$/;"	v
curr_basic_block_end_type	main.c	/^T_Type curr_basic_block_end_type;$/;"	v
curr_basic_block_start_type	backup/main.c	/^T_Type curr_basic_block_start_type;$/;"	v
curr_basic_block_start_type	main.c	/^T_Type curr_basic_block_start_type;$/;"	v
current_eip	backup/main.c	/^uint32_t current_eip = 0;$/;"	v
current_eip	main.c	/^uint32_t current_eip = 0;$/;"	v
current_mod	backup/main.c	/^char current_mod[32] = "";$/;"	v
current_mod	main.c	/^char current_mod[32] = "";$/;"	v
current_proc	backup/main.c	/^char current_proc[32] = "";$/;"	v
current_proc	main.c	/^char current_proc[32] = "";$/;"	v
current_tid	backup/main.c	/^uint32_t current_tid = 0;	\/\/ Current thread id$/;"	v
current_tid	main.c	/^uint32_t current_tid = 0;	\/\/ Current thread id$/;"	v
d	cpu.h	/^    floatx80 d __attribute__((aligned(16)));$/;"	m	union:__anon4
dbgctl	svm.h	/^	uint64_t dbgctl;$/;"	m	struct:vmcb_save_area
df	cpu.h	/^    int32_t df; \/* D flag : 1 if D = 0, -1 if D = 1 *\/$/;"	m	struct:CPUX86State
dflag	translate.c	/^    int aflag, dflag;$/;"	m	struct:DisasContext	file:
dh_alias_MMXReg	ops_sse_header.h	29;"	d
dh_alias_Reg	ops_sse_header.h	27;"	d
dh_alias_XMMReg	ops_sse_header.h	28;"	d
dh_ctype_MMXReg	ops_sse_header.h	32;"	d
dh_ctype_Reg	ops_sse_header.h	30;"	d
dh_ctype_XMMReg	ops_sse_header.h	31;"	d
dh_is_signed_MMXReg	ops_sse_header.h	35;"	d
dh_is_signed_Reg	ops_sse_header.h	33;"	d
dh_is_signed_XMMReg	ops_sse_header.h	34;"	d
disas_insn	translate.c	/^static target_ulong disas_insn(DisasContext *s, target_ulong pc_start)$/;"	f	file:
distinguished_secondary_map	backup/mem_write_shadow.c	/^static SecMap distinguished_secondary_map;$/;"	v	file:
distinguished_secondary_map	mem_shadow.c	/^static SecMap distinguished_secondary_map;$/;"	v	file:
div64	op_helper.c	/^static int div64(uint64_t *plow, uint64_t *phigh, uint64_t b)$/;"	f	file:
do_copy_page_if_necessary	helper.c	/^uint32_t do_copy_page_if_necessary(target_ulong addr)$/;"	f
do_cpu_init	helper.c	/^void do_cpu_init(CPUState *env)$/;"	f
do_cpu_sipi	helper.c	/^void do_cpu_sipi(CPUState *env)$/;"	f
do_flush_log	backup/main.c	/^void do_flush_log()$/;"	f
do_flush_log	main.c	/^void do_flush_log()$/;"	f
do_guest_modules	backup/main.c	/^void do_guest_modules(uint32_t pid)$/;"	f
do_guest_modules	main.c	/^void do_guest_modules(uint32_t pid)$/;"	f
do_hlt	op_helper.c	/^static void do_hlt(void)$/;"	f	file:
do_inject_x86_mce	helper.c	/^static void do_inject_x86_mce(void *data)$/;"	f	file:
do_interrupt	op_helper.c	/^void do_interrupt(CPUState *env1)$/;"	f
do_interrupt64	op_helper.c	/^static void do_interrupt64(int intno, int is_int, int error_code,$/;"	f	file:
do_interrupt_all	op_helper.c	/^static void do_interrupt_all(int intno, int is_int, int error_code,$/;"	f	file:
do_interrupt_protected	op_helper.c	/^static void do_interrupt_protected(int intno, int is_int, int error_code,$/;"	f	file:
do_interrupt_real	op_helper.c	/^static void do_interrupt_real(int intno, int is_int, int error_code,$/;"	f	file:
do_interrupt_user	op_helper.c	/^static void do_interrupt_user(int intno, int is_int, int error_code,$/;"	f	file:
do_interrupt_x86_hardirq	op_helper.c	/^void do_interrupt_x86_hardirq(CPUState *env1, int intno, int is_hw)$/;"	f
do_keep_execution	backup/main.c	/^void do_keep_execution()$/;"	f
do_keep_execution	main.c	/^void do_keep_execution()$/;"	f
do_load_config	backup/main.c	/^void do_load_config(const char *config_filepath)$/;"	f
do_load_config	main.c	/^void do_load_config(const char *config_filepath)$/;"	f
do_load_hooks	backup/main.c	/^void do_load_hooks(const char *hooks_dirname, const char *plugins_filename)$/;"	f
do_load_hooks	main.c	/^void do_load_hooks(const char *hooks_dirname, const char *plugins_filename)$/;"	f
do_save_state	backup/main.c	/^void do_save_state(uint32_t pid, uint32_t address, const char *filename)$/;"	f
do_save_state	main.c	/^void do_save_state(uint32_t pid, uint32_t address, const char *filename)$/;"	f
do_smm_enter	op_helper.c	/^void do_smm_enter(CPUState *env1)$/;"	f
do_tracing	backup/main.c	/^void do_tracing(uint32_t pid, const char *filename)$/;"	f
do_tracing	main.c	/^void do_tracing(uint32_t pid, const char *filename)$/;"	f
do_tracing_by_name	backup/main.c	/^void do_tracing_by_name(const char *progname, const char *filename)$/;"	f
do_tracing_by_name	main.c	/^void do_tracing_by_name(const char *progname, const char *filename)$/;"	f
do_tracing_stop	backup/main.c	/^void do_tracing_stop()$/;"	f
do_tracing_stop	main.c	/^void do_tracing_stop()$/;"	f
do_xforce	backup/main.c	/^static void do_xforce(void)$/;"	f	file:
do_xforce	main.c	/^static void do_xforce(void)$/;"	f	file:
double_to_floatx80	op_helper.c	/^static inline floatx80 double_to_floatx80(double a)$/;"	f	file:
dr	cpu.h	/^    target_ulong dr[8]; \/* debug registers *\/$/;"	m	struct:CPUX86State
dr6	svm.h	/^	uint64_t dr6;$/;"	m	struct:vmcb_save_area
dr7	svm.h	/^	uint64_t dr7;$/;"	m	struct:vmcb_save_area
ds	svm.h	/^	struct vmcb_seg ds;$/;"	m	struct:vmcb_save_area	typeref:struct:vmcb_save_area::vmcb_seg
dstate	op_helper.c	/^xed_state_t dstate;$/;"	v
dump_tb	backup/main.c	/^static dump_tb()$/;"	f	file:
dump_tb	main.c	/^static dump_tb()$/;"	f	file:
dynamic_disas_inst	backup/main.c	/^static void dynamic_disas_inst()$/;"	f	file:
dynamic_disas_inst	main.c	/^static void dynamic_disas_inst()$/;"	f	file:
efer	cpu.h	/^    uint64_t efer;$/;"	m	struct:CPUX86State
efer	svm.h	/^	uint64_t efer;$/;"	m	struct:vmcb_save_area
eflags	cpu.h	/^    target_ulong eflags; \/* eflags register. During CPU emulation, CC$/;"	m	struct:CPUX86State
eip	cpu.h	/^    target_ulong eip;$/;"	m	struct:CPUX86State
enforce_cpuid	cpuid.c	/^int enforce_cpuid = 0;$/;"	v
env	helper.c	/^    CPUState *env;$/;"	m	struct:MCEInjectionParams	file:
error_code	cpu.h	/^    int error_code;$/;"	m	struct:CPUX86State
es	svm.h	/^	struct vmcb_seg es;$/;"	m	struct:vmcb_save_area	typeref:struct:vmcb_save_area::vmcb_seg
esp	helper.c	/^	target_ulong esp;$/;"	m	struct:cr3_node	file:
event_inj	svm.h	/^	uint32_t event_inj;$/;"	m	struct:vmcb_control_area
event_inj_err	svm.h	/^	uint32_t event_inj_err;$/;"	m	struct:vmcb_control_area
exception_injected	cpu.h	/^    int32_t exception_injected;$/;"	m	struct:CPUX86State
exception_is_int	cpu.h	/^    int exception_is_int;$/;"	m	struct:CPUX86State
exception_next_eip	cpu.h	/^    target_ulong exception_next_eip;$/;"	m	struct:CPUX86State
exeption_has_error_code	op_helper.c	/^static int exeption_has_error_code(int intno)$/;"	f	file:
exit_code	svm.h	/^	uint64_t exit_code;$/;"	m	struct:vmcb_control_area
exit_info_1	svm.h	/^	uint64_t exit_info_1;$/;"	m	struct:vmcb_control_area
exit_info_2	svm.h	/^	uint64_t exit_info_2;$/;"	m	struct:vmcb_control_area
exit_int_info	svm.h	/^	uint32_t exit_int_info;$/;"	m	struct:vmcb_control_area
exit_int_info_err	svm.h	/^	uint32_t exit_int_info_err;$/;"	m	struct:vmcb_control_area
exp	machine.c	/^    uint16_t exp;$/;"	m	union:x86_longdouble	file:
expand_mult	uthash.h	/^   unsigned expand_mult;$/;"	m	struct:UT_hash_bucket
ext2_feature_name	cpuid.c	/^static const char *ext2_feature_name[] = {$/;"	v	file:
ext2_features	cpuid.c	/^    uint32_t features, ext_features, ext2_features, ext3_features;$/;"	m	struct:x86_def_t	file:
ext3_feature_name	cpuid.c	/^static const char *ext3_feature_name[] = {$/;"	v	file:
ext3_features	cpuid.c	/^    uint32_t features, ext_features, ext2_features, ext3_features;$/;"	m	struct:x86_def_t	file:
ext4_features	cpuid.c	/^    uint32_t ext4_features;$/;"	m	struct:x86_def_t	file:
ext_feature_name	cpuid.c	/^static const char *ext_feature_name[] = {$/;"	v	file:
ext_features	cpuid.c	/^    uint32_t features, ext_features, ext2_features, ext3_features;$/;"	m	struct:x86_def_t	file:
ext_mask	translate.c	/^    void *op[2]; uint32_t ext_mask;$/;"	m	struct:sse_op_helper_s	file:
f_st	translate.c	/^    int f_st;   \/* currently unused *\/$/;"	m	struct:DisasContext	file:
family	cpuid.c	/^    int family;$/;"	m	struct:x86_def_t	file:
fault_count	backup/main.c	/^uint32_t fault_count;$/;"	v
fault_count	main.c	/^uint32_t fault_count;$/;"	v
fcom_ccval	op_helper.c	/^static const int fcom_ccval[4] = {0x0100, 0x4000, 0x0000, 0x4500};$/;"	v	file:
fcomi_ccval	op_helper.c	/^static const int fcomi_ccval[4] = {CC_C, CC_Z, 0, CC_Z | CC_P | CC_C};$/;"	v	file:
feature	kvm.c	/^    int feature;$/;"	m	struct:kvm_para_features	file:
feature_name	cpuid.c	/^static const char *feature_name[] = {$/;"	v	file:
features	cpuid.c	/^    uint32_t features, ext_features, ext2_features, ext3_features;$/;"	m	struct:x86_def_t	file:
ffs1	ops_sse.h	/^static inline int ffs1(unsigned int val)$/;"	f
find_cr3	helper.c	/^static struct cr3_node * find_cr3(target_ulong cr3)$/;"	f	file:
find_hw_breakpoint	kvm.c	/^static int find_hw_breakpoint(target_ulong addr, int len, int type)$/;"	f	file:
flag_names	cpuid.c	/^    const char **flag_names;$/;"	m	struct:model_features_t	file:
flags	cpu.h	/^    uint32_t flags;$/;"	m	struct:SegmentCache
flags	cpuid.c	/^    uint32_t flags;$/;"	m	struct:x86_def_t	file:
flags	helper.c	/^    int flags;$/;"	m	struct:MCEInjectionParams	file:
flags	translate.c	/^    uint64_t flags; \/* all execution flags *\/$/;"	m	struct:DisasContext	file:
floatx80_l2e	op_helper.c	204;"	d	file:
floatx80_l2t	op_helper.c	205;"	d	file:
floatx80_lg2	op_helper.c	203;"	d	file:
floatx80_to_double	op_helper.c	/^static inline double floatx80_to_double(floatx80 a)$/;"	f	file:
fmask	cpu.h	/^    target_ulong fmask;$/;"	m	struct:CPUX86State
fp64_to_fp80	machine.c	/^static void fp64_to_fp80(union x86_longdouble *p, uint64_t temp)$/;"	f	file:
fp_status	cpu.h	/^    float_status fp_status;$/;"	m	struct:CPUX86State
fpdp	cpu.h	/^    uint64_t fpdp;$/;"	m	struct:CPUX86State
fpip	cpu.h	/^    uint64_t fpip;$/;"	m	struct:CPUX86State
fpop	cpu.h	/^    uint16_t fpop;$/;"	m	struct:CPUX86State
fpop	op_helper.c	/^static inline void fpop(void)$/;"	f	file:
fpop_ip_dp_needed	machine.c	/^static bool fpop_ip_dp_needed(void *opaque)$/;"	f	file:
fpregs	cpu.h	/^    FPReg fpregs[8];$/;"	m	struct:CPUX86State
fpregs_format_vmstate	cpu.h	/^    uint16_t fpregs_format_vmstate;$/;"	m	struct:CPUX86State
fpregs_is_0	machine.c	/^static bool fpregs_is_0(void *opaque, int version_id)$/;"	f	file:
fpregs_is_1_mmx	machine.c	/^static bool fpregs_is_1_mmx(void *opaque, int version_id)$/;"	f	file:
fpregs_is_1_no_mmx	machine.c	/^static bool fpregs_is_1_no_mmx(void *opaque, int version_id)$/;"	f	file:
fpstt	cpu.h	/^    unsigned int fpstt; \/* top of stack index *\/$/;"	m	struct:CPUX86State
fptag_vmstate	cpu.h	/^    uint16_t fptag_vmstate;$/;"	m	struct:CPUX86State
fptags	cpu.h	/^    uint8_t fptags[8];   \/* 0 = valid, 1 = empty *\/$/;"	m	struct:CPUX86State
fpu_raise_exception	op_helper.c	/^static void fpu_raise_exception(void)$/;"	f	file:
fpu_set_exception	op_helper.c	/^static void fpu_set_exception(int mask)$/;"	f	file:
fpuc	cpu.h	/^    uint16_t fpuc;$/;"	m	struct:CPUX86State
fpus	cpu.h	/^    uint16_t fpus;$/;"	m	struct:CPUX86State
fpus_vmstate	cpu.h	/^    uint16_t fpus_vmstate;$/;"	m	struct:CPUX86State
fpush	op_helper.c	/^static inline void fpush(void)$/;"	f	file:
free_shadow_mem_write_memory	backup/mem_write_shadow.c	/^void free_shadow_mem_write_memory(void)$/;"	f
free_shadow_mem_write_memory	mem_shadow.c	/^void free_shadow_mem_write_memory(void)$/;"	f
fs	svm.h	/^	struct vmcb_seg fs;$/;"	m	struct:vmcb_save_area	typeref:struct:vmcb_save_area::vmcb_seg
fst_inst	backup/main.c	/^uint32_t fst_inst;$/;"	v
fst_inst	main.c	/^uint32_t fst_inst;$/;"	v
ft0	cpu.h	/^    floatx80 ft0;$/;"	m	struct:CPUX86State
functionsname	backup/main.c	/^char functionsname[128] = "";$/;"	v
functionsname	main.c	/^char functionsname[128] = "";$/;"	v
g_pat	svm.h	/^	uint64_t g_pat;$/;"	m	struct:vmcb_save_area
gdt	cpu.h	/^    SegmentCache gdt; \/* only base and limit are used *\/$/;"	m	struct:CPUX86State
gdtr	svm.h	/^	struct vmcb_seg gdtr;$/;"	m	struct:vmcb_save_area	typeref:struct:vmcb_save_area::vmcb_seg
gen_add_A0_ds_seg	translate.c	/^static void gen_add_A0_ds_seg(DisasContext *s)$/;"	f	file:
gen_add_A0_im	translate.c	/^static void gen_add_A0_im(DisasContext *s, int val)$/;"	f	file:
gen_check_io	translate.c	/^static void gen_check_io(DisasContext *s, int ot, target_ulong cur_eip,$/;"	f	file:
gen_cmps	translate.c	/^static inline void gen_cmps(DisasContext *s, int ot)$/;"	f	file:
gen_compute_eflags	translate.c	/^static void gen_compute_eflags(TCGv reg)$/;"	f	file:
gen_compute_eflags_c	translate.c	/^static void gen_compute_eflags_c(TCGv reg)$/;"	f	file:
gen_debug	translate.c	/^static void gen_debug(DisasContext *s, target_ulong cur_eip)$/;"	f	file:
gen_enter	translate.c	/^static void gen_enter(DisasContext *s, int esp_addend, int level)$/;"	f	file:
gen_eob	translate.c	/^static void gen_eob(DisasContext *s)$/;"	f	file:
gen_exception	translate.c	/^static void gen_exception(DisasContext *s, int trapno, target_ulong cur_eip)$/;"	f	file:
gen_exts	translate.c	/^static void gen_exts(int ot, TCGv reg)$/;"	f	file:
gen_extu	translate.c	/^static void gen_extu(int ot, TCGv reg)$/;"	f	file:
gen_goto_tb	translate.c	/^static inline void gen_goto_tb(DisasContext *s, int tb_num, target_ulong eip)$/;"	f	file:
gen_helper_fp_arith_ST0_FT0	translate.c	/^static void gen_helper_fp_arith_ST0_FT0(int op)$/;"	f	file:
gen_helper_fp_arith_STN_ST0	translate.c	/^static void gen_helper_fp_arith_STN_ST0(int op, int opreg)$/;"	f	file:
gen_helper_in_func	translate.c	/^static void gen_helper_in_func(int ot, TCGv v, TCGv_i32 n)$/;"	f	file:
gen_helper_out_func	translate.c	/^static void gen_helper_out_func(int ot, TCGv_i32 v, TCGv_i32 n)$/;"	f	file:
gen_inc	translate.c	/^static void gen_inc(DisasContext *s1, int ot, int d, int c)$/;"	f	file:
gen_ins	translate.c	/^static inline void gen_ins(DisasContext *s, int ot)$/;"	f	file:
gen_intermediate_code	translate.c	/^void gen_intermediate_code(CPUState *env, TranslationBlock *tb)$/;"	f
gen_intermediate_code_internal	translate.c	/^static inline void gen_intermediate_code_internal(CPUState *env,$/;"	f	file:
gen_intermediate_code_pc	translate.c	/^void gen_intermediate_code_pc(CPUState *env, TranslationBlock *tb)$/;"	f
gen_interrupt	translate.c	/^static void gen_interrupt(DisasContext *s, int intno,$/;"	f	file:
gen_jcc	translate.c	/^static inline void gen_jcc(DisasContext *s, int b,$/;"	f	file:
gen_jcc1	translate.c	/^static inline void gen_jcc1(DisasContext *s, int cc_op, int b, int l1)$/;"	f	file:
gen_jmp	translate.c	/^static void gen_jmp(DisasContext *s, target_ulong eip)$/;"	f	file:
gen_jmp_im	translate.c	/^static inline void gen_jmp_im(target_ulong pc)$/;"	f	file:
gen_jmp_tb	translate.c	/^static void gen_jmp_tb(DisasContext *s, target_ulong eip, int tb_num)$/;"	f	file:
gen_jz_ecx_string	translate.c	/^static int gen_jz_ecx_string(DisasContext *s, target_ulong next_eip)$/;"	f	file:
gen_ldo_env_A0	translate.c	/^static inline void gen_ldo_env_A0(int idx, int offset)$/;"	f	file:
gen_ldq_env_A0	translate.c	/^static inline void gen_ldq_env_A0(int idx, int offset)$/;"	f	file:
gen_ldst_modrm	translate.c	/^static void gen_ldst_modrm(DisasContext *s, int modrm, int ot, int reg, int is_store)$/;"	f	file:
gen_lea_modrm	translate.c	/^static void gen_lea_modrm(DisasContext *s, int modrm, int *reg_ptr, int *offset_ptr)$/;"	f	file:
gen_lods	translate.c	/^static inline void gen_lods(DisasContext *s, int ot)$/;"	f	file:
gen_movl_seg_T0	translate.c	/^static void gen_movl_seg_T0(DisasContext *s, int seg_reg, target_ulong cur_eip)$/;"	f	file:
gen_movs	translate.c	/^static inline void gen_movs(DisasContext *s, int ot)$/;"	f	file:
gen_movtl_T0_im	translate.c	/^static inline void gen_movtl_T0_im(target_ulong val)$/;"	f	file:
gen_movtl_T1_im	translate.c	/^static inline void gen_movtl_T1_im(target_ulong val)$/;"	f	file:
gen_nop_modrm	translate.c	/^static void gen_nop_modrm(DisasContext *s, int modrm)$/;"	f	file:
gen_op	translate.c	/^static void gen_op(DisasContext *s1, int op, int ot, int d)$/;"	f	file:
gen_op_add_reg_T0	translate.c	/^static inline void gen_op_add_reg_T0(int size, int reg)$/;"	f	file:
gen_op_add_reg_im	translate.c	/^static inline void gen_op_add_reg_im(int size, int reg, int32_t val)$/;"	f	file:
gen_op_addl_A0_im	translate.c	/^static inline void gen_op_addl_A0_im(int32_t val)$/;"	f	file:
gen_op_addl_A0_reg_sN	translate.c	/^static inline void gen_op_addl_A0_reg_sN(int shift, int reg)$/;"	f	file:
gen_op_addl_A0_seg	translate.c	/^static inline void gen_op_addl_A0_seg(int reg)$/;"	f	file:
gen_op_addl_T0_T1	translate.c	/^static inline void gen_op_addl_T0_T1(void)$/;"	f	file:
gen_op_addq_A0_im	translate.c	/^static inline void gen_op_addq_A0_im(int64_t val)$/;"	f	file:
gen_op_addq_A0_reg_sN	translate.c	/^static inline void gen_op_addq_A0_reg_sN(int shift, int reg)$/;"	f	file:
gen_op_addq_A0_seg	translate.c	/^static inline void gen_op_addq_A0_seg(int reg)$/;"	f	file:
gen_op_andl_A0_ffff	translate.c	/^static inline void gen_op_andl_A0_ffff(void)$/;"	f	file:
gen_op_andl_T0_ffff	translate.c	/^static inline void gen_op_andl_T0_ffff(void)$/;"	f	file:
gen_op_andl_T0_im	translate.c	/^static inline void gen_op_andl_T0_im(uint32_t val)$/;"	f	file:
gen_op_cmpl_T0_T1_cc	translate.c	/^static inline void gen_op_cmpl_T0_T1_cc(void)$/;"	f	file:
gen_op_jmp_T0	translate.c	/^static inline void gen_op_jmp_T0(void)$/;"	f	file:
gen_op_jnz_ecx	translate.c	/^static inline void gen_op_jnz_ecx(int size, int label1)$/;"	f	file:
gen_op_jz_ecx	translate.c	/^static inline void gen_op_jz_ecx(int size, int label1)$/;"	f	file:
gen_op_ld_T0_A0	translate.c	/^static inline void gen_op_ld_T0_A0(int idx)$/;"	f	file:
gen_op_ld_T1_A0	translate.c	/^static inline void gen_op_ld_T1_A0(int idx)$/;"	f	file:
gen_op_ld_v	translate.c	/^static inline void gen_op_ld_v(int idx, TCGv t0, TCGv a0)$/;"	f	file:
gen_op_lds_T0_A0	translate.c	/^static inline void gen_op_lds_T0_A0(int idx)$/;"	f	file:
gen_op_ldu_T0_A0	translate.c	/^static inline void gen_op_ldu_T0_A0(int idx)$/;"	f	file:
gen_op_mov_TN_reg	translate.c	/^static inline void gen_op_mov_TN_reg(int ot, int t_index, int reg)$/;"	f	file:
gen_op_mov_reg_A0	translate.c	/^static inline void gen_op_mov_reg_A0(int size, int reg)$/;"	f	file:
gen_op_mov_reg_T0	translate.c	/^static inline void gen_op_mov_reg_T0(int ot, int reg)$/;"	f	file:
gen_op_mov_reg_T1	translate.c	/^static inline void gen_op_mov_reg_T1(int ot, int reg)$/;"	f	file:
gen_op_mov_reg_v	translate.c	/^static inline void gen_op_mov_reg_v(int ot, int reg, TCGv t0)$/;"	f	file:
gen_op_mov_v_reg	translate.c	/^static inline void gen_op_mov_v_reg(int ot, TCGv t0, int reg)$/;"	f	file:
gen_op_movl	translate.c	/^static inline void gen_op_movl(int d_offset, int s_offset)$/;"	f	file:
gen_op_movl_A0_im	translate.c	/^static inline void gen_op_movl_A0_im(uint32_t val)$/;"	f	file:
gen_op_movl_A0_reg	translate.c	/^static inline void gen_op_movl_A0_reg(int reg)$/;"	f	file:
gen_op_movl_A0_seg	translate.c	/^static inline void gen_op_movl_A0_seg(int reg)$/;"	f	file:
gen_op_movl_T0_0	translate.c	/^static inline void gen_op_movl_T0_0(void)$/;"	f	file:
gen_op_movl_T0_Dshift	translate.c	/^static inline void gen_op_movl_T0_Dshift(int ot) $/;"	f	file:
gen_op_movl_T0_T1	translate.c	/^static inline void gen_op_movl_T0_T1(void)$/;"	f	file:
gen_op_movl_T0_im	translate.c	/^static inline void gen_op_movl_T0_im(int32_t val)$/;"	f	file:
gen_op_movl_T0_imu	translate.c	/^static inline void gen_op_movl_T0_imu(uint32_t val)$/;"	f	file:
gen_op_movl_T0_seg	translate.c	/^static inline void gen_op_movl_T0_seg(int seg_reg)$/;"	f	file:
gen_op_movl_T1_im	translate.c	/^static inline void gen_op_movl_T1_im(int32_t val)$/;"	f	file:
gen_op_movl_T1_imu	translate.c	/^static inline void gen_op_movl_T1_imu(uint32_t val)$/;"	f	file:
gen_op_movl_seg_T0_vm	translate.c	/^static inline void gen_op_movl_seg_T0_vm(int seg_reg)$/;"	f	file:
gen_op_movo	translate.c	/^static inline void gen_op_movo(int d_offset, int s_offset)$/;"	f	file:
gen_op_movq	translate.c	/^static inline void gen_op_movq(int d_offset, int s_offset)$/;"	f	file:
gen_op_movq_A0_im	translate.c	/^static inline void gen_op_movq_A0_im(int64_t val)$/;"	f	file:
gen_op_movq_A0_reg	translate.c	/^static inline void gen_op_movq_A0_reg(int reg)$/;"	f	file:
gen_op_movq_A0_seg	translate.c	/^static inline void gen_op_movq_A0_seg(int reg)$/;"	f	file:
gen_op_movq_env_0	translate.c	/^static inline void gen_op_movq_env_0(int d_offset)$/;"	f	file:
gen_op_set_cc_op	translate.c	/^static inline void gen_op_set_cc_op(int32_t val)$/;"	f	file:
gen_op_st_T0_A0	translate.c	/^static inline void gen_op_st_T0_A0(int idx)$/;"	f	file:
gen_op_st_T1_A0	translate.c	/^static inline void gen_op_st_T1_A0(int idx)$/;"	f	file:
gen_op_st_v	translate.c	/^static inline void gen_op_st_v(int idx, TCGv t0, TCGv a0)$/;"	f	file:
gen_op_testl_T0_T1_cc	translate.c	/^static inline void gen_op_testl_T0_T1_cc(void)$/;"	f	file:
gen_op_update1_cc	translate.c	/^static void gen_op_update1_cc(void)$/;"	f	file:
gen_op_update2_cc	translate.c	/^static void gen_op_update2_cc(void)$/;"	f	file:
gen_op_update_neg_cc	translate.c	/^static void gen_op_update_neg_cc(void)$/;"	f	file:
gen_opc_cc_op	translate.c	/^static uint8_t gen_opc_cc_op[OPC_BUF_SIZE];$/;"	v	file:
gen_outs	translate.c	/^static inline void gen_outs(DisasContext *s, int ot)$/;"	f	file:
gen_pop_T0	translate.c	/^static void gen_pop_T0(DisasContext *s)$/;"	f	file:
gen_pop_update	translate.c	/^static void gen_pop_update(DisasContext *s)$/;"	f	file:
gen_popa	translate.c	/^static void gen_popa(DisasContext *s)$/;"	f	file:
gen_push_T0	translate.c	/^static void gen_push_T0(DisasContext *s)$/;"	f	file:
gen_push_T1	translate.c	/^static void gen_push_T1(DisasContext *s)$/;"	f	file:
gen_pusha	translate.c	/^static void gen_pusha(DisasContext *s)$/;"	f	file:
gen_rot_rm_T1	translate.c	/^static void gen_rot_rm_T1(DisasContext *s, int ot, int op1, $/;"	f	file:
gen_rot_rm_im	translate.c	/^static void gen_rot_rm_im(DisasContext *s, int ot, int op1, int op2,$/;"	f	file:
gen_rotc_rm_T1	translate.c	/^static void gen_rotc_rm_T1(DisasContext *s, int ot, int op1, $/;"	f	file:
gen_scas	translate.c	/^static inline void gen_scas(DisasContext *s, int ot)$/;"	f	file:
gen_setcc	translate.c	/^static void gen_setcc(DisasContext *s, int b)$/;"	f	file:
gen_setcc_slow_T0	translate.c	/^static inline void gen_setcc_slow_T0(DisasContext *s, int jcc_op)$/;"	f	file:
gen_shift	translate.c	/^static void gen_shift(DisasContext *s1, int op, int ot, int d, int s)$/;"	f	file:
gen_shift_rm_T1	translate.c	/^static void gen_shift_rm_T1(DisasContext *s, int ot, int op1, $/;"	f	file:
gen_shift_rm_im	translate.c	/^static void gen_shift_rm_im(DisasContext *s, int ot, int op1, int op2,$/;"	f	file:
gen_shiftd_rm_T1_T3	translate.c	/^static void gen_shiftd_rm_T1_T3(DisasContext *s, int ot, int op1, $/;"	f	file:
gen_shifti	translate.c	/^static void gen_shifti(DisasContext *s1, int op, int ot, int d, int c)$/;"	f	file:
gen_sse	translate.c	/^static void gen_sse(DisasContext *s, int b, target_ulong pc_start, int rex_r)$/;"	f	file:
gen_stack_A0	translate.c	/^static void gen_stack_A0(DisasContext *s)$/;"	f	file:
gen_stack_update	translate.c	/^static inline void gen_stack_update(DisasContext *s, int addend)$/;"	f	file:
gen_sto_env_A0	translate.c	/^static inline void gen_sto_env_A0(int idx, int offset)$/;"	f	file:
gen_stos	translate.c	/^static inline void gen_stos(DisasContext *s, int ot)$/;"	f	file:
gen_stq_env_A0	translate.c	/^static inline void gen_stq_env_A0(int idx, int offset)$/;"	f	file:
gen_string_movl_A0_EDI	translate.c	/^static inline void gen_string_movl_A0_EDI(DisasContext *s)$/;"	f	file:
gen_string_movl_A0_ESI	translate.c	/^static inline void gen_string_movl_A0_ESI(DisasContext *s)$/;"	f	file:
gen_svm_check_intercept	translate.c	/^gen_svm_check_intercept(DisasContext *s, target_ulong pc_start, uint64_t type)$/;"	f	file:
gen_svm_check_intercept_param	translate.c	/^gen_svm_check_intercept_param(DisasContext *s, target_ulong pc_start,$/;"	f	file:
gen_update_cc_op	translate.c	/^static inline void gen_update_cc_op(DisasContext *s)$/;"	f	file:
get16bits	uthash.h	431;"	d
get16bits	uthash.h	434;"	d
get16bits	uthash.h	438;"	d
get_cpuid_vendor	cpuid.c	/^static void get_cpuid_vendor(CPUX86State *env, uint32_t *ebx,$/;"	f	file:
get_fpreg	machine.c	/^static int get_fpreg(QEMUFile *f, void *opaque, size_t size)$/;"	f	file:
get_fpreg_1_mmx	machine.c	/^static int get_fpreg_1_mmx(QEMUFile *f, void *opaque, size_t size)$/;"	f	file:
get_fpreg_1_no_mmx	machine.c	/^static int get_fpreg_1_no_mmx(QEMUFile *f, void *opaque, size_t size)$/;"	f	file:
get_func_name_by_addr	backup/main.c	/^char *get_func_name_by_addr(uint32_t eip)$/;"	f
get_func_name_by_addr	main.c	/^char *get_func_name_by_addr(uint32_t eip)$/;"	f
get_mem_write_time_stamp	backup/mem_write_shadow.c	/^UInt  get_mem_write_time_stamp( Addr a )$/;"	f
get_mem_write_time_stamp	mem_shadow.c	/^UInt  get_mem_write_time_stamp( Addr a )$/;"	f
get_para_features	kvm.c	/^static int get_para_features(KVMState *s)$/;"	f	file:
get_rsp_from_tss	op_helper.c	/^static inline target_ulong get_rsp_from_tss(int level)$/;"	f	file:
get_seg	kvm.c	/^static void get_seg(SegmentCache *lhs, const struct kvm_segment *rhs)$/;"	f	file:
get_seg_base	op_helper.c	/^static inline uint32_t get_seg_base(uint32_t e1, uint32_t e2)$/;"	f	file:
get_seg_limit	op_helper.c	/^static inline unsigned int get_seg_limit(uint32_t e1, uint32_t e2)$/;"	f	file:
get_shadow_page	helper.c	/^inline uint64_t get_shadow_page(target_ulong  page_size)$/;"	f
get_sp_mask	op_helper.c	/^static inline unsigned int get_sp_mask(unsigned int e2)$/;"	f	file:
get_ss_esp_from_tss	op_helper.c	/^static inline void get_ss_esp_from_tss(uint32_t *ss_ptr,$/;"	f	file:
get_uint64_as_uint32	machine.c	/^static int get_uint64_as_uint32(QEMUFile *f, void *pv, size_t size)$/;"	f	file:
global_cpu_lock	op_helper.c	/^static spinlock_t global_cpu_lock = SPIN_LOCK_UNLOCKED;$/;"	v	file:
global_time_stamp	backup/hook_inst.c	/^uint32_t global_time_stamp = 0;$/;"	v
global_time_stamp	hook_inst.c	/^uint32_t global_time_stamp = 0;$/;"	v
glue	helper_template.h	/^static int glue(compute_all_adc, SUFFIX)(void)$/;"	f
glue	helper_template.h	/^static int glue(compute_all_add, SUFFIX)(void)$/;"	f
glue	helper_template.h	/^static int glue(compute_all_dec, SUFFIX)(void)$/;"	f
glue	helper_template.h	/^static int glue(compute_all_inc, SUFFIX)(void)$/;"	f
glue	helper_template.h	/^static int glue(compute_all_logic, SUFFIX)(void)$/;"	f
glue	helper_template.h	/^static int glue(compute_all_mul, SUFFIX)(void)$/;"	f
glue	helper_template.h	/^static int glue(compute_all_sar, SUFFIX)(void)$/;"	f
glue	helper_template.h	/^static int glue(compute_all_sbb, SUFFIX)(void)$/;"	f
glue	helper_template.h	/^static int glue(compute_all_shl, SUFFIX)(void)$/;"	f
glue	helper_template.h	/^static int glue(compute_all_sub, SUFFIX)(void)$/;"	f
glue	helper_template.h	/^static int glue(compute_c_adc, SUFFIX)(void)$/;"	f
glue	helper_template.h	/^static int glue(compute_c_add, SUFFIX)(void)$/;"	f
glue	helper_template.h	/^static int glue(compute_c_inc, SUFFIX)(void)$/;"	f
glue	helper_template.h	/^static int glue(compute_c_logic, SUFFIX)(void)$/;"	f
glue	helper_template.h	/^static int glue(compute_c_mul, SUFFIX)(void)$/;"	f
glue	helper_template.h	/^static int glue(compute_c_sar, SUFFIX)(void)$/;"	f
glue	helper_template.h	/^static int glue(compute_c_sbb, SUFFIX)(void)$/;"	f
glue	helper_template.h	/^static int glue(compute_c_shl, SUFFIX)(void)$/;"	f
glue	helper_template.h	/^static int glue(compute_c_sub, SUFFIX)(void)$/;"	f
glue	helper_template.h	/^target_ulong glue(helper_rcl, SUFFIX)(target_ulong t0, target_ulong t1)$/;"	f
glue	helper_template.h	/^target_ulong glue(helper_rcr, SUFFIX)(target_ulong t0, target_ulong t1)$/;"	f
glue	ops_sse.h	/^uint32_t glue(helper_pmovmskb, SUFFIX)(Reg *s)$/;"	f
glue	ops_sse.h	/^void glue(helper_dppd, SUFFIX) (Reg *d, Reg *s, uint32_t mask)$/;"	f
glue	ops_sse.h	/^void glue(helper_dpps, SUFFIX) (Reg *d, Reg *s, uint32_t mask)$/;"	f
glue	ops_sse.h	/^void glue(helper_maskmov, SUFFIX) (Reg *d, Reg *s, target_ulong a0)$/;"	f
glue	ops_sse.h	/^void glue(helper_movl_mm_T0, SUFFIX) (Reg *d, uint32_t val)$/;"	f
glue	ops_sse.h	/^void glue(helper_movq_mm_T0, SUFFIX) (Reg *d, uint64_t val)$/;"	f
glue	ops_sse.h	/^void glue(helper_mpsadbw, SUFFIX) (Reg *d, Reg *s, uint32_t offset)$/;"	f
glue	ops_sse.h	/^void glue(helper_packssdw, SUFFIX) (Reg *d, Reg *s)$/;"	f
glue	ops_sse.h	/^void glue(helper_packsswb, SUFFIX) (Reg *d, Reg *s)$/;"	f
glue	ops_sse.h	/^void glue(helper_packusdw, SUFFIX) (Reg *d, Reg *s)$/;"	f
glue	ops_sse.h	/^void glue(helper_packuswb, SUFFIX) (Reg *d, Reg *s)$/;"	f
glue	ops_sse.h	/^void glue(helper_palignr, SUFFIX) (Reg *d, Reg *s, int32_t shift)$/;"	f
glue	ops_sse.h	/^void glue(helper_pcmpestri, SUFFIX) (Reg *d, Reg *s, uint32_t ctrl)$/;"	f
glue	ops_sse.h	/^void glue(helper_pcmpestrm, SUFFIX) (Reg *d, Reg *s, uint32_t ctrl)$/;"	f
glue	ops_sse.h	/^void glue(helper_pcmpistri, SUFFIX) (Reg *d, Reg *s, uint32_t ctrl)$/;"	f
glue	ops_sse.h	/^void glue(helper_pcmpistrm, SUFFIX) (Reg *d, Reg *s, uint32_t ctrl)$/;"	f
glue	ops_sse.h	/^void glue(helper_phaddd, SUFFIX) (Reg *d, Reg *s)$/;"	f
glue	ops_sse.h	/^void glue(helper_phaddsw, SUFFIX) (Reg *d, Reg *s)$/;"	f
glue	ops_sse.h	/^void glue(helper_phaddw, SUFFIX) (Reg *d, Reg *s)$/;"	f
glue	ops_sse.h	/^void glue(helper_phminposuw, SUFFIX) (Reg *d, Reg *s)$/;"	f
glue	ops_sse.h	/^void glue(helper_phsubd, SUFFIX) (Reg *d, Reg *s)$/;"	f
glue	ops_sse.h	/^void glue(helper_phsubsw, SUFFIX) (Reg *d, Reg *s)$/;"	f
glue	ops_sse.h	/^void glue(helper_phsubw, SUFFIX) (Reg *d, Reg *s)$/;"	f
glue	ops_sse.h	/^void glue(helper_pmaddubsw, SUFFIX) (Reg *d, Reg *s)$/;"	f
glue	ops_sse.h	/^void glue(helper_pmaddwd, SUFFIX) (Reg *d, Reg *s)$/;"	f
glue	ops_sse.h	/^void glue(helper_pmuldq, SUFFIX) (Reg *d, Reg *s)$/;"	f
glue	ops_sse.h	/^void glue(helper_pmuludq, SUFFIX) (Reg *d, Reg *s)$/;"	f
glue	ops_sse.h	/^void glue(helper_psadbw, SUFFIX) (Reg *d, Reg *s)$/;"	f
glue	ops_sse.h	/^void glue(helper_pshufb, SUFFIX) (Reg *d, Reg *s)$/;"	f
glue	ops_sse.h	/^void glue(helper_pshufd, SUFFIX) (Reg *d, Reg *s, int order)$/;"	f
glue	ops_sse.h	/^void glue(helper_pshufhw, SUFFIX) (Reg *d, Reg *s, int order)$/;"	f
glue	ops_sse.h	/^void glue(helper_pshuflw, SUFFIX) (Reg *d, Reg *s, int order)$/;"	f
glue	ops_sse.h	/^void glue(helper_pshufw, SUFFIX) (Reg *d, Reg *s, int order)$/;"	f
glue	ops_sse.h	/^void glue(helper_pslld, SUFFIX)(Reg *d, Reg *s)$/;"	f
glue	ops_sse.h	/^void glue(helper_pslldq, SUFFIX)(Reg *d, Reg *s)$/;"	f
glue	ops_sse.h	/^void glue(helper_psllq, SUFFIX)(Reg *d, Reg *s)$/;"	f
glue	ops_sse.h	/^void glue(helper_psllw, SUFFIX)(Reg *d, Reg *s)$/;"	f
glue	ops_sse.h	/^void glue(helper_psrad, SUFFIX)(Reg *d, Reg *s)$/;"	f
glue	ops_sse.h	/^void glue(helper_psraw, SUFFIX)(Reg *d, Reg *s)$/;"	f
glue	ops_sse.h	/^void glue(helper_psrld, SUFFIX)(Reg *d, Reg *s)$/;"	f
glue	ops_sse.h	/^void glue(helper_psrldq, SUFFIX)(Reg *d, Reg *s)$/;"	f
glue	ops_sse.h	/^void glue(helper_psrlq, SUFFIX)(Reg *d, Reg *s)$/;"	f
glue	ops_sse.h	/^void glue(helper_psrlw, SUFFIX)(Reg *d, Reg *s)$/;"	f
glue	ops_sse.h	/^void glue(helper_ptest, SUFFIX) (Reg *d, Reg *s)$/;"	f
glue	ops_sse.h	/^void glue(helper_roundpd, SUFFIX) (Reg *d, Reg *s, uint32_t mode)$/;"	f
glue	ops_sse.h	/^void glue(helper_roundps, SUFFIX) (Reg *d, Reg *s, uint32_t mode)$/;"	f
glue	ops_sse.h	/^void glue(helper_roundsd, SUFFIX) (Reg *d, Reg *s, uint32_t mode)$/;"	f
glue	ops_sse.h	/^void glue(helper_roundss, SUFFIX) (Reg *d, Reg *s, uint32_t mode)$/;"	f
gs	svm.h	/^	struct vmcb_seg gs;$/;"	m	struct:vmcb_save_area	typeref:struct:vmcb_save_area::vmcb_seg
guest_feat	cpuid.c	/^    uint32_t *guest_feat;$/;"	m	struct:model_features_t	file:
handle_even_inj	op_helper.c	/^static void handle_even_inj(int intno, int is_int, int error_code,$/;"	f	file:
hardware_memory_error	kvm.c	/^static void hardware_memory_error(void)$/;"	f	file:
has_error_code	cpu.h	/^    uint8_t has_error_code;$/;"	m	struct:CPUX86State
has_msr_async_pf_en	kvm.c	/^static bool has_msr_async_pf_en;$/;"	v	file:
has_msr_hsave_pa	kvm.c	/^static bool has_msr_hsave_pa;$/;"	v	file:
has_msr_star	kvm.c	/^static bool has_msr_star;$/;"	v	file:
hashv	uthash.h	/^   unsigned hashv;                   \/* result of hash-fcn(key)        *\/$/;"	m	struct:UT_hash_handle
helper_aaa	op_helper.c	/^void helper_aaa(void)$/;"	f
helper_aad	op_helper.c	/^void helper_aad(int base)$/;"	f
helper_aam	op_helper.c	/^void helper_aam(int base)$/;"	f
helper_aas	op_helper.c	/^void helper_aas(void)$/;"	f
helper_addsubpd	ops_sse.h	/^void helper_addsubpd(XMMReg *d, XMMReg *s)$/;"	f
helper_addsubps	ops_sse.h	/^void helper_addsubps(XMMReg *d, XMMReg *s)$/;"	f
helper_boundl	op_helper.c	/^void helper_boundl(target_ulong a0, int v)$/;"	f
helper_boundw	op_helper.c	/^void helper_boundw(target_ulong a0, int v)$/;"	f
helper_bsf	op_helper.c	/^target_ulong helper_bsf(target_ulong t0)$/;"	f
helper_bsr	op_helper.c	/^target_ulong helper_bsr(target_ulong t0)$/;"	f
helper_cc_compute_all	op_helper.c	/^uint32_t helper_cc_compute_all(int op)$/;"	f
helper_cc_compute_c	op_helper.c	/^uint32_t helper_cc_compute_c(int op)$/;"	f
helper_check_iob	op_helper.c	/^void helper_check_iob(uint32_t t0)$/;"	f
helper_check_iol	op_helper.c	/^void helper_check_iol(uint32_t t0)$/;"	f
helper_check_iow	op_helper.c	/^void helper_check_iow(uint32_t t0)$/;"	f
helper_clgi	op_helper.c	/^void helper_clgi(void)$/;"	f
helper_cli	op_helper.c	/^void helper_cli(void)$/;"	f
helper_clts	op_helper.c	/^void helper_clts(void)$/;"	f
helper_cmpxchg16b	op_helper.c	/^void helper_cmpxchg16b(target_ulong a0)$/;"	f
helper_cmpxchg8b	op_helper.c	/^void helper_cmpxchg8b(target_ulong a0)$/;"	f
helper_comisd	ops_sse.h	/^void helper_comisd(Reg *d, Reg *s)$/;"	f
helper_comiss	ops_sse.h	/^void helper_comiss(Reg *d, Reg *s)$/;"	f
helper_cpuid	op_helper.c	/^void helper_cpuid(void)$/;"	f
helper_crc32	ops_sse.h	/^target_ulong helper_crc32(uint32_t crc1, target_ulong msg, uint32_t len)$/;"	f
helper_cvtdq2pd	ops_sse.h	/^void helper_cvtdq2pd(Reg *d, Reg *s)$/;"	f
helper_cvtdq2ps	ops_sse.h	/^void helper_cvtdq2ps(Reg *d, Reg *s)$/;"	f
helper_cvtpd2dq	ops_sse.h	/^void helper_cvtpd2dq(XMMReg *d, XMMReg *s)$/;"	f
helper_cvtpd2pi	ops_sse.h	/^void helper_cvtpd2pi(MMXReg *d, XMMReg *s)$/;"	f
helper_cvtpd2ps	ops_sse.h	/^void helper_cvtpd2ps(Reg *d, Reg *s)$/;"	f
helper_cvtpi2pd	ops_sse.h	/^void helper_cvtpi2pd(XMMReg *d, MMXReg *s)$/;"	f
helper_cvtpi2ps	ops_sse.h	/^void helper_cvtpi2ps(XMMReg *d, MMXReg *s)$/;"	f
helper_cvtps2dq	ops_sse.h	/^void helper_cvtps2dq(XMMReg *d, XMMReg *s)$/;"	f
helper_cvtps2pd	ops_sse.h	/^void helper_cvtps2pd(Reg *d, Reg *s)$/;"	f
helper_cvtps2pi	ops_sse.h	/^void helper_cvtps2pi(MMXReg *d, XMMReg *s)$/;"	f
helper_cvtsd2si	ops_sse.h	/^int32_t helper_cvtsd2si(XMMReg *s)$/;"	f
helper_cvtsd2sq	ops_sse.h	/^int64_t helper_cvtsd2sq(XMMReg *s)$/;"	f
helper_cvtsd2ss	ops_sse.h	/^void helper_cvtsd2ss(Reg *d, Reg *s)$/;"	f
helper_cvtsi2sd	ops_sse.h	/^void helper_cvtsi2sd(XMMReg *d, uint32_t val)$/;"	f
helper_cvtsi2ss	ops_sse.h	/^void helper_cvtsi2ss(XMMReg *d, uint32_t val)$/;"	f
helper_cvtsq2sd	ops_sse.h	/^void helper_cvtsq2sd(XMMReg *d, uint64_t val)$/;"	f
helper_cvtsq2ss	ops_sse.h	/^void helper_cvtsq2ss(XMMReg *d, uint64_t val)$/;"	f
helper_cvtss2sd	ops_sse.h	/^void helper_cvtss2sd(Reg *d, Reg *s)$/;"	f
helper_cvtss2si	ops_sse.h	/^int32_t helper_cvtss2si(XMMReg *s)$/;"	f
helper_cvtss2sq	ops_sse.h	/^int64_t helper_cvtss2sq(XMMReg *s)$/;"	f
helper_cvttpd2dq	ops_sse.h	/^void helper_cvttpd2dq(XMMReg *d, XMMReg *s)$/;"	f
helper_cvttpd2pi	ops_sse.h	/^void helper_cvttpd2pi(MMXReg *d, XMMReg *s)$/;"	f
helper_cvttps2dq	ops_sse.h	/^void helper_cvttps2dq(XMMReg *d, XMMReg *s)$/;"	f
helper_cvttps2pi	ops_sse.h	/^void helper_cvttps2pi(MMXReg *d, XMMReg *s)$/;"	f
helper_cvttsd2si	ops_sse.h	/^int32_t helper_cvttsd2si(XMMReg *s)$/;"	f
helper_cvttsd2sq	ops_sse.h	/^int64_t helper_cvttsd2sq(XMMReg *s)$/;"	f
helper_cvttss2si	ops_sse.h	/^int32_t helper_cvttss2si(XMMReg *s)$/;"	f
helper_cvttss2sq	ops_sse.h	/^int64_t helper_cvttss2sq(XMMReg *s)$/;"	f
helper_daa	op_helper.c	/^void helper_daa(void)$/;"	f
helper_das	op_helper.c	/^void helper_das(void)$/;"	f
helper_debug	op_helper.c	/^void helper_debug(void)$/;"	f
helper_divb_AL	op_helper.c	/^void helper_divb_AL(target_ulong t0)$/;"	f
helper_divl_EAX	op_helper.c	/^void helper_divl_EAX(target_ulong t0)$/;"	f
helper_divq_EAX	op_helper.c	/^void helper_divq_EAX(target_ulong t0)$/;"	f
helper_divw_AX	op_helper.c	/^void helper_divw_AX(target_ulong t0)$/;"	f
helper_emms	op_helper.c	/^void helper_emms(void)$/;"	f
helper_enter64_level	op_helper.c	/^void helper_enter64_level(int level, int data64, target_ulong t1)$/;"	f
helper_enter_level	op_helper.c	/^void helper_enter_level(int level, int data32, target_ulong t1)$/;"	f
helper_enter_mmx	op_helper.c	/^void helper_enter_mmx(void)$/;"	f
helper_extrq	ops_sse.h	/^static inline uint64_t helper_extrq(uint64_t src, int shift, int len)$/;"	f
helper_extrq_i	ops_sse.h	/^void helper_extrq_i(XMMReg *d, int index, int length)$/;"	f
helper_extrq_r	ops_sse.h	/^void helper_extrq_r(XMMReg *d, XMMReg *s)$/;"	f
helper_f2xm1	op_helper.c	/^void helper_f2xm1(void)$/;"	f
helper_fabs_ST0	op_helper.c	/^void helper_fabs_ST0(void)$/;"	f
helper_fadd_ST0_FT0	op_helper.c	/^void helper_fadd_ST0_FT0(void)$/;"	f
helper_fadd_STN_ST0	op_helper.c	/^void helper_fadd_STN_ST0(int st_index)$/;"	f
helper_fbld_ST0	op_helper.c	/^void helper_fbld_ST0(target_ulong ptr)$/;"	f
helper_fbst_ST0	op_helper.c	/^void helper_fbst_ST0(target_ulong ptr)$/;"	f
helper_fchs_ST0	op_helper.c	/^void helper_fchs_ST0(void)$/;"	f
helper_fclex	op_helper.c	/^void helper_fclex(void)$/;"	f
helper_fcom_ST0_FT0	op_helper.c	/^void helper_fcom_ST0_FT0(void)$/;"	f
helper_fcomi_ST0_FT0	op_helper.c	/^void helper_fcomi_ST0_FT0(void)$/;"	f
helper_fcos	op_helper.c	/^void helper_fcos(void)$/;"	f
helper_fdecstp	op_helper.c	/^void helper_fdecstp(void)$/;"	f
helper_fdiv	op_helper.c	/^static inline floatx80 helper_fdiv(floatx80 a, floatx80 b)$/;"	f	file:
helper_fdiv_ST0_FT0	op_helper.c	/^void helper_fdiv_ST0_FT0(void)$/;"	f
helper_fdiv_STN_ST0	op_helper.c	/^void helper_fdiv_STN_ST0(int st_index)$/;"	f
helper_fdivr_ST0_FT0	op_helper.c	/^void helper_fdivr_ST0_FT0(void)$/;"	f
helper_fdivr_STN_ST0	op_helper.c	/^void helper_fdivr_STN_ST0(int st_index)$/;"	f
helper_ffree_STN	op_helper.c	/^void helper_ffree_STN(int st_index)$/;"	f
helper_fildl_FT0	op_helper.c	/^void helper_fildl_FT0(int32_t val)$/;"	f
helper_fildl_ST0	op_helper.c	/^void helper_fildl_ST0(int32_t val)$/;"	f
helper_fildll_ST0	op_helper.c	/^void helper_fildll_ST0(int64_t val)$/;"	f
helper_fincstp	op_helper.c	/^void helper_fincstp(void)$/;"	f
helper_fist_ST0	op_helper.c	/^int32_t helper_fist_ST0(void)$/;"	f
helper_fistl_ST0	op_helper.c	/^int32_t helper_fistl_ST0(void)$/;"	f
helper_fistll_ST0	op_helper.c	/^int64_t helper_fistll_ST0(void)$/;"	f
helper_fistt_ST0	op_helper.c	/^int32_t helper_fistt_ST0(void)$/;"	f
helper_fisttl_ST0	op_helper.c	/^int32_t helper_fisttl_ST0(void)$/;"	f
helper_fisttll_ST0	op_helper.c	/^int64_t helper_fisttll_ST0(void)$/;"	f
helper_fld1_ST0	op_helper.c	/^void helper_fld1_ST0(void)$/;"	f
helper_fldcw	op_helper.c	/^void helper_fldcw(uint32_t val)$/;"	f
helper_fldenv	op_helper.c	/^void helper_fldenv(target_ulong ptr, int data32)$/;"	f
helper_fldl2e_ST0	op_helper.c	/^void helper_fldl2e_ST0(void)$/;"	f
helper_fldl2t_ST0	op_helper.c	/^void helper_fldl2t_ST0(void)$/;"	f
helper_fldl_FT0	op_helper.c	/^void helper_fldl_FT0(uint64_t val)$/;"	f
helper_fldl_ST0	op_helper.c	/^void helper_fldl_ST0(uint64_t val)$/;"	f
helper_fldlg2_ST0	op_helper.c	/^void helper_fldlg2_ST0(void)$/;"	f
helper_fldln2_ST0	op_helper.c	/^void helper_fldln2_ST0(void)$/;"	f
helper_fldpi_ST0	op_helper.c	/^void helper_fldpi_ST0(void)$/;"	f
helper_flds_FT0	op_helper.c	/^void helper_flds_FT0(uint32_t val)$/;"	f
helper_flds_ST0	op_helper.c	/^void helper_flds_ST0(uint32_t val)$/;"	f
helper_fldt	op_helper.c	/^static inline floatx80 helper_fldt(target_ulong ptr)$/;"	f	file:
helper_fldt_ST0	op_helper.c	/^void helper_fldt_ST0(target_ulong ptr)$/;"	f
helper_fldz_FT0	op_helper.c	/^void helper_fldz_FT0(void)$/;"	f
helper_fldz_ST0	op_helper.c	/^void helper_fldz_ST0(void)$/;"	f
helper_fmov_FT0_STN	op_helper.c	/^void helper_fmov_FT0_STN(int st_index)$/;"	f
helper_fmov_ST0_FT0	op_helper.c	/^void helper_fmov_ST0_FT0(void)$/;"	f
helper_fmov_ST0_STN	op_helper.c	/^void helper_fmov_ST0_STN(int st_index)$/;"	f
helper_fmov_STN_ST0	op_helper.c	/^void helper_fmov_STN_ST0(int st_index)$/;"	f
helper_fmul_ST0_FT0	op_helper.c	/^void helper_fmul_ST0_FT0(void)$/;"	f
helper_fmul_STN_ST0	op_helper.c	/^void helper_fmul_STN_ST0(int st_index)$/;"	f
helper_fninit	op_helper.c	/^void helper_fninit(void)$/;"	f
helper_fnstcw	op_helper.c	/^uint32_t helper_fnstcw(void)$/;"	f
helper_fnstsw	op_helper.c	/^uint32_t helper_fnstsw(void)$/;"	f
helper_fpatan	op_helper.c	/^void helper_fpatan(void)$/;"	f
helper_fpop	op_helper.c	/^void helper_fpop(void)$/;"	f
helper_fprem	op_helper.c	/^void helper_fprem(void)$/;"	f
helper_fprem1	op_helper.c	/^void helper_fprem1(void)$/;"	f
helper_fptan	op_helper.c	/^void helper_fptan(void)$/;"	f
helper_fpush	op_helper.c	/^void helper_fpush(void)$/;"	f
helper_frndint	op_helper.c	/^void helper_frndint(void)$/;"	f
helper_frstor	op_helper.c	/^void helper_frstor(target_ulong ptr, int data32)$/;"	f
helper_fsave	op_helper.c	/^void helper_fsave(target_ulong ptr, int data32)$/;"	f
helper_fscale	op_helper.c	/^void helper_fscale(void)$/;"	f
helper_fsin	op_helper.c	/^void helper_fsin(void)$/;"	f
helper_fsincos	op_helper.c	/^void helper_fsincos(void)$/;"	f
helper_fsqrt	op_helper.c	/^void helper_fsqrt(void)$/;"	f
helper_fstenv	op_helper.c	/^void helper_fstenv(target_ulong ptr, int data32)$/;"	f
helper_fstl_ST0	op_helper.c	/^uint64_t helper_fstl_ST0(void)$/;"	f
helper_fsts_ST0	op_helper.c	/^uint32_t helper_fsts_ST0(void)$/;"	f
helper_fstt	op_helper.c	/^static inline void helper_fstt(floatx80 f, target_ulong ptr)$/;"	f	file:
helper_fstt_ST0	op_helper.c	/^void helper_fstt_ST0(target_ulong ptr)$/;"	f
helper_fsub_ST0_FT0	op_helper.c	/^void helper_fsub_ST0_FT0(void)$/;"	f
helper_fsub_STN_ST0	op_helper.c	/^void helper_fsub_STN_ST0(int st_index)$/;"	f
helper_fsubr_ST0_FT0	op_helper.c	/^void helper_fsubr_ST0_FT0(void)$/;"	f
helper_fsubr_STN_ST0	op_helper.c	/^void helper_fsubr_STN_ST0(int st_index)$/;"	f
helper_fucom_ST0_FT0	op_helper.c	/^void helper_fucom_ST0_FT0(void)$/;"	f
helper_fucomi_ST0_FT0	op_helper.c	/^void helper_fucomi_ST0_FT0(void)$/;"	f
helper_fwait	op_helper.c	/^void helper_fwait(void)$/;"	f
helper_fxam_ST0	op_helper.c	/^void helper_fxam_ST0(void)$/;"	f
helper_fxchg_ST0_STN	op_helper.c	/^void helper_fxchg_ST0_STN(int st_index)$/;"	f
helper_fxrstor	op_helper.c	/^void helper_fxrstor(target_ulong ptr, int data64)$/;"	f
helper_fxsave	op_helper.c	/^void helper_fxsave(target_ulong ptr, int data64)$/;"	f
helper_fxtract	op_helper.c	/^void helper_fxtract(void)$/;"	f
helper_fyl2x	op_helper.c	/^void helper_fyl2x(void)$/;"	f
helper_fyl2xp1	op_helper.c	/^void helper_fyl2xp1(void)$/;"	f
helper_haddpd	ops_sse.h	/^void helper_haddpd(XMMReg *d, XMMReg *s)$/;"	f
helper_haddps	ops_sse.h	/^void helper_haddps(XMMReg *d, XMMReg *s)$/;"	f
helper_hlt	op_helper.c	/^void helper_hlt(int next_eip_addend)$/;"	f
helper_hsubpd	ops_sse.h	/^void helper_hsubpd(XMMReg *d, XMMReg *s)$/;"	f
helper_hsubps	ops_sse.h	/^void helper_hsubps(XMMReg *d, XMMReg *s)$/;"	f
helper_idivb_AL	op_helper.c	/^void helper_idivb_AL(target_ulong t0)$/;"	f
helper_idivl_EAX	op_helper.c	/^void helper_idivl_EAX(target_ulong t0)$/;"	f
helper_idivq_EAX	op_helper.c	/^void helper_idivq_EAX(target_ulong t0)$/;"	f
helper_idivw_AX	op_helper.c	/^void helper_idivw_AX(target_ulong t0)$/;"	f
helper_imulq_EAX_T0	op_helper.c	/^void helper_imulq_EAX_T0(target_ulong t0)$/;"	f
helper_imulq_T0_T1	op_helper.c	/^target_ulong helper_imulq_T0_T1(target_ulong t0, target_ulong t1)$/;"	f
helper_inb	op_helper.c	/^target_ulong helper_inb(uint32_t port)$/;"	f
helper_inl	op_helper.c	/^target_ulong helper_inl(uint32_t port)$/;"	f
helper_insertq	ops_sse.h	/^static inline uint64_t helper_insertq(uint64_t src, int shift, int len)$/;"	f
helper_insertq_i	ops_sse.h	/^void helper_insertq_i(XMMReg *d, int index, int length)$/;"	f
helper_insertq_r	ops_sse.h	/^void helper_insertq_r(XMMReg *d, XMMReg *s)$/;"	f
helper_into	op_helper.c	/^void helper_into(int next_eip_addend)$/;"	f
helper_invlpg	op_helper.c	/^void helper_invlpg(target_ulong addr)$/;"	f
helper_invlpga	op_helper.c	/^void helper_invlpga(int aflag)$/;"	f
helper_inw	op_helper.c	/^target_ulong helper_inw(uint32_t port)$/;"	f
helper_iret_protected	op_helper.c	/^void helper_iret_protected(int shift, int next_eip)$/;"	f
helper_iret_real	op_helper.c	/^void helper_iret_real(int shift)$/;"	f
helper_lar	op_helper.c	/^target_ulong helper_lar(target_ulong selector1)$/;"	f
helper_lcall_protected	op_helper.c	/^void helper_lcall_protected(int new_cs, target_ulong new_eip, $/;"	f
helper_lcall_real	op_helper.c	/^void helper_lcall_real(int new_cs, target_ulong new_eip1,$/;"	f
helper_ljmp_protected	op_helper.c	/^void helper_ljmp_protected(int new_cs, target_ulong new_eip,$/;"	f
helper_lldt	op_helper.c	/^void helper_lldt(int selector)$/;"	f
helper_lmsw	op_helper.c	/^void helper_lmsw(target_ulong t0)$/;"	f
helper_load	op_helper.c	/^void helper_load(target_ulong addr)$/;"	f
helper_load_seg	op_helper.c	/^void helper_load_seg(int seg_reg, int selector)$/;"	f
helper_lock	op_helper.c	/^void helper_lock(void)$/;"	f
helper_lret_protected	op_helper.c	/^void helper_lret_protected(int shift, int addend)$/;"	f
helper_lsl	op_helper.c	/^target_ulong helper_lsl(target_ulong selector1)$/;"	f
helper_ltr	op_helper.c	/^void helper_ltr(int selector)$/;"	f
helper_lzcnt	op_helper.c	/^target_ulong helper_lzcnt(target_ulong t0, int wordsize)$/;"	f
helper_monitor	op_helper.c	/^void helper_monitor(target_ulong ptr)$/;"	f
helper_movl_drN_T0	op_helper.c	/^void helper_movl_drN_T0(int reg, target_ulong t0)$/;"	f
helper_movmskpd	ops_sse.h	/^uint32_t helper_movmskpd(Reg *s)$/;"	f
helper_movmskps	ops_sse.h	/^uint32_t helper_movmskps(Reg *s)$/;"	f
helper_movq	op_helper.c	/^void helper_movq(void *d, void *s)$/;"	f
helper_mulq_EAX_T0	op_helper.c	/^void helper_mulq_EAX_T0(target_ulong t0)$/;"	f
helper_mwait	op_helper.c	/^void helper_mwait(int next_eip_addend)$/;"	f
helper_outb	op_helper.c	/^void helper_outb(uint32_t port, uint32_t data)$/;"	f
helper_outl	op_helper.c	/^void helper_outl(uint32_t port, uint32_t data)$/;"	f
helper_outw	op_helper.c	/^void helper_outw(uint32_t port, uint32_t data)$/;"	f
helper_pf2id	ops_sse.h	/^void helper_pf2id(MMXReg *d, MMXReg *s)$/;"	f
helper_pf2iw	ops_sse.h	/^void helper_pf2iw(MMXReg *d, MMXReg *s)$/;"	f
helper_pfacc	ops_sse.h	/^void helper_pfacc(MMXReg *d, MMXReg *s)$/;"	f
helper_pfadd	ops_sse.h	/^void helper_pfadd(MMXReg *d, MMXReg *s)$/;"	f
helper_pfcmpeq	ops_sse.h	/^void helper_pfcmpeq(MMXReg *d, MMXReg *s)$/;"	f
helper_pfcmpge	ops_sse.h	/^void helper_pfcmpge(MMXReg *d, MMXReg *s)$/;"	f
helper_pfcmpgt	ops_sse.h	/^void helper_pfcmpgt(MMXReg *d, MMXReg *s)$/;"	f
helper_pfmax	ops_sse.h	/^void helper_pfmax(MMXReg *d, MMXReg *s)$/;"	f
helper_pfmin	ops_sse.h	/^void helper_pfmin(MMXReg *d, MMXReg *s)$/;"	f
helper_pfmul	ops_sse.h	/^void helper_pfmul(MMXReg *d, MMXReg *s)$/;"	f
helper_pfnacc	ops_sse.h	/^void helper_pfnacc(MMXReg *d, MMXReg *s)$/;"	f
helper_pfpnacc	ops_sse.h	/^void helper_pfpnacc(MMXReg *d, MMXReg *s)$/;"	f
helper_pfrcp	ops_sse.h	/^void helper_pfrcp(MMXReg *d, MMXReg *s)$/;"	f
helper_pfrsqrt	ops_sse.h	/^void helper_pfrsqrt(MMXReg *d, MMXReg *s)$/;"	f
helper_pfsub	ops_sse.h	/^void helper_pfsub(MMXReg *d, MMXReg *s)$/;"	f
helper_pfsubr	ops_sse.h	/^void helper_pfsubr(MMXReg *d, MMXReg *s)$/;"	f
helper_pi2fd	ops_sse.h	/^void helper_pi2fd(MMXReg *d, MMXReg *s)$/;"	f
helper_pi2fw	ops_sse.h	/^void helper_pi2fw(MMXReg *d, MMXReg *s)$/;"	f
helper_popcnt	ops_sse.h	/^target_ulong helper_popcnt(target_ulong n, uint32_t type)$/;"	f
helper_printisn	op_helper.c	/^void helper_printisn(target_ulong pc)$/;"	f
helper_pswapd	ops_sse.h	/^void helper_pswapd(MMXReg *d, MMXReg *s)$/;"	f
helper_raise_exception	op_helper.c	/^void helper_raise_exception(int exception_index)$/;"	f
helper_raise_interrupt	op_helper.c	/^void helper_raise_interrupt(int intno, int next_eip_addend)$/;"	f
helper_rcpps	ops_sse.h	/^void helper_rcpps(XMMReg *d, XMMReg *s)$/;"	f
helper_rcpss	ops_sse.h	/^void helper_rcpss(XMMReg *d, XMMReg *s)$/;"	f
helper_rdmsr	op_helper.c	/^void helper_rdmsr(void)$/;"	f
helper_rdpmc	op_helper.c	/^void helper_rdpmc(void)$/;"	f
helper_rdtsc	op_helper.c	/^void helper_rdtsc(void)$/;"	f
helper_rdtscp	op_helper.c	/^void helper_rdtscp(void)$/;"	f
helper_read_crN	op_helper.c	/^target_ulong helper_read_crN(int reg)$/;"	f
helper_read_eflags	op_helper.c	/^target_ulong helper_read_eflags(void)$/;"	f
helper_reset_inhibit_irq	op_helper.c	/^void helper_reset_inhibit_irq(void)$/;"	f
helper_reset_rf	op_helper.c	/^void helper_reset_rf(void)$/;"	f
helper_ret_protected	op_helper.c	/^static inline void helper_ret_protected(int shift, int is_iret, int addend)$/;"	f	file:
helper_rsm	op_helper.c	/^void helper_rsm(void)$/;"	f
helper_rsqrtps	ops_sse.h	/^void helper_rsqrtps(XMMReg *d, XMMReg *s)$/;"	f
helper_rsqrtss	ops_sse.h	/^void helper_rsqrtss(XMMReg *d, XMMReg *s)$/;"	f
helper_set_inhibit_irq	op_helper.c	/^void helper_set_inhibit_irq(void)$/;"	f
helper_shufpd	ops_sse.h	/^void helper_shufpd(Reg *d, Reg *s, int order)$/;"	f
helper_shufps	ops_sse.h	/^void helper_shufps(Reg *d, Reg *s, int order)$/;"	f
helper_single_step	op_helper.c	/^void helper_single_step(void)$/;"	f
helper_skinit	op_helper.c	/^void helper_skinit(void) $/;"	f
helper_skinit	op_helper.c	/^void helper_skinit(void)$/;"	f
helper_stgi	op_helper.c	/^void helper_stgi(void)$/;"	f
helper_sti	op_helper.c	/^void helper_sti(void)$/;"	f
helper_store	op_helper.c	/^void helper_store(target_ulong value, target_ulong addr)$/;"	f
helper_svm_check_intercept_param	op_helper.c	/^void helper_svm_check_intercept_param(uint32_t type, uint64_t param)$/;"	f
helper_svm_check_io	op_helper.c	/^void helper_svm_check_io(uint32_t port, uint32_t param, $/;"	f
helper_syscall	op_helper.c	/^void helper_syscall(int next_eip_addend)$/;"	f
helper_sysenter	op_helper.c	/^void helper_sysenter(void)$/;"	f
helper_sysexit	op_helper.c	/^void helper_sysexit(int dflag)$/;"	f
helper_sysret	op_helper.c	/^void helper_sysret(int dflag)$/;"	f
helper_test	op_helper.c	/^void helper_test(int a)$/;"	f
helper_ucomisd	ops_sse.h	/^void helper_ucomisd(Reg *d, Reg *s)$/;"	f
helper_ucomiss	ops_sse.h	/^void helper_ucomiss(Reg *d, Reg *s)$/;"	f
helper_unlock	op_helper.c	/^void helper_unlock(void)$/;"	f
helper_verr	op_helper.c	/^void helper_verr(target_ulong selector1)$/;"	f
helper_verw	op_helper.c	/^void helper_verw(target_ulong selector1)$/;"	f
helper_vmexit	op_helper.c	/^void helper_vmexit(uint32_t exit_code, uint64_t exit_info_1) $/;"	f
helper_vmexit	op_helper.c	/^void helper_vmexit(uint32_t exit_code, uint64_t exit_info_1)$/;"	f
helper_vmload	op_helper.c	/^void helper_vmload(int aflag)$/;"	f
helper_vmmcall	op_helper.c	/^void helper_vmmcall(void) $/;"	f
helper_vmmcall	op_helper.c	/^void helper_vmmcall(void)$/;"	f
helper_vmrun	op_helper.c	/^void helper_vmrun(int aflag, int next_eip_addend)$/;"	f
helper_vmsave	op_helper.c	/^void helper_vmsave(int aflag)$/;"	f
helper_write_crN	op_helper.c	/^void helper_write_crN(int reg, target_ulong t0)$/;"	f
helper_write_eflags	op_helper.c	/^void helper_write_eflags(target_ulong t0, uint32_t update_mask)$/;"	f
helper_wrmsr	op_helper.c	/^void helper_wrmsr(void)$/;"	f
hflags	cpu.h	/^    uint32_t hflags; \/* TB flags, see HF_xxx constants. These flags$/;"	m	struct:CPUX86State
hflags2	cpu.h	/^    uint32_t hflags2; \/* various other flags, see HF2_xxx constants. *\/$/;"	m	struct:CPUX86State
hh	helper.c	/^	UT_hash_handle hh;$/;"	m	struct:cr3_node	file:
hh_head	uthash.h	/^   struct UT_hash_handle *hh_head;$/;"	m	struct:UT_hash_bucket	typeref:struct:UT_hash_bucket::UT_hash_handle
hh_next	uthash.h	/^   struct UT_hash_handle *hh_next;   \/* next hh in bucket order        *\/$/;"	m	struct:UT_hash_handle	typeref:struct:UT_hash_handle::UT_hash_handle
hh_prev	uthash.h	/^   struct UT_hash_handle *hh_prev;   \/* previous hh in bucket order    *\/$/;"	m	struct:UT_hash_handle	typeref:struct:UT_hash_handle::UT_hash_handle
hho	uthash.h	/^   ptrdiff_t hho; \/* hash handle offset (byte pos of hash handle in element *\/$/;"	m	struct:UT_hash_table
hook_context_t	backup/main.c	/^} hook_context_t;$/;"	t	typeref:struct:__anon8	file:
hook_context_t	main.c	/^} hook_context_t;$/;"	t	typeref:struct:__anon9	file:
hook_handle	backup/main.c	/^	uint32_t hook_handle;$/;"	m	struct:__anon8	file:
hook_handle	main.c	/^	uint32_t hook_handle;$/;"	m	struct:__anon9	file:
host_cpuid	cpuid.c	/^void host_cpuid(uint32_t function, uint32_t count,$/;"	f
host_feat	cpuid.c	/^    uint32_t *host_feat;$/;"	m	struct:model_features_t	file:
host_supports_vmx	kvm.c	/^static bool host_supports_vmx(void)$/;"	f	file:
hw_breakpoint	kvm.c	/^} hw_breakpoint[4];$/;"	v	typeref:struct:__anon16	file:
hw_breakpoint_enabled	cpu.h	/^static inline int hw_breakpoint_enabled(unsigned long dr7, int index)$/;"	f
hw_breakpoint_insert	helper.c	/^void hw_breakpoint_insert(CPUState *env, int index)$/;"	f
hw_breakpoint_len	cpu.h	/^static inline int hw_breakpoint_len(unsigned long dr7, int index)$/;"	f
hw_breakpoint_remove	helper.c	/^void hw_breakpoint_remove(CPUState *env, int index)$/;"	f
hw_breakpoint_type	cpu.h	/^static inline int hw_breakpoint_type(unsigned long dr7, int index)$/;"	f
hw_watchpoint	kvm.c	/^static CPUWatchpoint hw_watchpoint;$/;"	v	file:
i32	ops_sse_header.h	/^DEF_HELPER_1(glue(pmovmskb, SUFFIX), i32, Reg)$/;"	v
ideal_chain_maxlen	uthash.h	/^   unsigned ideal_chain_maxlen;$/;"	m	struct:UT_hash_table
idiv64	op_helper.c	/^static int idiv64(uint64_t *plow, uint64_t *phigh, int64_t b)$/;"	f	file:
idt	cpu.h	/^    SegmentCache idt; \/* only base and limit are used *\/$/;"	m	struct:CPUX86State
idtr	svm.h	/^	struct vmcb_seg idtr;$/;"	m	struct:vmcb_save_area	typeref:struct:vmcb_save_area::vmcb_seg
ii_primary_map	backup/mem_write_shadow.c	/^static SecMap * ii_primary_map[4][PAGE_NUM];$/;"	v	file:
ii_primary_map	mem_shadow.c	/^static SecMap * ii_primary_map[4][PAGE_NUM];$/;"	v	file:
ill_int_inst	backup/main.c	/^unsigned char ill_int_inst;$/;"	v
ill_int_inst	main.c	/^unsigned char ill_int_inst;$/;"	v
illegal_inst	backup/main.c	/^unsigned char illegal_inst;$/;"	v
illegal_inst	main.c	/^unsigned char illegal_inst;$/;"	v
image_name	backup/main.c	/^	char image_name[512];$/;"	m	struct:__anon8	file:
image_name	main.c	/^	char image_name[512];$/;"	m	struct:__anon9	file:
in_force_exec	backup/main.c	/^unsigned char in_force_exec = 0;$/;"	v
in_force_exec	main.c	/^unsigned char in_force_exec = 0;$/;"	v
in_initial_exec	backup/main.c	/^unsigned char in_initial_exec = 0;$/;"	v
in_initial_exec	main.c	/^unsigned char in_initial_exec = 0;$/;"	v
ineff_expands	uthash.h	/^   unsigned ineff_expands, noexpand;$/;"	m	struct:UT_hash_table
init_plugin	backup/main.c	/^plugin_interface_t *init_plugin()$/;"	f
init_plugin	main.c	/^plugin_interface_t *init_plugin()$/;"	f
init_shadow_mem_write_memory	backup/mem_write_shadow.c	/^void init_shadow_mem_write_memory(void)$/;"	f
init_shadow_mem_write_memory	mem_shadow.c	/^void init_shadow_mem_write_memory(void)$/;"	f
insn_const_size	translate.c	/^static inline int insn_const_size(unsigned int ot)$/;"	f	file:
insn_get	translate.c	/^static inline uint32_t insn_get(DisasContext *s, int ot)$/;"	f	file:
inst_count	backup/main.c	/^uint32_t inst_count;$/;"	v
inst_count	main.c	/^uint32_t inst_count;$/;"	v
instrument_functions	backup/hook_inst.c	/^InstrumentFunction instrument_functions[XED_ICLASS_LAST];$/;"	v
instrument_functions	hook_inst.c	/^InstrumentFunction instrument_functions[XED_ICLASS_LAST];$/;"	v
int_ctl	svm.h	/^	uint32_t int_ctl;$/;"	m	struct:vmcb_control_area
int_state	svm.h	/^	uint32_t int_state;$/;"	m	struct:vmcb_control_area
int_vector	svm.h	/^	uint32_t int_vector;$/;"	m	struct:vmcb_control_area
intercept	cpu.h	/^    uint64_t intercept;$/;"	m	struct:CPUX86State
intercept	svm.h	/^	uint64_t intercept;$/;"	m	struct:vmcb_control_area
intercept_cr_read	cpu.h	/^    uint16_t intercept_cr_read;$/;"	m	struct:CPUX86State
intercept_cr_read	svm.h	/^	uint16_t intercept_cr_read;$/;"	m	struct:vmcb_control_area
intercept_cr_write	cpu.h	/^    uint16_t intercept_cr_write;$/;"	m	struct:CPUX86State
intercept_cr_write	svm.h	/^	uint16_t intercept_cr_write;$/;"	m	struct:vmcb_control_area
intercept_dr_read	cpu.h	/^    uint16_t intercept_dr_read;$/;"	m	struct:CPUX86State
intercept_dr_read	svm.h	/^	uint16_t intercept_dr_read;$/;"	m	struct:vmcb_control_area
intercept_dr_write	cpu.h	/^    uint16_t intercept_dr_write;$/;"	m	struct:CPUX86State
intercept_dr_write	svm.h	/^	uint16_t intercept_dr_write;$/;"	m	struct:vmcb_control_area
intercept_exceptions	cpu.h	/^    uint32_t intercept_exceptions;$/;"	m	struct:CPUX86State
intercept_exceptions	svm.h	/^	uint32_t intercept_exceptions;$/;"	m	struct:vmcb_control_area
interrupt_injected	cpu.h	/^    int32_t interrupt_injected;$/;"	m	struct:CPUX86State
iopl	translate.c	/^    int iopl;$/;"	m	struct:DisasContext	file:
iopm_base_pa	svm.h	/^	uint64_t iopm_base_pa;$/;"	m	struct:vmcb_control_area
is_call_inst	backup/main.c	/^unsigned char is_call_inst;$/;"	v
is_call_inst	main.c	/^unsigned char is_call_inst;$/;"	v
is_cond_jmp_inst	backup/hook_inst.c	/^unsigned char is_cond_jmp_inst;$/;"	v
is_cond_jmp_inst	hook_inst.c	/^unsigned char is_cond_jmp_inst;$/;"	v
is_fast_jcc_case	translate.c	/^static int is_fast_jcc_case(DisasContext *s, int b)$/;"	f	file:
is_global_data	helper.c	/^inline uint32_t is_global_data(uint32_t addr)$/;"	f
is_ins_log	helper.c	/^inline uint32_t is_ins_log()$/;"	f
is_interrupt	op_helper.c	/^uint32_t is_interrupt = 0;$/;"	v
is_io_write	op_helper.c	/^static inline uint32_t is_io_write(target_ulong addr, int mmu_idx)$/;"	f	file:
is_jmp	translate.c	/^    int is_jmp; \/* 1 = means jump (stop translation), 2 means CPU$/;"	m	struct:DisasContext	file:
is_jmp_inst	backup/hook_inst.c	/^unsigned char is_jmp_inst;$/;"	v
is_jmp_inst	hook_inst.c	/^unsigned char is_jmp_inst;$/;"	v
is_jmp_table_inst	backup/hook_inst.c	/^unsigned char is_jmp_table_inst;$/;"	v
is_jmp_table_inst	hook_inst.c	/^unsigned char is_jmp_table_inst;$/;"	v
is_kernel_stack	helper.c	/^inline uint32_t is_kernel_stack(target_ulong addr)$/;"	f
is_lea_inst	backup/main.c	/^unsigned char is_lea_inst;$/;"	v
is_lea_inst	main.c	/^unsigned char is_lea_inst;$/;"	v
is_library_call	backup/main.c	/^unsigned char is_library_call;$/;"	v
is_library_call	main.c	/^unsigned char is_library_call;$/;"	v
is_monitored_vmmi_kernel_data_read	helper.c	/^inline uint32_t is_monitored_vmmi_kernel_data_read(target_ulong addr)$/;"	f
is_monitored_vmmi_kernel_data_write	helper.c	/^inline uint32_t is_monitored_vmmi_kernel_data_write(target_ulong addr)$/;"	f
is_ret_inst	backup/main.c	/^unsigned char is_ret_inst;$/;"	v
is_ret_inst	main.c	/^unsigned char is_ret_inst;$/;"	v
is_shadow_page_exist	helper.c	/^inline uint32_t is_shadow_page_exist(uint32_t pte)$/;"	f
iswhite	cpuid.c	140;"	d	file:
iterChain	hash_helper.h	/^   UInt        iterChain;     \/\/ next chain to be traversed by the iterator$/;"	m	struct:_BasicBlockHashTable
iterNode	hash_helper.h	/^   HashNode* iterNode;      \/\/ current iterator node$/;"	m	struct:_BasicBlockHashTable
jmp_opt	translate.c	/^    int jmp_opt; \/* use direct block chaining for direct jumps *\/$/;"	m	struct:DisasContext	file:
jmp_target_ins_addr	backup/hook_inst.c	/^uint32_t jmp_target_ins_addr;$/;"	v
jmp_target_ins_addr	hook_inst.c	/^uint32_t jmp_target_ins_addr;$/;"	v
keep_emulation	backup/main.c	/^inline int keep_emulation()$/;"	f
keep_emulation	main.c	/^inline int keep_emulation()$/;"	f
keep_exception	backup/main.c	/^uint32_t keep_exception;$/;"	v
keep_exception	main.c	/^uint32_t keep_exception;$/;"	v
kernel_gs_base	svm.h	/^	uint64_t kernel_gs_base;$/;"	m	struct:vmcb_save_area
kernelgsbase	cpu.h	/^    target_ulong kernelgsbase;$/;"	m	struct:CPUX86State
key	hash_helper.h	/^      UWord              key;$/;"	m	struct:_HashNode
key	uthash.h	/^   void *key;                        \/* ptr to enclosing struct's key  *\/$/;"	m	struct:UT_hash_handle
keylen	uthash.h	/^   unsigned keylen;                  \/* enclosing struct's key len     *\/$/;"	m	struct:UT_hash_handle
keystroke_offset	backup/main.c	/^int keystroke_offset = 0;	\/\/ Global counter for keystrokes, used for offset$/;"	v
keystroke_offset	main.c	/^int keystroke_offset = 0;	\/\/ Global counter for keystrokes, used for offset$/;"	v
kvm_arch_get_registers	kvm.c	/^int kvm_arch_get_registers(CPUState *env)$/;"	f
kvm_arch_get_supported_cpuid	kvm.c	/^uint32_t kvm_arch_get_supported_cpuid(KVMState *s, uint32_t function,$/;"	f
kvm_arch_handle_exit	kvm.c	/^int kvm_arch_handle_exit(CPUState *env, struct kvm_run *run)$/;"	f
kvm_arch_init	kvm.c	/^int kvm_arch_init(KVMState *s)$/;"	f
kvm_arch_init_vcpu	kvm.c	/^int kvm_arch_init_vcpu(CPUState *env)$/;"	f
kvm_arch_insert_hw_breakpoint	kvm.c	/^int kvm_arch_insert_hw_breakpoint(target_ulong addr,$/;"	f
kvm_arch_insert_sw_breakpoint	kvm.c	/^int kvm_arch_insert_sw_breakpoint(CPUState *env, struct kvm_sw_breakpoint *bp)$/;"	f
kvm_arch_on_sigbus	kvm.c	/^int kvm_arch_on_sigbus(int code, void *addr)$/;"	f
kvm_arch_on_sigbus_vcpu	kvm.c	/^int kvm_arch_on_sigbus_vcpu(CPUState *env, int code, void *addr)$/;"	f
kvm_arch_post_run	kvm.c	/^void kvm_arch_post_run(CPUState *env, struct kvm_run *run)$/;"	f
kvm_arch_pre_run	kvm.c	/^void kvm_arch_pre_run(CPUState *env, struct kvm_run *run)$/;"	f
kvm_arch_process_async_events	kvm.c	/^int kvm_arch_process_async_events(CPUState *env)$/;"	f
kvm_arch_put_registers	kvm.c	/^int kvm_arch_put_registers(CPUState *env, int level)$/;"	f
kvm_arch_remove_all_hw_breakpoints	kvm.c	/^void kvm_arch_remove_all_hw_breakpoints(void)$/;"	f
kvm_arch_remove_hw_breakpoint	kvm.c	/^int kvm_arch_remove_hw_breakpoint(target_ulong addr,$/;"	f
kvm_arch_remove_sw_breakpoint	kvm.c	/^int kvm_arch_remove_sw_breakpoint(CPUState *env, struct kvm_sw_breakpoint *bp)$/;"	f
kvm_arch_required_capabilities	kvm.c	/^const KVMCapabilityInfo kvm_arch_required_capabilities[] = {$/;"	v
kvm_arch_reset_vcpu	kvm.c	/^void kvm_arch_reset_vcpu(CPUState *env)$/;"	f
kvm_arch_stop_on_emulation_error	kvm.c	/^bool kvm_arch_stop_on_emulation_error(CPUState *env)$/;"	f
kvm_arch_update_guest_debug	kvm.c	/^void kvm_arch_update_guest_debug(CPUState *env, struct kvm_guest_debug *dbg)$/;"	f
kvm_feature_name	cpuid.c	/^static const char *kvm_feature_name[] = {$/;"	v	file:
kvm_features	cpuid.c	/^    uint32_t kvm_features, svm_features;$/;"	m	struct:x86_def_t	file:
kvm_get_debugregs	kvm.c	/^static int kvm_get_debugregs(CPUState *env)$/;"	f	file:
kvm_get_fpu	kvm.c	/^static int kvm_get_fpu(CPUState *env)$/;"	f	file:
kvm_get_mce_cap_supported	kvm.c	/^static int kvm_get_mce_cap_supported(KVMState *s, uint64_t *mce_cap,$/;"	f	file:
kvm_get_mp_state	kvm.c	/^static int kvm_get_mp_state(CPUState *env)$/;"	f	file:
kvm_get_msrs	kvm.c	/^static int kvm_get_msrs(CPUState *env)$/;"	f	file:
kvm_get_sregs	kvm.c	/^static int kvm_get_sregs(CPUState *env)$/;"	f	file:
kvm_get_supported_msrs	kvm.c	/^static int kvm_get_supported_msrs(KVMState *s)$/;"	f	file:
kvm_get_vcpu_events	kvm.c	/^static int kvm_get_vcpu_events(CPUState *env)$/;"	f	file:
kvm_get_xcrs	kvm.c	/^static int kvm_get_xcrs(CPUState *env)$/;"	f	file:
kvm_get_xsave	kvm.c	/^static int kvm_get_xsave(CPUState *env)$/;"	f	file:
kvm_getput_reg	kvm.c	/^static void kvm_getput_reg(__u64 *kvm_reg, target_ulong *qemu_reg, int set)$/;"	f	file:
kvm_getput_regs	kvm.c	/^static int kvm_getput_regs(CPUState *env, int set)$/;"	f	file:
kvm_guest_debug_workarounds	kvm.c	/^static int kvm_guest_debug_workarounds(CPUState *env)$/;"	f	file:
kvm_handle_debug	kvm.c	/^static int kvm_handle_debug(struct kvm_debug_exit_arch *arch_info)$/;"	f	file:
kvm_handle_halt	kvm.c	/^static int kvm_handle_halt(CPUState *env)$/;"	f	file:
kvm_hwpoison_page_add	kvm.c	/^static void kvm_hwpoison_page_add(ram_addr_t ram_addr)$/;"	f	file:
kvm_inject_mce_oldstyle	kvm.c	/^static int kvm_inject_mce_oldstyle(CPUState *env)$/;"	f	file:
kvm_mce_inject	kvm.c	/^static void kvm_mce_inject(CPUState *env, target_phys_addr_t paddr, int code)$/;"	f	file:
kvm_msr_entry_set	kvm.c	/^static void kvm_msr_entry_set(struct kvm_msr_entry *entry,$/;"	f	file:
kvm_para_features	kvm.c	/^struct kvm_para_features {$/;"	s	file:
kvm_put_debugregs	kvm.c	/^static int kvm_put_debugregs(CPUState *env)$/;"	f	file:
kvm_put_fpu	kvm.c	/^static int kvm_put_fpu(CPUState *env)$/;"	f	file:
kvm_put_mp_state	kvm.c	/^static int kvm_put_mp_state(CPUState *env)$/;"	f	file:
kvm_put_msrs	kvm.c	/^static int kvm_put_msrs(CPUState *env, int level)$/;"	f	file:
kvm_put_sregs	kvm.c	/^static int kvm_put_sregs(CPUState *env)$/;"	f	file:
kvm_put_vcpu_events	kvm.c	/^static int kvm_put_vcpu_events(CPUState *env, int level)$/;"	f	file:
kvm_put_xcrs	kvm.c	/^static int kvm_put_xcrs(CPUState *env)$/;"	f	file:
kvm_put_xsave	kvm.c	/^static int kvm_put_xsave(CPUState *env)$/;"	f	file:
kvm_unpoison_all	kvm.c	/^static void kvm_unpoison_all(void *param)$/;"	f	file:
last_excp_from	svm.h	/^	uint64_t last_excp_from;$/;"	m	struct:vmcb_save_area
last_excp_to	svm.h	/^	uint64_t last_excp_to;$/;"	m	struct:vmcb_save_area
lbr_ctl	svm.h	/^	uint64_t lbr_ctl;$/;"	m	struct:vmcb_control_area
ldt	cpu.h	/^    SegmentCache ldt;$/;"	m	struct:CPUX86State
ldtr	svm.h	/^	struct vmcb_seg ldtr;$/;"	m	struct:vmcb_save_area	typeref:struct:vmcb_save_area::vmcb_seg
len	kvm.c	/^    int len;$/;"	m	struct:__anon16	file:
less_than_7	machine.c	/^static bool less_than_7(void *opaque, int version_id)$/;"	f	file:
level	cpuid.c	/^    uint32_t level;$/;"	m	struct:x86_def_t	file:
limit	cpu.h	/^    uint32_t limit;$/;"	m	struct:SegmentCache
limit	svm.h	/^	uint32_t limit;$/;"	m	struct:vmcb_seg
listflags	cpuid.c	/^static void listflags(char *buf, int bufsize, uint32_t fbits,$/;"	f	file:
lm_capable_kernel	kvm.c	/^static int lm_capable_kernel;$/;"	v	file:
lma	translate.c	/^    int lma;    \/* long mode active *\/$/;"	m	struct:DisasContext	file:
load_eflags	op_helper.c	/^static inline void load_eflags(int eflags, int update_mask)$/;"	f	file:
load_seg_cache_raw_dt	op_helper.c	/^static inline void load_seg_cache_raw_dt(SegmentCache *sc, uint32_t e1, uint32_t e2)$/;"	f	file:
load_seg_vm	op_helper.c	/^static inline void load_seg_vm(int seg, int selector)$/;"	f	file:
load_segment	op_helper.c	/^static inline int load_segment(uint32_t *e1_ptr, uint32_t *e2_ptr,$/;"	f	file:
log2_num_buckets	uthash.h	/^   unsigned num_buckets, log2_num_buckets;$/;"	m	struct:UT_hash_table
lookup_feature	cpuid.c	/^static bool lookup_feature(uint32_t *pval, const char *s, const char *e,$/;"	f	file:
lshift	op_helper.c	/^static inline target_long lshift(target_long x, int n)$/;"	f	file:
lstar	cpu.h	/^    target_ulong lstar;$/;"	m	struct:CPUX86State
lstar	svm.h	/^	uint64_t lstar;$/;"	m	struct:vmcb_save_area
mant	machine.c	/^    uint64_t mant;$/;"	m	union:x86_longdouble	file:
mask	cpu.h	/^    uint64_t mask;$/;"	m	struct:__anon5
mce_banks	cpu.h	/^    uint64_t mce_banks[MCE_BANKS_DEF*4];$/;"	m	struct:CPUX86State
mce_init	helper.c	/^static void mce_init(CPUX86State *cenv)$/;"	f	file:
mcg_cap	cpu.h	/^    uint64_t mcg_cap;$/;"	m	struct:CPUX86State
mcg_ctl	cpu.h	/^    uint64_t mcg_ctl;$/;"	m	struct:CPUX86State
mcg_status	cpu.h	/^    uint64_t mcg_status;$/;"	m	struct:CPUX86State
mcg_status	helper.c	/^    uint64_t mcg_status;$/;"	m	struct:MCEInjectionParams	file:
mem_index	translate.c	/^    int mem_index; \/* select memory access functions *\/$/;"	m	struct:DisasContext	file:
misc	helper.c	/^    uint64_t misc;$/;"	m	struct:MCEInjectionParams	file:
mmx	cpu.h	/^    MMXReg mmx;$/;"	m	union:__anon4
mmx_status	cpu.h	/^    float_status mmx_status; \/* for 3DNow! float ops *\/$/;"	m	struct:CPUX86State
mmx_t0	cpu.h	/^    MMXReg mmx_t0;$/;"	m	struct:CPUX86State
mod_func_name	backup/main.c	/^char mod_func_name[128];$/;"	v
mod_func_name	main.c	/^char mod_func_name[128];$/;"	v
model	cpuid.c	/^    int model;$/;"	m	struct:x86_def_t	file:
model_features_t	cpuid.c	/^    } model_features_t;$/;"	t	typeref:struct:model_features_t	file:
model_features_t	cpuid.c	/^typedef struct model_features_t {$/;"	s	file:
model_id	cpuid.c	/^    char model_id[48];$/;"	m	struct:x86_def_t	file:
mon	helper.c	/^    Monitor *mon;$/;"	m	struct:MCEInjectionParams	file:
mp_state	cpu.h	/^    uint32_t mp_state;$/;"	m	struct:CPUX86State
msrpm_base_pa	svm.h	/^	uint64_t msrpm_base_pa;$/;"	m	struct:vmcb_control_area
mtrr_deftype	cpu.h	/^    uint64_t mtrr_deftype;$/;"	m	struct:CPUX86State
mtrr_fixed	cpu.h	/^    uint64_t mtrr_fixed[11];$/;"	m	struct:CPUX86State
mtrr_var	cpu.h	/^    MTRRVar mtrr_var[8];$/;"	m	struct:CPUX86State
mxcsr	cpu.h	/^    uint32_t mxcsr;$/;"	m	struct:CPUX86State
n_chains	hash_helper.h	/^   UInt        n_chains;      \/\/ should be prime$/;"	m	struct:_BasicBlockHashTable
name	cpuid.c	/^    const char *name;$/;"	m	struct:x86_def_t	file:
nb_hw_breakpoint	kvm.c	/^static int nb_hw_breakpoint;$/;"	v	file:
neg128	op_helper.c	/^static void neg128(uint64_t *plow, uint64_t *phigh)$/;"	f	file:
nested_cr3	svm.h	/^	uint64_t nested_cr3;$/;"	m	struct:vmcb_control_area
nested_ctl	svm.h	/^	uint64_t nested_ctl;$/;"	m	struct:vmcb_control_area
next	cpuid.c	/^    struct x86_def_t *next;$/;"	m	struct:x86_def_t	typeref:struct:x86_def_t::x86_def_t	file:
next	hash_helper.h	/^      struct _HashNode * next;$/;"	m	struct:_HashNode	typeref:struct:_HashNode::_HashNode
next	uthash.h	/^   void *next;                       \/* next element in app order      *\/$/;"	m	struct:UT_hash_handle
next_ins_addr	backup/hook_inst.c	/^uint32_t next_ins_addr;$/;"	v
next_ins_addr	hook_inst.c	/^uint32_t next_ins_addr;$/;"	v
next_library_call_addr	backup/main.c	/^static uint32_t next_library_call_addr;$/;"	v	file:
next_library_call_addr	main.c	/^static uint32_t next_library_call_addr;$/;"	v	file:
nmi_injected	cpu.h	/^    uint8_t nmi_injected;$/;"	m	struct:CPUX86State
nmi_pending	cpu.h	/^    uint8_t nmi_pending;$/;"	m	struct:CPUX86State
noexpand	uthash.h	/^   unsigned ineff_expands, noexpand;$/;"	m	struct:UT_hash_table
nonideal_items	uthash.h	/^   unsigned nonideal_items;$/;"	m	struct:UT_hash_table
num_buckets	uthash.h	/^   unsigned num_buckets, log2_num_buckets;$/;"	m	struct:UT_hash_table
num_items	uthash.h	/^   unsigned num_items;$/;"	m	struct:UT_hash_table
old_exception	cpu.h	/^    int old_exception;  \/* exception in flight *\/$/;"	m	struct:CPUX86State
op	translate.c	/^    void *op[2]; uint32_t ext_mask;$/;"	m	struct:sse_op_helper_s	file:
operand_is_float	backup/hook_inst.c	/^int operand_is_float(const xed_operand_enum_t op_name) {$/;"	f
operand_is_float	hook_inst.c	/^int operand_is_float(const xed_operand_enum_t op_name) {$/;"	f
operand_is_imm	backup/hook_inst.c	/^int operand_is_imm(const xed_operand_enum_t op_name, uint32_t * value) {$/;"	f
operand_is_imm	hook_inst.c	/^int operand_is_imm(const xed_operand_enum_t op_name, uint32_t * value) {$/;"	f
operand_is_mem	backup/hook_inst.c	/^int operand_is_mem(const xed_operand_enum_t op_name, uint32_t * mem_addr,$/;"	f
operand_is_mem	hook_inst.c	/^int operand_is_mem(const xed_operand_enum_t op_name, uint32_t * mem_addr,$/;"	f
operand_is_reg	backup/hook_inst.c	/^int operand_is_reg(const xed_operand_enum_t op_name, xed_reg_enum_t * reg_id) {$/;"	f
operand_is_reg	hook_inst.c	/^int operand_is_reg(const xed_operand_enum_t op_name, xed_reg_enum_t * reg_id) {$/;"	f
operand_is_relbr	backup/hook_inst.c	/^int operand_is_relbr(const xed_operand_enum_t op_name, uint32_t * branch) {$/;"	f
operand_is_relbr	hook_inst.c	/^int operand_is_relbr(const xed_operand_enum_t op_name, uint32_t * branch) {$/;"	f
optimize_flags_init	translate.c	/^void optimize_flags_init(void)$/;"	f
override	translate.c	/^    int override; \/* -1 if no override *\/$/;"	m	struct:DisasContext	file:
para_features	kvm.c	/^} para_features[] = {$/;"	v	typeref:struct:kvm_para_features
parity_table	op_helper.c	/^static const uint8_t parity_table[256] = {$/;"	v	file:
pat	cpu.h	/^    uint64_t pat;$/;"	m	struct:CPUX86State
pc	translate.c	/^    target_ulong pc; \/* pc = eip + cs_base *\/$/;"	m	struct:DisasContext	file:
pcmp_elen	ops_sse.h	/^static inline int pcmp_elen(int reg, uint32_t ctrl)$/;"	f
pcmp_ilen	ops_sse.h	/^static inline int pcmp_ilen(Reg *r, uint8_t ctrl)$/;"	f
pcmp_val	ops_sse.h	/^static inline int pcmp_val(Reg *r, uint8_t ctrl, int i)$/;"	f
pcmpxstrx	ops_sse.h	/^static inline unsigned pcmpxstrx(Reg *d, Reg *s,$/;"	f
pe	translate.c	/^    int pe;     \/* protected mode *\/$/;"	m	struct:DisasContext	file:
popl_esp_hack	translate.c	/^    int popl_esp_hack; \/* for correct popl with esp base handling *\/$/;"	m	struct:DisasContext	file:
prefix	translate.c	/^    int prefix;$/;"	m	struct:DisasContext	file:
prev	uthash.h	/^   void *prev;                       \/* prev element in app order      *\/$/;"	m	struct:UT_hash_handle
prev_basic_block_addr	backup/main.c	/^static uint32_t prev_basic_block_addr;$/;"	v	file:
prev_basic_block_addr	main.c	/^static uint32_t prev_basic_block_addr;$/;"	v	file:
prev_basic_block_end_type	backup/main.c	/^T_Type prev_basic_block_end_type;$/;"	v
prev_basic_block_end_type	main.c	/^T_Type prev_basic_block_end_type;$/;"	v
prev_basic_block_start_type	backup/main.c	/^T_Type prev_basic_block_start_type;$/;"	v
prev_basic_block_start_type	main.c	/^T_Type prev_basic_block_start_type;$/;"	v
prev_debug_excp_handler	helper.c	/^static CPUDebugExcpHandler *prev_debug_excp_handler;$/;"	v	file:
put_fpreg	machine.c	/^static void put_fpreg(QEMUFile *f, void *opaque, size_t size)$/;"	f	file:
put_fpreg_error	machine.c	/^static void put_fpreg_error(QEMUFile *f, void *opaque, size_t size)$/;"	f	file:
put_uint64_as_uint32	machine.c	/^static void put_uint64_as_uint32(QEMUFile *f, void *pv, size_t size)$/;"	f	file:
q	cpu.h	/^    uint64_t q;$/;"	m	union:__anon3
raise_exception	op_helper.c	/^static void QEMU_NORETURN raise_exception(int exception_index)$/;"	f	file:
raise_exception_env	op_helper.c	/^void raise_exception_env(int exception_index, CPUState *nenv)$/;"	f
raise_exception_err	op_helper.c	/^static void QEMU_NORETURN raise_exception_err(int exception_index,$/;"	f	file:
raise_exception_err_env	op_helper.c	/^void raise_exception_err_env(CPUState *nenv, int exception_index,$/;"	f
raise_interrupt	op_helper.c	/^static void QEMU_NORETURN raise_interrupt(int intno, int is_int, int error_code,$/;"	f	file:
ram_addr	kvm.c	/^    ram_addr_t ram_addr;$/;"	m	struct:HWPoisonPage	file:
rax	svm.h	/^	uint64_t rax;$/;"	m	struct:vmcb_save_area
rclb_table	op_helper.c	/^static const uint8_t rclb_table[32] = {$/;"	v	file:
rclw_table	op_helper.c	/^static const uint8_t rclw_table[32] = {$/;"	v	file:
regs	cpu.h	/^    target_ulong regs[CPU_NB_REGS];$/;"	m	struct:CPUX86State
reserved_1	svm.h	/^	uint8_t reserved_1[43];$/;"	m	struct:vmcb_save_area
reserved_1	svm.h	/^	uint8_t reserved_1[44];$/;"	m	struct:vmcb_control_area
reserved_2	svm.h	/^	uint8_t reserved_2[3];$/;"	m	struct:vmcb_control_area
reserved_2	svm.h	/^	uint8_t reserved_2[4];$/;"	m	struct:vmcb_save_area
reserved_3	svm.h	/^	uint8_t reserved_3[112];$/;"	m	struct:vmcb_save_area
reserved_3	svm.h	/^	uint8_t reserved_3[4];$/;"	m	struct:vmcb_control_area
reserved_4	svm.h	/^	uint8_t reserved_4[16];$/;"	m	struct:vmcb_control_area
reserved_4	svm.h	/^	uint8_t reserved_4[88];$/;"	m	struct:vmcb_save_area
reserved_5	svm.h	/^	uint8_t reserved_5[24];$/;"	m	struct:vmcb_save_area
reserved_5	svm.h	/^	uint8_t reserved_5[832];$/;"	m	struct:vmcb_control_area
reserved_6	svm.h	/^	uint8_t reserved_6[32];$/;"	m	struct:vmcb_save_area
restore_eax	backup/main.c	/^uint32_t restore_eax;$/;"	v
restore_eax	main.c	/^uint32_t restore_eax;$/;"	v
restore_ebp	backup/main.c	/^uint32_t restore_eip, restore_esp, ret_value, restore_ebp;$/;"	v
restore_ebp	main.c	/^uint32_t restore_eip, restore_esp, ret_value, restore_ebp;$/;"	v
restore_ebx	backup/main.c	/^uint32_t restore_ebx;$/;"	v
restore_ebx	main.c	/^uint32_t restore_ebx;$/;"	v
restore_ecx	backup/main.c	/^uint32_t restore_ecx;$/;"	v
restore_ecx	main.c	/^uint32_t restore_ecx;$/;"	v
restore_edi	backup/main.c	/^uint32_t restore_edi;$/;"	v
restore_edi	main.c	/^uint32_t restore_edi;$/;"	v
restore_edx	backup/main.c	/^uint32_t restore_edx;$/;"	v
restore_edx	main.c	/^uint32_t restore_edx;$/;"	v
restore_eip	backup/main.c	/^uint32_t restore_eip, restore_esp, ret_value, restore_ebp;$/;"	v
restore_eip	main.c	/^uint32_t restore_eip, restore_esp, ret_value, restore_ebp;$/;"	v
restore_esi	backup/main.c	/^uint32_t restore_esi;$/;"	v
restore_esi	main.c	/^uint32_t restore_esi;$/;"	v
restore_esp	backup/main.c	/^uint32_t restore_eip, restore_esp, ret_value, restore_ebp;$/;"	v
restore_esp	main.c	/^uint32_t restore_eip, restore_esp, ret_value, restore_ebp;$/;"	v
restore_state_to_opc	translate.c	/^void restore_state_to_opc(CPUState *env, TranslationBlock *tb, int pc_pos)$/;"	f
restore_to_new_eip	backup/main.c	/^void restore_to_new_eip(uint32_t pc)$/;"	f
restore_to_new_eip	main.c	/^void restore_to_new_eip(uint32_t pc)$/;"	f
ret_value	backup/main.c	/^uint32_t restore_eip, restore_esp, ret_value, restore_ebp;$/;"	v
ret_value	main.c	/^uint32_t restore_eip, restore_esp, ret_value, restore_ebp;$/;"	v
retry_count	backup/main.c	/^uint32_t retry_count;$/;"	v
retry_count	main.c	/^uint32_t retry_count;$/;"	v
rewards_bdrv_open	backup/main.c	/^static void rewards_bdrv_open(int index, void *opaque)$/;"	f	file:
rewards_bdrv_open	main.c	/^static void rewards_bdrv_open(int index, void *opaque)$/;"	f	file:
rewards_block_begin	backup/main.c	/^static int rewards_block_begin()$/;"	f	file:
rewards_block_begin	main.c	/^static int rewards_block_begin()$/;"	f	file:
rewards_cleanup	backup/main.c	/^static void rewards_cleanup()$/;"	f	file:
rewards_cleanup	main.c	/^static void rewards_cleanup()$/;"	f	file:
rewards_guest_message	backup/main.c	/^static void rewards_guest_message(char *message)$/;"	f	file:
rewards_guest_message	main.c	/^static void rewards_guest_message(char *message)$/;"	f	file:
rewards_info_cmds	backup/main.c	/^static term_cmd_t rewards_info_cmds[] = {$/;"	v	file:
rewards_info_cmds	main.c	/^static term_cmd_t rewards_info_cmds[] = {$/;"	v	file:
rewards_init	backup/main.c	/^static int rewards_init()$/;"	f	file:
rewards_init	main.c	/^static int rewards_init()$/;"	f	file:
rewards_insn_begin	backup/main.c	/^void rewards_insn_begin()$/;"	f
rewards_insn_begin	main.c	/^void rewards_insn_begin()$/;"	f
rewards_insn_end	backup/main.c	/^void rewards_insn_end()$/;"	f
rewards_insn_end	main.c	/^void rewards_insn_end()$/;"	f
rewards_interface	backup/main.c	/^static plugin_interface_t rewards_interface;$/;"	v	file:
rewards_interface	main.c	/^static plugin_interface_t rewards_interface;$/;"	v	file:
rewards_loadmodule_notify	backup/main.c	/^void rewards_loadmodule_notify(uint32_t pid, uint32_t cr3, char *name,$/;"	f
rewards_loadmodule_notify	main.c	/^void rewards_loadmodule_notify(uint32_t pid, uint32_t cr3, char *name,$/;"	f
rewards_nic_recv	backup/main.c	/^static void rewards_nic_recv(uint8_t * buf, int size, int index, int start,$/;"	f	file:
rewards_nic_recv	main.c	/^static void rewards_nic_recv(uint8_t * buf, int size, int index, int start,$/;"	f	file:
rewards_nic_send	backup/main.c	/^static void rewards_nic_send(uint32_t addr, int size, uint8_t * buf)$/;"	f	file:
rewards_nic_send	main.c	/^static void rewards_nic_send(uint32_t addr, int size, uint8_t * buf)$/;"	f	file:
rewards_send_keystroke	backup/main.c	/^static void rewards_send_keystroke(int reg)$/;"	f	file:
rewards_send_keystroke	main.c	/^static void rewards_send_keystroke(int reg)$/;"	f	file:
rewards_taint_disk	backup/main.c	/^static void rewards_taint_disk(uint64_t addr, uint8_t * record, void *opaque)$/;"	f	file:
rewards_taint_disk	main.c	/^static void rewards_taint_disk(uint64_t addr, uint8_t * record, void *opaque)$/;"	f	file:
rewards_taint_propagate	backup/main.c	/^static void rewards_taint_propagate(int nr_src,$/;"	f	file:
rewards_taint_propagate	main.c	/^static void rewards_taint_propagate(int nr_src,$/;"	f	file:
rewards_term_cmds	backup/main.c	/^static term_cmd_t rewards_term_cmds[] = {$/;"	v	file:
rewards_term_cmds	main.c	/^static term_cmd_t rewards_term_cmds[] = {$/;"	v	file:
rex_b	translate.c	/^    int rex_x, rex_b;$/;"	m	struct:DisasContext	file:
rex_x	translate.c	/^    int rex_x, rex_b;$/;"	m	struct:DisasContext	file:
rffs1	ops_sse.h	/^static inline int rffs1(unsigned int val)$/;"	f
rflags	svm.h	/^	uint64_t rflags;$/;"	m	struct:vmcb_save_area
rip	svm.h	/^	uint64_t rip;$/;"	m	struct:vmcb_save_area
rip_offset	translate.c	/^    int rip_offset; \/* only used in x86_64, but left for simplicity *\/$/;"	m	struct:DisasContext	file:
rsp	svm.h	/^	uint64_t rsp;$/;"	m	struct:vmcb_save_area
satsb	ops_sse.h	/^static inline int satsb(int x)$/;"	f
satsw	ops_sse.h	/^static inline int satsw(int x)$/;"	f
satub	ops_sse.h	/^static inline int satub(int x)$/;"	f
satuw	ops_sse.h	/^static inline int satuw(int x)$/;"	f
save	svm.h	/^	struct vmcb_save_area save;$/;"	m	struct:vmcb	typeref:struct:vmcb::vmcb_save_area
segs	cpu.h	/^    SegmentCache segs[6]; \/* selector values *\/$/;"	m	struct:CPUX86State
selector	cpu.h	/^    uint32_t selector;$/;"	m	struct:SegmentCache
selector	svm.h	/^	uint16_t selector;$/;"	m	struct:vmcb_seg
set_kernel_all	backup/main.c	/^void set_kernel_all(int state)$/;"	f
set_kernel_all	main.c	/^void set_kernel_all(int state)$/;"	f
set_kernel_partial	backup/main.c	/^void set_kernel_partial(int state)$/;"	f
set_kernel_partial	main.c	/^void set_kernel_partial(int state)$/;"	f
set_kernel_tainted	backup/main.c	/^void set_kernel_tainted(int state)$/;"	f
set_kernel_tainted	main.c	/^void set_kernel_tainted(int state)$/;"	f
set_mem_write_time_stamp	backup/mem_write_shadow.c	/^void  set_mem_write_time_stamp( Addr a, UInt bytes )$/;"	f
set_mem_write_time_stamp	mem_shadow.c	/^void  set_mem_write_time_stamp( Addr a, UInt bytes )$/;"	f
set_seg	kvm.c	/^static void set_seg(struct kvm_segment *lhs, const SegmentCache *rhs)$/;"	f	file:
set_v8086_seg	kvm.c	/^static void set_v8086_seg(struct kvm_segment *lhs, const SegmentCache *rhs)$/;"	f	file:
setfeatures	cpuid.c	/^static void setfeatures(uint32_t *pval, const char *str,$/;"	f	file:
setscalar	cpuid.c	931;"	d	file:
setup_inst_hook	backup/hook_inst.c	/^void setup_inst_hook() {$/;"	f
setup_inst_hook	hook_inst.c	/^void setup_inst_hook() {$/;"	f
sfmask	svm.h	/^	uint64_t sfmask;$/;"	m	struct:vmcb_save_area
shadow_bytes	backup/mem_write_shadow.c	/^unsigned int shadow_bytes;$/;"	v
shadow_bytes	mem_shadow.c	/^unsigned int shadow_bytes;$/;"	v
signature	uthash.h	/^   uint32_t signature; \/* used only to find hash tables in external analysis *\/$/;"	m	struct:UT_hash_table
singlestep_enabled	translate.c	/^    int singlestep_enabled; \/* "hardware" single step enabled *\/$/;"	m	struct:DisasContext	file:
sipi_vector	cpu.h	/^    uint32_t sipi_vector;$/;"	m	struct:CPUX86State
skip_decode_address	backup/main.c	/^int skip_decode_address = 0;$/;"	v
skip_decode_address	main.c	/^int skip_decode_address = 0;$/;"	v
skip_to_next_inst	backup/main.c	/^void skip_to_next_inst()$/;"	f
skip_to_next_inst	main.c	/^void skip_to_next_inst()$/;"	f
skipped_addr	backup/main.c	/^uint32_t skipped_addr;$/;"	v
skipped_addr	main.c	/^uint32_t skipped_addr;$/;"	v
smbase	cpu.h	/^    uint32_t smbase;$/;"	m	struct:CPUX86State
soft_interrupt	cpu.h	/^    uint8_t soft_interrupt;$/;"	m	struct:CPUX86State
ss	svm.h	/^	struct vmcb_seg ss;$/;"	m	struct:vmcb_save_area	typeref:struct:vmcb_save_area::vmcb_seg
ss32	translate.c	/^    int ss32;   \/* 32 bit stack segment *\/$/;"	m	struct:DisasContext	file:
sse_op_helper_s	translate.c	/^struct sse_op_helper_s {$/;"	s	file:
sse_op_table1	translate.c	/^static void *sse_op_table1[256][4] = {$/;"	v	file:
sse_op_table2	translate.c	/^static void *sse_op_table2[3 * 8][2] = {$/;"	v	file:
sse_op_table3	translate.c	/^static void *sse_op_table3[4 * 3] = {$/;"	v	file:
sse_op_table4	translate.c	/^static void *sse_op_table4[8][4] = {$/;"	v	file:
sse_op_table5	translate.c	/^static void *sse_op_table5[256] = {$/;"	v	file:
sse_op_table6	translate.c	/^static struct sse_op_helper_s sse_op_table6[256] = {$/;"	v	typeref:struct:sse_op_helper_s	file:
sse_op_table7	translate.c	/^static struct sse_op_helper_s sse_op_table7[256] = {$/;"	v	typeref:struct:sse_op_helper_s	file:
sse_status	cpu.h	/^    float_status sse_status;$/;"	m	struct:CPUX86State
sstrcmp	cpuid.c	/^static int sstrcmp(const char *s1, const char *e1, const char *s2,$/;"	f	file:
stack	backup/main.c	/^	uint32_t stack[8];$/;"	m	struct:__anon8	file:
stack	main.c	/^	uint32_t stack[8];$/;"	m	struct:__anon9	file:
star	cpu.h	/^    uint64_t star;$/;"	m	struct:CPUX86State
star	svm.h	/^	uint64_t star;$/;"	m	struct:vmcb_save_area
startUsage	backup/main.c	/^struct rusage startUsage;$/;"	v	typeref:struct:rusage
startUsage	main.c	/^struct rusage startUsage;$/;"	v	typeref:struct:rusage
start_emulation	backup/main.c	/^void start_emulation()$/;"	f
start_emulation	main.c	/^void start_emulation()$/;"	f
starting_eip	backup/main.c	/^static uint32_t starting_eip;$/;"	v	file:
starting_eip	main.c	/^static uint32_t starting_eip;$/;"	v	file:
starting_esp	backup/main.c	/^static uint32_t starting_esp;$/;"	v	file:
starting_esp	main.c	/^static uint32_t starting_esp;$/;"	v	file:
status	helper.c	/^    uint64_t status;$/;"	m	struct:MCEInjectionParams	file:
stepping	cpuid.c	/^    int stepping;$/;"	m	struct:x86_def_t	file:
stop_emulation	backup/main.c	/^static void stop_emulation()$/;"	f	file:
stop_emulation	main.c	/^static void stop_emulation()$/;"	f	file:
svm_check_intercept	op_helper.c	/^void svm_check_intercept(CPUState *env1, uint32_t type)$/;"	f
svm_feature_name	cpuid.c	/^static const char *svm_feature_name[] = {$/;"	v	file:
svm_features	cpuid.c	/^    uint32_t kvm_features, svm_features;$/;"	m	struct:x86_def_t	file:
svm_is_rep	translate.c	/^static inline int svm_is_rep(int prefixes)$/;"	f	file:
svm_load_seg	op_helper.c	/^static inline void svm_load_seg(target_phys_addr_t addr, SegmentCache *sc)$/;"	f	file:
svm_load_seg_cache	op_helper.c	/^static inline void svm_load_seg_cache(target_phys_addr_t addr, $/;"	f	file:
svm_save_seg	op_helper.c	/^static inline void svm_save_seg(target_phys_addr_t addr,$/;"	f	file:
switch_tss	op_helper.c	/^static void switch_tss(int tss_selector,$/;"	f	file:
sysenter_cs	cpu.h	/^    uint32_t sysenter_cs;$/;"	m	struct:CPUX86State
sysenter_cs	svm.h	/^	uint64_t sysenter_cs;$/;"	m	struct:vmcb_save_area
sysenter_eip	cpu.h	/^    target_ulong sysenter_eip;$/;"	m	struct:CPUX86State
sysenter_eip	svm.h	/^	uint64_t sysenter_eip;$/;"	m	struct:vmcb_save_area
sysenter_esp	cpu.h	/^    target_ulong sysenter_esp;$/;"	m	struct:CPUX86State
sysenter_esp	svm.h	/^	uint64_t sysenter_esp;$/;"	m	struct:vmcb_save_area
system_time_msr	cpu.h	/^    uint64_t system_time_msr;$/;"	m	struct:CPUX86State
tail	uthash.h	/^   struct UT_hash_handle *tail; \/* tail hh in app order, for fast append    *\/$/;"	m	struct:UT_hash_table	typeref:struct:UT_hash_table::UT_hash_handle
taint_sendkey_id	backup/main.c	/^static int taint_sendkey_id = 0;$/;"	v	file:
taint_sendkey_id	main.c	/^static int taint_sendkey_id = 0;$/;"	v	file:
tb	translate.c	/^    struct TranslationBlock *tb;$/;"	m	struct:DisasContext	typeref:struct:DisasContext::TranslationBlock	file:
tbl	uthash.h	/^   struct UT_hash_table *tbl;$/;"	m	struct:UT_hash_handle	typeref:struct:UT_hash_handle::UT_hash_table
tcg_gen_lshift	translate.c	/^static inline void tcg_gen_lshift(TCGv ret, TCGv arg1, target_long arg2)$/;"	f	file:
testlog	backup/main.c	/^FILE *testlog = NULL;$/;"	v
testlog	main.c	/^FILE *testlog = NULL;$/;"	v
tf	translate.c	/^    int tf;     \/* TF cpu flag *\/$/;"	m	struct:DisasContext	file:
tlb_ctl	svm.h	/^	uint8_t tlb_ctl;$/;"	m	struct:vmcb_control_area
tlb_fill	op_helper.c	/^void tlb_fill(target_ulong addr, int is_write, int mmu_idx, void *retaddr)$/;"	f
tr	cpu.h	/^    SegmentCache tr;$/;"	m	struct:CPUX86State
tr	svm.h	/^	struct vmcb_seg tr;$/;"	m	struct:vmcb_save_area	typeref:struct:vmcb_save_area::vmcb_seg
tracecr3	backup/main.c	/^uint32_t tracecr3 = 0;$/;"	v
tracecr3	main.c	/^uint32_t tracecr3 = 0;$/;"	v
tracefile	backup/main.c	/^char tracefile[256];$/;"	v
tracefile	main.c	/^char tracefile[256];$/;"	v
tracehooklog	backup/main.c	/^FILE *tracehooklog = 0;$/;"	v
tracehooklog	main.c	/^FILE *tracehooklog = 0;$/;"	v
tracelog	backup/main.c	/^FILE *tracelog = 0;$/;"	v
tracelog	main.c	/^FILE *tracelog = 0;$/;"	v
tracename	backup/main.c	/^char tracename[128] = "";$/;"	v
tracename	main.c	/^char tracename[128] = "";$/;"	v
tracename_p	backup/main.c	/^char *tracename_p = tracename;$/;"	v
tracename_p	main.c	/^char *tracename_p = tracename;$/;"	v
tracenetlog	backup/main.c	/^FILE *tracenetlog = 0;$/;"	v
tracenetlog	main.c	/^FILE *tracenetlog = 0;$/;"	v
tracing_kernel	backup/main.c	/^inline int tracing_kernel()$/;"	f
tracing_kernel	main.c	/^inline int tracing_kernel()$/;"	f
tracing_kernel_all	backup/main.c	/^inline int tracing_kernel_all()$/;"	f
tracing_kernel_all	main.c	/^inline int tracing_kernel_all()$/;"	f
tracing_kernel_partial	backup/main.c	/^inline int tracing_kernel_partial()$/;"	f
tracing_kernel_partial	main.c	/^inline int tracing_kernel_partial()$/;"	f
tracing_kernel_tainted	backup/main.c	/^inline int tracing_kernel_tainted()$/;"	f
tracing_kernel_tainted	main.c	/^inline int tracing_kernel_tainted()$/;"	f
tracing_mem_read	backup/main.c	/^void tracing_mem_read(uint32_t virt_addr, uint32_t phys_addr, int size)$/;"	f
tracing_mem_read	main.c	/^void tracing_mem_read(uint32_t virt_addr, uint32_t phys_addr, int size)$/;"	f
tracing_mem_write	backup/main.c	/^void tracing_mem_write(uint32_t virt_addr, uint32_t phys_addr, int size)$/;"	f
tracing_mem_write	main.c	/^void tracing_mem_write(uint32_t virt_addr, uint32_t phys_addr, int size)$/;"	f
tracing_reg_read	backup/main.c	/^void tracing_reg_read(uint32_t regidx, int size)$/;"	f
tracing_reg_read	main.c	/^void tracing_reg_read(uint32_t regidx, int size)$/;"	f
tracing_reg_write	backup/main.c	/^void tracing_reg_write(uint32_t regidx, int size)$/;"	f
tracing_reg_write	main.c	/^void tracing_reg_write(uint32_t regidx, int size)$/;"	f
tracing_single_thread_only	backup/main.c	/^inline int tracing_single_thread_only()$/;"	f
tracing_single_thread_only	main.c	/^inline int tracing_single_thread_only()$/;"	f
tracing_start	backup/main.c	/^int tracing_start(uint32_t pid, const char *filename)$/;"	f
tracing_start	main.c	/^int tracing_start(uint32_t pid, const char *filename)$/;"	f
try_get_cpuid	kvm.c	/^static struct kvm_cpuid2 *try_get_cpuid(KVMState *s, int max)$/;"	f	file:
tsc	cpu.h	/^    uint64_t tsc;$/;"	m	struct:CPUX86State
tsc_aux	cpu.h	/^    uint64_t tsc_aux;$/;"	m	struct:CPUX86State
tsc_khz	cpu.h	/^    int tsc_khz;$/;"	m	struct:CPUX86State
tsc_khz	cpuid.c	/^    int tsc_khz;$/;"	m	struct:x86_def_t	file:
tsc_offset	cpu.h	/^    uint64_t tsc_offset;$/;"	m	struct:CPUX86State
tsc_offset	svm.h	/^	uint64_t tsc_offset;$/;"	m	struct:vmcb_control_area
tsc_valid	cpu.h	/^    bool tsc_valid;$/;"	m	struct:CPUX86State
tss_load_seg	op_helper.c	/^static void tss_load_seg(int seg_reg, int selector)$/;"	f	file:
type	kvm.c	/^    int type;$/;"	m	struct:__anon16	file:
uint32_t	uthash.h	/^typedef unsigned int uint32_t;$/;"	t
uint8_t	uthash.h	/^typedef unsigned char uint8_t;$/;"	t
unavailable_host_feature	cpuid.c	/^static int unavailable_host_feature(struct model_features_t *f, uint32_t mask)$/;"	f	file:
update_fp_status	op_helper.c	/^static void update_fp_status(void)$/;"	f	file:
uthash_expand_fyi	uthash.h	74;"	d
uthash_fatal	uthash.h	69;"	d
uthash_free	uthash.h	71;"	d
uthash_malloc	uthash.h	70;"	d
uthash_noexpand_fyi	uthash.h	73;"	d
v_tpr	cpu.h	/^    uint8_t v_tpr;$/;"	m	struct:CPUX86State
validate_seg	op_helper.c	/^static inline void validate_seg(int seg_reg, int cpl)$/;"	f	file:
vendor1	cpuid.c	/^    uint32_t vendor1, vendor2, vendor3;$/;"	m	struct:x86_def_t	file:
vendor2	cpuid.c	/^    uint32_t vendor1, vendor2, vendor3;$/;"	m	struct:x86_def_t	file:
vendor3	cpuid.c	/^    uint32_t vendor1, vendor2, vendor3;$/;"	m	struct:x86_def_t	file:
vendor_override	cpuid.c	/^    int vendor_override;$/;"	m	struct:x86_def_t	file:
version_is_5	machine.c	/^static bool version_is_5(void *opaque, int version_id)$/;"	f	file:
vm86	translate.c	/^    int vm86;   \/* vm86 mode *\/$/;"	m	struct:DisasContext	file:
vm_hsave	cpu.h	/^    uint64_t vm_hsave;$/;"	m	struct:CPUX86State
vm_vmcb	cpu.h	/^    uint64_t vm_vmcb;$/;"	m	struct:CPUX86State
vmcb	svm.h	/^struct __attribute__ ((__packed__)) vmcb {$/;"	s
vmcb_control_area	svm.h	/^struct __attribute__ ((__packed__)) vmcb_control_area {$/;"	s
vmcb_save_area	svm.h	/^struct __attribute__ ((__packed__)) vmcb_save_area {$/;"	s
vmcb_seg	svm.h	/^struct __attribute__ ((__packed__)) vmcb_seg {$/;"	s
vmmi_cpu_x86_handle_mmu_fault	helper.c	/^int vmmi_cpu_x86_handle_mmu_fault(CPUX86State *env, target_ulong addr,$/;"	f
vmmi_init	op_helper.c	/^int vmmi_init()$/;"	f
vmmi_process_cr3	helper.c	/^target_ulong vmmi_process_cr3 = 0xffffffff;$/;"	v
vmmi_qemu_load	helper.c	/^void vmmi_qemu_load(target_ulong addr, int mem_index)$/;"	f
vmmi_qemu_store	helper.c	/^void vmmi_qemu_store(target_ulong addr)$/;"	f
vmmi_start	helper.c	/^uint32_t vmmi_start;$/;"	v
vmmi_test	helper.c	/^void vmmi_test(target_ulong addr)$/;"	f
vmmi_tlb_fill	op_helper.c	/^void vmmi_tlb_fill(target_ulong addr, int is_write, int mmu_idx, void *retaddr)$/;"	f
vmmi_vtop	helper.c	/^uint32_t vmmi_vtop(uint32_t addr)$/;"	f
vmstate_async_pf_msr	machine.c	/^static const VMStateDescription vmstate_async_pf_msr = {$/;"	v	file:
vmstate_cpu	machine.c	/^static const VMStateDescription vmstate_cpu = {$/;"	v	file:
vmstate_fpop_ip_dp	machine.c	/^static const VMStateDescription vmstate_fpop_ip_dp = {$/;"	v	file:
vmstate_fpreg	machine.c	/^static const VMStateInfo vmstate_fpreg = {$/;"	v	file:
vmstate_fpreg_1_mmx	machine.c	/^static const VMStateInfo vmstate_fpreg_1_mmx = {$/;"	v	file:
vmstate_fpreg_1_no_mmx	machine.c	/^static const VMStateInfo vmstate_fpreg_1_no_mmx = {$/;"	v	file:
vmstate_hack_uint64_as_uint32	machine.c	/^static const VMStateInfo vmstate_hack_uint64_as_uint32 = {$/;"	v	file:
vmstate_mtrr_var	machine.c	/^static const VMStateDescription vmstate_mtrr_var = {$/;"	v	file:
vmstate_segment	machine.c	/^static const VMStateDescription vmstate_segment = {$/;"	v	file:
vmstate_xmm_reg	machine.c	/^static const VMStateDescription vmstate_xmm_reg = {$/;"	v	file:
vmstate_ymmh_reg	machine.c	/^static const VMStateDescription vmstate_ymmh_reg = {$/;"	v	file:
wall_clock_msr	cpu.h	/^    uint64_t wall_clock_msr;$/;"	m	struct:CPUX86State
x86_64_hregs	translate.c	/^static int x86_64_hregs;$/;"	v	file:
x86_cpu_list	cpuid.c	/^void x86_cpu_list(FILE *f, fprintf_function cpu_fprintf, const char *optarg)$/;"	f
x86_cpudef_setup	cpuid.c	/^void x86_cpudef_setup(void)$/;"	f
x86_def_t	cpuid.c	/^typedef struct x86_def_t {$/;"	s	file:
x86_def_t	cpuid.c	/^} x86_def_t;$/;"	t	typeref:struct:x86_def_t	file:
x86_defs	cpuid.c	/^static x86_def_t *x86_defs = {NULL};$/;"	v	file:
x86_longdouble	machine.c	/^union x86_longdouble {$/;"	u	file:
xcr0	cpu.h	/^    uint64_t xcr0;$/;"	m	struct:CPUX86State
xed2_init	op_helper.c	/^void xed2_init()$/;"	f
xed_regmapping	backup/hook_inst.c	/^int xed_regmapping[][3] = {$/;"	v
xed_regmapping	hook_inst.c	/^int xed_regmapping[][3] = {$/;"	v
xedd	op_helper.c	/^xed_decoded_inst_t xedd;$/;"	v
xedd_g	backup/main.c	/^xed_decoded_inst_t xedd_g;$/;"	v
xedd_g	main.c	/^xed_decoded_inst_t xedd_g;$/;"	v
xedd_g	op_helper.c	/^xed_decoded_inst_t xedd_g;$/;"	v
xlevel	cpuid.c	/^    uint32_t xlevel;$/;"	m	struct:x86_def_t	file:
xlevel2	cpuid.c	/^    uint32_t xlevel2;$/;"	m	struct:x86_def_t	file:
xmm_regs	cpu.h	/^    XMMReg xmm_regs[CPU_NB_REGS];$/;"	m	struct:CPUX86State
xmm_t0	cpu.h	/^    XMMReg xmm_t0;$/;"	m	struct:CPUX86State
xstate_bv	cpu.h	/^    uint64_t xstate_bv;$/;"	m	struct:CPUX86State
ymmh_regs	cpu.h	/^    XMMReg ymmh_regs[CPU_NB_REGS];$/;"	m	struct:CPUX86State
